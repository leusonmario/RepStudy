import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest12 {

    public static boolean debug = false;

    @Test
    public void test06001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06001");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader3;
        io.undertow.server.handlers.resource.ResourceManager resourceManager5 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader8 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.boot.context.embedded.Ssl ssl9 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.concurrent.TimeUnit timeUnit11 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout(0, timeUnit11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(resourceManager5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNull(resourceLoader8);
        org.junit.Assert.assertNull(ssl9);
    }

    @Test
    public void test06002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06002");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 100);
        java.net.InetAddress inetAddress2 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.workerThreads = 1800;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection5 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.springframework.boot.context.embedded.Ssl ssl7 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader8);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory13.directBuffers;
        io.undertow.Undertow.Builder builder15 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer18 = undertowEmbeddedServletContainerFactory13.getUndertowEmbeddedServletContainer(builder15, deploymentManager16, 0);
        undertowEmbeddedServletContainerFactory13.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader21 = undertowEmbeddedServletContainerFactory13.getServletClassLoader();
        undertowEmbeddedServletContainerFactory13.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory13.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean28 = undertowEmbeddedServletContainerFactory27.directBuffers;
        undertowEmbeddedServletContainerFactory27.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = undertowEmbeddedServletContainerFactory27.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader32 = undertowEmbeddedServletContainerFactory27.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection33 = undertowEmbeddedServletContainerFactory27.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory27.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory27.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        java.lang.String str38 = undertowEmbeddedServletContainerFactory27.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList39 = undertowEmbeddedServletContainerFactory27.builderCustomizers;
        undertowEmbeddedServletContainerFactory13.builderCustomizers = undertowBuilderCustomizerList39;
        undertowEmbeddedServletContainerFactory13.workerThreads = 0;
        undertowEmbeddedServletContainerFactory13.setPort((int) 'a');
        org.springframework.core.io.ResourceLoader resourceLoader45 = null;
        undertowEmbeddedServletContainerFactory13.setResourceLoader(resourceLoader45);
        java.io.File file47 = null;
        undertowEmbeddedServletContainerFactory13.setDocumentRoot(file47);
        java.io.File file49 = undertowEmbeddedServletContainerFactory13.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray52 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory51.addErrorPages(errorPageArray52);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer54 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray55 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer54 };
        undertowEmbeddedServletContainerFactory51.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray55);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray57 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray57);
        undertowEmbeddedServletContainerFactory51.addInitializers(servletContextInitializerArray57);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray57);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray57);
        undertowEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray57);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer63 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray57);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray57);
        org.junit.Assert.assertNull(inetAddress2);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(ssl7);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer18);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNull(resourceLoader32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "0.0.0.0" + "'", str38, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList39);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(errorPageArray52);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray55);
        org.junit.Assert.assertNotNull(servletContextInitializerArray57);
        org.junit.Assert.assertNotNull(embeddedServletContainer63);
    }

    @Test
    public void test06003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06003");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader14;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.Ssl ssl17 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl17);
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory1.workerThreads;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo20 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo20);
        boolean boolean22 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList23 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo24 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList23);
    }

    @Test
    public void test06004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06004");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory1.directBuffers;
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode16 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList14);
    }

    @Test
    public void test06005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06005");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '4');
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file6);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test06006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06006");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory14.directBuffers;
        undertowEmbeddedServletContainerFactory14.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader19 = undertowEmbeddedServletContainerFactory14.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection20 = undertowEmbeddedServletContainerFactory14.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray23 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory22.addErrorPages(errorPageArray23);
        undertowEmbeddedServletContainerFactory14.addErrorPages(errorPageArray23);
        boolean boolean26 = undertowEmbeddedServletContainerFactory14.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean29 = undertowEmbeddedServletContainerFactory28.directBuffers;
        io.undertow.Undertow.Builder builder30 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer33 = undertowEmbeddedServletContainerFactory28.getUndertowEmbeddedServletContainer(builder30, deploymentManager31, 0);
        undertowEmbeddedServletContainerFactory28.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader36 = undertowEmbeddedServletContainerFactory28.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = undertowEmbeddedServletContainerFactory28.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray38 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray38);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray38);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer41 = undertowEmbeddedServletContainerFactory28.getEmbeddedServletContainer(servletContextInitializerArray38);
        io.undertow.servlet.api.DeploymentManager deploymentManager42 = undertowEmbeddedServletContainerFactory14.createDeploymentManager(servletContextInitializerArray38);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray38);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray38);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray38);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = initializer45.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray46);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNull(resourceLoader19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection20);
        org.junit.Assert.assertNotNull(errorPageArray23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer33);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(errorPageSet37);
        org.junit.Assert.assertNotNull(servletContextInitializerArray38);
        org.junit.Assert.assertNotNull(embeddedServletContainer41);
        org.junit.Assert.assertNotNull(deploymentManager42);
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
    }

    @Test
    public void test06007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06007");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray15 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertNotNull(mimeMappings14);
    }

    @Test
    public void test06008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06008");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader7;
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet13 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory15.buffersPerRegion;
        java.lang.String str17 = undertowEmbeddedServletContainerFactory15.getListenAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager18 = undertowEmbeddedServletContainerFactory15.getDocumentRootResourceManager();
        java.net.InetAddress inetAddress19 = null;
        undertowEmbeddedServletContainerFactory15.setAddress(inetAddress19);
        undertowEmbeddedServletContainerFactory15.buffersPerRegion = 0;
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory15.setDocumentRoot(file23);
        int int25 = undertowEmbeddedServletContainerFactory15.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean28 = undertowEmbeddedServletContainerFactory27.directBuffers;
        undertowEmbeddedServletContainerFactory27.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean33 = undertowEmbeddedServletContainerFactory32.directBuffers;
        undertowEmbeddedServletContainerFactory32.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = undertowEmbeddedServletContainerFactory32.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader37 = undertowEmbeddedServletContainerFactory32.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection38 = undertowEmbeddedServletContainerFactory32.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory32.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray41 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory32.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        boolean boolean43 = undertowEmbeddedServletContainerFactory32.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList44 = undertowEmbeddedServletContainerFactory32.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory27.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList44;
        undertowEmbeddedServletContainerFactory15.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList44;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList44;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo48 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNotNull(errorPageSet13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "0.0.0.0" + "'", str17, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNull(resourceLoader37);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection38);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList44);
    }

    @Test
    public void test06009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06009");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        boolean boolean1 = jarResourcemanager0.isResourceChangeListenerSupported();
        boolean boolean2 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.jarPath = "0.0.0.0";
        jarResourcemanager0.close();
        jarResourcemanager0.jarPath = "hi!";
        boolean boolean8 = jarResourcemanager0.isResourceChangeListenerSupported();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test06010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06010");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        jarResourcemanager0.close();
        java.lang.String str2 = jarResourcemanager0.jarPath;
        boolean boolean3 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.jarPath = "hi!";
        jarResourcemanager0.close();
        java.lang.String str7 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "";
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test06011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06011");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 10);
        undertowEmbeddedServletContainerFactory1.ioThreads = 100;
        io.undertow.server.handlers.resource.ResourceManager resourceManager4 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.junit.Assert.assertNotNull(resourceManager4);
    }

    @Test
    public void test06012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06012");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        boolean boolean8 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection9 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        io.undertow.server.handlers.resource.ResourceManager resourceManager10 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        io.undertow.Undertow.Builder builder12 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (short) -1);
        java.io.File file13 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 97);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection9);
        org.junit.Assert.assertNotNull(resourceManager10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test06013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06013");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test06014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06014");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray8 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory7.addErrorPages(errorPageArray8);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray8);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 100;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader14 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory16.directBuffers;
        undertowEmbeddedServletContainerFactory16.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader21 = undertowEmbeddedServletContainerFactory16.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection22 = undertowEmbeddedServletContainerFactory16.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory16.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray25);
        boolean boolean27 = undertowEmbeddedServletContainerFactory16.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList28 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet29 = undertowEmbeddedServletContainerFactory16.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean32 = undertowEmbeddedServletContainerFactory31.directBuffers;
        undertowEmbeddedServletContainerFactory31.setSessionTimeout(0);
        java.lang.Integer int35 = undertowEmbeddedServletContainerFactory31.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray38 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory37.addErrorPages(errorPageArray38);
        undertowEmbeddedServletContainerFactory31.addErrorPages(errorPageArray38);
        undertowEmbeddedServletContainerFactory16.addErrorPages(errorPageArray38);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray38);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        java.io.File file45 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file45);
        java.lang.String str47 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.boot.context.embedded.Ssl ssl48 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory52.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder56 = undertowEmbeddedServletContainerFactory52.createBuilder((int) '4');
        boolean boolean57 = undertowEmbeddedServletContainerFactory52.isRegisterDefaultServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection58 = undertowEmbeddedServletContainerFactory52.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory52.setPort((int) (byte) 100);
        io.undertow.Undertow.Builder builder62 = undertowEmbeddedServletContainerFactory52.createBuilder((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl48, (int) (byte) 100, builder62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(errorPageArray8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList28);
        org.junit.Assert.assertNotNull(errorPageSet29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(errorPageArray38);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "0.0.0.0" + "'", str47, "0.0.0.0");
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection58);
        org.junit.Assert.assertNotNull(builder62);
    }

    @Test
    public void test06015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06015");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        io.undertow.Undertow.Builder builder18 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, 0);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean26 = undertowEmbeddedServletContainerFactory25.directBuffers;
        io.undertow.Undertow.Builder builder27 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory25.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, 0);
        undertowEmbeddedServletContainerFactory25.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader33 = undertowEmbeddedServletContainerFactory25.getServletClassLoader();
        java.lang.Integer int34 = undertowEmbeddedServletContainerFactory25.bufferSize;
        undertowEmbeddedServletContainerFactory25.setIoThreads((java.lang.Integer) 1800);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection37 = undertowEmbeddedServletContainerFactory25.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader38 = null;
        undertowEmbeddedServletContainerFactory25.resourceLoader = resourceLoader38;
        undertowEmbeddedServletContainerFactory25.directBuffers = true;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList42 = undertowEmbeddedServletContainerFactory25.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList42;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList44 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean49 = undertowEmbeddedServletContainerFactory48.directBuffers;
        io.undertow.Undertow.Builder builder50 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager51 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer53 = undertowEmbeddedServletContainerFactory48.getUndertowEmbeddedServletContainer(builder50, deploymentManager51, 0);
        undertowEmbeddedServletContainerFactory48.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader56 = undertowEmbeddedServletContainerFactory48.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl57 = undertowEmbeddedServletContainerFactory48.getSsl();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList58 = undertowEmbeddedServletContainerFactory48.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray61 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory60.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory48.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray61);
        org.springframework.core.io.ResourceLoader resourceLoader65 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.lang.Boolean boolean66 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection37);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList42);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList44);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer53);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNull(ssl57);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList58);
        org.junit.Assert.assertNotNull(errorPageArray61);
        org.junit.Assert.assertNull(resourceLoader65);
        org.junit.Assert.assertNull(boolean66);
    }

    @Test
    public void test06016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06016");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory2.setSessionTimeout((int) (byte) -1);
        undertowEmbeddedServletContainerFactory2.setSessionTimeout((int) (byte) 1);
        org.springframework.boot.context.embedded.Ssl ssl9 = undertowEmbeddedServletContainerFactory2.getSsl();
        undertowEmbeddedServletContainerFactory2.setPort(0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection12 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        org.junit.Assert.assertNull(ssl9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection12);
    }

    @Test
    public void test06017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06017");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray8 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory7.addErrorPages(errorPageArray8);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray8);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 100;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory17.directBuffers;
        undertowEmbeddedServletContainerFactory17.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader22 = undertowEmbeddedServletContainerFactory17.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection23 = undertowEmbeddedServletContainerFactory17.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory17.setDirectBuffers((java.lang.Boolean) true);
        int int26 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        java.io.File file27 = null;
        undertowEmbeddedServletContainerFactory17.setDocumentRoot(file27);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList29 = undertowEmbeddedServletContainerFactory17.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList29;
        java.lang.Boolean boolean31 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.server.handlers.resource.ResourceManager resourceManager32 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str36 = undertowEmbeddedServletContainerFactory35.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray37 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList38 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList38, undertowBuilderCustomizerArray37);
        undertowEmbeddedServletContainerFactory35.builderCustomizers = undertowBuilderCustomizerList38;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray41 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray41);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray43 = initializer42.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray43);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray43);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray43);
        undertowEmbeddedServletContainerFactory35.addInitializers(servletContextInitializerArray43);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray43);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer49 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray43);
        org.springframework.boot.context.embedded.Ssl ssl50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode51 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(errorPageArray8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(resourceLoader22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList29);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(resourceManager32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "0.0.0.0" + "'", str36, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray41);
        org.junit.Assert.assertNotNull(servletContextInitializerArray43);
        org.junit.Assert.assertNotNull(embeddedServletContainer49);
    }

    @Test
    public void test06018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06018");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo14 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo14);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.lang.ClassLoader classLoader17 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory1.bufferSize;
        int int19 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.lang.String str20 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray23 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory22.addErrorPages(errorPageArray23);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer25 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray26 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer25 };
        undertowEmbeddedServletContainerFactory22.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray26);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray28 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray28);
        undertowEmbeddedServletContainerFactory22.addInitializers(servletContextInitializerArray28);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray28);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean34 = undertowEmbeddedServletContainerFactory33.directBuffers;
        undertowEmbeddedServletContainerFactory33.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean39 = undertowEmbeddedServletContainerFactory38.directBuffers;
        undertowEmbeddedServletContainerFactory38.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = undertowEmbeddedServletContainerFactory38.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader43 = undertowEmbeddedServletContainerFactory38.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection44 = undertowEmbeddedServletContainerFactory38.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory38.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray47 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory38.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray47);
        boolean boolean49 = undertowEmbeddedServletContainerFactory38.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList50 = undertowEmbeddedServletContainerFactory38.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory33.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList50;
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer53 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap52);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer55 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap54);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer57 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap56);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer59 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap58);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer61 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap60);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer63 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap62);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray64 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer53, initParameterConfiguringServletContextInitializer55, initParameterConfiguringServletContextInitializer57, initParameterConfiguringServletContextInitializer59, initParameterConfiguringServletContextInitializer61, initParameterConfiguringServletContextInitializer63 };
        undertowEmbeddedServletContainerFactory33.addInitializers(servletContextInitializerArray64);
        initializer31.initializers = servletContextInitializerArray64;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean69 = undertowEmbeddedServletContainerFactory68.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray70 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray70);
        undertowEmbeddedServletContainerFactory68.addInitializers(servletContextInitializerArray70);
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer74 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap73);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer76 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap75);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray77 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer74, initParameterConfiguringServletContextInitializer76 };
        undertowEmbeddedServletContainerFactory68.addInitializers(servletContextInitializerArray77);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer79 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray77);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer80 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray77);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer81 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray77);
        java.util.Map<java.lang.String, java.lang.String> strMap82 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer83 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap82);
        java.util.Map<java.lang.String, java.lang.String> strMap84 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer85 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap84);
        java.util.Map<java.lang.String, java.lang.String> strMap86 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer87 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap86);
        java.util.Map<java.lang.String, java.lang.String> strMap88 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer89 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap88);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer91 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap90);
        java.util.Map<java.lang.String, java.lang.String> strMap92 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer93 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap92);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray94 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer83, initParameterConfiguringServletContextInitializer85, initParameterConfiguringServletContextInitializer87, initParameterConfiguringServletContextInitializer89, initParameterConfiguringServletContextInitializer91, initParameterConfiguringServletContextInitializer93 };
        initializer81.initializers = servletContextInitializerArray94;
        initializer31.initializers = servletContextInitializerArray94;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.DeploymentManager deploymentManager97 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: java.lang.NullPointerException");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(errorPageArray23);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray26);
        org.junit.Assert.assertNotNull(servletContextInitializerArray28);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNull(resourceLoader43);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection44);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList50);
        org.junit.Assert.assertNotNull(servletContextInitializerArray64);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNotNull(servletContextInitializerArray70);
        org.junit.Assert.assertNotNull(servletContextInitializerArray77);
        org.junit.Assert.assertNotNull(servletContextInitializerArray94);
    }

    @Test
    public void test06019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06019");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory9.addErrorPages(errorPageArray10);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray10);
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress14 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress14);
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.workerThreads;
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        org.springframework.core.io.ResourceLoader resourceLoader22 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader22);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test06020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06020");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList5, undertowBuilderCustomizerArray4);
        undertowEmbeddedServletContainerFactory2.builderCustomizers = undertowBuilderCustomizerList5;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection8 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        java.net.InetAddress inetAddress9 = null;
        undertowEmbeddedServletContainerFactory2.setAddress(inetAddress9);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        undertowEmbeddedServletContainerFactory2.setSessionTimeout(1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        undertowEmbeddedServletContainerFactory15.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader20 = undertowEmbeddedServletContainerFactory15.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection21 = undertowEmbeddedServletContainerFactory15.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory15.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray24 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory15.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray24);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection26 = undertowEmbeddedServletContainerFactory15.getDeploymentInfoCustomizers();
        java.lang.Integer int27 = undertowEmbeddedServletContainerFactory15.ioThreads;
        undertowEmbeddedServletContainerFactory15.setSessionTimeout(1800);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection30 = undertowEmbeddedServletContainerFactory15.getDeploymentInfoCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet31 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int34 = undertowEmbeddedServletContainerFactory33.buffersPerRegion;
        java.lang.String str35 = undertowEmbeddedServletContainerFactory33.getListenAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager36 = undertowEmbeddedServletContainerFactory33.getDocumentRootResourceManager();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList37 = undertowEmbeddedServletContainerFactory33.builderCustomizers;
        undertowEmbeddedServletContainerFactory33.setRegisterDefaultServlet(false);
        io.undertow.server.handlers.resource.ResourceManager resourceManager40 = undertowEmbeddedServletContainerFactory33.getDocumentRootResourceManager();
        java.io.File file41 = undertowEmbeddedServletContainerFactory33.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean44 = undertowEmbeddedServletContainerFactory43.directBuffers;
        io.undertow.Undertow.Builder builder45 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager46 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer48 = undertowEmbeddedServletContainerFactory43.getUndertowEmbeddedServletContainer(builder45, deploymentManager46, 0);
        undertowEmbeddedServletContainerFactory43.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader51 = undertowEmbeddedServletContainerFactory43.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet52 = undertowEmbeddedServletContainerFactory43.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray53);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray53);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer56 = undertowEmbeddedServletContainerFactory43.getEmbeddedServletContainer(servletContextInitializerArray53);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray53);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray58 = initializer57.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray58);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer60 = undertowEmbeddedServletContainerFactory33.getEmbeddedServletContainer(servletContextInitializerArray58);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer61 = undertowEmbeddedServletContainerFactory15.getEmbeddedServletContainer(servletContextInitializerArray58);
        io.undertow.servlet.api.DeploymentManager deploymentManager62 = undertowEmbeddedServletContainerFactory2.createDeploymentManager(servletContextInitializerArray58);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray63 = undertowEmbeddedServletContainerFactory2.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0.0.0.0" + "'", str3, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection8);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(resourceLoader20);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection21);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray24);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection30);
        org.junit.Assert.assertNotNull(errorPageSet31);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "0.0.0.0" + "'", str35, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager36);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList37);
        org.junit.Assert.assertNotNull(resourceManager40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer48);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(errorPageSet52);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNotNull(embeddedServletContainer56);
        org.junit.Assert.assertNotNull(servletContextInitializerArray58);
        org.junit.Assert.assertNotNull(embeddedServletContainer60);
        org.junit.Assert.assertNotNull(embeddedServletContainer61);
        org.junit.Assert.assertNotNull(deploymentManager62);
    }

    @Test
    public void test06021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06021");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo8 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo8);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo10 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo10);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo12 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo12);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1800;
        boolean boolean16 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 52);
        io.undertow.server.handlers.resource.ResourceManager resourceManager19 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.net.InetAddress inetAddress20 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 32);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(resourceManager19);
        org.junit.Assert.assertNull(inetAddress20);
    }

    @Test
    public void test06022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06022");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.bufferSize = (-1);
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 10);
        int int18 = undertowEmbeddedServletContainerFactory1.getPort();
        java.lang.ClassLoader classLoader19 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        boolean boolean20 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.String str21 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        boolean boolean24 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test06023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06023");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray8 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory7.addErrorPages(errorPageArray8);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray8);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 100;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.net.InetAddress inetAddress14 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress14);
        boolean boolean16 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.ClassLoader classLoader17 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        int int20 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1800);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection23 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray24 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(errorPageArray8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection23);
    }

    @Test
    public void test06024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06024");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean25 = undertowEmbeddedServletContainerFactory24.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray26);
        undertowEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer32 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap31);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray33 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer30, initParameterConfiguringServletContextInitializer32 };
        undertowEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray33);
        undertowEmbeddedServletContainerFactory24.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer37 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray38 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer37 };
        undertowEmbeddedServletContainerFactory24.addBuilderCustomizers(undertowBuilderCustomizerArray38);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory24.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        undertowEmbeddedServletContainerFactory24.bufferSize = 1;
        java.net.InetAddress inetAddress44 = undertowEmbeddedServletContainerFactory24.getAddress();
        int int45 = undertowEmbeddedServletContainerFactory24.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean48 = undertowEmbeddedServletContainerFactory47.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray49 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray49);
        undertowEmbeddedServletContainerFactory47.addInitializers(servletContextInitializerArray49);
        boolean boolean52 = undertowEmbeddedServletContainerFactory47.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList53 = undertowEmbeddedServletContainerFactory47.deploymentInfoCustomizers;
        java.lang.Integer int54 = undertowEmbeddedServletContainerFactory47.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean57 = undertowEmbeddedServletContainerFactory56.directBuffers;
        io.undertow.Undertow.Builder builder58 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager59 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer61 = undertowEmbeddedServletContainerFactory56.getUndertowEmbeddedServletContainer(builder58, deploymentManager59, 0);
        undertowEmbeddedServletContainerFactory56.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader64 = undertowEmbeddedServletContainerFactory56.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl65 = null;
        undertowEmbeddedServletContainerFactory56.setSsl(ssl65);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean69 = undertowEmbeddedServletContainerFactory68.directBuffers;
        undertowEmbeddedServletContainerFactory68.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings72 = undertowEmbeddedServletContainerFactory68.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader73 = undertowEmbeddedServletContainerFactory68.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection74 = undertowEmbeddedServletContainerFactory68.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory68.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray77 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory68.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray77);
        undertowEmbeddedServletContainerFactory56.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray77);
        undertowEmbeddedServletContainerFactory47.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray77);
        undertowEmbeddedServletContainerFactory24.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray77);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray77);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet83 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertNotNull(servletContextInitializerArray33);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray38);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray40);
        org.junit.Assert.assertNull(inetAddress44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer61);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNotNull(mimeMappings72);
        org.junit.Assert.assertNull(resourceLoader73);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection74);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray77);
        org.junit.Assert.assertNotNull(errorPageSet83);
    }

    @Test
    public void test06025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06025");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "";
        boolean boolean4 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test06026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06026");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(97);
        org.springframework.core.io.ResourceLoader resourceLoader2 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader2);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
    }

    @Test
    public void test06027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06027");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        java.net.InetAddress inetAddress13 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray14);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = initializer15.initializers;
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer17 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray16);
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file18);
        boolean boolean20 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        java.lang.String str23 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(embeddedServletContainer17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test06028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06028");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "hi!";
        java.lang.String str8 = jarResourcemanager1.jarPath;
        java.lang.String str9 = jarResourcemanager1.jarPath;
        jarResourcemanager1.jarPath = "0.0.0.0";
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test06029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06029");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.lang.String str14 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + true + "'", boolean13, true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0.0.0.0" + "'", str14, "0.0.0.0");
    }

    @Test
    public void test06030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06030");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        java.net.InetAddress inetAddress13 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList18 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean21 = undertowEmbeddedServletContainerFactory20.directBuffers;
        io.undertow.Undertow.Builder builder22 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager23 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer25 = undertowEmbeddedServletContainerFactory20.getUndertowEmbeddedServletContainer(builder22, deploymentManager23, 0);
        undertowEmbeddedServletContainerFactory20.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader28 = undertowEmbeddedServletContainerFactory20.getServletClassLoader();
        java.lang.Integer int29 = undertowEmbeddedServletContainerFactory20.bufferSize;
        undertowEmbeddedServletContainerFactory20.setPort((-1));
        java.net.InetAddress inetAddress32 = undertowEmbeddedServletContainerFactory20.getAddress();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray33 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray33);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = initializer34.initializers;
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer36 = undertowEmbeddedServletContainerFactory20.getEmbeddedServletContainer(servletContextInitializerArray35);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray35);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray35);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer25);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(inetAddress32);
        org.junit.Assert.assertNotNull(servletContextInitializerArray33);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertNotNull(embeddedServletContainer36);
    }

    @Test
    public void test06031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06031");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager1.jarPath;
        java.lang.String str5 = jarResourcemanager1.jarPath;
        java.lang.String str6 = jarResourcemanager1.jarPath;
        boolean boolean7 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        java.lang.String str9 = jarResourcemanager1.jarPath;
        java.lang.String str10 = jarResourcemanager1.jarPath;
        jarResourcemanager1.close();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0.0.0.0" + "'", str5, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0.0.0.0" + "'", str9, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0.0.0.0" + "'", str10, "0.0.0.0");
    }

    @Test
    public void test06032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06032");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory9.addErrorPages(errorPageArray10);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray10);
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        io.undertow.Undertow.Builder builder17 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer20 = undertowEmbeddedServletContainerFactory15.getUndertowEmbeddedServletContainer(builder17, deploymentManager18, 0);
        undertowEmbeddedServletContainerFactory15.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader23 = undertowEmbeddedServletContainerFactory15.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer28 = undertowEmbeddedServletContainerFactory15.getEmbeddedServletContainer(servletContextInitializerArray25);
        io.undertow.servlet.api.DeploymentManager deploymentManager29 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray25);
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        java.io.File file32 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file32);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList34 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.net.InetAddress inetAddress35 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.Undertow.Builder builder37 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (short) -1);
        org.springframework.boot.context.embedded.Ssl ssl38 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl38);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer20);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNotNull(embeddedServletContainer28);
        org.junit.Assert.assertNotNull(deploymentManager29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList34);
        org.junit.Assert.assertNull(inetAddress35);
        org.junit.Assert.assertNotNull(builder37);
    }

    @Test
    public void test06033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06033");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        jarResourcemanager0.jarPath = "";
        jarResourcemanager0.jarPath = "";
        jarResourcemanager0.close();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener6 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager0.registerResourceChangeListener(resourceChangeListener6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test06034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06034");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(10);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        boolean boolean4 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.net.InetAddress inetAddress5 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress5);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test06035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06035");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) '4');
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.ioThreads = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory7.resourceLoader = resourceLoader8;
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory7.setResourceLoader(resourceLoader10);
        undertowEmbeddedServletContainerFactory7.setIoThreads((java.lang.Integer) 100);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection14 = undertowEmbeddedServletContainerFactory7.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory7.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean19 = undertowEmbeddedServletContainerFactory18.directBuffers;
        io.undertow.Undertow.Builder builder20 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory18.getUndertowEmbeddedServletContainer(builder20, deploymentManager21, 0);
        undertowEmbeddedServletContainerFactory18.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader26 = undertowEmbeddedServletContainerFactory18.getServletClassLoader();
        undertowEmbeddedServletContainerFactory18.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory18.ioThreads = 100;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection31 = undertowEmbeddedServletContainerFactory18.getBuilderCustomizers();
        java.net.InetAddress inetAddress32 = undertowEmbeddedServletContainerFactory18.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean35 = undertowEmbeddedServletContainerFactory34.directBuffers;
        io.undertow.Undertow.Builder builder36 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager37 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer39 = undertowEmbeddedServletContainerFactory34.getUndertowEmbeddedServletContainer(builder36, deploymentManager37, 0);
        undertowEmbeddedServletContainerFactory34.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader42 = undertowEmbeddedServletContainerFactory34.getServletClassLoader();
        undertowEmbeddedServletContainerFactory34.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory34.setWorkerThreads((java.lang.Integer) 1);
        org.springframework.core.io.ResourceLoader resourceLoader47 = null;
        undertowEmbeddedServletContainerFactory34.resourceLoader = resourceLoader47;
        java.lang.Boolean boolean49 = undertowEmbeddedServletContainerFactory34.directBuffers;
        org.springframework.boot.context.embedded.Ssl ssl50 = undertowEmbeddedServletContainerFactory34.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean55 = undertowEmbeddedServletContainerFactory54.directBuffers;
        io.undertow.Undertow.Builder builder56 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager57 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer59 = undertowEmbeddedServletContainerFactory54.getUndertowEmbeddedServletContainer(builder56, deploymentManager57, 0);
        org.springframework.core.io.ResourceLoader resourceLoader60 = null;
        undertowEmbeddedServletContainerFactory54.resourceLoader = resourceLoader60;
        java.lang.Integer int62 = undertowEmbeddedServletContainerFactory54.buffersPerRegion;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection63 = undertowEmbeddedServletContainerFactory54.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean66 = undertowEmbeddedServletContainerFactory65.directBuffers;
        io.undertow.Undertow.Builder builder67 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager68 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer70 = undertowEmbeddedServletContainerFactory65.getUndertowEmbeddedServletContainer(builder67, deploymentManager68, 0);
        undertowEmbeddedServletContainerFactory65.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader73 = undertowEmbeddedServletContainerFactory65.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet74 = undertowEmbeddedServletContainerFactory65.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray75 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray75);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer77 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray75);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer78 = undertowEmbeddedServletContainerFactory65.getEmbeddedServletContainer(servletContextInitializerArray75);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer79 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray75);
        undertowEmbeddedServletContainerFactory54.addInitializers(servletContextInitializerArray75);
        io.undertow.servlet.api.DeploymentManager deploymentManager81 = undertowEmbeddedServletContainerFactory52.createDeploymentManager(servletContextInitializerArray75);
        io.undertow.servlet.api.DeploymentManager deploymentManager82 = undertowEmbeddedServletContainerFactory34.createDeploymentManager(servletContextInitializerArray75);
        undertowEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray75);
        undertowEmbeddedServletContainerFactory7.addInitializers(servletContextInitializerArray75);
        io.undertow.servlet.api.DeploymentManager deploymentManager85 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray75);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 1800;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection14);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection31);
        org.junit.Assert.assertNull(inetAddress32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer39);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNull(ssl50);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer59);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection63);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer70);
        org.junit.Assert.assertNotNull(classLoader73);
        org.junit.Assert.assertNotNull(errorPageSet74);
        org.junit.Assert.assertNotNull(servletContextInitializerArray75);
        org.junit.Assert.assertNotNull(embeddedServletContainer78);
        org.junit.Assert.assertNotNull(deploymentManager81);
        org.junit.Assert.assertNotNull(deploymentManager82);
        org.junit.Assert.assertNotNull(deploymentManager85);
    }

    @Test
    public void test06036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06036");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet5 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.net.InetAddress inetAddress6 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress6);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(errorPageSet5);
    }

    @Test
    public void test06037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06037");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '4');
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file6);
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader8;
        org.springframework.core.io.ResourceLoader resourceLoader10 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo11);
        org.junit.Assert.assertNull(resourceLoader10);
    }

    @Test
    public void test06038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06038");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray8 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer7 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray8);
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.workerThreads;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 35);
        java.net.InetAddress inetAddress15 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 1;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo20 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray8);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(inetAddress15);
    }

    @Test
    public void test06039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06039");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray20 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet21, errorPageArray20);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet21);
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory1.directBuffers;
        boolean boolean25 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean28 = undertowEmbeddedServletContainerFactory27.directBuffers;
        undertowEmbeddedServletContainerFactory27.setSessionTimeout(0);
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory27.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray34 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory33.addErrorPages(errorPageArray34);
        undertowEmbeddedServletContainerFactory27.addErrorPages(errorPageArray34);
        undertowEmbeddedServletContainerFactory27.buffersPerRegion = 100;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList39 = undertowEmbeddedServletContainerFactory27.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList39;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean43 = undertowEmbeddedServletContainerFactory42.directBuffers;
        undertowEmbeddedServletContainerFactory42.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = undertowEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader47 = undertowEmbeddedServletContainerFactory42.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection48 = undertowEmbeddedServletContainerFactory42.getDeploymentInfoCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList49 = undertowEmbeddedServletContainerFactory42.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList49;
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(errorPageArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(errorPageArray34);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList39);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNull(resourceLoader47);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection48);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList49);
    }

    @Test
    public void test06040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06040");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        io.undertow.Undertow.Builder builder14 = undertowEmbeddedServletContainerFactory1.createBuilder(0);
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader15;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test06041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06041");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        int int14 = undertowEmbeddedServletContainerFactory1.getPort();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray16 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
    }

    @Test
    public void test06042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06042");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory13.directBuffers;
        undertowEmbeddedServletContainerFactory13.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader18 = undertowEmbeddedServletContainerFactory13.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection19 = undertowEmbeddedServletContainerFactory13.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory13.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        boolean boolean25 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 10);
        java.lang.String str28 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean33 = undertowEmbeddedServletContainerFactory32.directBuffers;
        io.undertow.Undertow.Builder builder34 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager35 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer37 = undertowEmbeddedServletContainerFactory32.getUndertowEmbeddedServletContainer(builder34, deploymentManager35, 0);
        undertowEmbeddedServletContainerFactory32.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory32.workerThreads = (-1);
        org.springframework.core.io.ResourceLoader resourceLoader42 = null;
        undertowEmbeddedServletContainerFactory32.resourceLoader = resourceLoader42;
        boolean boolean44 = undertowEmbeddedServletContainerFactory32.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList45 = undertowEmbeddedServletContainerFactory32.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList45;
        boolean boolean47 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNull(resourceLoader18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "0.0.0.0" + "'", str28, "0.0.0.0");
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer37);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test06043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06043");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo5 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo5);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList7 = undertowEmbeddedServletContainerFactory2.builderCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader8);
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) (-1));
        java.io.File file12 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        java.io.File file13 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test06044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06044");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.net.InetAddress inetAddress11 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress11);
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory1.workerThreads;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo14 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo14);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory17.directBuffers;
        io.undertow.Undertow.Builder builder19 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer22 = undertowEmbeddedServletContainerFactory17.getUndertowEmbeddedServletContainer(builder19, deploymentManager20, 0);
        undertowEmbeddedServletContainerFactory17.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader25 = undertowEmbeddedServletContainerFactory17.getServletClassLoader();
        java.lang.Integer int26 = undertowEmbeddedServletContainerFactory17.bufferSize;
        undertowEmbeddedServletContainerFactory17.setPort((-1));
        java.net.InetAddress inetAddress29 = undertowEmbeddedServletContainerFactory17.getAddress();
        undertowEmbeddedServletContainerFactory17.setIoThreads((java.lang.Integer) 0);
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory17.buffersPerRegion;
        org.springframework.boot.context.embedded.Ssl ssl33 = undertowEmbeddedServletContainerFactory17.getSsl();
        undertowEmbeddedServletContainerFactory17.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings36);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList40 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.lang.String str41 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer22);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(inetAddress29);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(ssl33);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test06045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06045");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.lang.Boolean boolean3 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode14 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
    }

    @Test
    public void test06046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06046");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.io.File file3 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection4 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.io.File file5 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
    }

    @Test
    public void test06047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06047");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray17 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray17);
        undertowEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer21, initParameterConfiguringServletContextInitializer23 };
        undertowEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray24);
        undertowEmbeddedServletContainerFactory15.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray29 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer28 };
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray29);
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory15.ioThreads;
        undertowEmbeddedServletContainerFactory15.setWorkerThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray34 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet35 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet35, errorPageArray34);
        undertowEmbeddedServletContainerFactory15.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet35);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet35);
        org.springframework.core.io.ResourceLoader resourceLoader39 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        int int42 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray43 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(errorPageArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(resourceLoader39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test06048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06048");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader11;
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress14 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory16.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray18);
        boolean boolean21 = undertowEmbeddedServletContainerFactory16.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList22 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        undertowEmbeddedServletContainerFactory16.setSessionTimeout((int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList26 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList26;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean30 = undertowEmbeddedServletContainerFactory29.directBuffers;
        io.undertow.Undertow.Builder builder31 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager32 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer34 = undertowEmbeddedServletContainerFactory29.getUndertowEmbeddedServletContainer(builder31, deploymentManager32, 0);
        undertowEmbeddedServletContainerFactory29.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader37 = undertowEmbeddedServletContainerFactory29.getServletClassLoader();
        java.lang.Integer int38 = undertowEmbeddedServletContainerFactory29.bufferSize;
        undertowEmbeddedServletContainerFactory29.setIoThreads((java.lang.Integer) 1800);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection41 = undertowEmbeddedServletContainerFactory29.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader42 = null;
        undertowEmbeddedServletContainerFactory29.resourceLoader = resourceLoader42;
        java.lang.Integer int44 = undertowEmbeddedServletContainerFactory29.bufferSize;
        int int45 = undertowEmbeddedServletContainerFactory29.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean48 = undertowEmbeddedServletContainerFactory47.directBuffers;
        undertowEmbeddedServletContainerFactory47.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = undertowEmbeddedServletContainerFactory47.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader52 = undertowEmbeddedServletContainerFactory47.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection53 = undertowEmbeddedServletContainerFactory47.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory47.buffersPerRegion = 0;
        io.undertow.server.handlers.resource.ResourceManager resourceManager56 = undertowEmbeddedServletContainerFactory47.getDocumentRootResourceManager();
        java.lang.Integer int57 = undertowEmbeddedServletContainerFactory47.bufferSize;
        undertowEmbeddedServletContainerFactory47.setPort((int) (byte) 0);
        org.springframework.boot.context.embedded.Ssl ssl60 = undertowEmbeddedServletContainerFactory47.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean63 = undertowEmbeddedServletContainerFactory62.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray64 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray64);
        undertowEmbeddedServletContainerFactory62.addInitializers(servletContextInitializerArray64);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer68 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap67);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer70 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap69);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray71 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer68, initParameterConfiguringServletContextInitializer70 };
        undertowEmbeddedServletContainerFactory62.addInitializers(servletContextInitializerArray71);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings73 = undertowEmbeddedServletContainerFactory62.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection74 = undertowEmbeddedServletContainerFactory62.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray77 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory76.addErrorPages(errorPageArray77);
        undertowEmbeddedServletContainerFactory62.addErrorPages(errorPageArray77);
        undertowEmbeddedServletContainerFactory47.addErrorPages(errorPageArray77);
        undertowEmbeddedServletContainerFactory29.addErrorPages(errorPageArray77);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray77);
        int int83 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList22);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList26);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer34);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection41);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertNull(resourceLoader52);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection53);
        org.junit.Assert.assertNotNull(resourceManager56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNull(ssl60);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(servletContextInitializerArray64);
        org.junit.Assert.assertNotNull(servletContextInitializerArray71);
        org.junit.Assert.assertNotNull(mimeMappings73);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection74);
        org.junit.Assert.assertNotNull(errorPageArray77);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10 + "'", int83 == 10);
    }

    @Test
    public void test06049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06049");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory1.directBuffers;
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader14;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory17.directBuffers;
        io.undertow.Undertow.Builder builder19 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer22 = undertowEmbeddedServletContainerFactory17.getUndertowEmbeddedServletContainer(builder19, deploymentManager20, 0);
        undertowEmbeddedServletContainerFactory17.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader25 = undertowEmbeddedServletContainerFactory17.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl26 = null;
        undertowEmbeddedServletContainerFactory17.setSsl(ssl26);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean30 = undertowEmbeddedServletContainerFactory29.directBuffers;
        undertowEmbeddedServletContainerFactory29.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader34 = undertowEmbeddedServletContainerFactory29.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection35 = undertowEmbeddedServletContainerFactory29.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory29.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray38 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory29.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray38);
        undertowEmbeddedServletContainerFactory17.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray38);
        boolean boolean41 = undertowEmbeddedServletContainerFactory17.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList42 = undertowEmbeddedServletContainerFactory17.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList42;
        undertowEmbeddedServletContainerFactory1.workerThreads = 10;
        java.lang.Integer int46 = undertowEmbeddedServletContainerFactory1.bufferSize;
        io.undertow.server.handlers.resource.ResourceManager resourceManager47 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl50 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl50);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer22);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNull(resourceLoader34);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection35);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList42);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(resourceManager47);
    }

    @Test
    public void test06050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06050");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray2 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray2);
        boolean boolean4 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection5 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo6 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo6);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.junit.Assert.assertNotNull(errorPageArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection5);
        org.junit.Assert.assertNotNull(mimeMappings8);
    }

    @Test
    public void test06051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06051");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory2.setSessionTimeout((int) (byte) -1);
        undertowEmbeddedServletContainerFactory2.setSessionTimeout((int) (byte) 1);
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory2.resourceLoader = resourceLoader9;
        undertowEmbeddedServletContainerFactory2.setSessionTimeout((int) ' ');
        undertowEmbeddedServletContainerFactory2.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory16.directBuffers;
        undertowEmbeddedServletContainerFactory16.setSessionTimeout(0);
        boolean boolean20 = undertowEmbeddedServletContainerFactory16.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean23 = undertowEmbeddedServletContainerFactory22.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray24);
        undertowEmbeddedServletContainerFactory22.addInitializers(servletContextInitializerArray24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer28 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap27);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer28, initParameterConfiguringServletContextInitializer30 };
        undertowEmbeddedServletContainerFactory22.addInitializers(servletContextInitializerArray31);
        undertowEmbeddedServletContainerFactory22.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer35 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer35 };
        undertowEmbeddedServletContainerFactory22.addBuilderCustomizers(undertowBuilderCustomizerArray36);
        java.lang.Integer int38 = undertowEmbeddedServletContainerFactory22.ioThreads;
        java.lang.String str39 = undertowEmbeddedServletContainerFactory22.getContextPath();
        undertowEmbeddedServletContainerFactory22.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory44.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder48 = undertowEmbeddedServletContainerFactory44.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager49 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer51 = undertowEmbeddedServletContainerFactory22.getUndertowEmbeddedServletContainer(builder48, deploymentManager49, (int) (byte) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager52 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer54 = undertowEmbeddedServletContainerFactory16.getUndertowEmbeddedServletContainer(builder48, deploymentManager52, (int) (short) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList58 = undertowEmbeddedServletContainerFactory57.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory57.setIoThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean63 = undertowEmbeddedServletContainerFactory62.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray64 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray64);
        undertowEmbeddedServletContainerFactory62.addInitializers(servletContextInitializerArray64);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer68 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap67);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer70 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap69);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray71 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer68, initParameterConfiguringServletContextInitializer70 };
        undertowEmbeddedServletContainerFactory62.addInitializers(servletContextInitializerArray71);
        undertowEmbeddedServletContainerFactory62.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer75 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray76 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer75 };
        undertowEmbeddedServletContainerFactory62.addBuilderCustomizers(undertowBuilderCustomizerArray76);
        java.lang.Integer int78 = undertowEmbeddedServletContainerFactory62.ioThreads;
        java.lang.String str79 = undertowEmbeddedServletContainerFactory62.getContextPath();
        undertowEmbeddedServletContainerFactory62.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory84 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory84.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder88 = undertowEmbeddedServletContainerFactory84.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager89 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer91 = undertowEmbeddedServletContainerFactory62.getUndertowEmbeddedServletContainer(builder88, deploymentManager89, (int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray92 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory62.addBuilderCustomizers(undertowBuilderCustomizerArray92);
        undertowEmbeddedServletContainerFactory57.addBuilderCustomizers(undertowBuilderCustomizerArray92);
        undertowEmbeddedServletContainerFactory16.addBuilderCustomizers(undertowBuilderCustomizerArray92);
        undertowEmbeddedServletContainerFactory2.addBuilderCustomizers(undertowBuilderCustomizerArray92);
        java.lang.String str97 = undertowEmbeddedServletContainerFactory2.getContextPath();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo98 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo98);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray36);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer51);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer54);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList58);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(servletContextInitializerArray64);
        org.junit.Assert.assertNotNull(servletContextInitializerArray71);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray76);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer91);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray92);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "" + "'", str97, "");
    }

    @Test
    public void test06052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06052");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        java.lang.String str8 = jarResourcemanager1.jarPath;
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener9 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.removeResourceChangeListener(resourceChangeListener9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
    }

    @Test
    public void test06053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06053");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory14.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory14.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (byte) 0);
        java.net.InetAddress inetAddress22 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress22);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
    }

    @Test
    public void test06054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06054");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory9.addErrorPages(errorPageArray10);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray10);
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress14 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress14);
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.workerThreads;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList18 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray21 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList18);
    }

    @Test
    public void test06055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06055");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        java.io.File file10 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.lang.String str13 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1800;
        java.lang.ClassLoader classLoader22 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
        org.junit.Assert.assertNotNull(classLoader22);
    }

    @Test
    public void test06056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06056");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        int int8 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.lang.String str9 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray11);
        undertowEmbeddedServletContainerFactory1.bufferSize = 10;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray11);
    }

    @Test
    public void test06057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06057");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl8);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        java.lang.ClassLoader classLoader14 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory16.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray18);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer24 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap23);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer22, initParameterConfiguringServletContextInitializer24 };
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection28 = undertowEmbeddedServletContainerFactory16.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray31 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory30.addErrorPages(errorPageArray31);
        undertowEmbeddedServletContainerFactory16.addErrorPages(errorPageArray31);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray31);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList35 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray36 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection28);
        org.junit.Assert.assertNotNull(errorPageArray31);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList35);
    }

    @Test
    public void test06058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06058");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader11;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test06059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06059");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader7;
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo11);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection15 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader16 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection15);
        org.junit.Assert.assertNull(resourceLoader16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test06060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06060");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        undertowEmbeddedServletContainerFactory15.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader20 = undertowEmbeddedServletContainerFactory15.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection21 = undertowEmbeddedServletContainerFactory15.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory15.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray24 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory15.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray24);
        java.lang.String str26 = undertowEmbeddedServletContainerFactory15.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory15.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList27;
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        undertowEmbeddedServletContainerFactory1.setPort((int) 'a');
        org.springframework.core.io.ResourceLoader resourceLoader33 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader33);
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file35);
        java.io.File file37 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo38 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo38);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 52);
        java.lang.Boolean boolean42 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setPort(35);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(resourceLoader20);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection21);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0.0.0.0" + "'", str26, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(boolean42);
    }

    @Test
    public void test06061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06061");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("0.0.0.0");
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager1.jarPath;
        jarResourcemanager1.jarPath = "hi!";
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener7 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.removeResourceChangeListener(resourceChangeListener7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
    }

    @Test
    public void test06062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06062");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory17.directBuffers;
        undertowEmbeddedServletContainerFactory17.setWorkerThreads((java.lang.Integer) 100);
        boolean boolean21 = undertowEmbeddedServletContainerFactory17.isRegisterJspServlet();
        org.springframework.core.io.ResourceLoader resourceLoader22 = undertowEmbeddedServletContainerFactory17.resourceLoader;
        undertowEmbeddedServletContainerFactory17.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings25);
        undertowEmbeddedServletContainerFactory1.bufferSize = 97;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection29 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.lang.Boolean boolean30 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + true + "'", boolean13, true);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(resourceLoader22);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection29);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + true + "'", boolean30, true);
    }

    @Test
    public void test06063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06063");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory23.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory23.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo37 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo37);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1800);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList41 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.io.File file42 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file42);
        java.lang.ClassLoader classLoader44 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo45 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo45);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList41);
        org.junit.Assert.assertNotNull(classLoader44);
    }

    @Test
    public void test06064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06064");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        jarResourcemanager0.jarPath = "";
        jarResourcemanager0.jarPath = "hi!";
        jarResourcemanager0.close();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener6 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager0.removeResourceChangeListener(resourceChangeListener6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test06065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06065");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        int int14 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setContextPath("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
    }

    @Test
    public void test06066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06066");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean19 = undertowEmbeddedServletContainerFactory18.directBuffers;
        undertowEmbeddedServletContainerFactory18.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory23.directBuffers;
        undertowEmbeddedServletContainerFactory23.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = undertowEmbeddedServletContainerFactory23.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader28 = undertowEmbeddedServletContainerFactory23.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection29 = undertowEmbeddedServletContainerFactory23.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory23.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory23.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray32);
        boolean boolean34 = undertowEmbeddedServletContainerFactory23.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList35 = undertowEmbeddedServletContainerFactory23.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory18.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList35;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList35;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = (-1);
        int int44 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNull(resourceLoader28);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList35);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(mimeMappings45);
    }

    @Test
    public void test06067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06067");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean5 = undertowEmbeddedServletContainerFactory4.directBuffers;
        undertowEmbeddedServletContainerFactory4.setWorkerThreads((java.lang.Integer) 100);
        boolean boolean8 = undertowEmbeddedServletContainerFactory4.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory4.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList9;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory12.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray14);
        undertowEmbeddedServletContainerFactory12.addInitializers(servletContextInitializerArray14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer18 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap17);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer20 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap19);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer18, initParameterConfiguringServletContextInitializer20 };
        undertowEmbeddedServletContainerFactory12.addInitializers(servletContextInitializerArray21);
        undertowEmbeddedServletContainerFactory12.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer25 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray26 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer25 };
        undertowEmbeddedServletContainerFactory12.addBuilderCustomizers(undertowBuilderCustomizerArray26);
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory12.ioThreads;
        java.lang.String str29 = undertowEmbeddedServletContainerFactory12.getContextPath();
        undertowEmbeddedServletContainerFactory12.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory34.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder38 = undertowEmbeddedServletContainerFactory34.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager39 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer41 = undertowEmbeddedServletContainerFactory12.getUndertowEmbeddedServletContainer(builder38, deploymentManager39, (int) (byte) 0);
        java.lang.Boolean boolean42 = undertowEmbeddedServletContainerFactory12.directBuffers;
        java.lang.Integer int43 = undertowEmbeddedServletContainerFactory12.ioThreads;
        java.io.File file44 = null;
        undertowEmbeddedServletContainerFactory12.setDocumentRoot(file44);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean48 = undertowEmbeddedServletContainerFactory47.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader49 = null;
        undertowEmbeddedServletContainerFactory47.resourceLoader = resourceLoader49;
        io.undertow.server.handlers.resource.ResourceManager resourceManager51 = undertowEmbeddedServletContainerFactory47.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory47.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.server.handlers.resource.ResourceManager resourceManager54 = undertowEmbeddedServletContainerFactory47.getDocumentRootResourceManager();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList55 = undertowEmbeddedServletContainerFactory47.builderCustomizers;
        java.lang.Boolean boolean56 = undertowEmbeddedServletContainerFactory47.directBuffers;
        java.lang.Integer int57 = undertowEmbeddedServletContainerFactory47.buffersPerRegion;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet58 = undertowEmbeddedServletContainerFactory47.getErrorPages();
        undertowEmbeddedServletContainerFactory12.setErrorPages(errorPageSet58);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet58);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 0);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray26);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer41);
        org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + true + "'", boolean42, true);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(resourceManager51);
        org.junit.Assert.assertNotNull(resourceManager54);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList55);
        org.junit.Assert.assertEquals("'" + boolean56 + "' != '" + false + "'", boolean56, false);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(errorPageSet58);
    }

    @Test
    public void test06068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06068");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.jarPath = "0.0.0.0";
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource8 = jarResourcemanager1.getResource("hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test06069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06069");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory12.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray14);
        undertowEmbeddedServletContainerFactory12.addInitializers(servletContextInitializerArray14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer18 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap17);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer20 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap19);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer18, initParameterConfiguringServletContextInitializer20 };
        undertowEmbeddedServletContainerFactory12.addInitializers(servletContextInitializerArray21);
        undertowEmbeddedServletContainerFactory12.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer25 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray26 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer25 };
        undertowEmbeddedServletContainerFactory12.addBuilderCustomizers(undertowBuilderCustomizerArray26);
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory12.ioThreads;
        io.undertow.Undertow.Builder builder29 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer32 = undertowEmbeddedServletContainerFactory12.getUndertowEmbeddedServletContainer(builder29, deploymentManager30, 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean35 = undertowEmbeddedServletContainerFactory34.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray36);
        undertowEmbeddedServletContainerFactory34.addInitializers(servletContextInitializerArray36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer40 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap39);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer42 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap41);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray43 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer40, initParameterConfiguringServletContextInitializer42 };
        undertowEmbeddedServletContainerFactory34.addInitializers(servletContextInitializerArray43);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = undertowEmbeddedServletContainerFactory34.getMimeMappings();
        undertowEmbeddedServletContainerFactory12.setMimeMappings(mimeMappings45);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList47 = undertowEmbeddedServletContainerFactory12.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList47;
        java.lang.Integer int49 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray26);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertNotNull(servletContextInitializerArray43);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList47);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNotNull(mimeMappings51);
    }

    @Test
    public void test06070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06070");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory13.directBuffers;
        undertowEmbeddedServletContainerFactory13.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader18 = undertowEmbeddedServletContainerFactory13.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection19 = undertowEmbeddedServletContainerFactory13.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory13.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory1.workerThreads;
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList28 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNull(resourceLoader18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray22);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList28);
    }

    @Test
    public void test06071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06071");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test06072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06072");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager1.jarPath;
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str11 = jarResourcemanager1.jarPath;
        jarResourcemanager1.close();
        jarResourcemanager1.jarPath = "0.0.0.0";
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "0.0.0.0" + "'", str11, "0.0.0.0");
    }

    @Test
    public void test06073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06073");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        java.net.InetAddress inetAddress14 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader15;
        java.io.File file17 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader18);
        io.undertow.server.handlers.resource.ResourceManager resourceManager20 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.lang.Integer int21 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        int int22 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(resourceManager20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
    }

    @Test
    public void test06074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06074");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader8;
        java.lang.String str10 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 0);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo14 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray15 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray15);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = initializer17.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean23 = undertowEmbeddedServletContainerFactory22.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray24);
        undertowEmbeddedServletContainerFactory22.addInitializers(servletContextInitializerArray24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer28 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap27);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer28, initParameterConfiguringServletContextInitializer30 };
        undertowEmbeddedServletContainerFactory22.addInitializers(servletContextInitializerArray31);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray31);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray34 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray34);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray34);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray34);
        initializer33.initializers = servletContextInitializerArray34;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray39 = initializer33.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray39);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean43 = undertowEmbeddedServletContainerFactory42.directBuffers;
        io.undertow.Undertow.Builder builder44 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager45 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer47 = undertowEmbeddedServletContainerFactory42.getUndertowEmbeddedServletContainer(builder44, deploymentManager45, 0);
        undertowEmbeddedServletContainerFactory42.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory42.workerThreads = (-1);
        java.lang.Boolean boolean52 = undertowEmbeddedServletContainerFactory42.directBuffers;
        boolean boolean53 = undertowEmbeddedServletContainerFactory42.isRegisterJspServlet();
        java.lang.String str54 = undertowEmbeddedServletContainerFactory42.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList55 = undertowEmbeddedServletContainerFactory42.deploymentInfoCustomizers;
        java.lang.ClassLoader classLoader56 = undertowEmbeddedServletContainerFactory42.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray59 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory58.addErrorPages(errorPageArray59);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer61 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray62 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer61 };
        undertowEmbeddedServletContainerFactory58.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray62);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray64 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray64);
        undertowEmbeddedServletContainerFactory58.addInitializers(servletContextInitializerArray64);
        io.undertow.servlet.api.DeploymentManager deploymentManager67 = undertowEmbeddedServletContainerFactory42.createDeploymentManager(servletContextInitializerArray64);
        initializer40.initializers = servletContextInitializerArray64;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray64);
        initializer20.initializers = servletContextInitializerArray64;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.registerServletContainerInitializerToDriveServletContextInitializers(deploymentInfo14, servletContextInitializerArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertNotNull(servletContextInitializerArray34);
        org.junit.Assert.assertNotNull(servletContextInitializerArray39);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer47);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "0.0.0.0" + "'", str54, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList55);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(errorPageArray59);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray62);
        org.junit.Assert.assertNotNull(servletContextInitializerArray64);
        org.junit.Assert.assertNotNull(deploymentManager67);
    }

    @Test
    public void test06075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06075");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("0.0.0.0");
        java.lang.String str2 = jarResourcemanager1.jarPath;
        jarResourcemanager1.jarPath = "";
        java.lang.String str5 = jarResourcemanager1.jarPath;
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0.0.0.0" + "'", str2, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test06076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06076");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager1.jarPath;
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "0.0.0.0";
        boolean boolean11 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.String str12 = jarResourcemanager1.jarPath;
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.removeResourceChangeListener(resourceChangeListener13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
    }

    @Test
    public void test06077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06077");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory14.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray16);
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer20 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap19);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer20, initParameterConfiguringServletContextInitializer22 };
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray23);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray23);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray23);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 52;
        java.lang.Class<?> wildcardClass30 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(errorPageSet27);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test06078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06078");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        io.undertow.Undertow.Builder builder16 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) (-1));
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection19 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.concurrent.TimeUnit timeUnit21 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout(1, timeUnit21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection19);
    }

    @Test
    public void test06079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06079");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager1.jarPath;
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        java.lang.String str12 = jarResourcemanager1.jarPath;
        jarResourcemanager1.jarPath = "0.0.0.0";
        boolean boolean15 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.String str16 = jarResourcemanager1.jarPath;
        boolean boolean17 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.String str18 = jarResourcemanager1.jarPath;
        jarResourcemanager1.jarPath = "hi!";
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "0.0.0.0" + "'", str16, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0.0.0.0" + "'", str18, "0.0.0.0");
    }

    @Test
    public void test06080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06080");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray20 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet21, errorPageArray20);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet21);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean26 = undertowEmbeddedServletContainerFactory25.directBuffers;
        io.undertow.Undertow.Builder builder27 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory25.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, 0);
        undertowEmbeddedServletContainerFactory25.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader33 = undertowEmbeddedServletContainerFactory25.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl34 = null;
        undertowEmbeddedServletContainerFactory25.setSsl(ssl34);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory38.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder42 = undertowEmbeddedServletContainerFactory38.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager43 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer45 = undertowEmbeddedServletContainerFactory25.getUndertowEmbeddedServletContainer(builder42, deploymentManager43, (int) (byte) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager46 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer48 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder42, deploymentManager46, (int) (short) 1);
        org.springframework.core.io.ResourceLoader resourceLoader49 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader49);
        java.lang.Integer int51 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.bufferSize = 35;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(errorPageArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer45);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer48);
        org.junit.Assert.assertNull(int51);
    }

    @Test
    public void test06081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06081");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        undertowEmbeddedServletContainerFactory15.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader20 = undertowEmbeddedServletContainerFactory15.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection21 = undertowEmbeddedServletContainerFactory15.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray24 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory23.addErrorPages(errorPageArray24);
        undertowEmbeddedServletContainerFactory15.addErrorPages(errorPageArray24);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray24);
        io.undertow.server.handlers.resource.ResourceManager resourceManager28 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo29 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(resourceLoader20);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection21);
        org.junit.Assert.assertNotNull(errorPageArray24);
        org.junit.Assert.assertNotNull(resourceManager28);
    }

    @Test
    public void test06082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06082");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader8;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        org.springframework.boot.context.embedded.Ssl ssl12 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl12);
        int int14 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.lang.String str15 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory17.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray19);
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray19);
        boolean boolean22 = undertowEmbeddedServletContainerFactory17.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList23 = undertowEmbeddedServletContainerFactory17.deploymentInfoCustomizers;
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory17.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean27 = undertowEmbeddedServletContainerFactory26.directBuffers;
        io.undertow.Undertow.Builder builder28 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager29 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer31 = undertowEmbeddedServletContainerFactory26.getUndertowEmbeddedServletContainer(builder28, deploymentManager29, 0);
        undertowEmbeddedServletContainerFactory26.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader34 = undertowEmbeddedServletContainerFactory26.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl35 = null;
        undertowEmbeddedServletContainerFactory26.setSsl(ssl35);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean39 = undertowEmbeddedServletContainerFactory38.directBuffers;
        undertowEmbeddedServletContainerFactory38.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = undertowEmbeddedServletContainerFactory38.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader43 = undertowEmbeddedServletContainerFactory38.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection44 = undertowEmbeddedServletContainerFactory38.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory38.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray47 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory38.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray47);
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray47);
        undertowEmbeddedServletContainerFactory17.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray47);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray47);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        org.springframework.core.io.ResourceLoader resourceLoader54 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader54;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0.0.0.0" + "'", str15, "0.0.0.0");
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer31);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNull(resourceLoader43);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection44);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray47);
    }

    @Test
    public void test06083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06083");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '4');
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file6);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader13);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test06084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06084");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (-1));
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList3 = undertowEmbeddedServletContainerFactory2.deploymentInfoCustomizers;
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file4);
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList3);
        org.junit.Assert.assertNull(resourceLoader6);
    }

    @Test
    public void test06085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06085");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '4');
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file6);
        org.springframework.boot.context.embedded.Ssl ssl8 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory13.directBuffers;
        undertowEmbeddedServletContainerFactory13.setSessionTimeout(0);
        boolean boolean17 = undertowEmbeddedServletContainerFactory13.isRegisterDefaultServlet();
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory13.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean21 = undertowEmbeddedServletContainerFactory20.directBuffers;
        undertowEmbeddedServletContainerFactory20.setSessionTimeout(0);
        boolean boolean24 = undertowEmbeddedServletContainerFactory20.isRegisterDefaultServlet();
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory20.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean28 = undertowEmbeddedServletContainerFactory27.directBuffers;
        undertowEmbeddedServletContainerFactory27.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = undertowEmbeddedServletContainerFactory27.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader32 = undertowEmbeddedServletContainerFactory27.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection33 = undertowEmbeddedServletContainerFactory27.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory27.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory27.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        java.lang.String str38 = undertowEmbeddedServletContainerFactory27.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean41 = undertowEmbeddedServletContainerFactory40.directBuffers;
        undertowEmbeddedServletContainerFactory40.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray44 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet45 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet45, errorPageArray44);
        undertowEmbeddedServletContainerFactory40.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet45);
        undertowEmbeddedServletContainerFactory27.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet45);
        undertowEmbeddedServletContainerFactory20.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet45);
        undertowEmbeddedServletContainerFactory20.directBuffers = false;
        undertowEmbeddedServletContainerFactory20.directBuffers = false;
        undertowEmbeddedServletContainerFactory20.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean58 = undertowEmbeddedServletContainerFactory57.directBuffers;
        undertowEmbeddedServletContainerFactory57.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = undertowEmbeddedServletContainerFactory57.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader62 = undertowEmbeddedServletContainerFactory57.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection63 = undertowEmbeddedServletContainerFactory57.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray66 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory65.addErrorPages(errorPageArray66);
        undertowEmbeddedServletContainerFactory57.addErrorPages(errorPageArray66);
        boolean boolean69 = undertowEmbeddedServletContainerFactory57.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean72 = undertowEmbeddedServletContainerFactory71.directBuffers;
        io.undertow.Undertow.Builder builder73 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager74 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer76 = undertowEmbeddedServletContainerFactory71.getUndertowEmbeddedServletContainer(builder73, deploymentManager74, 0);
        undertowEmbeddedServletContainerFactory71.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader79 = undertowEmbeddedServletContainerFactory71.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet80 = undertowEmbeddedServletContainerFactory71.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray81 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray81);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer83 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray81);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer84 = undertowEmbeddedServletContainerFactory71.getEmbeddedServletContainer(servletContextInitializerArray81);
        io.undertow.servlet.api.DeploymentManager deploymentManager85 = undertowEmbeddedServletContainerFactory57.createDeploymentManager(servletContextInitializerArray81);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer86 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray81);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray87 = initializer86.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray88 = initializer86.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer89 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray88);
        io.undertow.servlet.api.DeploymentManager deploymentManager90 = undertowEmbeddedServletContainerFactory20.createDeploymentManager(servletContextInitializerArray88);
        io.undertow.servlet.api.DeploymentManager deploymentManager91 = undertowEmbeddedServletContainerFactory13.createDeploymentManager(servletContextInitializerArray88);
        io.undertow.servlet.api.DeploymentManager deploymentManager92 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray88);
        org.junit.Assert.assertNull(ssl8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNull(resourceLoader32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "0.0.0.0" + "'", str38, "0.0.0.0");
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(errorPageArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNull(resourceLoader62);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection63);
        org.junit.Assert.assertNotNull(errorPageArray66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer76);
        org.junit.Assert.assertNotNull(classLoader79);
        org.junit.Assert.assertNotNull(errorPageSet80);
        org.junit.Assert.assertNotNull(servletContextInitializerArray81);
        org.junit.Assert.assertNotNull(embeddedServletContainer84);
        org.junit.Assert.assertNotNull(deploymentManager85);
        org.junit.Assert.assertNotNull(servletContextInitializerArray87);
        org.junit.Assert.assertNotNull(servletContextInitializerArray88);
        org.junit.Assert.assertNotNull(deploymentManager90);
        org.junit.Assert.assertNotNull(deploymentManager91);
        org.junit.Assert.assertNotNull(deploymentManager92);
    }

    @Test
    public void test06086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06086");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.Ssl ssl4 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean7 = undertowEmbeddedServletContainerFactory6.directBuffers;
        undertowEmbeddedServletContainerFactory6.setSessionTimeout(0);
        boolean boolean10 = undertowEmbeddedServletContainerFactory6.isRegisterDefaultServlet();
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory6.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory13.directBuffers;
        io.undertow.Undertow.Builder builder15 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer18 = undertowEmbeddedServletContainerFactory13.getUndertowEmbeddedServletContainer(builder15, deploymentManager16, 0);
        undertowEmbeddedServletContainerFactory13.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader21 = undertowEmbeddedServletContainerFactory13.getServletClassLoader();
        java.lang.Integer int22 = undertowEmbeddedServletContainerFactory13.bufferSize;
        undertowEmbeddedServletContainerFactory13.setPort((-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean27 = undertowEmbeddedServletContainerFactory26.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray28 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray28);
        undertowEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer32 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap31);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer34 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap33);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer32, initParameterConfiguringServletContextInitializer34 };
        undertowEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray35);
        undertowEmbeddedServletContainerFactory26.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer39 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer39 };
        undertowEmbeddedServletContainerFactory26.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        java.lang.Integer int42 = undertowEmbeddedServletContainerFactory26.ioThreads;
        java.lang.String str43 = undertowEmbeddedServletContainerFactory26.getContextPath();
        undertowEmbeddedServletContainerFactory26.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory48.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder52 = undertowEmbeddedServletContainerFactory48.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager53 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer55 = undertowEmbeddedServletContainerFactory26.getUndertowEmbeddedServletContainer(builder52, deploymentManager53, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory26.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory26.bufferSize = 1;
        undertowEmbeddedServletContainerFactory26.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean64 = undertowEmbeddedServletContainerFactory63.directBuffers;
        undertowEmbeddedServletContainerFactory63.setSessionTimeout(0);
        boolean boolean67 = undertowEmbeddedServletContainerFactory63.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean70 = undertowEmbeddedServletContainerFactory69.directBuffers;
        undertowEmbeddedServletContainerFactory69.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings73 = undertowEmbeddedServletContainerFactory69.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader74 = undertowEmbeddedServletContainerFactory69.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection75 = undertowEmbeddedServletContainerFactory69.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory69.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray78 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory69.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray78);
        boolean boolean80 = undertowEmbeddedServletContainerFactory69.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList81 = undertowEmbeddedServletContainerFactory69.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet82 = undertowEmbeddedServletContainerFactory69.getErrorPages();
        undertowEmbeddedServletContainerFactory63.setErrorPages(errorPageSet82);
        undertowEmbeddedServletContainerFactory26.setErrorPages(errorPageSet82);
        undertowEmbeddedServletContainerFactory13.setErrorPages(errorPageSet82);
        undertowEmbeddedServletContainerFactory6.setErrorPages(errorPageSet82);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet82);
        org.springframework.boot.context.embedded.Ssl ssl88 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl89 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl89);
        int int91 = undertowEmbeddedServletContainerFactory1.getPort();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList92 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.junit.Assert.assertNull(ssl4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer18);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer55);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(mimeMappings73);
        org.junit.Assert.assertNull(resourceLoader74);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection75);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList81);
        org.junit.Assert.assertNotNull(errorPageSet82);
        org.junit.Assert.assertNull(ssl88);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 100 + "'", int91 == 100);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList92);
    }

    @Test
    public void test06087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06087");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory13.directBuffers;
        undertowEmbeddedServletContainerFactory13.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader18 = undertowEmbeddedServletContainerFactory13.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection19 = undertowEmbeddedServletContainerFactory13.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory13.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory1.workerThreads;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 97);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean30 = undertowEmbeddedServletContainerFactory29.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray31);
        undertowEmbeddedServletContainerFactory29.addInitializers(servletContextInitializerArray31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer35 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap34);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer37 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap36);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray38 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer35, initParameterConfiguringServletContextInitializer37 };
        undertowEmbeddedServletContainerFactory29.addInitializers(servletContextInitializerArray38);
        undertowEmbeddedServletContainerFactory29.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer42 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray43 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer42 };
        undertowEmbeddedServletContainerFactory29.addBuilderCustomizers(undertowBuilderCustomizerArray43);
        java.lang.Boolean boolean45 = undertowEmbeddedServletContainerFactory29.directBuffers;
        java.lang.Integer int46 = undertowEmbeddedServletContainerFactory29.bufferSize;
        undertowEmbeddedServletContainerFactory29.setSessionTimeout(0);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo49 = null;
        undertowEmbeddedServletContainerFactory29.configureErrorPages(deploymentInfo49);
        undertowEmbeddedServletContainerFactory29.workerThreads = 0;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList53 = undertowEmbeddedServletContainerFactory29.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList53;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.net.InetAddress inetAddress57 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNull(resourceLoader18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray22);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertNotNull(servletContextInitializerArray38);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray43);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList53);
        org.junit.Assert.assertNull(inetAddress57);
    }

    @Test
    public void test06088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06088");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        int int16 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.Ssl ssl17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.core.io.ResourceLoader resourceLoader21 = undertowEmbeddedServletContainerFactory20.resourceLoader;
        io.undertow.Undertow.Builder builder23 = undertowEmbeddedServletContainerFactory20.createBuilder((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl17, (int) 'a', builder23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test06089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06089");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 10);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
    }

    @Test
    public void test06090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06090");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader8);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 100;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setContextPath("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test06091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06091");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory5.directBuffers;
        undertowEmbeddedServletContainerFactory5.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = undertowEmbeddedServletContainerFactory5.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader10 = undertowEmbeddedServletContainerFactory5.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection11 = undertowEmbeddedServletContainerFactory5.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory5.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray14 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray14);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray14);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory1.getSsl();
        int int18 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(resourceLoader10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray14);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
    }

    @Test
    public void test06092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06092");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        java.lang.String str5 = jarResourcemanager1.jarPath;
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.String str7 = jarResourcemanager1.jarPath;
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener8 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.registerResourceChangeListener(resourceChangeListener8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0.0.0.0" + "'", str5, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
    }

    @Test
    public void test06093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06093");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray8 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory7.addErrorPages(errorPageArray8);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray8);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 100;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.net.InetAddress inetAddress14 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress14);
        boolean boolean16 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.ClassLoader classLoader17 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean20 = undertowEmbeddedServletContainerFactory19.directBuffers;
        undertowEmbeddedServletContainerFactory19.setSessionTimeout(0);
        java.lang.Boolean boolean23 = undertowEmbeddedServletContainerFactory19.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean26 = undertowEmbeddedServletContainerFactory25.directBuffers;
        io.undertow.Undertow.Builder builder27 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory25.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, 0);
        undertowEmbeddedServletContainerFactory25.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader33 = undertowEmbeddedServletContainerFactory25.getServletClassLoader();
        undertowEmbeddedServletContainerFactory25.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = undertowEmbeddedServletContainerFactory25.getMimeMappings();
        undertowEmbeddedServletContainerFactory25.setRegisterJspServlet(false);
        int int39 = undertowEmbeddedServletContainerFactory25.getSessionTimeout();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo40 = null;
        undertowEmbeddedServletContainerFactory25.configureErrorPages(deploymentInfo40);
        undertowEmbeddedServletContainerFactory25.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList44 = undertowEmbeddedServletContainerFactory25.builderCustomizers;
        undertowEmbeddedServletContainerFactory19.builderCustomizers = undertowBuilderCustomizerList44;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList44;
        java.net.InetAddress inetAddress47 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 10);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(errorPageArray8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList44);
        org.junit.Assert.assertNull(inetAddress47);
    }

    @Test
    public void test06094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06094");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory2.bufferSize;
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory2.workerThreads;
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory2.getSsl();
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory2.resourceLoader = resourceLoader6;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        java.lang.Boolean boolean9 = undertowEmbeddedServletContainerFactory2.directBuffers;
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNull(boolean9);
    }

    @Test
    public void test06095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06095");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory14.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray16);
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer20 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap19);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer20, initParameterConfiguringServletContextInitializer22 };
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray23);
        undertowEmbeddedServletContainerFactory14.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer27 };
        undertowEmbeddedServletContainerFactory14.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        java.lang.Integer int30 = undertowEmbeddedServletContainerFactory14.ioThreads;
        java.lang.String str31 = undertowEmbeddedServletContainerFactory14.getContextPath();
        undertowEmbeddedServletContainerFactory14.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory36.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder40 = undertowEmbeddedServletContainerFactory36.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager41 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer43 = undertowEmbeddedServletContainerFactory14.getUndertowEmbeddedServletContainer(builder40, deploymentManager41, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory14.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory14.bufferSize = 1;
        undertowEmbeddedServletContainerFactory14.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean52 = undertowEmbeddedServletContainerFactory51.directBuffers;
        undertowEmbeddedServletContainerFactory51.setSessionTimeout(0);
        boolean boolean55 = undertowEmbeddedServletContainerFactory51.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean58 = undertowEmbeddedServletContainerFactory57.directBuffers;
        undertowEmbeddedServletContainerFactory57.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = undertowEmbeddedServletContainerFactory57.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader62 = undertowEmbeddedServletContainerFactory57.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection63 = undertowEmbeddedServletContainerFactory57.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory57.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray66 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory57.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray66);
        boolean boolean68 = undertowEmbeddedServletContainerFactory57.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList69 = undertowEmbeddedServletContainerFactory57.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet70 = undertowEmbeddedServletContainerFactory57.getErrorPages();
        undertowEmbeddedServletContainerFactory51.setErrorPages(errorPageSet70);
        undertowEmbeddedServletContainerFactory14.setErrorPages(errorPageSet70);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet70);
        java.lang.Integer int74 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.lang.Integer int75 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.springframework.core.io.ResourceLoader resourceLoader76 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        int int77 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer43);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNull(resourceLoader62);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection63);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList69);
        org.junit.Assert.assertNotNull(errorPageSet70);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNull(resourceLoader76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test06096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06096");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.workerThreads;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode14 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test06097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06097");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory12.directBuffers;
        undertowEmbeddedServletContainerFactory12.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader17 = undertowEmbeddedServletContainerFactory12.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection18 = undertowEmbeddedServletContainerFactory12.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory12.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory12.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray21);
        boolean boolean23 = undertowEmbeddedServletContainerFactory12.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean26 = undertowEmbeddedServletContainerFactory25.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray27);
        undertowEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer31 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap30);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer33 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap32);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray34 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer31, initParameterConfiguringServletContextInitializer33 };
        undertowEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray34);
        undertowEmbeddedServletContainerFactory25.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer38 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray39 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer38 };
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        undertowEmbeddedServletContainerFactory12.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        java.lang.Integer int43 = undertowEmbeddedServletContainerFactory1.bufferSize;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo44 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo44);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection46 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean49 = undertowEmbeddedServletContainerFactory48.directBuffers;
        undertowEmbeddedServletContainerFactory48.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = undertowEmbeddedServletContainerFactory48.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader53 = undertowEmbeddedServletContainerFactory48.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection54 = undertowEmbeddedServletContainerFactory48.getDeploymentInfoCustomizers();
        boolean boolean55 = undertowEmbeddedServletContainerFactory48.isRegisterJspServlet();
        io.undertow.Undertow.Builder builder57 = undertowEmbeddedServletContainerFactory48.createBuilder((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection58 = undertowEmbeddedServletContainerFactory48.getDeploymentInfoCustomizers();
        java.lang.ClassLoader classLoader59 = undertowEmbeddedServletContainerFactory48.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl60 = undertowEmbeddedServletContainerFactory48.getSsl();
        boolean boolean61 = undertowEmbeddedServletContainerFactory48.isRegisterJspServlet();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet62 = undertowEmbeddedServletContainerFactory48.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet62);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray34);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray39);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection46);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNull(resourceLoader53);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection58);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertNull(ssl60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(errorPageSet62);
    }

    @Test
    public void test06098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06098");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        boolean boolean8 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        io.undertow.Undertow.Builder builder10 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (byte) -1);
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader12 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader12);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray17 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray17);
        undertowEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer21, initParameterConfiguringServletContextInitializer23 };
        undertowEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray24);
        undertowEmbeddedServletContainerFactory15.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray29 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer28 };
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray29);
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory15.ioThreads;
        java.lang.String str32 = undertowEmbeddedServletContainerFactory15.getContextPath();
        undertowEmbeddedServletContainerFactory15.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory37.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder41 = undertowEmbeddedServletContainerFactory37.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager42 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer44 = undertowEmbeddedServletContainerFactory15.getUndertowEmbeddedServletContainer(builder41, deploymentManager42, (int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean47 = undertowEmbeddedServletContainerFactory46.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray48 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray48);
        undertowEmbeddedServletContainerFactory46.addInitializers(servletContextInitializerArray48);
        boolean boolean51 = undertowEmbeddedServletContainerFactory46.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList52 = undertowEmbeddedServletContainerFactory46.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory46.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean57 = undertowEmbeddedServletContainerFactory56.directBuffers;
        undertowEmbeddedServletContainerFactory56.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings60 = undertowEmbeddedServletContainerFactory56.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader61 = undertowEmbeddedServletContainerFactory56.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection62 = undertowEmbeddedServletContainerFactory56.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory56.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray65 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory56.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray65);
        boolean boolean67 = undertowEmbeddedServletContainerFactory56.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean70 = undertowEmbeddedServletContainerFactory69.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray71 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray71);
        undertowEmbeddedServletContainerFactory69.addInitializers(servletContextInitializerArray71);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer75 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap74);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer77 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap76);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray78 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer75, initParameterConfiguringServletContextInitializer77 };
        undertowEmbeddedServletContainerFactory69.addInitializers(servletContextInitializerArray78);
        undertowEmbeddedServletContainerFactory69.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer82 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray83 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer82 };
        undertowEmbeddedServletContainerFactory69.addBuilderCustomizers(undertowBuilderCustomizerArray83);
        undertowEmbeddedServletContainerFactory56.addBuilderCustomizers(undertowBuilderCustomizerArray83);
        undertowEmbeddedServletContainerFactory46.addBuilderCustomizers(undertowBuilderCustomizerArray83);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray87 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer88 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray87);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray89 = initializer88.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer90 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray89);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer91 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray89);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer92 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray89);
        io.undertow.servlet.api.DeploymentManager deploymentManager93 = undertowEmbeddedServletContainerFactory46.createDeploymentManager(servletContextInitializerArray89);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer95 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder41, deploymentManager93, (int) '#');
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet96 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.net.InetAddress inetAddress97 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress97);
        java.lang.Integer int99 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer44);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(servletContextInitializerArray48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList52);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(mimeMappings60);
        org.junit.Assert.assertNull(resourceLoader61);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection62);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(servletContextInitializerArray71);
        org.junit.Assert.assertNotNull(servletContextInitializerArray78);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray83);
        org.junit.Assert.assertNotNull(servletContextInitializerArray87);
        org.junit.Assert.assertNotNull(servletContextInitializerArray89);
        org.junit.Assert.assertNotNull(deploymentManager93);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer95);
        org.junit.Assert.assertNotNull(errorPageSet96);
        org.junit.Assert.assertNull(int99);
    }

    @Test
    public void test06099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06099");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory2.bufferSize;
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory2.workerThreads;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo5 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo5);
        int int7 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        undertowEmbeddedServletContainerFactory2.setJspServletClassName("");
        java.lang.Boolean boolean10 = undertowEmbeddedServletContainerFactory2.directBuffers;
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory14.directBuffers;
        undertowEmbeddedServletContainerFactory14.setSessionTimeout(0);
        boolean boolean18 = undertowEmbeddedServletContainerFactory14.isRegisterDefaultServlet();
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory14.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean22 = undertowEmbeddedServletContainerFactory21.directBuffers;
        undertowEmbeddedServletContainerFactory21.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader26 = undertowEmbeddedServletContainerFactory21.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection27 = undertowEmbeddedServletContainerFactory21.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory21.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray30);
        java.lang.String str32 = undertowEmbeddedServletContainerFactory21.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean35 = undertowEmbeddedServletContainerFactory34.directBuffers;
        undertowEmbeddedServletContainerFactory34.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray38 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet39 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet39, errorPageArray38);
        undertowEmbeddedServletContainerFactory34.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet39);
        undertowEmbeddedServletContainerFactory21.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet39);
        undertowEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet39);
        undertowEmbeddedServletContainerFactory14.directBuffers = false;
        undertowEmbeddedServletContainerFactory14.directBuffers = false;
        io.undertow.server.handlers.resource.ResourceManager resourceManager48 = undertowEmbeddedServletContainerFactory14.getDocumentRootResourceManager();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection49 = undertowEmbeddedServletContainerFactory14.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory14.setWorkerThreads((java.lang.Integer) 0);
        org.springframework.core.io.ResourceLoader resourceLoader52 = null;
        undertowEmbeddedServletContainerFactory14.resourceLoader = resourceLoader52;
        java.net.InetAddress inetAddress54 = null;
        undertowEmbeddedServletContainerFactory14.setAddress(inetAddress54);
        io.undertow.Undertow.Builder builder57 = undertowEmbeddedServletContainerFactory14.createBuilder((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory2.configureSsl(ssl11, (int) (short) 1, builder57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNull(resourceLoader26);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection27);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "0.0.0.0" + "'", str32, "0.0.0.0");
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(errorPageArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(resourceManager48);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection49);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test06100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06100");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray20 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet21, errorPageArray20);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet21);
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.server.handlers.resource.ResourceManager resourceManager25 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(errorPageArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(resourceManager25);
    }

    @Test
    public void test06101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06101");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList10 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory12.directBuffers;
        undertowEmbeddedServletContainerFactory12.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader17 = undertowEmbeddedServletContainerFactory12.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection18 = undertowEmbeddedServletContainerFactory12.getDeploymentInfoCustomizers();
        boolean boolean19 = undertowEmbeddedServletContainerFactory12.isRegisterJspServlet();
        java.lang.String str20 = undertowEmbeddedServletContainerFactory12.getListenAddress();
        java.net.InetAddress inetAddress21 = undertowEmbeddedServletContainerFactory12.getAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = undertowEmbeddedServletContainerFactory12.builderCustomizers;
        io.undertow.Undertow.Builder builder24 = undertowEmbeddedServletContainerFactory12.createBuilder((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean27 = undertowEmbeddedServletContainerFactory26.directBuffers;
        undertowEmbeddedServletContainerFactory26.setWorkerThreads((java.lang.Integer) 100);
        boolean boolean30 = undertowEmbeddedServletContainerFactory26.isRegisterJspServlet();
        int int31 = undertowEmbeddedServletContainerFactory26.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader32 = undertowEmbeddedServletContainerFactory26.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean35 = undertowEmbeddedServletContainerFactory34.directBuffers;
        undertowEmbeddedServletContainerFactory34.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = undertowEmbeddedServletContainerFactory34.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader39 = undertowEmbeddedServletContainerFactory34.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection40 = undertowEmbeddedServletContainerFactory34.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray43 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory42.addErrorPages(errorPageArray43);
        undertowEmbeddedServletContainerFactory34.addErrorPages(errorPageArray43);
        boolean boolean46 = undertowEmbeddedServletContainerFactory34.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean49 = undertowEmbeddedServletContainerFactory48.directBuffers;
        io.undertow.Undertow.Builder builder50 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager51 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer53 = undertowEmbeddedServletContainerFactory48.getUndertowEmbeddedServletContainer(builder50, deploymentManager51, 0);
        undertowEmbeddedServletContainerFactory48.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader56 = undertowEmbeddedServletContainerFactory48.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet57 = undertowEmbeddedServletContainerFactory48.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray58 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray58);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray58);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer61 = undertowEmbeddedServletContainerFactory48.getEmbeddedServletContainer(servletContextInitializerArray58);
        io.undertow.servlet.api.DeploymentManager deploymentManager62 = undertowEmbeddedServletContainerFactory34.createDeploymentManager(servletContextInitializerArray58);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray58);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray64 = initializer63.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray65 = initializer63.initializers;
        io.undertow.servlet.api.DeploymentManager deploymentManager66 = undertowEmbeddedServletContainerFactory26.createDeploymentManager(servletContextInitializerArray65);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer68 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder24, deploymentManager66, 35);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "0.0.0.0" + "'", str20, "0.0.0.0");
        org.junit.Assert.assertNull(inetAddress21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNull(resourceLoader32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNull(resourceLoader39);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection40);
        org.junit.Assert.assertNotNull(errorPageArray43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer53);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(errorPageSet57);
        org.junit.Assert.assertNotNull(servletContextInitializerArray58);
        org.junit.Assert.assertNotNull(embeddedServletContainer61);
        org.junit.Assert.assertNotNull(deploymentManager62);
        org.junit.Assert.assertNotNull(servletContextInitializerArray64);
        org.junit.Assert.assertNotNull(servletContextInitializerArray65);
        org.junit.Assert.assertNotNull(deploymentManager66);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer68);
    }

    @Test
    public void test06102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06102");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.net.InetAddress inetAddress11 = undertowEmbeddedServletContainerFactory1.getAddress();
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress13 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress13);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(mimeMappings15);
    }

    @Test
    public void test06103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06103");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        io.undertow.Undertow.Builder builder11 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory13.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory16.directBuffers;
        undertowEmbeddedServletContainerFactory16.setWorkerThreads((java.lang.Integer) 100);
        boolean boolean20 = undertowEmbeddedServletContainerFactory16.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        undertowEmbeddedServletContainerFactory13.builderCustomizers = undertowBuilderCustomizerList21;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList21;
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str25 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray6);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList21);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test06104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06104");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray10);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray15 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray15);
        initializer14.initializers = servletContextInitializerArray15;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean21 = undertowEmbeddedServletContainerFactory20.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray22);
        undertowEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer26 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap25);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer28 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap27);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray29 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer26, initParameterConfiguringServletContextInitializer28 };
        undertowEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray29);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray29);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray32 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray32);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray32);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray32);
        initializer31.initializers = servletContextInitializerArray32;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray37 = initializer31.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray37);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray37);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray37);
        initializer14.initializers = servletContextInitializerArray37;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(servletContextInitializerArray15);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNotNull(servletContextInitializerArray29);
        org.junit.Assert.assertNotNull(servletContextInitializerArray32);
        org.junit.Assert.assertNotNull(servletContextInitializerArray37);
    }

    @Test
    public void test06105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06105");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        io.undertow.Undertow.Builder builder11 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory13.directBuffers;
        io.undertow.Undertow.Builder builder15 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer18 = undertowEmbeddedServletContainerFactory13.getUndertowEmbeddedServletContainer(builder15, deploymentManager16, 0);
        undertowEmbeddedServletContainerFactory13.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader21 = undertowEmbeddedServletContainerFactory13.getServletClassLoader();
        undertowEmbeddedServletContainerFactory13.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory13.ioThreads = 100;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection26 = undertowEmbeddedServletContainerFactory13.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean29 = undertowEmbeddedServletContainerFactory28.directBuffers;
        undertowEmbeddedServletContainerFactory28.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory28.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory28.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray6);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer18);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray33);
    }

    @Test
    public void test06106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06106");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray5 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet6 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet6, errorPageArray5);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet6);
        org.springframework.boot.context.embedded.Ssl ssl9 = undertowEmbeddedServletContainerFactory1.getSsl();
        io.undertow.Undertow.Builder builder11 = undertowEmbeddedServletContainerFactory1.createBuilder(1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory13.directBuffers;
        undertowEmbeddedServletContainerFactory13.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader18 = undertowEmbeddedServletContainerFactory13.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection19 = undertowEmbeddedServletContainerFactory13.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory13.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        undertowEmbeddedServletContainerFactory13.setIoThreads((java.lang.Integer) 100);
        org.springframework.core.io.ResourceLoader resourceLoader26 = undertowEmbeddedServletContainerFactory13.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean29 = undertowEmbeddedServletContainerFactory28.directBuffers;
        undertowEmbeddedServletContainerFactory28.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory28.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader33 = undertowEmbeddedServletContainerFactory28.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection34 = undertowEmbeddedServletContainerFactory28.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory28.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray37 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory28.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        java.lang.String str39 = undertowEmbeddedServletContainerFactory28.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean42 = undertowEmbeddedServletContainerFactory41.directBuffers;
        undertowEmbeddedServletContainerFactory41.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray45 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet46 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet46, errorPageArray45);
        undertowEmbeddedServletContainerFactory41.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet46);
        undertowEmbeddedServletContainerFactory28.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet46);
        undertowEmbeddedServletContainerFactory13.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet46);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet46);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(errorPageArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(ssl9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNull(resourceLoader18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray22);
        org.junit.Assert.assertNull(resourceLoader26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNull(resourceLoader33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection34);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "0.0.0.0" + "'", str39, "0.0.0.0");
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(errorPageArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test06107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06107");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet4 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList5 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.util.concurrent.TimeUnit timeUnit7 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '#', timeUnit7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(errorPageSet4);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList5);
    }

    @Test
    public void test06108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06108");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        int int14 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray15 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet16, errorPageArray15);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet16);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '4');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean23 = undertowEmbeddedServletContainerFactory22.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray24);
        undertowEmbeddedServletContainerFactory22.addInitializers(servletContextInitializerArray24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer28 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap27);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer28, initParameterConfiguringServletContextInitializer30 };
        undertowEmbeddedServletContainerFactory22.addInitializers(servletContextInitializerArray31);
        undertowEmbeddedServletContainerFactory22.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer35 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer35 };
        undertowEmbeddedServletContainerFactory22.addBuilderCustomizers(undertowBuilderCustomizerArray36);
        java.lang.Integer int38 = undertowEmbeddedServletContainerFactory22.ioThreads;
        undertowEmbeddedServletContainerFactory22.setWorkerThreads((java.lang.Integer) 100);
        int int41 = undertowEmbeddedServletContainerFactory22.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean44 = undertowEmbeddedServletContainerFactory43.directBuffers;
        io.undertow.Undertow.Builder builder45 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager46 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer48 = undertowEmbeddedServletContainerFactory43.getUndertowEmbeddedServletContainer(builder45, deploymentManager46, 0);
        undertowEmbeddedServletContainerFactory43.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory43.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean55 = undertowEmbeddedServletContainerFactory54.directBuffers;
        undertowEmbeddedServletContainerFactory54.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = undertowEmbeddedServletContainerFactory54.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader59 = undertowEmbeddedServletContainerFactory54.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection60 = undertowEmbeddedServletContainerFactory54.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory54.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray63 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory54.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray63);
        boolean boolean65 = undertowEmbeddedServletContainerFactory54.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean68 = undertowEmbeddedServletContainerFactory67.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray69 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray69);
        undertowEmbeddedServletContainerFactory67.addInitializers(servletContextInitializerArray69);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer73 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap72);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer75 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap74);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray76 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer73, initParameterConfiguringServletContextInitializer75 };
        undertowEmbeddedServletContainerFactory67.addInitializers(servletContextInitializerArray76);
        undertowEmbeddedServletContainerFactory67.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer80 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray81 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer80 };
        undertowEmbeddedServletContainerFactory67.addBuilderCustomizers(undertowBuilderCustomizerArray81);
        undertowEmbeddedServletContainerFactory54.addBuilderCustomizers(undertowBuilderCustomizerArray81);
        undertowEmbeddedServletContainerFactory43.addBuilderCustomizers(undertowBuilderCustomizerArray81);
        undertowEmbeddedServletContainerFactory22.addBuilderCustomizers(undertowBuilderCustomizerArray81);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray81);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertNotNull(errorPageArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray36);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer48);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNull(resourceLoader59);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection60);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(servletContextInitializerArray69);
        org.junit.Assert.assertNotNull(servletContextInitializerArray76);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray81);
    }

    @Test
    public void test06109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06109");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.workerThreads;
        undertowEmbeddedServletContainerFactory1.setPort((int) 'a');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str14 = undertowEmbeddedServletContainerFactory13.getListenAddress();
        java.lang.Integer int15 = undertowEmbeddedServletContainerFactory13.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory17.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray19);
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray19);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer23, initParameterConfiguringServletContextInitializer25 };
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray26);
        undertowEmbeddedServletContainerFactory17.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer30 };
        undertowEmbeddedServletContainerFactory17.addBuilderCustomizers(undertowBuilderCustomizerArray31);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory17.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        java.lang.String str35 = undertowEmbeddedServletContainerFactory17.getListenAddress();
        java.lang.Integer int36 = undertowEmbeddedServletContainerFactory17.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int39 = undertowEmbeddedServletContainerFactory38.buffersPerRegion;
        java.lang.String str40 = undertowEmbeddedServletContainerFactory38.getListenAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager41 = undertowEmbeddedServletContainerFactory38.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = undertowEmbeddedServletContainerFactory38.getMimeMappings();
        undertowEmbeddedServletContainerFactory17.setMimeMappings(mimeMappings42);
        undertowEmbeddedServletContainerFactory13.setMimeMappings(mimeMappings42);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList45 = undertowEmbeddedServletContainerFactory13.builderCustomizers;
        io.undertow.Undertow.Builder builder47 = undertowEmbeddedServletContainerFactory13.createBuilder((int) ' ');
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = undertowEmbeddedServletContainerFactory13.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet48);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0.0.0.0" + "'", str14, "0.0.0.0");
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray31);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "0.0.0.0" + "'", str35, "0.0.0.0");
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "0.0.0.0" + "'", str40, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager41);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(errorPageSet48);
    }

    @Test
    public void test06110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06110");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        io.undertow.Undertow.Builder builder12 = undertowEmbeddedServletContainerFactory1.createBuilder((int) '4');
        io.undertow.server.handlers.resource.ResourceManager resourceManager13 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader14);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(resourceManager13);
    }

    @Test
    public void test06111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06111");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory12.directBuffers;
        undertowEmbeddedServletContainerFactory12.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader17 = undertowEmbeddedServletContainerFactory12.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection18 = undertowEmbeddedServletContainerFactory12.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory12.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory12.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray21);
        boolean boolean23 = undertowEmbeddedServletContainerFactory12.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean26 = undertowEmbeddedServletContainerFactory25.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray27);
        undertowEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer31 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap30);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer33 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap32);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray34 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer31, initParameterConfiguringServletContextInitializer33 };
        undertowEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray34);
        undertowEmbeddedServletContainerFactory25.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer38 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray39 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer38 };
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        undertowEmbeddedServletContainerFactory12.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        java.lang.Integer int43 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList46 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.ioThreads = 1800;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray49 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray34);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray39);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList46);
    }

    @Test
    public void test06112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06112");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "";
        boolean boolean4 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str7 = jarResourcemanager1.jarPath;
        jarResourcemanager1.close();
        java.lang.String str9 = jarResourcemanager1.jarPath;
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.registerResourceChangeListener(resourceChangeListener12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0.0.0.0" + "'", str9, "0.0.0.0");
    }

    @Test
    public void test06113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06113");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        int int14 = undertowEmbeddedServletContainerFactory1.getPort();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList15 = null;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList15;
        java.net.InetAddress inetAddress17 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList18 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory1.ioThreads;
        int int20 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertNull(inetAddress17);
        org.junit.Assert.assertNull(undertowDeploymentInfoCustomizerList18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
    }

    @Test
    public void test06114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06114");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory23.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory23.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (byte) 0);
        java.lang.Boolean boolean31 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean34 = undertowEmbeddedServletContainerFactory33.directBuffers;
        undertowEmbeddedServletContainerFactory33.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = undertowEmbeddedServletContainerFactory33.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader38 = undertowEmbeddedServletContainerFactory33.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection39 = undertowEmbeddedServletContainerFactory33.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory33.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray42 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory33.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray42);
        java.lang.String str44 = undertowEmbeddedServletContainerFactory33.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean47 = undertowEmbeddedServletContainerFactory46.directBuffers;
        undertowEmbeddedServletContainerFactory46.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray50 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet51 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet51, errorPageArray50);
        undertowEmbeddedServletContainerFactory46.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet51);
        undertowEmbeddedServletContainerFactory33.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet51);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList55 = undertowEmbeddedServletContainerFactory33.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList55;
        java.lang.ClassLoader classLoader57 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + true + "'", boolean31, true);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNull(resourceLoader38);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection39);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "0.0.0.0" + "'", str44, "0.0.0.0");
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(errorPageArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList55);
        org.junit.Assert.assertNotNull(classLoader57);
    }

    @Test
    public void test06115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06115");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        undertowEmbeddedServletContainerFactory1.ioThreads = 10;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList11);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test06116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06116");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        java.net.InetAddress inetAddress14 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader15 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.lang.String str16 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertNull(resourceLoader15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test06117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06117");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray13);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray15 = initializer14.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray15);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer17 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray15);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 52);
        java.lang.String str20 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray15);
        org.junit.Assert.assertNotNull(embeddedServletContainer17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test06118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06118");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '4');
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (-1));
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory14.directBuffers;
        undertowEmbeddedServletContainerFactory14.workerThreads = 1800;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean20 = undertowEmbeddedServletContainerFactory19.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray21);
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray21);
        boolean boolean24 = undertowEmbeddedServletContainerFactory19.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList25 = undertowEmbeddedServletContainerFactory19.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Ssl ssl26 = null;
        undertowEmbeddedServletContainerFactory19.setSsl(ssl26);
        undertowEmbeddedServletContainerFactory19.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory19.bufferSize = 1;
        java.lang.ClassLoader classLoader32 = undertowEmbeddedServletContainerFactory19.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean35 = undertowEmbeddedServletContainerFactory34.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray36);
        undertowEmbeddedServletContainerFactory34.addInitializers(servletContextInitializerArray36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer40 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap39);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer42 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap41);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray43 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer40, initParameterConfiguringServletContextInitializer42 };
        undertowEmbeddedServletContainerFactory34.addInitializers(servletContextInitializerArray43);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = undertowEmbeddedServletContainerFactory34.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection46 = undertowEmbeddedServletContainerFactory34.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray49 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory48.addErrorPages(errorPageArray49);
        undertowEmbeddedServletContainerFactory34.addErrorPages(errorPageArray49);
        undertowEmbeddedServletContainerFactory19.addErrorPages(errorPageArray49);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList53 = undertowEmbeddedServletContainerFactory19.builderCustomizers;
        undertowEmbeddedServletContainerFactory14.builderCustomizers = undertowBuilderCustomizerList53;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection55 = undertowEmbeddedServletContainerFactory14.getBuilderCustomizers();
        java.lang.Boolean boolean56 = undertowEmbeddedServletContainerFactory14.directBuffers;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection57 = undertowEmbeddedServletContainerFactory14.getBuilderCustomizers();
        io.undertow.Undertow.Builder builder59 = undertowEmbeddedServletContainerFactory14.createBuilder((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl10, 0, builder59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList25);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertNotNull(servletContextInitializerArray43);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection46);
        org.junit.Assert.assertNotNull(errorPageArray49);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList53);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection55);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection57);
        org.junit.Assert.assertNotNull(builder59);
    }

    @Test
    public void test06119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06119");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory1.directBuffers;
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader14;
        java.lang.ClassLoader classLoader16 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        io.undertow.server.handlers.resource.ResourceManager resourceManager18 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection19 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader20 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.lang.String str21 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection22 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(resourceManager18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection19);
        org.junit.Assert.assertNull(resourceLoader20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0.0.0.0" + "'", str21, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection22);
    }

    @Test
    public void test06120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06120");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray9 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray9);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray9);
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 0);
        org.springframework.core.io.ResourceLoader resourceLoader18 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection21 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory23.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray25);
        undertowEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray25);
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer29 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap28);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer31 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap30);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray32 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer29, initParameterConfiguringServletContextInitializer31 };
        undertowEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray32);
        undertowEmbeddedServletContainerFactory23.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer36 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray37 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer36 };
        undertowEmbeddedServletContainerFactory23.addBuilderCustomizers(undertowBuilderCustomizerArray37);
        java.lang.Integer int39 = undertowEmbeddedServletContainerFactory23.ioThreads;
        java.lang.String str40 = undertowEmbeddedServletContainerFactory23.getContextPath();
        undertowEmbeddedServletContainerFactory23.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory45.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder49 = undertowEmbeddedServletContainerFactory45.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer52 = undertowEmbeddedServletContainerFactory23.getUndertowEmbeddedServletContainer(builder49, deploymentManager50, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory23.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory23.bufferSize = 1;
        undertowEmbeddedServletContainerFactory23.setRegisterDefaultServlet(false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo59 = null;
        undertowEmbeddedServletContainerFactory23.configureErrorPages(deploymentInfo59);
        undertowEmbeddedServletContainerFactory23.setBufferSize((java.lang.Integer) 1800);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList63 = undertowEmbeddedServletContainerFactory23.builderCustomizers;
        undertowEmbeddedServletContainerFactory23.bufferSize = 1;
        int int66 = undertowEmbeddedServletContainerFactory23.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings67 = undertowEmbeddedServletContainerFactory23.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings67);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(errorPageArray9);
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNull(resourceLoader18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNotNull(servletContextInitializerArray32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray37);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer52);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertNotNull(mimeMappings67);
    }

    @Test
    public void test06121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06121");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader3;
        io.undertow.server.handlers.resource.ResourceManager resourceManager5 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.server.handlers.resource.ResourceManager resourceManager8 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.lang.Boolean boolean10 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        io.undertow.Undertow.Builder builder13 = undertowEmbeddedServletContainerFactory1.createBuilder((int) 'a');
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo15 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(resourceManager5);
        org.junit.Assert.assertNotNull(resourceManager8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + false + "'", boolean10, false);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(mimeMappings14);
    }

    @Test
    public void test06122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06122");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet14 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo17 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo17);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray19 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
        org.junit.Assert.assertNotNull(errorPageSet14);
    }

    @Test
    public void test06123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06123");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 1);
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory1.workerThreads;
        undertowEmbeddedServletContainerFactory1.setPort((int) 'a');
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl5);
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl13);
        int int15 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 97 + "'", int15 == 97);
    }

    @Test
    public void test06124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06124");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory2.bufferSize;
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory2.workerThreads;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file5);
        undertowEmbeddedServletContainerFactory2.directBuffers = true;
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
    }

    @Test
    public void test06125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06125");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.String str2 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.net.InetAddress inetAddress3 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress3);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 1;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean9 = undertowEmbeddedServletContainerFactory8.directBuffers;
        undertowEmbeddedServletContainerFactory8.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader13 = undertowEmbeddedServletContainerFactory8.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection14 = undertowEmbeddedServletContainerFactory8.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory8.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        undertowEmbeddedServletContainerFactory8.resourceLoader = resourceLoader17;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean21 = undertowEmbeddedServletContainerFactory20.directBuffers;
        undertowEmbeddedServletContainerFactory20.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = undertowEmbeddedServletContainerFactory20.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader25 = undertowEmbeddedServletContainerFactory20.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection26 = undertowEmbeddedServletContainerFactory20.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory20.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray29 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray29);
        boolean boolean31 = undertowEmbeddedServletContainerFactory20.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList32 = undertowEmbeddedServletContainerFactory20.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet33 = undertowEmbeddedServletContainerFactory20.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean36 = undertowEmbeddedServletContainerFactory35.directBuffers;
        undertowEmbeddedServletContainerFactory35.setSessionTimeout(0);
        java.lang.Integer int39 = undertowEmbeddedServletContainerFactory35.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray42 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory41.addErrorPages(errorPageArray42);
        undertowEmbeddedServletContainerFactory35.addErrorPages(errorPageArray42);
        undertowEmbeddedServletContainerFactory20.addErrorPages(errorPageArray42);
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray42);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray42);
        org.springframework.core.io.ResourceLoader resourceLoader48 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) -1);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection14);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(resourceLoader25);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection26);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList32);
        org.junit.Assert.assertNotNull(errorPageSet33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(errorPageArray42);
        org.junit.Assert.assertNull(resourceLoader48);
    }

    @Test
    public void test06126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06126");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        io.undertow.server.handlers.resource.ResourceManager resourceManager11 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo12 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo12);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection15 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray16 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(resourceManager11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection15);
    }

    @Test
    public void test06127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06127");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray20 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet21, errorPageArray20);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet21);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean26 = undertowEmbeddedServletContainerFactory25.directBuffers;
        io.undertow.Undertow.Builder builder27 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory25.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, 0);
        undertowEmbeddedServletContainerFactory25.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader33 = undertowEmbeddedServletContainerFactory25.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl34 = null;
        undertowEmbeddedServletContainerFactory25.setSsl(ssl34);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory38.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder42 = undertowEmbeddedServletContainerFactory38.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager43 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer45 = undertowEmbeddedServletContainerFactory25.getUndertowEmbeddedServletContainer(builder42, deploymentManager43, (int) (byte) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager46 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer48 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder42, deploymentManager46, (int) (short) 1);
        org.springframework.core.io.ResourceLoader resourceLoader49 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader49);
        java.lang.String str51 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        io.undertow.server.handlers.resource.ResourceManager resourceManager56 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) -1);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 1800;
        java.lang.ClassLoader classLoader61 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1800);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(errorPageArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer45);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(resourceManager56);
        org.junit.Assert.assertNotNull(classLoader61);
    }

    @Test
    public void test06128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06128");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl10);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList14 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        io.undertow.server.handlers.resource.ResourceManager resourceManager15 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList14);
        org.junit.Assert.assertNotNull(resourceManager15);
    }

    @Test
    public void test06129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06129");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection18 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        boolean boolean23 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Ssl ssl24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean28 = undertowEmbeddedServletContainerFactory27.directBuffers;
        io.undertow.Undertow.Builder builder29 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer32 = undertowEmbeddedServletContainerFactory27.getUndertowEmbeddedServletContainer(builder29, deploymentManager30, 0);
        undertowEmbeddedServletContainerFactory27.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader35 = undertowEmbeddedServletContainerFactory27.getServletClassLoader();
        java.lang.Integer int36 = undertowEmbeddedServletContainerFactory27.bufferSize;
        undertowEmbeddedServletContainerFactory27.setPort((-1));
        java.net.InetAddress inetAddress39 = undertowEmbeddedServletContainerFactory27.getAddress();
        undertowEmbeddedServletContainerFactory27.setIoThreads((java.lang.Integer) 0);
        java.lang.Integer int42 = undertowEmbeddedServletContainerFactory27.bufferSize;
        io.undertow.Undertow.Builder builder44 = undertowEmbeddedServletContainerFactory27.createBuilder(1800);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl24, 10, builder44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer32);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(inetAddress39);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(builder44);
    }

    @Test
    public void test06130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06130");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        io.undertow.server.handlers.resource.ResourceManager resourceManager15 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory17.directBuffers;
        io.undertow.Undertow.Builder builder19 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer22 = undertowEmbeddedServletContainerFactory17.getUndertowEmbeddedServletContainer(builder19, deploymentManager20, 0);
        org.springframework.core.io.ResourceLoader resourceLoader23 = null;
        undertowEmbeddedServletContainerFactory17.resourceLoader = resourceLoader23;
        org.springframework.boot.context.embedded.Ssl ssl25 = null;
        undertowEmbeddedServletContainerFactory17.setSsl(ssl25);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo27 = null;
        undertowEmbeddedServletContainerFactory17.configureErrorPages(deploymentInfo27);
        undertowEmbeddedServletContainerFactory17.setBufferSize((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = undertowEmbeddedServletContainerFactory17.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet32);
        org.springframework.boot.context.embedded.Ssl ssl34 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.ClassLoader classLoader35 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resourceManager15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer22);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(errorPageSet32);
        org.junit.Assert.assertNull(ssl34);
        org.junit.Assert.assertNotNull(classLoader35);
    }

    @Test
    public void test06131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06131");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList5, undertowBuilderCustomizerArray4);
        undertowEmbeddedServletContainerFactory2.builderCustomizers = undertowBuilderCustomizerList5;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection8 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        boolean boolean9 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        int int10 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory2.getSsl();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection12 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory2.buffersPerRegion = 1;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory16.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray18);
        boolean boolean21 = undertowEmbeddedServletContainerFactory16.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList22 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Ssl ssl23 = null;
        undertowEmbeddedServletContainerFactory16.setSsl(ssl23);
        undertowEmbeddedServletContainerFactory16.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory16.bufferSize = 1;
        java.lang.ClassLoader classLoader29 = undertowEmbeddedServletContainerFactory16.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean32 = undertowEmbeddedServletContainerFactory31.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray33 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray33);
        undertowEmbeddedServletContainerFactory31.addInitializers(servletContextInitializerArray33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer37 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap36);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer39 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap38);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray40 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer37, initParameterConfiguringServletContextInitializer39 };
        undertowEmbeddedServletContainerFactory31.addInitializers(servletContextInitializerArray40);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = undertowEmbeddedServletContainerFactory31.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection43 = undertowEmbeddedServletContainerFactory31.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray46 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory45.addErrorPages(errorPageArray46);
        undertowEmbeddedServletContainerFactory31.addErrorPages(errorPageArray46);
        undertowEmbeddedServletContainerFactory16.addErrorPages(errorPageArray46);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList50 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        undertowEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings51);
        boolean boolean53 = undertowEmbeddedServletContainerFactory2.isRegisterJspServlet();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0.0.0.0" + "'", str3, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection12);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList22);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(servletContextInitializerArray33);
        org.junit.Assert.assertNotNull(servletContextInitializerArray40);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection43);
        org.junit.Assert.assertNotNull(errorPageArray46);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList50);
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test06132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06132");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo5 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo5);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList7 = undertowEmbeddedServletContainerFactory2.builderCustomizers;
        undertowEmbeddedServletContainerFactory2.setPort((int) (short) 0);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList7);
    }

    @Test
    public void test06133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06133");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        boolean boolean8 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        io.undertow.Undertow.Builder builder10 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (byte) -1);
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader12 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader12);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray17 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray17);
        undertowEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer21, initParameterConfiguringServletContextInitializer23 };
        undertowEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray24);
        undertowEmbeddedServletContainerFactory15.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray29 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer28 };
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray29);
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory15.ioThreads;
        io.undertow.Undertow.Builder builder32 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager33 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer35 = undertowEmbeddedServletContainerFactory15.getUndertowEmbeddedServletContainer(builder32, deploymentManager33, 0);
        undertowEmbeddedServletContainerFactory15.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean40 = undertowEmbeddedServletContainerFactory39.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray41 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray41);
        undertowEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer45 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap44);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer47 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap46);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray48 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer45, initParameterConfiguringServletContextInitializer47 };
        undertowEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray48);
        undertowEmbeddedServletContainerFactory39.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer52 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray53 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer52 };
        undertowEmbeddedServletContainerFactory39.addBuilderCustomizers(undertowBuilderCustomizerArray53);
        java.lang.Integer int55 = undertowEmbeddedServletContainerFactory39.ioThreads;
        java.lang.String str56 = undertowEmbeddedServletContainerFactory39.getContextPath();
        undertowEmbeddedServletContainerFactory39.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory61.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder65 = undertowEmbeddedServletContainerFactory61.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager66 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer68 = undertowEmbeddedServletContainerFactory39.getUndertowEmbeddedServletContainer(builder65, deploymentManager66, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory39.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory39.bufferSize = 1;
        undertowEmbeddedServletContainerFactory39.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean77 = undertowEmbeddedServletContainerFactory76.directBuffers;
        undertowEmbeddedServletContainerFactory76.setSessionTimeout(0);
        boolean boolean80 = undertowEmbeddedServletContainerFactory76.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean83 = undertowEmbeddedServletContainerFactory82.directBuffers;
        undertowEmbeddedServletContainerFactory82.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings86 = undertowEmbeddedServletContainerFactory82.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader87 = undertowEmbeddedServletContainerFactory82.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection88 = undertowEmbeddedServletContainerFactory82.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory82.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray91 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory82.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray91);
        boolean boolean93 = undertowEmbeddedServletContainerFactory82.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList94 = undertowEmbeddedServletContainerFactory82.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet95 = undertowEmbeddedServletContainerFactory82.getErrorPages();
        undertowEmbeddedServletContainerFactory76.setErrorPages(errorPageSet95);
        undertowEmbeddedServletContainerFactory39.setErrorPages(errorPageSet95);
        undertowEmbeddedServletContainerFactory15.setErrorPages(errorPageSet95);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet95);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer35);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray41);
        org.junit.Assert.assertNotNull(servletContextInitializerArray48);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray53);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer68);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNotNull(mimeMappings86);
        org.junit.Assert.assertNull(resourceLoader87);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection88);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList94);
        org.junit.Assert.assertNotNull(errorPageSet95);
    }

    @Test
    public void test06134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06134");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        boolean boolean8 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory10.directBuffers;
        io.undertow.Undertow.Builder builder12 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager13 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer15 = undertowEmbeddedServletContainerFactory10.getUndertowEmbeddedServletContainer(builder12, deploymentManager13, 0);
        undertowEmbeddedServletContainerFactory10.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader18 = undertowEmbeddedServletContainerFactory10.getServletClassLoader();
        undertowEmbeddedServletContainerFactory10.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory10.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean25 = undertowEmbeddedServletContainerFactory24.directBuffers;
        undertowEmbeddedServletContainerFactory24.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader29 = undertowEmbeddedServletContainerFactory24.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection30 = undertowEmbeddedServletContainerFactory24.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory24.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory24.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        java.lang.String str35 = undertowEmbeddedServletContainerFactory24.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList36 = undertowEmbeddedServletContainerFactory24.builderCustomizers;
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList36;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList36;
        java.lang.Integer int39 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader40 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer15);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNull(resourceLoader29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "0.0.0.0" + "'", str35, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList36);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(resourceLoader40);
    }

    @Test
    public void test06135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06135");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory12.directBuffers;
        undertowEmbeddedServletContainerFactory12.setSessionTimeout(0);
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory12.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray19 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory18.addErrorPages(errorPageArray19);
        undertowEmbeddedServletContainerFactory12.addErrorPages(errorPageArray19);
        undertowEmbeddedServletContainerFactory12.buffersPerRegion = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean26 = undertowEmbeddedServletContainerFactory25.directBuffers;
        undertowEmbeddedServletContainerFactory25.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = undertowEmbeddedServletContainerFactory25.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader30 = undertowEmbeddedServletContainerFactory25.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection31 = undertowEmbeddedServletContainerFactory25.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory25.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray34 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory25.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray34);
        boolean boolean36 = undertowEmbeddedServletContainerFactory25.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList37 = undertowEmbeddedServletContainerFactory25.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory12.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList37;
        int int39 = undertowEmbeddedServletContainerFactory12.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = undertowEmbeddedServletContainerFactory41.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = undertowEmbeddedServletContainerFactory41.getMimeMappings();
        undertowEmbeddedServletContainerFactory12.setMimeMappings(mimeMappings43);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList45 = undertowEmbeddedServletContainerFactory12.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList45;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray47 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(errorPageArray19);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNull(resourceLoader30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList45);
    }

    @Test
    public void test06136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06136");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory23.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory23.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean37 = undertowEmbeddedServletContainerFactory36.directBuffers;
        undertowEmbeddedServletContainerFactory36.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray41 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory36.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        undertowEmbeddedServletContainerFactory36.directBuffers = false;
        io.undertow.Undertow.Builder builder46 = undertowEmbeddedServletContainerFactory36.createBuilder((int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean49 = undertowEmbeddedServletContainerFactory48.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean52 = undertowEmbeddedServletContainerFactory51.directBuffers;
        undertowEmbeddedServletContainerFactory51.setWorkerThreads((java.lang.Integer) 100);
        boolean boolean55 = undertowEmbeddedServletContainerFactory51.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList56 = undertowEmbeddedServletContainerFactory51.builderCustomizers;
        undertowEmbeddedServletContainerFactory48.builderCustomizers = undertowBuilderCustomizerList56;
        undertowEmbeddedServletContainerFactory36.builderCustomizers = undertowBuilderCustomizerList56;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList56;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 35);
        org.springframework.core.io.ResourceLoader resourceLoader64 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader64);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray41);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList56);
    }

    @Test
    public void test06137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06137");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        boolean boolean14 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.net.InetAddress inetAddress15 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory17.directBuffers;
        undertowEmbeddedServletContainerFactory17.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader22 = undertowEmbeddedServletContainerFactory17.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean25 = undertowEmbeddedServletContainerFactory24.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray26);
        undertowEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer32 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap31);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray33 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer30, initParameterConfiguringServletContextInitializer32 };
        undertowEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray33);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean38 = undertowEmbeddedServletContainerFactory37.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray39 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray39);
        undertowEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer43 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap42);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer45 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap44);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer43, initParameterConfiguringServletContextInitializer45 };
        undertowEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray46);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray46);
        undertowEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray46);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray46);
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray46);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray46);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray46);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray54 = initializer53.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray54);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray54);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray54);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray54);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray54);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray54);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer61 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: java.lang.NullPointerException");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(inetAddress15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(resourceLoader22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertNotNull(servletContextInitializerArray33);
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(servletContextInitializerArray39);
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
        org.junit.Assert.assertNotNull(servletContextInitializerArray54);
    }

    @Test
    public void test06138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06138");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.lang.Boolean boolean3 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory12.directBuffers;
        undertowEmbeddedServletContainerFactory12.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader17 = undertowEmbeddedServletContainerFactory12.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection18 = undertowEmbeddedServletContainerFactory12.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray21 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory20.addErrorPages(errorPageArray21);
        undertowEmbeddedServletContainerFactory12.addErrorPages(errorPageArray21);
        boolean boolean24 = undertowEmbeddedServletContainerFactory12.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean27 = undertowEmbeddedServletContainerFactory26.directBuffers;
        io.undertow.Undertow.Builder builder28 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager29 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer31 = undertowEmbeddedServletContainerFactory26.getUndertowEmbeddedServletContainer(builder28, deploymentManager29, 0);
        undertowEmbeddedServletContainerFactory26.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader34 = undertowEmbeddedServletContainerFactory26.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet35 = undertowEmbeddedServletContainerFactory26.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray36);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer39 = undertowEmbeddedServletContainerFactory26.getEmbeddedServletContainer(servletContextInitializerArray36);
        io.undertow.servlet.api.DeploymentManager deploymentManager40 = undertowEmbeddedServletContainerFactory12.createDeploymentManager(servletContextInitializerArray36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray36);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = initializer43.initializers;
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray44);
        int int46 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection18);
        org.junit.Assert.assertNotNull(errorPageArray21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer31);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(errorPageSet35);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertNotNull(embeddedServletContainer39);
        org.junit.Assert.assertNotNull(deploymentManager40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
    }

    @Test
    public void test06139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06139");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        java.lang.String str19 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory1.bufferSize;
        java.lang.Integer int21 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.springframework.boot.context.embedded.Ssl ssl22 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl22);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean26 = undertowEmbeddedServletContainerFactory25.directBuffers;
        undertowEmbeddedServletContainerFactory25.setWorkerThreads((java.lang.Integer) 100);
        boolean boolean29 = undertowEmbeddedServletContainerFactory25.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory25.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList30;
        org.springframework.core.io.ResourceLoader resourceLoader32 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader32);
        org.springframework.boot.context.embedded.Ssl ssl34 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.net.InetAddress inetAddress35 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress35);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "0.0.0.0" + "'", str19, "0.0.0.0");
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
        org.junit.Assert.assertNull(ssl34);
    }

    @Test
    public void test06140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06140");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.jarPath = "";
        boolean boolean8 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.String str9 = jarResourcemanager1.jarPath;
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test06141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06141");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory9.addErrorPages(errorPageArray10);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory14.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray16);
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer20 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap19);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer20, initParameterConfiguringServletContextInitializer22 };
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray23);
        undertowEmbeddedServletContainerFactory14.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer27 };
        undertowEmbeddedServletContainerFactory14.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory14.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        java.lang.String str32 = undertowEmbeddedServletContainerFactory14.getListenAddress();
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory14.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean36 = undertowEmbeddedServletContainerFactory35.directBuffers;
        undertowEmbeddedServletContainerFactory35.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = undertowEmbeddedServletContainerFactory35.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader40 = undertowEmbeddedServletContainerFactory35.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection41 = undertowEmbeddedServletContainerFactory35.getDeploymentInfoCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo42 = null;
        undertowEmbeddedServletContainerFactory35.configureErrorPages(deploymentInfo42);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo44 = null;
        undertowEmbeddedServletContainerFactory35.configureErrorPages(deploymentInfo44);
        undertowEmbeddedServletContainerFactory35.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean50 = undertowEmbeddedServletContainerFactory49.directBuffers;
        undertowEmbeddedServletContainerFactory49.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings53 = undertowEmbeddedServletContainerFactory49.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader54 = undertowEmbeddedServletContainerFactory49.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection55 = undertowEmbeddedServletContainerFactory49.getDeploymentInfoCustomizers();
        boolean boolean56 = undertowEmbeddedServletContainerFactory49.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean59 = undertowEmbeddedServletContainerFactory58.directBuffers;
        io.undertow.Undertow.Builder builder60 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager61 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer63 = undertowEmbeddedServletContainerFactory58.getUndertowEmbeddedServletContainer(builder60, deploymentManager61, 0);
        undertowEmbeddedServletContainerFactory58.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader66 = undertowEmbeddedServletContainerFactory58.getServletClassLoader();
        undertowEmbeddedServletContainerFactory58.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory58.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean73 = undertowEmbeddedServletContainerFactory72.directBuffers;
        undertowEmbeddedServletContainerFactory72.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings76 = undertowEmbeddedServletContainerFactory72.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader77 = undertowEmbeddedServletContainerFactory72.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection78 = undertowEmbeddedServletContainerFactory72.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory72.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray81 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory72.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray81);
        java.lang.String str83 = undertowEmbeddedServletContainerFactory72.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList84 = undertowEmbeddedServletContainerFactory72.builderCustomizers;
        undertowEmbeddedServletContainerFactory58.builderCustomizers = undertowBuilderCustomizerList84;
        undertowEmbeddedServletContainerFactory49.builderCustomizers = undertowBuilderCustomizerList84;
        undertowEmbeddedServletContainerFactory35.builderCustomizers = undertowBuilderCustomizerList84;
        undertowEmbeddedServletContainerFactory14.builderCustomizers = undertowBuilderCustomizerList84;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList84;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.util.concurrent.TimeUnit timeUnit93 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((-1), timeUnit93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "0.0.0.0" + "'", str32, "0.0.0.0");
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNull(resourceLoader40);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection41);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(mimeMappings53);
        org.junit.Assert.assertNull(resourceLoader54);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer63);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNotNull(mimeMappings76);
        org.junit.Assert.assertNull(resourceLoader77);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection78);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "0.0.0.0" + "'", str83, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList84);
    }

    @Test
    public void test06142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06142");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray9 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray9);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray9);
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 0);
        org.springframework.core.io.ResourceLoader resourceLoader18 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean21 = undertowEmbeddedServletContainerFactory20.directBuffers;
        undertowEmbeddedServletContainerFactory20.setSessionTimeout(0);
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory20.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray27 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory26.addErrorPages(errorPageArray27);
        undertowEmbeddedServletContainerFactory20.addErrorPages(errorPageArray27);
        undertowEmbeddedServletContainerFactory20.buffersPerRegion = 100;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList32 = undertowEmbeddedServletContainerFactory20.deploymentInfoCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader33 = undertowEmbeddedServletContainerFactory20.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean36 = undertowEmbeddedServletContainerFactory35.directBuffers;
        undertowEmbeddedServletContainerFactory35.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = undertowEmbeddedServletContainerFactory35.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader40 = undertowEmbeddedServletContainerFactory35.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection41 = undertowEmbeddedServletContainerFactory35.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory35.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray44 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory35.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray44);
        boolean boolean46 = undertowEmbeddedServletContainerFactory35.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList47 = undertowEmbeddedServletContainerFactory35.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = undertowEmbeddedServletContainerFactory35.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean51 = undertowEmbeddedServletContainerFactory50.directBuffers;
        undertowEmbeddedServletContainerFactory50.setSessionTimeout(0);
        java.lang.Integer int54 = undertowEmbeddedServletContainerFactory50.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray57 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory56.addErrorPages(errorPageArray57);
        undertowEmbeddedServletContainerFactory50.addErrorPages(errorPageArray57);
        undertowEmbeddedServletContainerFactory35.addErrorPages(errorPageArray57);
        undertowEmbeddedServletContainerFactory20.addErrorPages(errorPageArray57);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray57);
        java.net.InetAddress inetAddress63 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean66 = undertowEmbeddedServletContainerFactory65.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray67 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray67);
        undertowEmbeddedServletContainerFactory65.addInitializers(servletContextInitializerArray67);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer71 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap70);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer73 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap72);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray74 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer71, initParameterConfiguringServletContextInitializer73 };
        undertowEmbeddedServletContainerFactory65.addInitializers(servletContextInitializerArray74);
        undertowEmbeddedServletContainerFactory65.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer78 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray79 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer78 };
        undertowEmbeddedServletContainerFactory65.addBuilderCustomizers(undertowBuilderCustomizerArray79);
        java.lang.Boolean boolean81 = undertowEmbeddedServletContainerFactory65.directBuffers;
        java.lang.Integer int82 = undertowEmbeddedServletContainerFactory65.bufferSize;
        undertowEmbeddedServletContainerFactory65.setSessionTimeout(0);
        org.springframework.core.io.ResourceLoader resourceLoader85 = null;
        undertowEmbeddedServletContainerFactory65.setResourceLoader(resourceLoader85);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList87 = undertowEmbeddedServletContainerFactory65.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList87;
        java.lang.String str89 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(errorPageArray9);
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNull(resourceLoader18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(errorPageArray27);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList32);
        org.junit.Assert.assertNull(resourceLoader33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNull(resourceLoader40);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection41);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList47);
        org.junit.Assert.assertNotNull(errorPageSet48);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(errorPageArray57);
        org.junit.Assert.assertNull(inetAddress63);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNotNull(servletContextInitializerArray67);
        org.junit.Assert.assertNotNull(servletContextInitializerArray74);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray79);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "0.0.0.0" + "'", str89, "0.0.0.0");
    }

    @Test
    public void test06143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06143");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection14 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        io.undertow.server.handlers.resource.ResourceManager resourceManager15 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 10);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection14);
        org.junit.Assert.assertNotNull(resourceManager15);
    }

    @Test
    public void test06144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06144");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        java.lang.String str13 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
    }

    @Test
    public void test06145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06145");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file19);
        org.springframework.core.io.ResourceLoader resourceLoader21 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader21);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 100;
        java.net.InetAddress inetAddress25 = undertowEmbeddedServletContainerFactory1.getAddress();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass26 = inetAddress25.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(inetAddress25);
    }

    @Test
    public void test06146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06146");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo8 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo8);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo10 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo10);
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 10);
        int int15 = undertowEmbeddedServletContainerFactory1.getPort();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.Class<?> wildcardClass17 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test06147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06147");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray16 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory15.addErrorPages(errorPageArray16);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray16);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList19 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader20 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.workerThreads = 10;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean27 = undertowEmbeddedServletContainerFactory26.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray28 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray28);
        undertowEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray28);
        boolean boolean31 = undertowEmbeddedServletContainerFactory26.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList32 = undertowEmbeddedServletContainerFactory26.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory26.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean37 = undertowEmbeddedServletContainerFactory36.directBuffers;
        undertowEmbeddedServletContainerFactory36.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader41 = undertowEmbeddedServletContainerFactory36.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection42 = undertowEmbeddedServletContainerFactory36.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory36.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray45 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory36.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray45);
        boolean boolean47 = undertowEmbeddedServletContainerFactory36.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean50 = undertowEmbeddedServletContainerFactory49.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray51 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray51);
        undertowEmbeddedServletContainerFactory49.addInitializers(servletContextInitializerArray51);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer55 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap54);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer57 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap56);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray58 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer55, initParameterConfiguringServletContextInitializer57 };
        undertowEmbeddedServletContainerFactory49.addInitializers(servletContextInitializerArray58);
        undertowEmbeddedServletContainerFactory49.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer62 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray63 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer62 };
        undertowEmbeddedServletContainerFactory49.addBuilderCustomizers(undertowBuilderCustomizerArray63);
        undertowEmbeddedServletContainerFactory36.addBuilderCustomizers(undertowBuilderCustomizerArray63);
        undertowEmbeddedServletContainerFactory26.addBuilderCustomizers(undertowBuilderCustomizerArray63);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray63);
        java.net.InetAddress inetAddress68 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.net.InetAddress inetAddress69 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress69);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertNotNull(errorPageArray16);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList19);
        org.junit.Assert.assertNull(resourceLoader20);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList32);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNull(resourceLoader41);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection42);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(servletContextInitializerArray51);
        org.junit.Assert.assertNotNull(servletContextInitializerArray58);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray63);
        org.junit.Assert.assertNull(inetAddress68);
    }

    @Test
    public void test06148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06148");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        io.undertow.Undertow.Builder builder18 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, 0);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean26 = undertowEmbeddedServletContainerFactory25.directBuffers;
        io.undertow.Undertow.Builder builder27 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory25.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, 0);
        undertowEmbeddedServletContainerFactory25.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader33 = undertowEmbeddedServletContainerFactory25.getServletClassLoader();
        java.lang.Integer int34 = undertowEmbeddedServletContainerFactory25.bufferSize;
        undertowEmbeddedServletContainerFactory25.setIoThreads((java.lang.Integer) 1800);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection37 = undertowEmbeddedServletContainerFactory25.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader38 = null;
        undertowEmbeddedServletContainerFactory25.resourceLoader = resourceLoader38;
        undertowEmbeddedServletContainerFactory25.directBuffers = true;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList42 = undertowEmbeddedServletContainerFactory25.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList42;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList44 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        boolean boolean45 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.String str46 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection37);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList42);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test06149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06149");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory17.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray19);
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray19);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer23, initParameterConfiguringServletContextInitializer25 };
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray26);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray26);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray29 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray29);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray29);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray29);
        initializer28.initializers = servletContextInitializerArray29;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray34 = initializer28.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray34);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = initializer35.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray37 = initializer35.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray37);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray37);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray37);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray41 = initializer40.initializers;
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray41);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + true + "'", boolean13, true);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertNotNull(servletContextInitializerArray29);
        org.junit.Assert.assertNotNull(servletContextInitializerArray34);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertNotNull(servletContextInitializerArray37);
        org.junit.Assert.assertNotNull(servletContextInitializerArray41);
    }

    @Test
    public void test06150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06150");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager1.jarPath;
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "";
        boolean boolean9 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "hi!";
        boolean boolean12 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean13 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.String str14 = jarResourcemanager1.jarPath;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource16 = jarResourcemanager1.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test06151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06151");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.io.File file12 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file17);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray19 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test06152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06152");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.workerThreads;
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader14);
        undertowEmbeddedServletContainerFactory1.workerThreads = 100;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0.0.0.0" + "'", str18, "0.0.0.0");
    }

    @Test
    public void test06153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06153");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (-1));
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory13.directBuffers;
        undertowEmbeddedServletContainerFactory13.workerThreads = 1800;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean19 = undertowEmbeddedServletContainerFactory18.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray20);
        undertowEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray20);
        boolean boolean23 = undertowEmbeddedServletContainerFactory18.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList24 = undertowEmbeddedServletContainerFactory18.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Ssl ssl25 = null;
        undertowEmbeddedServletContainerFactory18.setSsl(ssl25);
        undertowEmbeddedServletContainerFactory18.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory18.bufferSize = 1;
        java.lang.ClassLoader classLoader31 = undertowEmbeddedServletContainerFactory18.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean34 = undertowEmbeddedServletContainerFactory33.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray35);
        undertowEmbeddedServletContainerFactory33.addInitializers(servletContextInitializerArray35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer39 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer41 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap40);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray42 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer39, initParameterConfiguringServletContextInitializer41 };
        undertowEmbeddedServletContainerFactory33.addInitializers(servletContextInitializerArray42);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = undertowEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection45 = undertowEmbeddedServletContainerFactory33.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray48 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory47.addErrorPages(errorPageArray48);
        undertowEmbeddedServletContainerFactory33.addErrorPages(errorPageArray48);
        undertowEmbeddedServletContainerFactory18.addErrorPages(errorPageArray48);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList52 = undertowEmbeddedServletContainerFactory18.builderCustomizers;
        undertowEmbeddedServletContainerFactory13.builderCustomizers = undertowBuilderCustomizerList52;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection54 = undertowEmbeddedServletContainerFactory13.getBuilderCustomizers();
        java.lang.Boolean boolean55 = undertowEmbeddedServletContainerFactory13.directBuffers;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection56 = undertowEmbeddedServletContainerFactory13.getBuilderCustomizers();
        io.undertow.Undertow.Builder builder58 = undertowEmbeddedServletContainerFactory13.createBuilder((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl9, (int) '4', builder58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList24);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertNotNull(servletContextInitializerArray42);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection45);
        org.junit.Assert.assertNotNull(errorPageArray48);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList52);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection54);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection56);
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test06154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06154");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "hi!";
        java.lang.String str6 = jarResourcemanager1.jarPath;
        boolean boolean7 = jarResourcemanager1.isResourceChangeListenerSupported();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test06155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06155");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory1.directBuffers;
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.ClassLoader classLoader16 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(classLoader16);
    }

    @Test
    public void test06156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06156");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory5.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray7 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray7);
        undertowEmbeddedServletContainerFactory5.addInitializers(servletContextInitializerArray7);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer11 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap10);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer11, initParameterConfiguringServletContextInitializer13 };
        undertowEmbeddedServletContainerFactory5.addInitializers(servletContextInitializerArray14);
        undertowEmbeddedServletContainerFactory5.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray19 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer18 };
        undertowEmbeddedServletContainerFactory5.addBuilderCustomizers(undertowBuilderCustomizerArray19);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory5.addBuilderCustomizers(undertowBuilderCustomizerArray21);
        java.lang.String str23 = undertowEmbeddedServletContainerFactory5.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean26 = undertowEmbeddedServletContainerFactory25.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray27);
        undertowEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer31 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap30);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer33 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap32);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray34 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer31, initParameterConfiguringServletContextInitializer33 };
        undertowEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray34);
        undertowEmbeddedServletContainerFactory25.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer38 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray39 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer38 };
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        java.lang.Integer int41 = undertowEmbeddedServletContainerFactory25.ioThreads;
        java.lang.String str42 = undertowEmbeddedServletContainerFactory25.getContextPath();
        undertowEmbeddedServletContainerFactory25.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory47.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder51 = undertowEmbeddedServletContainerFactory47.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager52 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer54 = undertowEmbeddedServletContainerFactory25.getUndertowEmbeddedServletContainer(builder51, deploymentManager52, (int) (byte) 0);
        java.lang.Boolean boolean55 = undertowEmbeddedServletContainerFactory25.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean58 = undertowEmbeddedServletContainerFactory57.directBuffers;
        undertowEmbeddedServletContainerFactory57.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = undertowEmbeddedServletContainerFactory57.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader62 = undertowEmbeddedServletContainerFactory57.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection63 = undertowEmbeddedServletContainerFactory57.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory57.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray66 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory57.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray66);
        java.lang.String str68 = undertowEmbeddedServletContainerFactory57.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean71 = undertowEmbeddedServletContainerFactory70.directBuffers;
        undertowEmbeddedServletContainerFactory70.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray74 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet75 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet75, errorPageArray74);
        undertowEmbeddedServletContainerFactory70.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet75);
        undertowEmbeddedServletContainerFactory57.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet75);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList79 = undertowEmbeddedServletContainerFactory57.builderCustomizers;
        undertowEmbeddedServletContainerFactory25.builderCustomizers = undertowBuilderCustomizerList79;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int83 = undertowEmbeddedServletContainerFactory82.buffersPerRegion;
        java.lang.String str84 = undertowEmbeddedServletContainerFactory82.getListenAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager85 = undertowEmbeddedServletContainerFactory82.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings86 = undertowEmbeddedServletContainerFactory82.getMimeMappings();
        undertowEmbeddedServletContainerFactory82.setJspServletClassName("0.0.0.0");
        java.io.File file89 = null;
        undertowEmbeddedServletContainerFactory82.setDocumentRoot(file89);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList91 = undertowEmbeddedServletContainerFactory82.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory25.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList91;
        undertowEmbeddedServletContainerFactory5.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList91;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList91;
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray7);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "0.0.0.0" + "'", str23, "0.0.0.0");
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray34);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray39);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer54);
        org.junit.Assert.assertEquals("'" + boolean55 + "' != '" + true + "'", boolean55, true);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNull(resourceLoader62);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection63);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "0.0.0.0" + "'", str68, "0.0.0.0");
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNotNull(errorPageArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList79);
        org.junit.Assert.assertNull(int83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "0.0.0.0" + "'", str84, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager85);
        org.junit.Assert.assertNotNull(mimeMappings86);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList91);
    }

    @Test
    public void test06157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06157");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray9 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray9);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray9);
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.ErrorPage errorPage13 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage14 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(errorPageArray9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test06158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06158");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 0);
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test06159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06159");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader7;
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo11);
        java.lang.String str13 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        java.net.InetAddress inetAddress16 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader17;
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 52);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(inetAddress16);
    }

    @Test
    public void test06160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06160");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray20 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet21, errorPageArray20);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet21);
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory1.directBuffers;
        boolean boolean25 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean28 = undertowEmbeddedServletContainerFactory27.directBuffers;
        undertowEmbeddedServletContainerFactory27.setSessionTimeout(0);
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory27.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray34 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory33.addErrorPages(errorPageArray34);
        undertowEmbeddedServletContainerFactory27.addErrorPages(errorPageArray34);
        undertowEmbeddedServletContainerFactory27.buffersPerRegion = 100;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList39 = undertowEmbeddedServletContainerFactory27.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList39;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory43.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder47 = undertowEmbeddedServletContainerFactory43.createBuilder((int) '4');
        boolean boolean48 = undertowEmbeddedServletContainerFactory43.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean51 = undertowEmbeddedServletContainerFactory50.directBuffers;
        undertowEmbeddedServletContainerFactory50.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = undertowEmbeddedServletContainerFactory50.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader55 = undertowEmbeddedServletContainerFactory50.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection56 = undertowEmbeddedServletContainerFactory50.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory50.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray59 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory50.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray59);
        java.lang.String str61 = undertowEmbeddedServletContainerFactory50.getListenAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings62 = undertowEmbeddedServletContainerFactory50.getMimeMappings();
        undertowEmbeddedServletContainerFactory43.setMimeMappings(mimeMappings62);
        undertowEmbeddedServletContainerFactory43.setRegisterJspServlet(false);
        java.lang.String str66 = undertowEmbeddedServletContainerFactory43.getContextPath();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList67 = undertowEmbeddedServletContainerFactory43.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList67;
        java.net.InetAddress inetAddress69 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress69);
        org.springframework.core.io.ResourceLoader resourceLoader71 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader71);
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) -1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(errorPageArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(errorPageArray34);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList39);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNull(resourceLoader55);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection56);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "0.0.0.0" + "'", str61, "0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList67);
    }

    @Test
    public void test06161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06161");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        boolean boolean1 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.jarPath = "hi!";
        java.lang.String str4 = jarResourcemanager0.jarPath;
        jarResourcemanager0.close();
        java.lang.String str6 = jarResourcemanager0.jarPath;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource8 = jarResourcemanager0.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }

    @Test
    public void test06162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06162");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file7);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory10.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray12);
        undertowEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer16 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap15);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer18 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap17);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer16, initParameterConfiguringServletContextInitializer18 };
        undertowEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray19);
        undertowEmbeddedServletContainerFactory10.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer23 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray24 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer23 };
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray24);
        java.lang.Integer int26 = undertowEmbeddedServletContainerFactory10.ioThreads;
        java.lang.String str27 = undertowEmbeddedServletContainerFactory10.getContextPath();
        undertowEmbeddedServletContainerFactory10.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory32.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder36 = undertowEmbeddedServletContainerFactory32.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager37 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer39 = undertowEmbeddedServletContainerFactory10.getUndertowEmbeddedServletContainer(builder36, deploymentManager37, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory10.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory10.bufferSize = 1;
        undertowEmbeddedServletContainerFactory10.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean48 = undertowEmbeddedServletContainerFactory47.directBuffers;
        undertowEmbeddedServletContainerFactory47.setSessionTimeout(0);
        boolean boolean51 = undertowEmbeddedServletContainerFactory47.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean54 = undertowEmbeddedServletContainerFactory53.directBuffers;
        undertowEmbeddedServletContainerFactory53.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = undertowEmbeddedServletContainerFactory53.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader58 = undertowEmbeddedServletContainerFactory53.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection59 = undertowEmbeddedServletContainerFactory53.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory53.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray62 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory53.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray62);
        boolean boolean64 = undertowEmbeddedServletContainerFactory53.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList65 = undertowEmbeddedServletContainerFactory53.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet66 = undertowEmbeddedServletContainerFactory53.getErrorPages();
        undertowEmbeddedServletContainerFactory47.setErrorPages(errorPageSet66);
        undertowEmbeddedServletContainerFactory10.setErrorPages(errorPageSet66);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet66);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 1);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo72 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray73 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.registerServletContainerInitializerToDriveServletContextInitializers(deploymentInfo72, servletContextInitializerArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray24);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer39);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertNull(resourceLoader58);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection59);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList65);
        org.junit.Assert.assertNotNull(errorPageSet66);
    }

    @Test
    public void test06163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06163");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.net.InetAddress inetAddress14 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection15 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        io.undertow.Undertow.Builder builder17 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (byte) 10);
        boolean boolean18 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.util.concurrent.TimeUnit timeUnit20 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 100, timeUnit20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06164");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.close();
        jarResourcemanager1.jarPath = "";
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "hi!";
        java.lang.String str10 = jarResourcemanager1.jarPath;
        jarResourcemanager1.jarPath = "0.0.0.0";
        boolean boolean13 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean14 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "hi!";
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06165");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray16 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory15.addErrorPages(errorPageArray16);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray19 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer18 };
        undertowEmbeddedServletContainerFactory15.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray19);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray19);
        org.springframework.boot.context.embedded.Ssl ssl22 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.io.File file23 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ErrorPages must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
        org.junit.Assert.assertNotNull(errorPageArray16);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray19);
        org.junit.Assert.assertNull(ssl22);
        org.junit.Assert.assertNull(file23);
    }

    @Test
    public void test06166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06166");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.lang.String str3 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.Boolean boolean4 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0.0.0.0" + "'", str3, "0.0.0.0");
        org.junit.Assert.assertNull(boolean4);
    }

    @Test
    public void test06167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06167");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 52);
        java.net.InetAddress inetAddress5 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inetAddress5);
    }

    @Test
    public void test06168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06168");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int15 = undertowEmbeddedServletContainerFactory14.buffersPerRegion;
        undertowEmbeddedServletContainerFactory14.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean20 = undertowEmbeddedServletContainerFactory19.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray21);
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer27 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap26);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray28 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer25, initParameterConfiguringServletContextInitializer27 };
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray28);
        undertowEmbeddedServletContainerFactory19.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer32 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer32 };
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        java.lang.Integer int35 = undertowEmbeddedServletContainerFactory19.ioThreads;
        java.lang.String str36 = undertowEmbeddedServletContainerFactory19.getContextPath();
        undertowEmbeddedServletContainerFactory19.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory41.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder45 = undertowEmbeddedServletContainerFactory41.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager46 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer48 = undertowEmbeddedServletContainerFactory19.getUndertowEmbeddedServletContainer(builder45, deploymentManager46, (int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray49 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray49);
        undertowEmbeddedServletContainerFactory14.addBuilderCustomizers(undertowBuilderCustomizerArray49);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray49);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection53 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray33);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer48);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray49);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection53);
    }

    @Test
    public void test06169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06169");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 10);
        java.net.InetAddress inetAddress9 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress9);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList11);
    }

    @Test
    public void test06170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06170");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo5 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo5);
        undertowEmbeddedServletContainerFactory2.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.Ssl ssl9 = undertowEmbeddedServletContainerFactory2.getSsl();
        java.net.InetAddress inetAddress10 = null;
        undertowEmbeddedServletContainerFactory2.setAddress(inetAddress10);
        undertowEmbeddedServletContainerFactory2.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.Ssl ssl14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory17.resourceLoader = resourceLoader18;
        org.springframework.core.io.ResourceLoader resourceLoader20 = null;
        undertowEmbeddedServletContainerFactory17.setResourceLoader(resourceLoader20);
        undertowEmbeddedServletContainerFactory17.setIoThreads((java.lang.Integer) 100);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection24 = undertowEmbeddedServletContainerFactory17.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory17.setIoThreads((java.lang.Integer) 0);
        java.lang.Integer int27 = undertowEmbeddedServletContainerFactory17.buffersPerRegion;
        io.undertow.Undertow.Builder builder29 = undertowEmbeddedServletContainerFactory17.createBuilder((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory2.configureSsl(ssl14, (int) (short) 1, builder29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(ssl9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection24);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(builder29);
    }

    @Test
    public void test06171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06171");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.lang.Boolean boolean3 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader6;
        undertowEmbeddedServletContainerFactory1.setPort(100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory11.directBuffers;
        undertowEmbeddedServletContainerFactory11.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader16 = undertowEmbeddedServletContainerFactory11.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection17 = undertowEmbeddedServletContainerFactory11.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray20 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory19.addErrorPages(errorPageArray20);
        undertowEmbeddedServletContainerFactory11.addErrorPages(errorPageArray20);
        boolean boolean23 = undertowEmbeddedServletContainerFactory11.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean26 = undertowEmbeddedServletContainerFactory25.directBuffers;
        io.undertow.Undertow.Builder builder27 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory25.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, 0);
        undertowEmbeddedServletContainerFactory25.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader33 = undertowEmbeddedServletContainerFactory25.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet34 = undertowEmbeddedServletContainerFactory25.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray35);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray35);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer38 = undertowEmbeddedServletContainerFactory25.getEmbeddedServletContainer(servletContextInitializerArray35);
        io.undertow.servlet.api.DeploymentManager deploymentManager39 = undertowEmbeddedServletContainerFactory11.createDeploymentManager(servletContextInitializerArray35);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray35);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray41 = initializer40.initializers;
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer42 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray41);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray41);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray41);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean47 = undertowEmbeddedServletContainerFactory46.directBuffers;
        undertowEmbeddedServletContainerFactory46.setWorkerThreads((java.lang.Integer) 100);
        boolean boolean50 = undertowEmbeddedServletContainerFactory46.isRegisterJspServlet();
        int int51 = undertowEmbeddedServletContainerFactory46.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader52 = undertowEmbeddedServletContainerFactory46.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean55 = undertowEmbeddedServletContainerFactory54.directBuffers;
        undertowEmbeddedServletContainerFactory54.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = undertowEmbeddedServletContainerFactory54.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader59 = undertowEmbeddedServletContainerFactory54.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection60 = undertowEmbeddedServletContainerFactory54.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray63 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory62.addErrorPages(errorPageArray63);
        undertowEmbeddedServletContainerFactory54.addErrorPages(errorPageArray63);
        boolean boolean66 = undertowEmbeddedServletContainerFactory54.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean69 = undertowEmbeddedServletContainerFactory68.directBuffers;
        io.undertow.Undertow.Builder builder70 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager71 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer73 = undertowEmbeddedServletContainerFactory68.getUndertowEmbeddedServletContainer(builder70, deploymentManager71, 0);
        undertowEmbeddedServletContainerFactory68.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader76 = undertowEmbeddedServletContainerFactory68.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet77 = undertowEmbeddedServletContainerFactory68.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray78 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer79 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray78);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer80 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray78);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer81 = undertowEmbeddedServletContainerFactory68.getEmbeddedServletContainer(servletContextInitializerArray78);
        io.undertow.servlet.api.DeploymentManager deploymentManager82 = undertowEmbeddedServletContainerFactory54.createDeploymentManager(servletContextInitializerArray78);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer83 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray78);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray84 = initializer83.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray85 = initializer83.initializers;
        io.undertow.servlet.api.DeploymentManager deploymentManager86 = undertowEmbeddedServletContainerFactory46.createDeploymentManager(servletContextInitializerArray85);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer87 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray85);
        initializer44.initializers = servletContextInitializerArray85;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray89 = initializer44.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer90 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray89);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNull(resourceLoader16);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection17);
        org.junit.Assert.assertNotNull(errorPageArray20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(errorPageSet34);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertNotNull(embeddedServletContainer38);
        org.junit.Assert.assertNotNull(deploymentManager39);
        org.junit.Assert.assertNotNull(servletContextInitializerArray41);
        org.junit.Assert.assertNotNull(embeddedServletContainer42);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertNull(resourceLoader52);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNull(resourceLoader59);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection60);
        org.junit.Assert.assertNotNull(errorPageArray63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer73);
        org.junit.Assert.assertNotNull(classLoader76);
        org.junit.Assert.assertNotNull(errorPageSet77);
        org.junit.Assert.assertNotNull(servletContextInitializerArray78);
        org.junit.Assert.assertNotNull(embeddedServletContainer81);
        org.junit.Assert.assertNotNull(deploymentManager82);
        org.junit.Assert.assertNotNull(servletContextInitializerArray84);
        org.junit.Assert.assertNotNull(servletContextInitializerArray85);
        org.junit.Assert.assertNotNull(deploymentManager86);
        org.junit.Assert.assertNotNull(servletContextInitializerArray89);
    }

    @Test
    public void test06172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06172");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file19);
        org.springframework.core.io.ResourceLoader resourceLoader21 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory23.directBuffers;
        io.undertow.Undertow.Builder builder25 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer28 = undertowEmbeddedServletContainerFactory23.getUndertowEmbeddedServletContainer(builder25, deploymentManager26, 0);
        java.io.File file29 = undertowEmbeddedServletContainerFactory23.getDocumentRoot();
        org.springframework.core.io.ResourceLoader resourceLoader30 = null;
        undertowEmbeddedServletContainerFactory23.resourceLoader = resourceLoader30;
        java.lang.ClassLoader classLoader32 = undertowEmbeddedServletContainerFactory23.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet33 = undertowEmbeddedServletContainerFactory23.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet33);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(errorPageSet33);
    }

    @Test
    public void test06173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06173");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        io.undertow.Undertow.Builder builder11 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (byte) 0);
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.lang.ClassLoader classLoader14 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray6);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(classLoader14);
    }

    @Test
    public void test06174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06174");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.close();
        java.lang.String str5 = jarResourcemanager1.jarPath;
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.jarPath = "hi!";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test06175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06175");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.core.io.ResourceLoader resourceLoader2 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.boot.context.embedded.Ssl ssl3 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl3);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        java.net.InetAddress inetAddress7 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader8);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNull(inetAddress7);
    }

    @Test
    public void test06176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06176");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader7;
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory12.directBuffers;
        io.undertow.Undertow.Builder builder14 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager15 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer17 = undertowEmbeddedServletContainerFactory12.getUndertowEmbeddedServletContainer(builder14, deploymentManager15, 0);
        undertowEmbeddedServletContainerFactory12.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader20 = undertowEmbeddedServletContainerFactory12.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = undertowEmbeddedServletContainerFactory12.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray22);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray22);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer25 = undertowEmbeddedServletContainerFactory12.getEmbeddedServletContainer(servletContextInitializerArray22);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray22);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray22);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 10);
        java.io.File file30 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer17);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNotNull(embeddedServletContainer25);
        org.junit.Assert.assertNull(file30);
    }

    @Test
    public void test06177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06177");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray8 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory7.addErrorPages(errorPageArray8);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray8);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 100;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.net.InetAddress inetAddress14 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress14);
        boolean boolean16 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int23 = undertowEmbeddedServletContainerFactory22.buffersPerRegion;
        java.lang.String str24 = undertowEmbeddedServletContainerFactory22.getListenAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager25 = undertowEmbeddedServletContainerFactory22.getDocumentRootResourceManager();
        java.io.File file26 = undertowEmbeddedServletContainerFactory22.getDocumentRoot();
        org.springframework.core.io.ResourceLoader resourceLoader27 = undertowEmbeddedServletContainerFactory22.resourceLoader;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = undertowEmbeddedServletContainerFactory22.getMimeMappings();
        java.net.InetAddress inetAddress29 = undertowEmbeddedServletContainerFactory22.getAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory22.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList30;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(errorPageArray8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "0.0.0.0" + "'", str24, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(resourceLoader27);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNull(inetAddress29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
    }

    @Test
    public void test06178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06178");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        int int14 = undertowEmbeddedServletContainerFactory1.getPort();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList15 = null;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList15;
        java.net.InetAddress inetAddress17 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList18 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.lang.String str19 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertNull(inetAddress17);
        org.junit.Assert.assertNull(undertowDeploymentInfoCustomizerList18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test06179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06179");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        boolean boolean8 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory10.directBuffers;
        io.undertow.Undertow.Builder builder12 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager13 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer15 = undertowEmbeddedServletContainerFactory10.getUndertowEmbeddedServletContainer(builder12, deploymentManager13, 0);
        undertowEmbeddedServletContainerFactory10.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader18 = undertowEmbeddedServletContainerFactory10.getServletClassLoader();
        undertowEmbeddedServletContainerFactory10.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory10.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean25 = undertowEmbeddedServletContainerFactory24.directBuffers;
        undertowEmbeddedServletContainerFactory24.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader29 = undertowEmbeddedServletContainerFactory24.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection30 = undertowEmbeddedServletContainerFactory24.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory24.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory24.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        java.lang.String str35 = undertowEmbeddedServletContainerFactory24.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList36 = undertowEmbeddedServletContainerFactory24.builderCustomizers;
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList36;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList36;
        int int39 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        boolean boolean44 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection49 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer15);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNull(resourceLoader29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "0.0.0.0" + "'", str35, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection49);
    }

    @Test
    public void test06180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06180");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory23.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory23.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo37 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo37);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        java.lang.Integer int41 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        boolean boolean42 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test06181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06181");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager1.jarPath;
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "";
        boolean boolean9 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean10 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.String str11 = jarResourcemanager1.jarPath;
        boolean boolean12 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource15 = jarResourcemanager1.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06182");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList5, undertowBuilderCustomizerArray4);
        undertowEmbeddedServletContainerFactory2.builderCustomizers = undertowBuilderCustomizerList5;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection8 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory2.setContextPath("");
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.Ssl ssl13 = undertowEmbeddedServletContainerFactory2.getSsl();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0.0.0.0" + "'", str3, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection8);
        org.junit.Assert.assertNull(ssl13);
    }

    @Test
    public void test06183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06183");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(1800);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection18 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 0);
        int int21 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test06184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06184");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory9.addErrorPages(errorPageArray10);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray10);
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        io.undertow.Undertow.Builder builder17 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer20 = undertowEmbeddedServletContainerFactory15.getUndertowEmbeddedServletContainer(builder17, deploymentManager18, 0);
        undertowEmbeddedServletContainerFactory15.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader23 = undertowEmbeddedServletContainerFactory15.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer28 = undertowEmbeddedServletContainerFactory15.getEmbeddedServletContainer(servletContextInitializerArray25);
        io.undertow.servlet.api.DeploymentManager deploymentManager29 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray25);
        java.lang.Integer int30 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl34 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl34);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer20);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNotNull(embeddedServletContainer28);
        org.junit.Assert.assertNotNull(deploymentManager29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(int31);
    }

    @Test
    public void test06185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06185");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl8);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        java.lang.ClassLoader classLoader14 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        io.undertow.Undertow.Builder builder16 = undertowEmbeddedServletContainerFactory1.createBuilder(1800);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test06186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06186");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray8 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer7 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray8);
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.workerThreads;
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray8);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test06187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06187");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 1);
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory1.workerThreads;
        undertowEmbeddedServletContainerFactory1.setPort((int) 'a');
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl5);
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.core.io.ResourceLoader resourceLoader12 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader12;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray16 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test06188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06188");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader14;
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList18 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean21 = undertowEmbeddedServletContainerFactory20.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray22);
        undertowEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer26 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap25);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer28 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap27);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray29 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer26, initParameterConfiguringServletContextInitializer28 };
        undertowEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray29);
        undertowEmbeddedServletContainerFactory20.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer33 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray34 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer33 };
        undertowEmbeddedServletContainerFactory20.addBuilderCustomizers(undertowBuilderCustomizerArray34);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory20.addBuilderCustomizers(undertowBuilderCustomizerArray36);
        undertowEmbeddedServletContainerFactory20.bufferSize = 1;
        java.net.InetAddress inetAddress40 = undertowEmbeddedServletContainerFactory20.getAddress();
        int int41 = undertowEmbeddedServletContainerFactory20.getPort();
        undertowEmbeddedServletContainerFactory20.setPort(10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList44 = undertowEmbeddedServletContainerFactory20.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList44;
        undertowEmbeddedServletContainerFactory1.ioThreads = 1800;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean52 = undertowEmbeddedServletContainerFactory51.directBuffers;
        undertowEmbeddedServletContainerFactory51.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = undertowEmbeddedServletContainerFactory51.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader56 = undertowEmbeddedServletContainerFactory51.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean59 = undertowEmbeddedServletContainerFactory58.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray60 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray60);
        undertowEmbeddedServletContainerFactory58.addInitializers(servletContextInitializerArray60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer64 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap63);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer66 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap65);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray67 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer64, initParameterConfiguringServletContextInitializer66 };
        undertowEmbeddedServletContainerFactory58.addInitializers(servletContextInitializerArray67);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings69 = undertowEmbeddedServletContainerFactory58.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean72 = undertowEmbeddedServletContainerFactory71.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray73 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray73);
        undertowEmbeddedServletContainerFactory71.addInitializers(servletContextInitializerArray73);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer77 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap76);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer79 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap78);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray80 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer77, initParameterConfiguringServletContextInitializer79 };
        undertowEmbeddedServletContainerFactory71.addInitializers(servletContextInitializerArray80);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray80);
        undertowEmbeddedServletContainerFactory58.addInitializers(servletContextInitializerArray80);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer84 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray80);
        undertowEmbeddedServletContainerFactory51.addInitializers(servletContextInitializerArray80);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer86 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray80);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer87 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray80);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray88 = initializer87.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray89 = initializer87.initializers;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.DeploymentManager deploymentManager90 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: java.lang.NullPointerException");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNotNull(servletContextInitializerArray29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray34);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray36);
        org.junit.Assert.assertNull(inetAddress40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList44);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertNull(resourceLoader56);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(servletContextInitializerArray60);
        org.junit.Assert.assertNotNull(servletContextInitializerArray67);
        org.junit.Assert.assertNotNull(mimeMappings69);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNotNull(servletContextInitializerArray73);
        org.junit.Assert.assertNotNull(servletContextInitializerArray80);
        org.junit.Assert.assertNotNull(servletContextInitializerArray88);
        org.junit.Assert.assertNotNull(servletContextInitializerArray89);
    }

    @Test
    public void test06189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06189");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.lang.String str3 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager4 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.net.InetAddress inetAddress5 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress5);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0.0.0.0" + "'", str3, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager4);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test06190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06190");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray16 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory15.addErrorPages(errorPageArray16);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray16);
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        java.lang.Integer int22 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertNotNull(errorPageArray16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int22);
    }

    @Test
    public void test06191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06191");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory12.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray14);
        undertowEmbeddedServletContainerFactory12.addInitializers(servletContextInitializerArray14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer18 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap17);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer20 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap19);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer18, initParameterConfiguringServletContextInitializer20 };
        undertowEmbeddedServletContainerFactory12.addInitializers(servletContextInitializerArray21);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection24 = undertowEmbeddedServletContainerFactory12.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray27 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory26.addErrorPages(errorPageArray27);
        undertowEmbeddedServletContainerFactory12.addErrorPages(errorPageArray27);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray27);
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory1.workerThreads;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection32 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        io.undertow.Undertow.Builder builder34 = undertowEmbeddedServletContainerFactory1.createBuilder((int) '4');
        undertowEmbeddedServletContainerFactory1.bufferSize = (-1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection24);
        org.junit.Assert.assertNotNull(errorPageArray27);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection32);
        org.junit.Assert.assertNotNull(builder34);
    }

    @Test
    public void test06192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06192");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        io.undertow.server.handlers.resource.ResourceManager resourceManager15 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory17.directBuffers;
        io.undertow.Undertow.Builder builder19 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer22 = undertowEmbeddedServletContainerFactory17.getUndertowEmbeddedServletContainer(builder19, deploymentManager20, 0);
        org.springframework.core.io.ResourceLoader resourceLoader23 = null;
        undertowEmbeddedServletContainerFactory17.resourceLoader = resourceLoader23;
        org.springframework.boot.context.embedded.Ssl ssl25 = null;
        undertowEmbeddedServletContainerFactory17.setSsl(ssl25);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo27 = null;
        undertowEmbeddedServletContainerFactory17.configureErrorPages(deploymentInfo27);
        undertowEmbeddedServletContainerFactory17.setBufferSize((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = undertowEmbeddedServletContainerFactory17.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet32);
        int int34 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.net.InetAddress inetAddress37 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resourceManager15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer22);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(errorPageSet32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertNull(inetAddress37);
    }

    @Test
    public void test06193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06193");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList5, undertowBuilderCustomizerArray4);
        undertowEmbeddedServletContainerFactory2.builderCustomizers = undertowBuilderCustomizerList5;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection8 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        boolean boolean9 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory2.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory13.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray15 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray15);
        undertowEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer19 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap18);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer19, initParameterConfiguringServletContextInitializer21 };
        undertowEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray22);
        undertowEmbeddedServletContainerFactory13.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer26 };
        undertowEmbeddedServletContainerFactory13.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray29 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory13.addBuilderCustomizers(undertowBuilderCustomizerArray29);
        java.lang.String str31 = undertowEmbeddedServletContainerFactory13.getListenAddress();
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory13.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int35 = undertowEmbeddedServletContainerFactory34.buffersPerRegion;
        java.lang.String str36 = undertowEmbeddedServletContainerFactory34.getListenAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager37 = undertowEmbeddedServletContainerFactory34.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = undertowEmbeddedServletContainerFactory34.getMimeMappings();
        undertowEmbeddedServletContainerFactory13.setMimeMappings(mimeMappings38);
        undertowEmbeddedServletContainerFactory13.setIoThreads((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean44 = undertowEmbeddedServletContainerFactory43.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray45 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray45);
        undertowEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray45);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer49 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap48);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer51 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap50);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray52 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer49, initParameterConfiguringServletContextInitializer51 };
        undertowEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray52);
        undertowEmbeddedServletContainerFactory43.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer56 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray57 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer56 };
        undertowEmbeddedServletContainerFactory43.addBuilderCustomizers(undertowBuilderCustomizerArray57);
        java.lang.Integer int59 = undertowEmbeddedServletContainerFactory43.ioThreads;
        io.undertow.Undertow.Builder builder60 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager61 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer63 = undertowEmbeddedServletContainerFactory43.getUndertowEmbeddedServletContainer(builder60, deploymentManager61, 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean66 = undertowEmbeddedServletContainerFactory65.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray67 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray67);
        undertowEmbeddedServletContainerFactory65.addInitializers(servletContextInitializerArray67);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer71 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap70);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer73 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap72);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray74 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer71, initParameterConfiguringServletContextInitializer73 };
        undertowEmbeddedServletContainerFactory65.addInitializers(servletContextInitializerArray74);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings76 = undertowEmbeddedServletContainerFactory65.getMimeMappings();
        undertowEmbeddedServletContainerFactory43.setMimeMappings(mimeMappings76);
        undertowEmbeddedServletContainerFactory13.setMimeMappings(mimeMappings76);
        undertowEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings76);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray80 = undertowEmbeddedServletContainerFactory2.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0.0.0.0" + "'", str3, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "0.0.0.0" + "'", str31, "0.0.0.0");
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "0.0.0.0" + "'", str36, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager37);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(servletContextInitializerArray45);
        org.junit.Assert.assertNotNull(servletContextInitializerArray52);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray57);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer63);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNotNull(servletContextInitializerArray67);
        org.junit.Assert.assertNotNull(servletContextInitializerArray74);
        org.junit.Assert.assertNotNull(mimeMappings76);
    }

    @Test
    public void test06194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06194");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        java.lang.String str5 = jarResourcemanager1.jarPath;
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        java.lang.String str8 = jarResourcemanager1.jarPath;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource10 = jarResourcemanager1.getResource("");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0.0.0.0" + "'", str5, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
    }

    @Test
    public void test06195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06195");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean10 = undertowEmbeddedServletContainerFactory9.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray11 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray11);
        undertowEmbeddedServletContainerFactory9.addInitializers(servletContextInitializerArray11);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory9.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory9.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray23 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer22 };
        undertowEmbeddedServletContainerFactory9.addBuilderCustomizers(undertowBuilderCustomizerArray23);
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory9.ioThreads;
        io.undertow.Undertow.Builder builder26 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory9.getUndertowEmbeddedServletContainer(builder26, deploymentManager27, 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean32 = undertowEmbeddedServletContainerFactory31.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray33 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray33);
        undertowEmbeddedServletContainerFactory31.addInitializers(servletContextInitializerArray33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer37 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap36);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer39 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap38);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray40 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer37, initParameterConfiguringServletContextInitializer39 };
        undertowEmbeddedServletContainerFactory31.addInitializers(servletContextInitializerArray40);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = undertowEmbeddedServletContainerFactory31.getMimeMappings();
        undertowEmbeddedServletContainerFactory9.setMimeMappings(mimeMappings42);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList44 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList44;
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(servletContextInitializerArray11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray23);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(servletContextInitializerArray33);
        org.junit.Assert.assertNotNull(servletContextInitializerArray40);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList44);
    }

    @Test
    public void test06196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06196");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.lang.Boolean boolean3 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory5.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray7 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray7);
        undertowEmbeddedServletContainerFactory5.addInitializers(servletContextInitializerArray7);
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory5.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory5.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        undertowEmbeddedServletContainerFactory15.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader20 = undertowEmbeddedServletContainerFactory15.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection21 = undertowEmbeddedServletContainerFactory15.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory15.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray24 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory15.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray24);
        boolean boolean26 = undertowEmbeddedServletContainerFactory15.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean29 = undertowEmbeddedServletContainerFactory28.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray30 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray30);
        undertowEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray30);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer34 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap33);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer36 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap35);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray37 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer34, initParameterConfiguringServletContextInitializer36 };
        undertowEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray37);
        undertowEmbeddedServletContainerFactory28.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer41 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray42 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer41 };
        undertowEmbeddedServletContainerFactory28.addBuilderCustomizers(undertowBuilderCustomizerArray42);
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray42);
        undertowEmbeddedServletContainerFactory5.addBuilderCustomizers(undertowBuilderCustomizerArray42);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray42);
        java.io.File file47 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.lang.Integer int48 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.net.InetAddress inetAddress49 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader50 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader50;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList52 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(resourceLoader20);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection21);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(servletContextInitializerArray30);
        org.junit.Assert.assertNotNull(servletContextInitializerArray37);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray42);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(inetAddress49);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList52);
    }

    @Test
    public void test06197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06197");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        java.net.InetAddress inetAddress14 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader15 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList16 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean19 = undertowEmbeddedServletContainerFactory18.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray20);
        undertowEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray20);
        boolean boolean23 = undertowEmbeddedServletContainerFactory18.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList24 = undertowEmbeddedServletContainerFactory18.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Ssl ssl25 = null;
        undertowEmbeddedServletContainerFactory18.setSsl(ssl25);
        undertowEmbeddedServletContainerFactory18.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory18.bufferSize = 1;
        java.lang.ClassLoader classLoader31 = undertowEmbeddedServletContainerFactory18.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean34 = undertowEmbeddedServletContainerFactory33.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray35);
        undertowEmbeddedServletContainerFactory33.addInitializers(servletContextInitializerArray35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer39 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer41 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap40);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray42 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer39, initParameterConfiguringServletContextInitializer41 };
        undertowEmbeddedServletContainerFactory33.addInitializers(servletContextInitializerArray42);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = undertowEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection45 = undertowEmbeddedServletContainerFactory33.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray48 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory47.addErrorPages(errorPageArray48);
        undertowEmbeddedServletContainerFactory33.addErrorPages(errorPageArray48);
        undertowEmbeddedServletContainerFactory18.addErrorPages(errorPageArray48);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray48);
        java.io.File file53 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertNull(resourceLoader15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList24);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertNotNull(servletContextInitializerArray42);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection45);
        org.junit.Assert.assertNotNull(errorPageArray48);
        org.junit.Assert.assertNull(file53);
    }

    @Test
    public void test06198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06198");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06199");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.Ssl ssl14 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl14);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory17.directBuffers;
        io.undertow.Undertow.Builder builder19 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer22 = undertowEmbeddedServletContainerFactory17.getUndertowEmbeddedServletContainer(builder19, deploymentManager20, 0);
        undertowEmbeddedServletContainerFactory17.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader25 = undertowEmbeddedServletContainerFactory17.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl26 = undertowEmbeddedServletContainerFactory17.getSsl();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory17.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray30 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory29.addErrorPages(errorPageArray30);
        undertowEmbeddedServletContainerFactory17.addErrorPages(errorPageArray30);
        org.springframework.boot.context.embedded.Ssl ssl33 = undertowEmbeddedServletContainerFactory17.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean36 = undertowEmbeddedServletContainerFactory35.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader37 = null;
        undertowEmbeddedServletContainerFactory35.resourceLoader = resourceLoader37;
        io.undertow.server.handlers.resource.ResourceManager resourceManager39 = undertowEmbeddedServletContainerFactory35.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory35.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.server.handlers.resource.ResourceManager resourceManager42 = undertowEmbeddedServletContainerFactory35.getDocumentRootResourceManager();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList43 = undertowEmbeddedServletContainerFactory35.builderCustomizers;
        java.lang.Boolean boolean44 = undertowEmbeddedServletContainerFactory35.directBuffers;
        java.lang.Integer int45 = undertowEmbeddedServletContainerFactory35.buffersPerRegion;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet46 = undertowEmbeddedServletContainerFactory35.getErrorPages();
        undertowEmbeddedServletContainerFactory17.setErrorPages(errorPageSet46);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet46);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) (-1));
        org.springframework.core.io.ResourceLoader resourceLoader51 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection13);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer22);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNull(ssl26);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertNotNull(errorPageArray30);
        org.junit.Assert.assertNull(ssl33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(resourceManager39);
        org.junit.Assert.assertNotNull(resourceManager42);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList43);
        org.junit.Assert.assertEquals("'" + boolean44 + "' != '" + false + "'", boolean44, false);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(errorPageSet46);
        org.junit.Assert.assertNull(resourceLoader51);
    }

    @Test
    public void test06200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06200");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        java.lang.String str19 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory1.bufferSize;
        java.lang.Integer int21 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.springframework.boot.context.embedded.Ssl ssl22 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl22);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean26 = undertowEmbeddedServletContainerFactory25.directBuffers;
        undertowEmbeddedServletContainerFactory25.setWorkerThreads((java.lang.Integer) 100);
        boolean boolean29 = undertowEmbeddedServletContainerFactory25.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory25.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList30;
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory1.bufferSize;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList33 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        int int34 = undertowEmbeddedServletContainerFactory1.getPort();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray35 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "0.0.0.0" + "'", str19, "0.0.0.0");
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
    }

    @Test
    public void test06201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06201");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        int int19 = undertowEmbeddedServletContainerFactory1.getPort();
        boolean boolean20 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.core.io.ResourceLoader resourceLoader21 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader21);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 32;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06202");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "";
        boolean boolean4 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str7 = jarResourcemanager1.jarPath;
        boolean boolean8 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "";
        boolean boolean11 = jarResourcemanager1.isResourceChangeListenerSupported();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource13 = jarResourcemanager1.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06203");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(0);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean8 = undertowEmbeddedServletContainerFactory7.directBuffers;
        undertowEmbeddedServletContainerFactory7.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = undertowEmbeddedServletContainerFactory7.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection13 = undertowEmbeddedServletContainerFactory7.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory7.buffersPerRegion = 0;
        io.undertow.server.handlers.resource.ResourceManager resourceManager16 = undertowEmbeddedServletContainerFactory7.getDocumentRootResourceManager();
        org.springframework.core.io.ResourceLoader resourceLoader17 = undertowEmbeddedServletContainerFactory7.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory19.buffersPerRegion;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo21 = null;
        undertowEmbeddedServletContainerFactory19.configureErrorPages(deploymentInfo21);
        int int23 = undertowEmbeddedServletContainerFactory19.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean26 = undertowEmbeddedServletContainerFactory25.directBuffers;
        undertowEmbeddedServletContainerFactory25.setSessionTimeout(0);
        boolean boolean29 = undertowEmbeddedServletContainerFactory25.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Ssl ssl30 = undertowEmbeddedServletContainerFactory25.getSsl();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet31 = undertowEmbeddedServletContainerFactory25.getErrorPages();
        undertowEmbeddedServletContainerFactory19.setErrorPages(errorPageSet31);
        undertowEmbeddedServletContainerFactory7.setErrorPages(errorPageSet31);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet31);
        java.lang.String str35 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection13);
        org.junit.Assert.assertNotNull(resourceManager16);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(ssl30);
        org.junit.Assert.assertNotNull(errorPageSet31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test06204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06204");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo21 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo21);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection23 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader24 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.lang.Boolean boolean25 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.io.File file26 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        boolean boolean27 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean31 = undertowEmbeddedServletContainerFactory30.directBuffers;
        io.undertow.Undertow.Builder builder32 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager33 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer35 = undertowEmbeddedServletContainerFactory30.getUndertowEmbeddedServletContainer(builder32, deploymentManager33, 0);
        undertowEmbeddedServletContainerFactory30.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory30.workerThreads = (-1);
        java.lang.Boolean boolean40 = undertowEmbeddedServletContainerFactory30.directBuffers;
        boolean boolean41 = undertowEmbeddedServletContainerFactory30.isRegisterJspServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection42 = undertowEmbeddedServletContainerFactory30.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader43 = null;
        undertowEmbeddedServletContainerFactory30.resourceLoader = resourceLoader43;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean47 = undertowEmbeddedServletContainerFactory46.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray48 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray48);
        undertowEmbeddedServletContainerFactory46.addInitializers(servletContextInitializerArray48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer52 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap51);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer54 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap53);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray55 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer52, initParameterConfiguringServletContextInitializer54 };
        undertowEmbeddedServletContainerFactory46.addInitializers(servletContextInitializerArray55);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = undertowEmbeddedServletContainerFactory46.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection58 = undertowEmbeddedServletContainerFactory46.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray61 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory60.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory46.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory30.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory30.directBuffers = false;
        io.undertow.server.handlers.resource.ResourceManager resourceManager67 = undertowEmbeddedServletContainerFactory30.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.Ssl ssl68 = undertowEmbeddedServletContainerFactory30.getSsl();
        java.lang.Integer int69 = undertowEmbeddedServletContainerFactory30.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean72 = undertowEmbeddedServletContainerFactory71.directBuffers;
        io.undertow.Undertow.Builder builder73 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager74 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer76 = undertowEmbeddedServletContainerFactory71.getUndertowEmbeddedServletContainer(builder73, deploymentManager74, 0);
        undertowEmbeddedServletContainerFactory71.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader79 = undertowEmbeddedServletContainerFactory71.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet80 = undertowEmbeddedServletContainerFactory71.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray81 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray81);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer83 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray81);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer84 = undertowEmbeddedServletContainerFactory71.getEmbeddedServletContainer(servletContextInitializerArray81);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer85 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray81);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer86 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray81);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer87 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray81);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer88 = undertowEmbeddedServletContainerFactory30.getEmbeddedServletContainer(servletContextInitializerArray81);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.registerServletContainerInitializerToDriveServletContextInitializers(deploymentInfo28, servletContextInitializerArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection23);
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer35);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection42);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(servletContextInitializerArray48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray55);
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection58);
        org.junit.Assert.assertNotNull(errorPageArray61);
        org.junit.Assert.assertNotNull(resourceManager67);
        org.junit.Assert.assertNull(ssl68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer76);
        org.junit.Assert.assertNotNull(classLoader79);
        org.junit.Assert.assertNotNull(errorPageSet80);
        org.junit.Assert.assertNotNull(servletContextInitializerArray81);
        org.junit.Assert.assertNotNull(embeddedServletContainer84);
        org.junit.Assert.assertNotNull(embeddedServletContainer88);
    }

    @Test
    public void test06205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06205");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray5 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet6 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet6, errorPageArray5);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet6);
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.io.File file10 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory13.directBuffers;
        undertowEmbeddedServletContainerFactory13.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader18 = undertowEmbeddedServletContainerFactory13.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection19 = undertowEmbeddedServletContainerFactory13.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory13.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        java.lang.String str24 = undertowEmbeddedServletContainerFactory13.getListenAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory13.setDocumentRoot(file26);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean30 = undertowEmbeddedServletContainerFactory29.directBuffers;
        io.undertow.Undertow.Builder builder31 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager32 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer34 = undertowEmbeddedServletContainerFactory29.getUndertowEmbeddedServletContainer(builder31, deploymentManager32, 0);
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory29.setDocumentRoot(file35);
        io.undertow.Undertow.Builder builder38 = undertowEmbeddedServletContainerFactory29.createBuilder(1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean41 = undertowEmbeddedServletContainerFactory40.directBuffers;
        io.undertow.Undertow.Builder builder42 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager43 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer45 = undertowEmbeddedServletContainerFactory40.getUndertowEmbeddedServletContainer(builder42, deploymentManager43, 0);
        undertowEmbeddedServletContainerFactory40.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory40.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory40.directBuffers = true;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList52 = undertowEmbeddedServletContainerFactory40.builderCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader53 = undertowEmbeddedServletContainerFactory40.resourceLoader;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray54 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray54);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray56 = initializer55.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray56);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray56);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray56);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray60 = initializer59.initializers;
        io.undertow.servlet.api.DeploymentManager deploymentManager61 = undertowEmbeddedServletContainerFactory40.createDeploymentManager(servletContextInitializerArray60);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer63 = undertowEmbeddedServletContainerFactory13.getUndertowEmbeddedServletContainer(builder38, deploymentManager61, (int) 'a');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) '#');
        org.springframework.boot.context.embedded.MimeMappings mimeMappings67 = undertowEmbeddedServletContainerFactory66.getMimeMappings();
        undertowEmbeddedServletContainerFactory13.setMimeMappings(mimeMappings67);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings67);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(errorPageArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNull(resourceLoader18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "0.0.0.0" + "'", str24, "0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer34);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer45);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList52);
        org.junit.Assert.assertNull(resourceLoader53);
        org.junit.Assert.assertNotNull(servletContextInitializerArray54);
        org.junit.Assert.assertNotNull(servletContextInitializerArray56);
        org.junit.Assert.assertNotNull(servletContextInitializerArray60);
        org.junit.Assert.assertNotNull(deploymentManager61);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer63);
        org.junit.Assert.assertNotNull(mimeMappings67);
    }

    @Test
    public void test06206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06206");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.jarPath = "0.0.0.0";
        boolean boolean8 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.removeResourceChangeListener(resourceChangeListener10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test06207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06207");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.jarPath = "hi!";
        java.lang.String str8 = jarResourcemanager1.jarPath;
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test06208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06208");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet4 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file5);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean9 = undertowEmbeddedServletContainerFactory8.directBuffers;
        undertowEmbeddedServletContainerFactory8.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader13 = undertowEmbeddedServletContainerFactory8.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection14 = undertowEmbeddedServletContainerFactory8.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory8.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray17);
        boolean boolean19 = undertowEmbeddedServletContainerFactory8.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean22 = undertowEmbeddedServletContainerFactory21.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray23);
        undertowEmbeddedServletContainerFactory21.addInitializers(servletContextInitializerArray23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer27 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap26);
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer29 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap28);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray30 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer27, initParameterConfiguringServletContextInitializer29 };
        undertowEmbeddedServletContainerFactory21.addInitializers(servletContextInitializerArray30);
        undertowEmbeddedServletContainerFactory21.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray35 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer34 };
        undertowEmbeddedServletContainerFactory21.addBuilderCustomizers(undertowBuilderCustomizerArray35);
        undertowEmbeddedServletContainerFactory8.addBuilderCustomizers(undertowBuilderCustomizerArray35);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray35);
        org.springframework.core.io.ResourceLoader resourceLoader39 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader39);
        org.springframework.boot.context.embedded.Ssl ssl41 = null;
        io.undertow.Undertow.Builder builder43 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl41, 0, builder43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(errorPageSet4);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection14);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(servletContextInitializerArray30);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray35);
    }

    @Test
    public void test06209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06209");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        boolean boolean20 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory24.buffersPerRegion;
        undertowEmbeddedServletContainerFactory24.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory24.setSessionTimeout((int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        undertowEmbeddedServletContainerFactory31.setSessionTimeout((int) '4');
        undertowEmbeddedServletContainerFactory31.setJspServletClassName("0.0.0.0");
        java.io.File file36 = null;
        undertowEmbeddedServletContainerFactory31.setDocumentRoot(file36);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = undertowEmbeddedServletContainerFactory31.getMimeMappings();
        undertowEmbeddedServletContainerFactory24.setMimeMappings(mimeMappings38);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings38);
        java.lang.Integer int41 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.net.InetAddress inetAddress42 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress42);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNull(int41);
    }

    @Test
    public void test06210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06210");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager1.jarPath;
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test06211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06211");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection19 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection19);
    }

    @Test
    public void test06212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06212");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray8 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer7 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray8);
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.workerThreads;
        java.io.File file11 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray8);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test06213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06213");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean9 = undertowEmbeddedServletContainerFactory8.directBuffers;
        undertowEmbeddedServletContainerFactory8.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader13 = undertowEmbeddedServletContainerFactory8.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection14 = undertowEmbeddedServletContainerFactory8.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory8.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray17);
        java.lang.String str19 = undertowEmbeddedServletContainerFactory8.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean22 = undertowEmbeddedServletContainerFactory21.directBuffers;
        undertowEmbeddedServletContainerFactory21.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray25 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet26, errorPageArray25);
        undertowEmbeddedServletContainerFactory21.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet26);
        undertowEmbeddedServletContainerFactory8.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet26);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet26);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean37 = undertowEmbeddedServletContainerFactory36.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray38 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray38);
        undertowEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray38);
        boolean boolean41 = undertowEmbeddedServletContainerFactory36.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList42 = undertowEmbeddedServletContainerFactory36.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Ssl ssl43 = null;
        undertowEmbeddedServletContainerFactory36.setSsl(ssl43);
        undertowEmbeddedServletContainerFactory36.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory36.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean52 = undertowEmbeddedServletContainerFactory51.directBuffers;
        io.undertow.Undertow.Builder builder53 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager54 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer56 = undertowEmbeddedServletContainerFactory51.getUndertowEmbeddedServletContainer(builder53, deploymentManager54, 0);
        undertowEmbeddedServletContainerFactory51.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory51.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean63 = undertowEmbeddedServletContainerFactory62.directBuffers;
        undertowEmbeddedServletContainerFactory62.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings66 = undertowEmbeddedServletContainerFactory62.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader67 = undertowEmbeddedServletContainerFactory62.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection68 = undertowEmbeddedServletContainerFactory62.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory62.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray71 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory62.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray71);
        boolean boolean73 = undertowEmbeddedServletContainerFactory62.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean76 = undertowEmbeddedServletContainerFactory75.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray77 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer78 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray77);
        undertowEmbeddedServletContainerFactory75.addInitializers(servletContextInitializerArray77);
        java.util.Map<java.lang.String, java.lang.String> strMap80 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer81 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap80);
        java.util.Map<java.lang.String, java.lang.String> strMap82 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer83 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap82);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray84 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer81, initParameterConfiguringServletContextInitializer83 };
        undertowEmbeddedServletContainerFactory75.addInitializers(servletContextInitializerArray84);
        undertowEmbeddedServletContainerFactory75.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer88 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray89 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer88 };
        undertowEmbeddedServletContainerFactory75.addBuilderCustomizers(undertowBuilderCustomizerArray89);
        undertowEmbeddedServletContainerFactory62.addBuilderCustomizers(undertowBuilderCustomizerArray89);
        undertowEmbeddedServletContainerFactory51.addBuilderCustomizers(undertowBuilderCustomizerArray89);
        undertowEmbeddedServletContainerFactory36.addBuilderCustomizers(undertowBuilderCustomizerArray89);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray89);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings95 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection14);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "0.0.0.0" + "'", str19, "0.0.0.0");
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(errorPageArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(servletContextInitializerArray38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList42);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer56);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(mimeMappings66);
        org.junit.Assert.assertNull(resourceLoader67);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection68);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(boolean76);
        org.junit.Assert.assertNotNull(servletContextInitializerArray77);
        org.junit.Assert.assertNotNull(servletContextInitializerArray84);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray89);
        org.junit.Assert.assertNotNull(mimeMappings95);
    }

    @Test
    public void test06214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06214");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean19 = undertowEmbeddedServletContainerFactory18.directBuffers;
        undertowEmbeddedServletContainerFactory18.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory23.directBuffers;
        undertowEmbeddedServletContainerFactory23.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = undertowEmbeddedServletContainerFactory23.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader28 = undertowEmbeddedServletContainerFactory23.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection29 = undertowEmbeddedServletContainerFactory23.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory23.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory23.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray32);
        boolean boolean34 = undertowEmbeddedServletContainerFactory23.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList35 = undertowEmbeddedServletContainerFactory23.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory18.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList35;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList35;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        java.lang.ClassLoader classLoader42 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 10);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 32);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNull(resourceLoader28);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList35);
        org.junit.Assert.assertNotNull(classLoader42);
    }

    @Test
    public void test06215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06215");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '4');
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file6);
        org.springframework.boot.context.embedded.Ssl ssl8 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader10 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray12 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(ssl8);
        org.junit.Assert.assertNotNull(errorPageSet9);
        org.junit.Assert.assertNull(resourceLoader10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "0.0.0.0" + "'", str11, "0.0.0.0");
    }

    @Test
    public void test06216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06216");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file13);
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader18);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test06217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06217");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 10);
        boolean boolean3 = undertowEmbeddedServletContainerFactory2.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory2.setSessionTimeout((int) ' ');
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory2.resourceLoader = resourceLoader6;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test06218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06218");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        undertowEmbeddedServletContainerFactory15.setSessionTimeout(0);
        boolean boolean19 = undertowEmbeddedServletContainerFactory15.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory15.getSsl();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet21);
        org.springframework.boot.context.embedded.Ssl ssl23 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl23);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertNotNull(errorPageSet21);
    }

    @Test
    public void test06219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06219");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean10 = undertowEmbeddedServletContainerFactory9.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray11 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray11);
        undertowEmbeddedServletContainerFactory9.addInitializers(servletContextInitializerArray11);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory9.addInitializers(servletContextInitializerArray18);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = undertowEmbeddedServletContainerFactory9.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings20);
        io.undertow.Undertow.Builder builder23 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (byte) 10);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(servletContextInitializerArray11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test06220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06220");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        java.net.InetAddress inetAddress13 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray14);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = initializer15.initializers;
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer17 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray16);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean20 = undertowEmbeddedServletContainerFactory19.directBuffers;
        undertowEmbeddedServletContainerFactory19.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader24 = undertowEmbeddedServletContainerFactory19.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection25 = undertowEmbeddedServletContainerFactory19.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory19.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray28);
        java.lang.String str30 = undertowEmbeddedServletContainerFactory19.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean33 = undertowEmbeddedServletContainerFactory32.directBuffers;
        undertowEmbeddedServletContainerFactory32.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray36 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet37, errorPageArray36);
        undertowEmbeddedServletContainerFactory32.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet37);
        undertowEmbeddedServletContainerFactory19.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet37);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet37);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.Ssl ssl44 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        int int47 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(embeddedServletContainer17);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection25);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "0.0.0.0" + "'", str30, "0.0.0.0");
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(errorPageArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(ssl44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
    }

    @Test
    public void test06221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06221");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.Ssl ssl4 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean7 = undertowEmbeddedServletContainerFactory6.directBuffers;
        undertowEmbeddedServletContainerFactory6.setSessionTimeout(0);
        boolean boolean10 = undertowEmbeddedServletContainerFactory6.isRegisterDefaultServlet();
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory6.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory13.directBuffers;
        io.undertow.Undertow.Builder builder15 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer18 = undertowEmbeddedServletContainerFactory13.getUndertowEmbeddedServletContainer(builder15, deploymentManager16, 0);
        undertowEmbeddedServletContainerFactory13.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader21 = undertowEmbeddedServletContainerFactory13.getServletClassLoader();
        java.lang.Integer int22 = undertowEmbeddedServletContainerFactory13.bufferSize;
        undertowEmbeddedServletContainerFactory13.setPort((-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean27 = undertowEmbeddedServletContainerFactory26.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray28 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray28);
        undertowEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer32 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap31);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer34 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap33);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer32, initParameterConfiguringServletContextInitializer34 };
        undertowEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray35);
        undertowEmbeddedServletContainerFactory26.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer39 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer39 };
        undertowEmbeddedServletContainerFactory26.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        java.lang.Integer int42 = undertowEmbeddedServletContainerFactory26.ioThreads;
        java.lang.String str43 = undertowEmbeddedServletContainerFactory26.getContextPath();
        undertowEmbeddedServletContainerFactory26.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory48.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder52 = undertowEmbeddedServletContainerFactory48.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager53 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer55 = undertowEmbeddedServletContainerFactory26.getUndertowEmbeddedServletContainer(builder52, deploymentManager53, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory26.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory26.bufferSize = 1;
        undertowEmbeddedServletContainerFactory26.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean64 = undertowEmbeddedServletContainerFactory63.directBuffers;
        undertowEmbeddedServletContainerFactory63.setSessionTimeout(0);
        boolean boolean67 = undertowEmbeddedServletContainerFactory63.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean70 = undertowEmbeddedServletContainerFactory69.directBuffers;
        undertowEmbeddedServletContainerFactory69.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings73 = undertowEmbeddedServletContainerFactory69.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader74 = undertowEmbeddedServletContainerFactory69.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection75 = undertowEmbeddedServletContainerFactory69.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory69.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray78 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory69.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray78);
        boolean boolean80 = undertowEmbeddedServletContainerFactory69.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList81 = undertowEmbeddedServletContainerFactory69.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet82 = undertowEmbeddedServletContainerFactory69.getErrorPages();
        undertowEmbeddedServletContainerFactory63.setErrorPages(errorPageSet82);
        undertowEmbeddedServletContainerFactory26.setErrorPages(errorPageSet82);
        undertowEmbeddedServletContainerFactory13.setErrorPages(errorPageSet82);
        undertowEmbeddedServletContainerFactory6.setErrorPages(errorPageSet82);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet82);
        org.springframework.boot.context.embedded.Ssl ssl88 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.io.File file89 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file89);
        org.junit.Assert.assertNull(ssl4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer18);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer55);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(mimeMappings73);
        org.junit.Assert.assertNull(resourceLoader74);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection75);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList81);
        org.junit.Assert.assertNotNull(errorPageSet82);
        org.junit.Assert.assertNull(ssl88);
    }

    @Test
    public void test06222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06222");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        jarResourcemanager0.close();
        java.lang.String str2 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "0.0.0.0";
        java.lang.String str5 = jarResourcemanager0.jarPath;
        jarResourcemanager0.close();
        jarResourcemanager0.close();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0.0.0.0" + "'", str5, "0.0.0.0");
    }

    @Test
    public void test06223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06223");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        int int6 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean9 = undertowEmbeddedServletContainerFactory8.directBuffers;
        io.undertow.Undertow.Builder builder10 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager11 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer13 = undertowEmbeddedServletContainerFactory8.getUndertowEmbeddedServletContainer(builder10, deploymentManager11, 0);
        undertowEmbeddedServletContainerFactory8.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader16 = undertowEmbeddedServletContainerFactory8.getServletClassLoader();
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory8.bufferSize;
        undertowEmbeddedServletContainerFactory8.setPort((-1));
        java.net.InetAddress inetAddress20 = undertowEmbeddedServletContainerFactory8.getAddress();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray21);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = initializer22.initializers;
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer24 = undertowEmbeddedServletContainerFactory8.getEmbeddedServletContainer(servletContextInitializerArray23);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer25 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray23);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo26 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo26);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer13);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(inetAddress20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(embeddedServletContainer24);
        org.junit.Assert.assertNotNull(embeddedServletContainer25);
    }

    @Test
    public void test06224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06224");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory23.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory23.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo33 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo33);
        java.lang.ClassLoader classLoader35 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean38 = undertowEmbeddedServletContainerFactory37.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray39 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray39);
        undertowEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer43 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap42);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer45 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap44);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer43, initParameterConfiguringServletContextInitializer45 };
        undertowEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray46);
        undertowEmbeddedServletContainerFactory37.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray51 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer50 };
        undertowEmbeddedServletContainerFactory37.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        java.lang.Integer int53 = undertowEmbeddedServletContainerFactory37.ioThreads;
        java.lang.String str54 = undertowEmbeddedServletContainerFactory37.getContextPath();
        undertowEmbeddedServletContainerFactory37.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory59.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder63 = undertowEmbeddedServletContainerFactory59.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager64 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer66 = undertowEmbeddedServletContainerFactory37.getUndertowEmbeddedServletContainer(builder63, deploymentManager64, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory37.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory37.bufferSize = 1;
        undertowEmbeddedServletContainerFactory37.setRegisterDefaultServlet(false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo73 = null;
        undertowEmbeddedServletContainerFactory37.configureErrorPages(deploymentInfo73);
        undertowEmbeddedServletContainerFactory37.setBufferSize((java.lang.Integer) 1800);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList77 = undertowEmbeddedServletContainerFactory37.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList77;
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        java.lang.String str81 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(servletContextInitializerArray39);
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray51);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer66);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList77);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "0.0.0.0" + "'", str81, "0.0.0.0");
    }

    @Test
    public void test06225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06225");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        java.net.InetAddress inetAddress13 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray14);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = initializer15.initializers;
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer17 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray16);
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file18);
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.springframework.boot.context.embedded.Ssl ssl21 = undertowEmbeddedServletContainerFactory1.getSsl();
        io.undertow.server.handlers.resource.ResourceManager resourceManager22 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1800);
        java.lang.String str25 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(embeddedServletContainer17);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(ssl21);
        org.junit.Assert.assertNotNull(resourceManager22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0.0.0.0" + "'", str25, "0.0.0.0");
    }

    @Test
    public void test06226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06226");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.lang.String str3 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager4 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList5 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo8 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo8);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0.0.0.0" + "'", str3, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager4);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList5);
    }

    @Test
    public void test06227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06227");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 1);
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 10);
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory19.workerThreads;
        undertowEmbeddedServletContainerFactory19.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean25 = undertowEmbeddedServletContainerFactory24.directBuffers;
        io.undertow.Undertow.Builder builder26 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory24.getUndertowEmbeddedServletContainer(builder26, deploymentManager27, 0);
        undertowEmbeddedServletContainerFactory24.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader32 = undertowEmbeddedServletContainerFactory24.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl33 = null;
        undertowEmbeddedServletContainerFactory24.setSsl(ssl33);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean37 = undertowEmbeddedServletContainerFactory36.directBuffers;
        undertowEmbeddedServletContainerFactory36.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader41 = undertowEmbeddedServletContainerFactory36.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection42 = undertowEmbeddedServletContainerFactory36.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory36.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray45 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory36.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray45);
        undertowEmbeddedServletContainerFactory24.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray45);
        java.lang.Integer int48 = undertowEmbeddedServletContainerFactory24.workerThreads;
        boolean boolean49 = undertowEmbeddedServletContainerFactory24.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean52 = undertowEmbeddedServletContainerFactory51.directBuffers;
        undertowEmbeddedServletContainerFactory51.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = undertowEmbeddedServletContainerFactory51.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader56 = undertowEmbeddedServletContainerFactory51.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection57 = undertowEmbeddedServletContainerFactory51.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory51.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray60 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory51.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        java.lang.String str62 = undertowEmbeddedServletContainerFactory51.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList63 = undertowEmbeddedServletContainerFactory51.builderCustomizers;
        undertowEmbeddedServletContainerFactory24.builderCustomizers = undertowBuilderCustomizerList63;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean67 = undertowEmbeddedServletContainerFactory66.directBuffers;
        undertowEmbeddedServletContainerFactory66.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings70 = undertowEmbeddedServletContainerFactory66.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader71 = undertowEmbeddedServletContainerFactory66.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection72 = undertowEmbeddedServletContainerFactory66.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray75 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory74.addErrorPages(errorPageArray75);
        undertowEmbeddedServletContainerFactory66.addErrorPages(errorPageArray75);
        boolean boolean78 = undertowEmbeddedServletContainerFactory66.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory80 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean81 = undertowEmbeddedServletContainerFactory80.directBuffers;
        io.undertow.Undertow.Builder builder82 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager83 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer85 = undertowEmbeddedServletContainerFactory80.getUndertowEmbeddedServletContainer(builder82, deploymentManager83, 0);
        undertowEmbeddedServletContainerFactory80.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader88 = undertowEmbeddedServletContainerFactory80.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet89 = undertowEmbeddedServletContainerFactory80.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray90 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer91 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray90);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer92 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray90);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer93 = undertowEmbeddedServletContainerFactory80.getEmbeddedServletContainer(servletContextInitializerArray90);
        io.undertow.servlet.api.DeploymentManager deploymentManager94 = undertowEmbeddedServletContainerFactory66.createDeploymentManager(servletContextInitializerArray90);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer95 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray90);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer96 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray90);
        undertowEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray90);
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray90);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer99 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray90);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection12);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNull(resourceLoader41);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection42);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray45);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertNull(resourceLoader56);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection57);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "0.0.0.0" + "'", str62, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList63);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(mimeMappings70);
        org.junit.Assert.assertNull(resourceLoader71);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection72);
        org.junit.Assert.assertNotNull(errorPageArray75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer85);
        org.junit.Assert.assertNotNull(classLoader88);
        org.junit.Assert.assertNotNull(errorPageSet89);
        org.junit.Assert.assertNotNull(servletContextInitializerArray90);
        org.junit.Assert.assertNotNull(embeddedServletContainer93);
        org.junit.Assert.assertNotNull(deploymentManager94);
        org.junit.Assert.assertNotNull(embeddedServletContainer99);
    }

    @Test
    public void test06228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06228");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray5 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet6 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet6, errorPageArray5);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet6);
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.lang.ClassLoader classLoader15 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(errorPageArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(classLoader15);
    }

    @Test
    public void test06229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06229");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.net.InetAddress inetAddress9 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.workerThreads;
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory13.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray15 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray15);
        undertowEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer19 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap18);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer19, initParameterConfiguringServletContextInitializer21 };
        undertowEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray22);
        undertowEmbeddedServletContainerFactory13.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer26 };
        undertowEmbeddedServletContainerFactory13.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        java.lang.Boolean boolean29 = undertowEmbeddedServletContainerFactory13.directBuffers;
        java.lang.Integer int30 = undertowEmbeddedServletContainerFactory13.bufferSize;
        undertowEmbeddedServletContainerFactory13.setSessionTimeout(0);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo33 = null;
        undertowEmbeddedServletContainerFactory13.configureErrorPages(deploymentInfo33);
        undertowEmbeddedServletContainerFactory13.workerThreads = 0;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList37 = undertowEmbeddedServletContainerFactory13.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList37;
        java.lang.String str39 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int42 = undertowEmbeddedServletContainerFactory41.buffersPerRegion;
        java.lang.String str43 = undertowEmbeddedServletContainerFactory41.getListenAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager44 = undertowEmbeddedServletContainerFactory41.getDocumentRootResourceManager();
        java.net.InetAddress inetAddress45 = null;
        undertowEmbeddedServletContainerFactory41.setAddress(inetAddress45);
        undertowEmbeddedServletContainerFactory41.buffersPerRegion = 0;
        java.io.File file49 = null;
        undertowEmbeddedServletContainerFactory41.setDocumentRoot(file49);
        int int51 = undertowEmbeddedServletContainerFactory41.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean54 = undertowEmbeddedServletContainerFactory53.directBuffers;
        undertowEmbeddedServletContainerFactory53.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean59 = undertowEmbeddedServletContainerFactory58.directBuffers;
        undertowEmbeddedServletContainerFactory58.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings62 = undertowEmbeddedServletContainerFactory58.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader63 = undertowEmbeddedServletContainerFactory58.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection64 = undertowEmbeddedServletContainerFactory58.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory58.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray67 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory58.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray67);
        boolean boolean69 = undertowEmbeddedServletContainerFactory58.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList70 = undertowEmbeddedServletContainerFactory58.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory53.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList70;
        undertowEmbeddedServletContainerFactory41.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList70;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList70;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        java.net.InetAddress inetAddress76 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader77 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader77;
        java.util.concurrent.TimeUnit timeUnit80 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 0, timeUnit80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(inetAddress9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray27);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "0.0.0.0" + "'", str39, "0.0.0.0");
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "0.0.0.0" + "'", str43, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager44);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(mimeMappings62);
        org.junit.Assert.assertNull(resourceLoader63);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection64);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList70);
        org.junit.Assert.assertNull(inetAddress76);
    }

    @Test
    public void test06230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06230");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        java.io.File file10 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.lang.String str13 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1800;
        io.undertow.server.handlers.resource.ResourceManager resourceManager22 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Undertow does not support JSPs");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager22);
    }

    @Test
    public void test06231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06231");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray9 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray9);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray9);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader16);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 35);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        boolean boolean22 = undertowEmbeddedServletContainerFactory21.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory21.bufferSize = (-1);
        undertowEmbeddedServletContainerFactory21.setWorkerThreads((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean29 = undertowEmbeddedServletContainerFactory28.directBuffers;
        undertowEmbeddedServletContainerFactory28.setSessionTimeout(0);
        boolean boolean32 = undertowEmbeddedServletContainerFactory28.isRegisterDefaultServlet();
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory28.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray35 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer34 };
        undertowEmbeddedServletContainerFactory28.addBuilderCustomizers(undertowBuilderCustomizerArray35);
        java.lang.Integer int37 = undertowEmbeddedServletContainerFactory28.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean40 = undertowEmbeddedServletContainerFactory39.directBuffers;
        undertowEmbeddedServletContainerFactory39.setSessionTimeout(0);
        java.lang.Integer int43 = undertowEmbeddedServletContainerFactory39.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray46 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory45.addErrorPages(errorPageArray46);
        undertowEmbeddedServletContainerFactory39.addErrorPages(errorPageArray46);
        undertowEmbeddedServletContainerFactory39.buffersPerRegion = 100;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList51 = undertowEmbeddedServletContainerFactory39.deploymentInfoCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader52 = undertowEmbeddedServletContainerFactory39.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean55 = undertowEmbeddedServletContainerFactory54.directBuffers;
        undertowEmbeddedServletContainerFactory54.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = undertowEmbeddedServletContainerFactory54.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader59 = undertowEmbeddedServletContainerFactory54.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection60 = undertowEmbeddedServletContainerFactory54.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory54.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray63 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory54.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray63);
        boolean boolean65 = undertowEmbeddedServletContainerFactory54.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList66 = undertowEmbeddedServletContainerFactory54.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet67 = undertowEmbeddedServletContainerFactory54.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean70 = undertowEmbeddedServletContainerFactory69.directBuffers;
        undertowEmbeddedServletContainerFactory69.setSessionTimeout(0);
        java.lang.Integer int73 = undertowEmbeddedServletContainerFactory69.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray76 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory75.addErrorPages(errorPageArray76);
        undertowEmbeddedServletContainerFactory69.addErrorPages(errorPageArray76);
        undertowEmbeddedServletContainerFactory54.addErrorPages(errorPageArray76);
        undertowEmbeddedServletContainerFactory39.addErrorPages(errorPageArray76);
        undertowEmbeddedServletContainerFactory28.addErrorPages(errorPageArray76);
        undertowEmbeddedServletContainerFactory21.addErrorPages(errorPageArray76);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray76);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(errorPageArray9);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray35);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(errorPageArray46);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList51);
        org.junit.Assert.assertNull(resourceLoader52);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNull(resourceLoader59);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection60);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList66);
        org.junit.Assert.assertNotNull(errorPageSet67);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(errorPageArray76);
    }

    @Test
    public void test06232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06232");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList23 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 32);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList23);
    }

    @Test
    public void test06233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06233");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl10);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean19 = undertowEmbeddedServletContainerFactory18.directBuffers;
        undertowEmbeddedServletContainerFactory18.setSessionTimeout(0);
        boolean boolean22 = undertowEmbeddedServletContainerFactory18.isRegisterDefaultServlet();
        java.lang.Integer int23 = undertowEmbeddedServletContainerFactory18.ioThreads;
        boolean boolean24 = undertowEmbeddedServletContainerFactory18.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory18.setJspServletClassName("");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection27 = undertowEmbeddedServletContainerFactory18.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory18.setJspServletClassName("");
        java.lang.String str30 = undertowEmbeddedServletContainerFactory18.getListenAddress();
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory18.buffersPerRegion;
        java.net.InetAddress inetAddress32 = null;
        undertowEmbeddedServletContainerFactory18.setAddress(inetAddress32);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings34);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "0.0.0.0" + "'", str30, "0.0.0.0");
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(mimeMappings34);
    }

    @Test
    public void test06234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06234");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory2.createBuilder((int) '4');
        boolean boolean7 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean10 = undertowEmbeddedServletContainerFactory9.directBuffers;
        undertowEmbeddedServletContainerFactory9.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory9.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader14 = undertowEmbeddedServletContainerFactory9.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection15 = undertowEmbeddedServletContainerFactory9.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory9.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        java.lang.String str20 = undertowEmbeddedServletContainerFactory9.getListenAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory9.getMimeMappings();
        undertowEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings21);
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(false);
        java.lang.String str25 = undertowEmbeddedServletContainerFactory2.getContextPath();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList26 = undertowEmbeddedServletContainerFactory2.builderCustomizers;
        undertowEmbeddedServletContainerFactory2.setSessionTimeout((int) (short) 10);
        org.springframework.boot.context.embedded.Ssl ssl29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode30 = undertowEmbeddedServletContainerFactory2.getSslClientAuthMode(ssl29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "0.0.0.0" + "'", str20, "0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList26);
    }

    @Test
    public void test06235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06235");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        java.lang.Boolean boolean8 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(boolean8);
    }

    @Test
    public void test06236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06236");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.io.File file11 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode14 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
    }

    @Test
    public void test06237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06237");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.workerThreads;
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        undertowEmbeddedServletContainerFactory1.ioThreads = 10;
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test06238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06238");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        jarResourcemanager0.close();
        java.lang.String str2 = jarResourcemanager0.jarPath;
        boolean boolean3 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.close();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener5 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager0.registerResourceChangeListener(resourceChangeListener5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test06239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06239");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        java.io.File file10 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.net.InetAddress inetAddress11 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection14 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.ioThreads = 32;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection14);
    }

    @Test
    public void test06240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06240");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo5 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo5);
        undertowEmbeddedServletContainerFactory2.setJspServletClassName("hi!");
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory2.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory2.resourceLoader = resourceLoader10;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory2.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (-1));
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        undertowEmbeddedServletContainerFactory15.workerThreads = 1800;
        undertowEmbeddedServletContainerFactory15.directBuffers = false;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory23.directBuffers;
        io.undertow.Undertow.Builder builder25 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer28 = undertowEmbeddedServletContainerFactory23.getUndertowEmbeddedServletContainer(builder25, deploymentManager26, 0);
        undertowEmbeddedServletContainerFactory23.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader31 = undertowEmbeddedServletContainerFactory23.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl32 = null;
        undertowEmbeddedServletContainerFactory23.setSsl(ssl32);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean36 = undertowEmbeddedServletContainerFactory35.directBuffers;
        undertowEmbeddedServletContainerFactory35.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = undertowEmbeddedServletContainerFactory35.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader40 = undertowEmbeddedServletContainerFactory35.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection41 = undertowEmbeddedServletContainerFactory35.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory35.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray44 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory35.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray44);
        undertowEmbeddedServletContainerFactory23.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray44);
        undertowEmbeddedServletContainerFactory15.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray44);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray44);
        undertowEmbeddedServletContainerFactory2.bufferSize = 32;
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer28);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNull(resourceLoader40);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection41);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray44);
    }

    @Test
    public void test06241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06241");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        java.net.InetAddress inetAddress13 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray14);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = initializer15.initializers;
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer17 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray16);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean20 = undertowEmbeddedServletContainerFactory19.directBuffers;
        undertowEmbeddedServletContainerFactory19.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader24 = undertowEmbeddedServletContainerFactory19.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection25 = undertowEmbeddedServletContainerFactory19.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory19.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray28);
        java.lang.String str30 = undertowEmbeddedServletContainerFactory19.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean33 = undertowEmbeddedServletContainerFactory32.directBuffers;
        undertowEmbeddedServletContainerFactory32.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray36 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet37, errorPageArray36);
        undertowEmbeddedServletContainerFactory32.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet37);
        undertowEmbeddedServletContainerFactory19.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet37);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet37);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl44 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl45 = null;
        io.undertow.Undertow.Builder builder47 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl45, 32, builder47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(embeddedServletContainer17);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection25);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "0.0.0.0" + "'", str30, "0.0.0.0");
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(errorPageArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(ssl44);
    }

    @Test
    public void test06242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06242");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 10);
        boolean boolean3 = undertowEmbeddedServletContainerFactory2.isRegisterJspServlet();
        java.net.InetAddress inetAddress4 = null;
        undertowEmbeddedServletContainerFactory2.setAddress(inetAddress4);
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory2.ioThreads;
        io.undertow.server.handlers.resource.ResourceManager resourceManager7 = undertowEmbeddedServletContainerFactory2.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory2.setJspServletClassName("0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(resourceManager7);
    }

    @Test
    public void test06243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06243");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        io.undertow.Undertow.Builder builder18 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, 0);
        org.springframework.boot.context.embedded.Ssl ssl22 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl22);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader25 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.lang.ClassLoader classLoader26 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.core.io.ResourceLoader resourceLoader27 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.ioThreads = 100;
        java.net.InetAddress inetAddress30 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress30);
        int int32 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertNull(resourceLoader25);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNull(resourceLoader27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
    }

    @Test
    public void test06244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06244");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 1);
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory1.workerThreads;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet3 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(errorPageSet3);
    }

    @Test
    public void test06245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06245");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 100);
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.bufferSize = 32;
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test06246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06246");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.lang.String str3 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager4 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.net.InetAddress inetAddress5 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress5);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean9 = undertowEmbeddedServletContainerFactory8.directBuffers;
        undertowEmbeddedServletContainerFactory8.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader13 = undertowEmbeddedServletContainerFactory8.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection14 = undertowEmbeddedServletContainerFactory8.getDeploymentInfoCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo15 = null;
        undertowEmbeddedServletContainerFactory8.configureErrorPages(deploymentInfo15);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo17 = null;
        undertowEmbeddedServletContainerFactory8.configureErrorPages(deploymentInfo17);
        undertowEmbeddedServletContainerFactory8.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean23 = undertowEmbeddedServletContainerFactory22.directBuffers;
        undertowEmbeddedServletContainerFactory22.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = undertowEmbeddedServletContainerFactory22.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader27 = undertowEmbeddedServletContainerFactory22.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection28 = undertowEmbeddedServletContainerFactory22.getDeploymentInfoCustomizers();
        boolean boolean29 = undertowEmbeddedServletContainerFactory22.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean32 = undertowEmbeddedServletContainerFactory31.directBuffers;
        io.undertow.Undertow.Builder builder33 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer36 = undertowEmbeddedServletContainerFactory31.getUndertowEmbeddedServletContainer(builder33, deploymentManager34, 0);
        undertowEmbeddedServletContainerFactory31.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader39 = undertowEmbeddedServletContainerFactory31.getServletClassLoader();
        undertowEmbeddedServletContainerFactory31.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory31.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean46 = undertowEmbeddedServletContainerFactory45.directBuffers;
        undertowEmbeddedServletContainerFactory45.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = undertowEmbeddedServletContainerFactory45.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader50 = undertowEmbeddedServletContainerFactory45.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection51 = undertowEmbeddedServletContainerFactory45.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory45.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray54 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory45.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        java.lang.String str56 = undertowEmbeddedServletContainerFactory45.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList57 = undertowEmbeddedServletContainerFactory45.builderCustomizers;
        undertowEmbeddedServletContainerFactory31.builderCustomizers = undertowBuilderCustomizerList57;
        undertowEmbeddedServletContainerFactory22.builderCustomizers = undertowBuilderCustomizerList57;
        undertowEmbeddedServletContainerFactory8.builderCustomizers = undertowBuilderCustomizerList57;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList57;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList62 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean65 = undertowEmbeddedServletContainerFactory64.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray66 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray66);
        undertowEmbeddedServletContainerFactory64.addInitializers(servletContextInitializerArray66);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer70 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap69);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer72 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap71);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray73 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer70, initParameterConfiguringServletContextInitializer72 };
        undertowEmbeddedServletContainerFactory64.addInitializers(servletContextInitializerArray73);
        undertowEmbeddedServletContainerFactory64.workerThreads = 1;
        java.net.InetAddress inetAddress77 = undertowEmbeddedServletContainerFactory64.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader78 = null;
        undertowEmbeddedServletContainerFactory64.resourceLoader = resourceLoader78;
        java.io.File file80 = undertowEmbeddedServletContainerFactory64.getDocumentRoot();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet81 = undertowEmbeddedServletContainerFactory64.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet81);
        java.io.File file83 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file83);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0.0.0.0" + "'", str3, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager4);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection14);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNull(resourceLoader27);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer36);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNull(resourceLoader50);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection51);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "0.0.0.0" + "'", str56, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList57);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList62);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(servletContextInitializerArray66);
        org.junit.Assert.assertNotNull(servletContextInitializerArray73);
        org.junit.Assert.assertNull(inetAddress77);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(errorPageSet81);
    }

    @Test
    public void test06247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06247");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        java.io.File file10 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.net.InetAddress inetAddress11 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray14 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(inetAddress11);
    }

    @Test
    public void test06248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06248");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager1.jarPath;
        java.lang.String str5 = jarResourcemanager1.jarPath;
        java.lang.String str6 = jarResourcemanager1.jarPath;
        java.lang.String str7 = jarResourcemanager1.jarPath;
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str10 = jarResourcemanager1.jarPath;
        boolean boolean11 = jarResourcemanager1.isResourceChangeListenerSupported();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.registerResourceChangeListener(resourceChangeListener12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0.0.0.0" + "'", str5, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0.0.0.0" + "'", str10, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06249");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.ioThreads;
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.lang.String str13 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory1.workerThreads;
        undertowEmbeddedServletContainerFactory1.workerThreads = 52;
        io.undertow.server.handlers.resource.ResourceManager resourceManager17 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory1.ioThreads = 52;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(resourceManager17);
    }

    @Test
    public void test06250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06250");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory14.directBuffers;
        undertowEmbeddedServletContainerFactory14.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader19 = undertowEmbeddedServletContainerFactory14.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection20 = undertowEmbeddedServletContainerFactory14.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory14.buffersPerRegion = 0;
        io.undertow.server.handlers.resource.ResourceManager resourceManager23 = undertowEmbeddedServletContainerFactory14.getDocumentRootResourceManager();
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory14.bufferSize;
        io.undertow.server.handlers.resource.ResourceManager resourceManager25 = undertowEmbeddedServletContainerFactory14.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean28 = undertowEmbeddedServletContainerFactory27.directBuffers;
        io.undertow.Undertow.Builder builder29 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer32 = undertowEmbeddedServletContainerFactory27.getUndertowEmbeddedServletContainer(builder29, deploymentManager30, 0);
        undertowEmbeddedServletContainerFactory27.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader35 = undertowEmbeddedServletContainerFactory27.getServletClassLoader();
        undertowEmbeddedServletContainerFactory27.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory27.ioThreads = 100;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection40 = undertowEmbeddedServletContainerFactory27.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean43 = undertowEmbeddedServletContainerFactory42.directBuffers;
        undertowEmbeddedServletContainerFactory42.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = undertowEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray47 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory42.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray47);
        undertowEmbeddedServletContainerFactory27.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray47);
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray47);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray47);
        io.undertow.server.handlers.resource.ResourceManager resourceManager52 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean55 = undertowEmbeddedServletContainerFactory54.directBuffers;
        undertowEmbeddedServletContainerFactory54.setSessionTimeout(0);
        boolean boolean58 = undertowEmbeddedServletContainerFactory54.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean61 = undertowEmbeddedServletContainerFactory60.directBuffers;
        undertowEmbeddedServletContainerFactory60.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = undertowEmbeddedServletContainerFactory60.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader65 = undertowEmbeddedServletContainerFactory60.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection66 = undertowEmbeddedServletContainerFactory60.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory60.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray69 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory60.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray69);
        boolean boolean71 = undertowEmbeddedServletContainerFactory60.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList72 = undertowEmbeddedServletContainerFactory60.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet73 = undertowEmbeddedServletContainerFactory60.getErrorPages();
        undertowEmbeddedServletContainerFactory54.setErrorPages(errorPageSet73);
        undertowEmbeddedServletContainerFactory54.setSessionTimeout((int) (byte) -1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings77 = undertowEmbeddedServletContainerFactory54.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings77);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection79 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.lang.String str80 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 97);
        java.net.InetAddress inetAddress83 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNull(resourceLoader19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection20);
        org.junit.Assert.assertNotNull(resourceManager23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(resourceManager25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer32);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection40);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray47);
        org.junit.Assert.assertNotNull(resourceManager52);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNull(resourceLoader65);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection66);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList72);
        org.junit.Assert.assertNotNull(errorPageSet73);
        org.junit.Assert.assertNotNull(mimeMappings77);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "0.0.0.0" + "'", str80, "0.0.0.0");
        org.junit.Assert.assertNull(inetAddress83);
    }

    @Test
    public void test06251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06251");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        int int10 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray11 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test06252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06252");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory2.setSessionTimeout((int) (byte) -1);
        undertowEmbeddedServletContainerFactory2.setSessionTimeout((int) (byte) 1);
        org.springframework.boot.context.embedded.Ssl ssl9 = undertowEmbeddedServletContainerFactory2.getSsl();
        undertowEmbeddedServletContainerFactory2.setPort(0);
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory2.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory14.directBuffers;
        io.undertow.Undertow.Builder builder16 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer19 = undertowEmbeddedServletContainerFactory14.getUndertowEmbeddedServletContainer(builder16, deploymentManager17, 0);
        undertowEmbeddedServletContainerFactory14.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader22 = undertowEmbeddedServletContainerFactory14.getServletClassLoader();
        java.lang.Integer int23 = undertowEmbeddedServletContainerFactory14.bufferSize;
        undertowEmbeddedServletContainerFactory14.setPort((-1));
        java.net.InetAddress inetAddress26 = undertowEmbeddedServletContainerFactory14.getAddress();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray27);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray29 = initializer28.initializers;
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer30 = undertowEmbeddedServletContainerFactory14.getEmbeddedServletContainer(servletContextInitializerArray29);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean33 = undertowEmbeddedServletContainerFactory32.directBuffers;
        undertowEmbeddedServletContainerFactory32.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = undertowEmbeddedServletContainerFactory32.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader37 = undertowEmbeddedServletContainerFactory32.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection38 = undertowEmbeddedServletContainerFactory32.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory32.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray41 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory32.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        java.lang.String str43 = undertowEmbeddedServletContainerFactory32.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean46 = undertowEmbeddedServletContainerFactory45.directBuffers;
        undertowEmbeddedServletContainerFactory45.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray49 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet50 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet50, errorPageArray49);
        undertowEmbeddedServletContainerFactory45.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet50);
        undertowEmbeddedServletContainerFactory32.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet50);
        undertowEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet50);
        undertowEmbeddedServletContainerFactory2.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet50);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection56 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        org.junit.Assert.assertNull(ssl9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer19);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(inetAddress26);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray29);
        org.junit.Assert.assertNotNull(embeddedServletContainer30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNull(resourceLoader37);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection38);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "0.0.0.0" + "'", str43, "0.0.0.0");
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(errorPageArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection56);
    }

    @Test
    public void test06253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06253");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 1);
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory1.workerThreads;
        undertowEmbeddedServletContainerFactory1.setPort((int) 'a');
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl5);
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
    }

    @Test
    public void test06254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06254");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 10);
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory2.workerThreads;
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader4);
        undertowEmbeddedServletContainerFactory2.ioThreads = (-1);
        undertowEmbeddedServletContainerFactory2.setIoThreads((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory11.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory11.resourceLoader = resourceLoader13;
        io.undertow.server.handlers.resource.ResourceManager resourceManager15 = undertowEmbeddedServletContainerFactory11.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory11.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.server.handlers.resource.ResourceManager resourceManager18 = undertowEmbeddedServletContainerFactory11.getDocumentRootResourceManager();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory11.builderCustomizers;
        undertowEmbeddedServletContainerFactory2.builderCustomizers = undertowBuilderCustomizerList19;
        org.springframework.core.io.ResourceLoader resourceLoader21 = null;
        undertowEmbeddedServletContainerFactory2.resourceLoader = resourceLoader21;
        java.lang.Integer int23 = undertowEmbeddedServletContainerFactory2.bufferSize;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray24 = undertowEmbeddedServletContainerFactory2.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(resourceManager15);
        org.junit.Assert.assertNotNull(resourceManager18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNull(int23);
    }

    @Test
    public void test06255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06255");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        undertowEmbeddedServletContainerFactory15.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader20 = undertowEmbeddedServletContainerFactory15.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection21 = undertowEmbeddedServletContainerFactory15.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory15.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray24 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory15.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray24);
        java.lang.String str26 = undertowEmbeddedServletContainerFactory15.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory15.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList27;
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        undertowEmbeddedServletContainerFactory1.setPort((int) 'a');
        java.lang.String str33 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str39 = undertowEmbeddedServletContainerFactory38.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList41 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList41, undertowBuilderCustomizerArray40);
        undertowEmbeddedServletContainerFactory38.builderCustomizers = undertowBuilderCustomizerList41;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray44);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = initializer45.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray46);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray46);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray46);
        undertowEmbeddedServletContainerFactory38.addInitializers(servletContextInitializerArray46);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray46);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray52 = initializer51.initializers;
        io.undertow.servlet.api.DeploymentManager deploymentManager53 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray52);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        io.undertow.Undertow.Builder builder57 = undertowEmbeddedServletContainerFactory1.createBuilder(0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int60 = undertowEmbeddedServletContainerFactory59.buffersPerRegion;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo61 = null;
        undertowEmbeddedServletContainerFactory59.configureErrorPages(deploymentInfo61);
        org.springframework.core.io.ResourceLoader resourceLoader63 = null;
        undertowEmbeddedServletContainerFactory59.resourceLoader = resourceLoader63;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = undertowEmbeddedServletContainerFactory59.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings65);
        org.springframework.core.io.ResourceLoader resourceLoader67 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(resourceLoader20);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection21);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0.0.0.0" + "'", str26, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "0.0.0.0" + "'", str33, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "0.0.0.0" + "'", str39, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
        org.junit.Assert.assertNotNull(servletContextInitializerArray52);
        org.junit.Assert.assertNotNull(deploymentManager53);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertNull(resourceLoader67);
    }

    @Test
    public void test06256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06256");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray20 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet21, errorPageArray20);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet21);
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.ioThreads = 100;
        io.undertow.server.handlers.resource.ResourceManager resourceManager27 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 35;
        undertowEmbeddedServletContainerFactory1.ioThreads = 52;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(errorPageArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(resourceManager27);
    }

    @Test
    public void test06257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06257");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        io.undertow.server.handlers.resource.ResourceManager resourceManager10 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.core.io.ResourceLoader resourceLoader11 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList15 = undertowEmbeddedServletContainerFactory14.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory14.setIoThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean20 = undertowEmbeddedServletContainerFactory19.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray21);
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer27 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap26);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray28 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer25, initParameterConfiguringServletContextInitializer27 };
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray28);
        undertowEmbeddedServletContainerFactory19.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer32 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer32 };
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        java.lang.Integer int35 = undertowEmbeddedServletContainerFactory19.ioThreads;
        java.lang.String str36 = undertowEmbeddedServletContainerFactory19.getContextPath();
        undertowEmbeddedServletContainerFactory19.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory41.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder45 = undertowEmbeddedServletContainerFactory41.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager46 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer48 = undertowEmbeddedServletContainerFactory19.getUndertowEmbeddedServletContainer(builder45, deploymentManager46, (int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray49 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray49);
        undertowEmbeddedServletContainerFactory14.addBuilderCustomizers(undertowBuilderCustomizerArray49);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray49);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str60 = undertowEmbeddedServletContainerFactory59.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray61 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList62 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList62, undertowBuilderCustomizerArray61);
        undertowEmbeddedServletContainerFactory59.builderCustomizers = undertowBuilderCustomizerList62;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection65 = undertowEmbeddedServletContainerFactory59.getBuilderCustomizers();
        boolean boolean66 = undertowEmbeddedServletContainerFactory59.isRegisterDefaultServlet();
        io.undertow.Undertow.Builder builder68 = undertowEmbeddedServletContainerFactory59.createBuilder((int) (byte) -1);
        io.undertow.servlet.api.DeploymentManager deploymentManager69 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer71 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder68, deploymentManager69, 52);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(resourceManager10);
        org.junit.Assert.assertNull(resourceLoader11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray33);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer48);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray49);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "0.0.0.0" + "'", str60, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer71);
    }

    @Test
    public void test06258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06258");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray8 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory7.addErrorPages(errorPageArray8);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray8);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 100;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory17.directBuffers;
        undertowEmbeddedServletContainerFactory17.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader22 = undertowEmbeddedServletContainerFactory17.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection23 = undertowEmbeddedServletContainerFactory17.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory17.setDirectBuffers((java.lang.Boolean) true);
        int int26 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        java.io.File file27 = null;
        undertowEmbeddedServletContainerFactory17.setDocumentRoot(file27);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList29 = undertowEmbeddedServletContainerFactory17.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList29;
        java.lang.Boolean boolean31 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(errorPageArray8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(resourceLoader22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList29);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNull(ssl32);
    }

    @Test
    public void test06259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06259");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager1.jarPath;
        java.lang.String str5 = jarResourcemanager1.jarPath;
        java.lang.String str6 = jarResourcemanager1.jarPath;
        java.lang.String str7 = jarResourcemanager1.jarPath;
        jarResourcemanager1.jarPath = "";
        boolean boolean10 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.String str11 = jarResourcemanager1.jarPath;
        java.lang.String str12 = jarResourcemanager1.jarPath;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource14 = jarResourcemanager1.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0.0.0.0" + "'", str5, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test06260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06260");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager1.jarPath;
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "";
        boolean boolean9 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean10 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean11 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource14 = jarResourcemanager1.getResource("hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06261");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (-1));
        java.lang.Boolean boolean3 = undertowEmbeddedServletContainerFactory2.directBuffers;
        int int4 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory6.getMimeMappings();
        java.lang.Boolean boolean8 = undertowEmbeddedServletContainerFactory6.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory10.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray12);
        undertowEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        boolean boolean15 = undertowEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList16 = undertowEmbeddedServletContainerFactory10.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory10.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean21 = undertowEmbeddedServletContainerFactory20.directBuffers;
        undertowEmbeddedServletContainerFactory20.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = undertowEmbeddedServletContainerFactory20.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader25 = undertowEmbeddedServletContainerFactory20.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection26 = undertowEmbeddedServletContainerFactory20.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory20.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray29 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray29);
        boolean boolean31 = undertowEmbeddedServletContainerFactory20.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean34 = undertowEmbeddedServletContainerFactory33.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray35);
        undertowEmbeddedServletContainerFactory33.addInitializers(servletContextInitializerArray35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer39 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer41 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap40);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray42 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer39, initParameterConfiguringServletContextInitializer41 };
        undertowEmbeddedServletContainerFactory33.addInitializers(servletContextInitializerArray42);
        undertowEmbeddedServletContainerFactory33.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer46 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray47 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer46 };
        undertowEmbeddedServletContainerFactory33.addBuilderCustomizers(undertowBuilderCustomizerArray47);
        undertowEmbeddedServletContainerFactory20.addBuilderCustomizers(undertowBuilderCustomizerArray47);
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray47);
        undertowEmbeddedServletContainerFactory6.addBuilderCustomizers(undertowBuilderCustomizerArray47);
        undertowEmbeddedServletContainerFactory2.addBuilderCustomizers(undertowBuilderCustomizerArray47);
        java.lang.Integer int53 = undertowEmbeddedServletContainerFactory2.buffersPerRegion;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection54 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo55 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo55);
        java.lang.Integer int57 = undertowEmbeddedServletContainerFactory2.bufferSize;
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1800 + "'", int4 == 1800);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList16);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(resourceLoader25);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection26);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertNotNull(servletContextInitializerArray42);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray47);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection54);
        org.junit.Assert.assertNull(int57);
    }

    @Test
    public void test06262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06262");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        java.lang.ClassLoader classLoader19 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.core.io.ResourceLoader resourceLoader20 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader20;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory23.directBuffers;
        undertowEmbeddedServletContainerFactory23.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = undertowEmbeddedServletContainerFactory23.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader28 = undertowEmbeddedServletContainerFactory23.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection29 = undertowEmbeddedServletContainerFactory23.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory23.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory23.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray32);
        java.lang.String str34 = undertowEmbeddedServletContainerFactory23.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList35 = undertowEmbeddedServletContainerFactory23.builderCustomizers;
        int int36 = undertowEmbeddedServletContainerFactory23.getPort();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList37 = undertowEmbeddedServletContainerFactory23.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList37;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo39 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo39);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNull(resourceLoader28);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "0.0.0.0" + "'", str34, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList37);
    }

    @Test
    public void test06263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06263");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        java.net.InetAddress inetAddress14 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader15 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.lang.String str16 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 100);
        java.lang.String str19 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.Boolean boolean20 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean23 = undertowEmbeddedServletContainerFactory22.directBuffers;
        undertowEmbeddedServletContainerFactory22.setSessionTimeout(0);
        java.lang.Integer int26 = undertowEmbeddedServletContainerFactory22.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray29 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory28.addErrorPages(errorPageArray29);
        undertowEmbeddedServletContainerFactory22.addErrorPages(errorPageArray29);
        undertowEmbeddedServletContainerFactory22.buffersPerRegion = 100;
        undertowEmbeddedServletContainerFactory22.setIoThreads((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean38 = undertowEmbeddedServletContainerFactory37.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray39 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray39);
        undertowEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer43 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap42);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer45 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap44);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer43, initParameterConfiguringServletContextInitializer45 };
        undertowEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray46);
        undertowEmbeddedServletContainerFactory37.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray51 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer50 };
        undertowEmbeddedServletContainerFactory37.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        java.lang.Integer int53 = undertowEmbeddedServletContainerFactory37.ioThreads;
        java.lang.String str54 = undertowEmbeddedServletContainerFactory37.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean57 = undertowEmbeddedServletContainerFactory56.directBuffers;
        undertowEmbeddedServletContainerFactory56.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings60 = undertowEmbeddedServletContainerFactory56.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader61 = undertowEmbeddedServletContainerFactory56.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection62 = undertowEmbeddedServletContainerFactory56.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory56.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray65 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory56.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray65);
        java.lang.String str67 = undertowEmbeddedServletContainerFactory56.getListenAddress();
        undertowEmbeddedServletContainerFactory56.setBuffersPerRegion((java.lang.Integer) (-1));
        io.undertow.Undertow.Builder builder71 = undertowEmbeddedServletContainerFactory56.createBuilder((int) (byte) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager72 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer74 = undertowEmbeddedServletContainerFactory37.getUndertowEmbeddedServletContainer(builder71, deploymentManager72, (int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean77 = undertowEmbeddedServletContainerFactory76.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray78 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer79 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray78);
        undertowEmbeddedServletContainerFactory76.addInitializers(servletContextInitializerArray78);
        boolean boolean81 = undertowEmbeddedServletContainerFactory76.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory83 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray84 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory83.addErrorPages(errorPageArray84);
        undertowEmbeddedServletContainerFactory76.addErrorPages(errorPageArray84);
        undertowEmbeddedServletContainerFactory37.addErrorPages(errorPageArray84);
        undertowEmbeddedServletContainerFactory22.addErrorPages(errorPageArray84);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray84);
        undertowEmbeddedServletContainerFactory1.ioThreads = 35;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList92 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertNull(resourceLoader15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "0.0.0.0" + "'", str19, "0.0.0.0");
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(errorPageArray29);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(servletContextInitializerArray39);
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray51);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(mimeMappings60);
        org.junit.Assert.assertNull(resourceLoader61);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection62);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "0.0.0.0" + "'", str67, "0.0.0.0");
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer74);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNotNull(servletContextInitializerArray78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(errorPageArray84);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList92);
    }

    @Test
    public void test06264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06264");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl10);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        undertowEmbeddedServletContainerFactory15.resourceLoader = resourceLoader16;
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory15.setResourceLoader(resourceLoader18);
        undertowEmbeddedServletContainerFactory15.setJspServletClassName("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory23.directBuffers;
        undertowEmbeddedServletContainerFactory23.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = undertowEmbeddedServletContainerFactory23.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader28 = undertowEmbeddedServletContainerFactory23.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection29 = undertowEmbeddedServletContainerFactory23.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory23.bufferSize = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList32 = undertowEmbeddedServletContainerFactory23.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = undertowEmbeddedServletContainerFactory34.getMimeMappings();
        java.lang.Boolean boolean36 = undertowEmbeddedServletContainerFactory34.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean39 = undertowEmbeddedServletContainerFactory38.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray40 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray40);
        undertowEmbeddedServletContainerFactory38.addInitializers(servletContextInitializerArray40);
        boolean boolean43 = undertowEmbeddedServletContainerFactory38.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList44 = undertowEmbeddedServletContainerFactory38.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory38.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean49 = undertowEmbeddedServletContainerFactory48.directBuffers;
        undertowEmbeddedServletContainerFactory48.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = undertowEmbeddedServletContainerFactory48.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader53 = undertowEmbeddedServletContainerFactory48.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection54 = undertowEmbeddedServletContainerFactory48.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory48.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray57 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory48.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray57);
        boolean boolean59 = undertowEmbeddedServletContainerFactory48.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean62 = undertowEmbeddedServletContainerFactory61.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray63 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray63);
        undertowEmbeddedServletContainerFactory61.addInitializers(servletContextInitializerArray63);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer67 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap66);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer69 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap68);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray70 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer67, initParameterConfiguringServletContextInitializer69 };
        undertowEmbeddedServletContainerFactory61.addInitializers(servletContextInitializerArray70);
        undertowEmbeddedServletContainerFactory61.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer74 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray75 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer74 };
        undertowEmbeddedServletContainerFactory61.addBuilderCustomizers(undertowBuilderCustomizerArray75);
        undertowEmbeddedServletContainerFactory48.addBuilderCustomizers(undertowBuilderCustomizerArray75);
        undertowEmbeddedServletContainerFactory38.addBuilderCustomizers(undertowBuilderCustomizerArray75);
        undertowEmbeddedServletContainerFactory34.addBuilderCustomizers(undertowBuilderCustomizerArray75);
        undertowEmbeddedServletContainerFactory23.addBuilderCustomizers(undertowBuilderCustomizerArray75);
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray75);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray75);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Undertow does not support JSPs");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNull(resourceLoader28);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList32);
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(servletContextInitializerArray40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList44);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNull(resourceLoader53);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection54);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(servletContextInitializerArray63);
        org.junit.Assert.assertNotNull(servletContextInitializerArray70);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray75);
    }

    @Test
    public void test06265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06265");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray2 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray2);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray5 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer4 };
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray5);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean9 = undertowEmbeddedServletContainerFactory8.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray10);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer14 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap13);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer16 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap15);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray17 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer14, initParameterConfiguringServletContextInitializer16 };
        undertowEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray17);
        undertowEmbeddedServletContainerFactory8.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList23 = undertowEmbeddedServletContainerFactory22.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory8.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList23;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList23;
        boolean boolean26 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.junit.Assert.assertNotNull(errorPageArray2);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(servletContextInitializerArray17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test06266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06266");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray8 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory7.addErrorPages(errorPageArray8);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray8);
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl11);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(errorPageArray8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
    }

    @Test
    public void test06267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06267");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList5, undertowBuilderCustomizerArray4);
        undertowEmbeddedServletContainerFactory2.builderCustomizers = undertowBuilderCustomizerList5;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection8 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file9);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0.0.0.0" + "'", str3, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection8);
    }

    @Test
    public void test06268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06268");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory23.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory23.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection35 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        int int36 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(35);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1800 + "'", int36 == 1800);
    }

    @Test
    public void test06269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06269");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory14.directBuffers;
        undertowEmbeddedServletContainerFactory14.setSessionTimeout(0);
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory14.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray21 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory20.addErrorPages(errorPageArray21);
        undertowEmbeddedServletContainerFactory14.addErrorPages(errorPageArray21);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray21);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection25 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader26 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader26;
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 35);
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(errorPageArray21);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection25);
        org.junit.Assert.assertNull(int32);
    }

    @Test
    public void test06270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06270");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.ioThreads;
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.bufferSize = 10;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 52);
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader15);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection10);
    }

    @Test
    public void test06271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06271");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray10);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = initializer12.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = initializer12.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray15 = initializer12.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory18.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder22 = undertowEmbeddedServletContainerFactory18.createBuilder((int) '4');
        boolean boolean23 = undertowEmbeddedServletContainerFactory18.isRegisterDefaultServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection24 = undertowEmbeddedServletContainerFactory18.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory18.setPort((int) (byte) 100);
        undertowEmbeddedServletContainerFactory18.setBufferSize((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory30.buffersPerRegion;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo32 = null;
        undertowEmbeddedServletContainerFactory30.configureErrorPages(deploymentInfo32);
        int int34 = undertowEmbeddedServletContainerFactory30.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean37 = undertowEmbeddedServletContainerFactory36.directBuffers;
        undertowEmbeddedServletContainerFactory36.setSessionTimeout(0);
        boolean boolean40 = undertowEmbeddedServletContainerFactory36.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Ssl ssl41 = undertowEmbeddedServletContainerFactory36.getSsl();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet42 = undertowEmbeddedServletContainerFactory36.getErrorPages();
        undertowEmbeddedServletContainerFactory30.setErrorPages(errorPageSet42);
        undertowEmbeddedServletContainerFactory18.setErrorPages(errorPageSet42);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean47 = undertowEmbeddedServletContainerFactory46.directBuffers;
        io.undertow.Undertow.Builder builder48 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager49 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer51 = undertowEmbeddedServletContainerFactory46.getUndertowEmbeddedServletContainer(builder48, deploymentManager49, 0);
        org.springframework.core.io.ResourceLoader resourceLoader52 = null;
        undertowEmbeddedServletContainerFactory46.resourceLoader = resourceLoader52;
        java.lang.Integer int54 = undertowEmbeddedServletContainerFactory46.buffersPerRegion;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection55 = undertowEmbeddedServletContainerFactory46.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean58 = undertowEmbeddedServletContainerFactory57.directBuffers;
        io.undertow.Undertow.Builder builder59 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager60 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer62 = undertowEmbeddedServletContainerFactory57.getUndertowEmbeddedServletContainer(builder59, deploymentManager60, 0);
        undertowEmbeddedServletContainerFactory57.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader65 = undertowEmbeddedServletContainerFactory57.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet66 = undertowEmbeddedServletContainerFactory57.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray67 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray67);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray67);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer70 = undertowEmbeddedServletContainerFactory57.getEmbeddedServletContainer(servletContextInitializerArray67);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray67);
        undertowEmbeddedServletContainerFactory46.addInitializers(servletContextInitializerArray67);
        undertowEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray67);
        initializer12.initializers = servletContextInitializerArray67;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer75 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray67);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray15);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection24);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(ssl41);
        org.junit.Assert.assertNotNull(errorPageSet42);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer51);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection55);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer62);
        org.junit.Assert.assertNotNull(classLoader65);
        org.junit.Assert.assertNotNull(errorPageSet66);
        org.junit.Assert.assertNotNull(servletContextInitializerArray67);
        org.junit.Assert.assertNotNull(embeddedServletContainer70);
    }

    @Test
    public void test06272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06272");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        java.net.InetAddress inetAddress13 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray14);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = initializer15.initializers;
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer17 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray16);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean20 = undertowEmbeddedServletContainerFactory19.directBuffers;
        undertowEmbeddedServletContainerFactory19.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader24 = undertowEmbeddedServletContainerFactory19.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection25 = undertowEmbeddedServletContainerFactory19.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory19.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray28);
        java.lang.String str30 = undertowEmbeddedServletContainerFactory19.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean33 = undertowEmbeddedServletContainerFactory32.directBuffers;
        undertowEmbeddedServletContainerFactory32.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray36 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet37, errorPageArray36);
        undertowEmbeddedServletContainerFactory32.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet37);
        undertowEmbeddedServletContainerFactory19.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet37);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet37);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) (-1));
        java.lang.Integer int44 = undertowEmbeddedServletContainerFactory1.bufferSize;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet45 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList46 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(embeddedServletContainer17);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection25);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "0.0.0.0" + "'", str30, "0.0.0.0");
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(errorPageArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(errorPageSet45);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList46);
    }

    @Test
    public void test06273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06273");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory12.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory16.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray18);
        boolean boolean21 = undertowEmbeddedServletContainerFactory16.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList22 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory16.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean27 = undertowEmbeddedServletContainerFactory26.directBuffers;
        undertowEmbeddedServletContainerFactory26.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = undertowEmbeddedServletContainerFactory26.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader31 = undertowEmbeddedServletContainerFactory26.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection32 = undertowEmbeddedServletContainerFactory26.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory26.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray35 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray35);
        boolean boolean37 = undertowEmbeddedServletContainerFactory26.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean40 = undertowEmbeddedServletContainerFactory39.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray41 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray41);
        undertowEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer45 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap44);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer47 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap46);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray48 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer45, initParameterConfiguringServletContextInitializer47 };
        undertowEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray48);
        undertowEmbeddedServletContainerFactory39.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer52 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray53 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer52 };
        undertowEmbeddedServletContainerFactory39.addBuilderCustomizers(undertowBuilderCustomizerArray53);
        undertowEmbeddedServletContainerFactory26.addBuilderCustomizers(undertowBuilderCustomizerArray53);
        undertowEmbeddedServletContainerFactory16.addBuilderCustomizers(undertowBuilderCustomizerArray53);
        undertowEmbeddedServletContainerFactory12.addBuilderCustomizers(undertowBuilderCustomizerArray53);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray53);
        java.lang.String str59 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.core.io.ResourceLoader resourceLoader60 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList22);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNull(resourceLoader31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray41);
        org.junit.Assert.assertNotNull(servletContextInitializerArray48);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray53);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNull(resourceLoader60);
    }

    @Test
    public void test06274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06274");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray8 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory7.addErrorPages(errorPageArray8);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray8);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 100;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file14);
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(errorPageArray8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
    }

    @Test
    public void test06275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06275");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        boolean boolean8 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory10.directBuffers;
        io.undertow.Undertow.Builder builder12 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager13 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer15 = undertowEmbeddedServletContainerFactory10.getUndertowEmbeddedServletContainer(builder12, deploymentManager13, 0);
        undertowEmbeddedServletContainerFactory10.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader18 = undertowEmbeddedServletContainerFactory10.getServletClassLoader();
        undertowEmbeddedServletContainerFactory10.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory10.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean25 = undertowEmbeddedServletContainerFactory24.directBuffers;
        undertowEmbeddedServletContainerFactory24.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader29 = undertowEmbeddedServletContainerFactory24.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection30 = undertowEmbeddedServletContainerFactory24.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory24.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory24.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        java.lang.String str35 = undertowEmbeddedServletContainerFactory24.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList36 = undertowEmbeddedServletContainerFactory24.builderCustomizers;
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList36;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList36;
        int int39 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        java.io.File file44 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file44);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList48 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.net.InetAddress inetAddress49 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer15);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNull(resourceLoader29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "0.0.0.0" + "'", str35, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList48);
        org.junit.Assert.assertNull(inetAddress49);
    }

    @Test
    public void test06276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06276");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        boolean boolean1 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.jarPath = "hi!";
        jarResourcemanager0.jarPath = "hi!";
        jarResourcemanager0.close();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource8 = jarResourcemanager0.getResource("hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test06277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06277");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        io.undertow.server.handlers.resource.ResourceManager resourceManager11 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        int int13 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.bufferSize = 97;
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(resourceManager11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
    }

    @Test
    public void test06278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06278");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray2 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory5.directBuffers;
        io.undertow.Undertow.Builder builder7 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager8 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer10 = undertowEmbeddedServletContainerFactory5.getUndertowEmbeddedServletContainer(builder7, deploymentManager8, 0);
        undertowEmbeddedServletContainerFactory5.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader13 = undertowEmbeddedServletContainerFactory5.getServletClassLoader();
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory5.bufferSize;
        undertowEmbeddedServletContainerFactory5.setPort((-1));
        java.net.InetAddress inetAddress17 = undertowEmbeddedServletContainerFactory5.getAddress();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray18);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = initializer19.initializers;
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer21 = undertowEmbeddedServletContainerFactory5.getEmbeddedServletContainer(servletContextInitializerArray20);
        java.io.File file22 = null;
        undertowEmbeddedServletContainerFactory5.setDocumentRoot(file22);
        undertowEmbeddedServletContainerFactory5.bufferSize = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean28 = undertowEmbeddedServletContainerFactory27.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray29 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray29);
        undertowEmbeddedServletContainerFactory27.addInitializers(servletContextInitializerArray29);
        boolean boolean32 = undertowEmbeddedServletContainerFactory27.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray35 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory34.addErrorPages(errorPageArray35);
        undertowEmbeddedServletContainerFactory27.addErrorPages(errorPageArray35);
        org.springframework.boot.context.embedded.Ssl ssl38 = undertowEmbeddedServletContainerFactory27.getSsl();
        undertowEmbeddedServletContainerFactory27.setBufferSize((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = undertowEmbeddedServletContainerFactory27.getMimeMappings();
        undertowEmbeddedServletContainerFactory27.setWorkerThreads((java.lang.Integer) 0);
        org.springframework.core.io.ResourceLoader resourceLoader44 = undertowEmbeddedServletContainerFactory27.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean47 = undertowEmbeddedServletContainerFactory46.directBuffers;
        undertowEmbeddedServletContainerFactory46.setSessionTimeout(0);
        java.lang.Integer int50 = undertowEmbeddedServletContainerFactory46.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray53 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory52.addErrorPages(errorPageArray53);
        undertowEmbeddedServletContainerFactory46.addErrorPages(errorPageArray53);
        undertowEmbeddedServletContainerFactory46.buffersPerRegion = 100;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList58 = undertowEmbeddedServletContainerFactory46.deploymentInfoCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader59 = undertowEmbeddedServletContainerFactory46.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean62 = undertowEmbeddedServletContainerFactory61.directBuffers;
        undertowEmbeddedServletContainerFactory61.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = undertowEmbeddedServletContainerFactory61.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader66 = undertowEmbeddedServletContainerFactory61.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection67 = undertowEmbeddedServletContainerFactory61.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory61.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray70 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory61.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray70);
        boolean boolean72 = undertowEmbeddedServletContainerFactory61.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList73 = undertowEmbeddedServletContainerFactory61.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet74 = undertowEmbeddedServletContainerFactory61.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean77 = undertowEmbeddedServletContainerFactory76.directBuffers;
        undertowEmbeddedServletContainerFactory76.setSessionTimeout(0);
        java.lang.Integer int80 = undertowEmbeddedServletContainerFactory76.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray83 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory82.addErrorPages(errorPageArray83);
        undertowEmbeddedServletContainerFactory76.addErrorPages(errorPageArray83);
        undertowEmbeddedServletContainerFactory61.addErrorPages(errorPageArray83);
        undertowEmbeddedServletContainerFactory46.addErrorPages(errorPageArray83);
        undertowEmbeddedServletContainerFactory27.addErrorPages(errorPageArray83);
        undertowEmbeddedServletContainerFactory5.addErrorPages(errorPageArray83);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray83);
        java.lang.String str91 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertNotNull(errorPageArray2);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer10);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(inetAddress17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertNotNull(embeddedServletContainer21);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(errorPageArray35);
        org.junit.Assert.assertNull(ssl38);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertNull(resourceLoader44);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(errorPageArray53);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList58);
        org.junit.Assert.assertNull(resourceLoader59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertNull(resourceLoader66);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection67);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList73);
        org.junit.Assert.assertNotNull(errorPageSet74);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(errorPageArray83);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
    }

    @Test
    public void test06279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06279");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory2.setSessionTimeout((int) (byte) -1);
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.Ssl ssl9 = undertowEmbeddedServletContainerFactory2.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory11.directBuffers;
        io.undertow.Undertow.Builder builder13 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer16 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder13, deploymentManager14, 0);
        undertowEmbeddedServletContainerFactory11.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory11.workerThreads = (-1);
        java.lang.Boolean boolean21 = undertowEmbeddedServletContainerFactory11.directBuffers;
        boolean boolean22 = undertowEmbeddedServletContainerFactory11.isRegisterJspServlet();
        java.lang.String str23 = undertowEmbeddedServletContainerFactory11.getListenAddress();
        undertowEmbeddedServletContainerFactory11.buffersPerRegion = 10;
        boolean boolean26 = undertowEmbeddedServletContainerFactory11.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory11.workerThreads = (-1);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet29 = undertowEmbeddedServletContainerFactory11.getErrorPages();
        undertowEmbeddedServletContainerFactory2.setErrorPages(errorPageSet29);
        org.junit.Assert.assertNull(ssl9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer16);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "0.0.0.0" + "'", str23, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(errorPageSet29);
    }

    @Test
    public void test06280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06280");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        undertowEmbeddedServletContainerFactory1.bufferSize = 10;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        boolean boolean25 = undertowEmbeddedServletContainerFactory24.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory24.setSessionTimeout((int) '#');
        undertowEmbeddedServletContainerFactory24.setIoThreads((java.lang.Integer) 0);
        io.undertow.Undertow.Builder builder31 = undertowEmbeddedServletContainerFactory24.createBuilder((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl20, 0, builder31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test06281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06281");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        boolean boolean8 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory10.directBuffers;
        io.undertow.Undertow.Builder builder12 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager13 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer15 = undertowEmbeddedServletContainerFactory10.getUndertowEmbeddedServletContainer(builder12, deploymentManager13, 0);
        undertowEmbeddedServletContainerFactory10.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader18 = undertowEmbeddedServletContainerFactory10.getServletClassLoader();
        undertowEmbeddedServletContainerFactory10.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory10.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean25 = undertowEmbeddedServletContainerFactory24.directBuffers;
        undertowEmbeddedServletContainerFactory24.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader29 = undertowEmbeddedServletContainerFactory24.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection30 = undertowEmbeddedServletContainerFactory24.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory24.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory24.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        java.lang.String str35 = undertowEmbeddedServletContainerFactory24.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList36 = undertowEmbeddedServletContainerFactory24.builderCustomizers;
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList36;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList36;
        int int39 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        int int42 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.Ssl ssl43 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl43);
        undertowEmbeddedServletContainerFactory1.ioThreads = 100;
        java.lang.Integer int47 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer15);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNull(resourceLoader29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "0.0.0.0" + "'", str35, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertNull(int47);
    }

    @Test
    public void test06282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06282");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '4');
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.io.File file9 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        io.undertow.Undertow.Builder builder15 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (short) -1);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(35);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + true + "'", boolean12, true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test06283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06283");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        java.net.InetAddress inetAddress21 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection22 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean25 = undertowEmbeddedServletContainerFactory24.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray26);
        undertowEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray26);
        boolean boolean29 = undertowEmbeddedServletContainerFactory24.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray32 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory31.addErrorPages(errorPageArray32);
        undertowEmbeddedServletContainerFactory24.addErrorPages(errorPageArray32);
        org.springframework.boot.context.embedded.Ssl ssl35 = undertowEmbeddedServletContainerFactory24.getSsl();
        undertowEmbeddedServletContainerFactory24.setBufferSize((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean41 = undertowEmbeddedServletContainerFactory40.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray42 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray42);
        undertowEmbeddedServletContainerFactory40.addInitializers(servletContextInitializerArray42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer46 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap45);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer48 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap47);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray49 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer46, initParameterConfiguringServletContextInitializer48 };
        undertowEmbeddedServletContainerFactory40.addInitializers(servletContextInitializerArray49);
        undertowEmbeddedServletContainerFactory40.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer53 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray54 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer53 };
        undertowEmbeddedServletContainerFactory40.addBuilderCustomizers(undertowBuilderCustomizerArray54);
        java.lang.Integer int56 = undertowEmbeddedServletContainerFactory40.ioThreads;
        java.lang.String str57 = undertowEmbeddedServletContainerFactory40.getContextPath();
        undertowEmbeddedServletContainerFactory40.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings60 = undertowEmbeddedServletContainerFactory40.getMimeMappings();
        undertowEmbeddedServletContainerFactory24.setMimeMappings(mimeMappings60);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings60);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Undertow does not support JSPs");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNull(inetAddress21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(errorPageArray32);
        org.junit.Assert.assertNull(ssl35);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(servletContextInitializerArray42);
        org.junit.Assert.assertNotNull(servletContextInitializerArray49);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray54);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(mimeMappings60);
    }

    @Test
    public void test06284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06284");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '4');
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.net.InetAddress inetAddress9 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress9);
        io.undertow.Undertow.Builder builder12 = undertowEmbeddedServletContainerFactory1.createBuilder(10);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection14 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        int int15 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory17.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray19);
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray19);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer23, initParameterConfiguringServletContextInitializer25 };
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray26);
        undertowEmbeddedServletContainerFactory17.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer30 };
        undertowEmbeddedServletContainerFactory17.addBuilderCustomizers(undertowBuilderCustomizerArray31);
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory17.ioThreads;
        java.lang.String str34 = undertowEmbeddedServletContainerFactory17.getContextPath();
        undertowEmbeddedServletContainerFactory17.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet38 = undertowEmbeddedServletContainerFactory17.getErrorPages();
        org.springframework.boot.context.embedded.Ssl ssl39 = undertowEmbeddedServletContainerFactory17.getSsl();
        io.undertow.server.handlers.resource.ResourceManager resourceManager40 = undertowEmbeddedServletContainerFactory17.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean43 = undertowEmbeddedServletContainerFactory42.directBuffers;
        io.undertow.Undertow.Builder builder44 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager45 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer47 = undertowEmbeddedServletContainerFactory42.getUndertowEmbeddedServletContainer(builder44, deploymentManager45, 0);
        undertowEmbeddedServletContainerFactory42.setSessionTimeout((int) (short) 1);
        org.springframework.boot.context.embedded.Ssl ssl50 = undertowEmbeddedServletContainerFactory42.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean53 = undertowEmbeddedServletContainerFactory52.directBuffers;
        io.undertow.Undertow.Builder builder54 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager55 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer57 = undertowEmbeddedServletContainerFactory52.getUndertowEmbeddedServletContainer(builder54, deploymentManager55, 0);
        undertowEmbeddedServletContainerFactory52.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader60 = undertowEmbeddedServletContainerFactory52.getServletClassLoader();
        undertowEmbeddedServletContainerFactory52.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory52.ioThreads = 100;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection65 = undertowEmbeddedServletContainerFactory52.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean68 = undertowEmbeddedServletContainerFactory67.directBuffers;
        undertowEmbeddedServletContainerFactory67.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings71 = undertowEmbeddedServletContainerFactory67.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray72 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory67.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray72);
        undertowEmbeddedServletContainerFactory52.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray72);
        undertowEmbeddedServletContainerFactory42.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray72);
        undertowEmbeddedServletContainerFactory17.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray72);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray72);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 32);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + true + "'", boolean13, true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray31);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(errorPageSet38);
        org.junit.Assert.assertNull(ssl39);
        org.junit.Assert.assertNotNull(resourceManager40);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer47);
        org.junit.Assert.assertNull(ssl50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer57);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection65);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(mimeMappings71);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray72);
    }

    @Test
    public void test06285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06285");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        io.undertow.server.handlers.resource.ResourceManager resourceManager10 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory14.directBuffers;
        io.undertow.Undertow.Builder builder16 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer19 = undertowEmbeddedServletContainerFactory14.getUndertowEmbeddedServletContainer(builder16, deploymentManager17, 0);
        undertowEmbeddedServletContainerFactory14.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory14.workerThreads = (-1);
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory14.directBuffers;
        boolean boolean25 = undertowEmbeddedServletContainerFactory14.isRegisterJspServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection26 = undertowEmbeddedServletContainerFactory14.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader27 = null;
        undertowEmbeddedServletContainerFactory14.resourceLoader = resourceLoader27;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean31 = undertowEmbeddedServletContainerFactory30.directBuffers;
        io.undertow.Undertow.Builder builder32 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager33 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer35 = undertowEmbeddedServletContainerFactory30.getUndertowEmbeddedServletContainer(builder32, deploymentManager33, 0);
        undertowEmbeddedServletContainerFactory30.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader38 = undertowEmbeddedServletContainerFactory30.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl39 = null;
        undertowEmbeddedServletContainerFactory30.setSsl(ssl39);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean43 = undertowEmbeddedServletContainerFactory42.directBuffers;
        undertowEmbeddedServletContainerFactory42.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = undertowEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader47 = undertowEmbeddedServletContainerFactory42.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection48 = undertowEmbeddedServletContainerFactory42.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory42.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray51 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory42.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray51);
        undertowEmbeddedServletContainerFactory30.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray51);
        boolean boolean54 = undertowEmbeddedServletContainerFactory30.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList55 = undertowEmbeddedServletContainerFactory30.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory14.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList55;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList55;
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '#');
        java.lang.Integer int62 = undertowEmbeddedServletContainerFactory1.workerThreads;
        java.net.InetAddress inetAddress63 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress63);
        java.io.File file65 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        boolean boolean66 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(resourceManager10);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer19);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection26);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer35);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNull(resourceLoader47);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection48);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList55);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test06286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06286");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList24 = undertowEmbeddedServletContainerFactory23.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList25 = undertowEmbeddedServletContainerFactory23.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList25;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '#');
        java.lang.ClassLoader classLoader29 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean32 = undertowEmbeddedServletContainerFactory31.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray33 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray33);
        undertowEmbeddedServletContainerFactory31.addInitializers(servletContextInitializerArray33);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo36 = null;
        undertowEmbeddedServletContainerFactory31.configureErrorPages(deploymentInfo36);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList38 = undertowEmbeddedServletContainerFactory31.builderCustomizers;
        undertowEmbeddedServletContainerFactory31.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean43 = undertowEmbeddedServletContainerFactory42.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray44);
        undertowEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer48 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap47);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer50 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap49);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray51 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer48, initParameterConfiguringServletContextInitializer50 };
        undertowEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray51);
        undertowEmbeddedServletContainerFactory42.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer55 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray56 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer55 };
        undertowEmbeddedServletContainerFactory42.addBuilderCustomizers(undertowBuilderCustomizerArray56);
        java.lang.Integer int58 = undertowEmbeddedServletContainerFactory42.ioThreads;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection59 = undertowEmbeddedServletContainerFactory42.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory42.directBuffers = true;
        undertowEmbeddedServletContainerFactory42.setWorkerThreads((java.lang.Integer) 100);
        boolean boolean64 = undertowEmbeddedServletContainerFactory42.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray65 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList66 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList66, undertowDeploymentInfoCustomizerArray65);
        undertowEmbeddedServletContainerFactory42.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList66;
        undertowEmbeddedServletContainerFactory31.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList66;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList66;
        org.springframework.core.io.ResourceLoader resourceLoader71 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList24);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList25);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(servletContextInitializerArray33);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList38);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
        org.junit.Assert.assertNotNull(servletContextInitializerArray51);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray56);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(resourceLoader71);
    }

    @Test
    public void test06287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06287");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader7;
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo11);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection15 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        int int16 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
    }

    @Test
    public void test06288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06288");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.setPort(0);
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray11 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNull(int6);
    }

    @Test
    public void test06289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06289");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory14.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory14.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (byte) 0);
        java.net.InetAddress inetAddress22 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress22);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean26 = undertowEmbeddedServletContainerFactory25.directBuffers;
        undertowEmbeddedServletContainerFactory25.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = undertowEmbeddedServletContainerFactory25.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader30 = undertowEmbeddedServletContainerFactory25.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection31 = undertowEmbeddedServletContainerFactory25.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory25.buffersPerRegion = 0;
        io.undertow.server.handlers.resource.ResourceManager resourceManager34 = undertowEmbeddedServletContainerFactory25.getDocumentRootResourceManager();
        org.springframework.core.io.ResourceLoader resourceLoader35 = undertowEmbeddedServletContainerFactory25.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList39 = undertowEmbeddedServletContainerFactory38.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory38.setIoThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean44 = undertowEmbeddedServletContainerFactory43.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray45 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray45);
        undertowEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray45);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer49 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap48);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer51 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap50);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray52 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer49, initParameterConfiguringServletContextInitializer51 };
        undertowEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray52);
        undertowEmbeddedServletContainerFactory43.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer56 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray57 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer56 };
        undertowEmbeddedServletContainerFactory43.addBuilderCustomizers(undertowBuilderCustomizerArray57);
        java.lang.Integer int59 = undertowEmbeddedServletContainerFactory43.ioThreads;
        java.lang.String str60 = undertowEmbeddedServletContainerFactory43.getContextPath();
        undertowEmbeddedServletContainerFactory43.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory65.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder69 = undertowEmbeddedServletContainerFactory65.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager70 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer72 = undertowEmbeddedServletContainerFactory43.getUndertowEmbeddedServletContainer(builder69, deploymentManager70, (int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray73 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory43.addBuilderCustomizers(undertowBuilderCustomizerArray73);
        undertowEmbeddedServletContainerFactory38.addBuilderCustomizers(undertowBuilderCustomizerArray73);
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray73);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray73);
        io.undertow.server.handlers.resource.ResourceManager resourceManager78 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.core.io.ResourceLoader resourceLoader79 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNull(resourceLoader30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection31);
        org.junit.Assert.assertNotNull(resourceManager34);
        org.junit.Assert.assertNull(resourceLoader35);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList39);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(servletContextInitializerArray45);
        org.junit.Assert.assertNotNull(servletContextInitializerArray52);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray57);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer72);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray73);
        org.junit.Assert.assertNotNull(resourceManager78);
        org.junit.Assert.assertNull(resourceLoader79);
    }

    @Test
    public void test06290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06290");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.lang.Boolean boolean9 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList12 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray17 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray17);
        undertowEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer21, initParameterConfiguringServletContextInitializer23 };
        undertowEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray24);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = undertowEmbeddedServletContainerFactory15.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection27 = undertowEmbeddedServletContainerFactory15.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray30 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory29.addErrorPages(errorPageArray30);
        undertowEmbeddedServletContainerFactory15.addErrorPages(errorPageArray30);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList33 = undertowEmbeddedServletContainerFactory15.deploymentInfoCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader34 = undertowEmbeddedServletContainerFactory15.resourceLoader;
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory15.setDocumentRoot(file35);
        org.springframework.core.io.ResourceLoader resourceLoader37 = undertowEmbeddedServletContainerFactory15.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean40 = undertowEmbeddedServletContainerFactory39.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray41 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray41);
        undertowEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer45 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap44);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer47 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap46);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray48 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer45, initParameterConfiguringServletContextInitializer47 };
        undertowEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray48);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = undertowEmbeddedServletContainerFactory39.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection51 = undertowEmbeddedServletContainerFactory39.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean54 = undertowEmbeddedServletContainerFactory53.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray55 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray55);
        undertowEmbeddedServletContainerFactory53.addInitializers(servletContextInitializerArray55);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer59 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap58);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer61 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap60);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray62 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer59, initParameterConfiguringServletContextInitializer61 };
        undertowEmbeddedServletContainerFactory53.addInitializers(servletContextInitializerArray62);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray62);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray62);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray62);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer68 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap67);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer70 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap69);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer72 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap71);
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer74 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap73);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer76 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap75);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer78 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap77);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray79 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer68, initParameterConfiguringServletContextInitializer70, initParameterConfiguringServletContextInitializer72, initParameterConfiguringServletContextInitializer74, initParameterConfiguringServletContextInitializer76, initParameterConfiguringServletContextInitializer78 };
        initializer66.initializers = servletContextInitializerArray79;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray81 = initializer66.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray81);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer83 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray81);
        undertowEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray81);
        undertowEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray81);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer86 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: java.lang.NullPointerException");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + true + "'", boolean9, true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList12);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection27);
        org.junit.Assert.assertNotNull(errorPageArray30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList33);
        org.junit.Assert.assertNull(resourceLoader34);
        org.junit.Assert.assertNull(resourceLoader37);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray41);
        org.junit.Assert.assertNotNull(servletContextInitializerArray48);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection51);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(servletContextInitializerArray55);
        org.junit.Assert.assertNotNull(servletContextInitializerArray62);
        org.junit.Assert.assertNotNull(servletContextInitializerArray79);
        org.junit.Assert.assertNotNull(servletContextInitializerArray81);
    }

    @Test
    public void test06291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06291");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory1.directBuffers;
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader14;
        java.lang.ClassLoader classLoader16 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        io.undertow.server.handlers.resource.ResourceManager resourceManager18 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.net.InetAddress inetAddress19 = undertowEmbeddedServletContainerFactory1.getAddress();
        int int20 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.bufferSize = 100;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(resourceManager18);
        org.junit.Assert.assertNull(inetAddress19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test06292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06292");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        io.undertow.server.handlers.resource.ResourceManager resourceManager10 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.core.io.ResourceLoader resourceLoader11 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList15 = undertowEmbeddedServletContainerFactory14.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory14.setIoThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean20 = undertowEmbeddedServletContainerFactory19.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray21);
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer27 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap26);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray28 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer25, initParameterConfiguringServletContextInitializer27 };
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray28);
        undertowEmbeddedServletContainerFactory19.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer32 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer32 };
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        java.lang.Integer int35 = undertowEmbeddedServletContainerFactory19.ioThreads;
        java.lang.String str36 = undertowEmbeddedServletContainerFactory19.getContextPath();
        undertowEmbeddedServletContainerFactory19.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory41.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder45 = undertowEmbeddedServletContainerFactory41.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager46 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer48 = undertowEmbeddedServletContainerFactory19.getUndertowEmbeddedServletContainer(builder45, deploymentManager46, (int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray49 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray49);
        undertowEmbeddedServletContainerFactory14.addBuilderCustomizers(undertowBuilderCustomizerArray49);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray49);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        java.lang.Integer int55 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(resourceManager10);
        org.junit.Assert.assertNull(resourceLoader11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray33);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer48);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray49);
        org.junit.Assert.assertNull(int55);
    }

    @Test
    public void test06293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06293");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager1.jarPath;
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.jarPath = "hi!";
        boolean boolean10 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.String str11 = jarResourcemanager1.jarPath;
        jarResourcemanager1.close();
        java.lang.String str13 = jarResourcemanager1.jarPath;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test06294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06294");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.lang.ClassLoader classLoader3 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection4 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.lang.Class<?> wildcardClass5 = undertowDeploymentInfoCustomizerCollection4.getClass();
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(classLoader3);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test06295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06295");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.ioThreads = 35;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList20);
    }

    @Test
    public void test06296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06296");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean8 = undertowEmbeddedServletContainerFactory7.directBuffers;
        undertowEmbeddedServletContainerFactory7.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = undertowEmbeddedServletContainerFactory7.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection13 = undertowEmbeddedServletContainerFactory7.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory7.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory7.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        boolean boolean18 = undertowEmbeddedServletContainerFactory7.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList19 = undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = undertowEmbeddedServletContainerFactory7.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet20);
        undertowEmbeddedServletContainerFactory1.ioThreads = 10;
        org.springframework.core.io.ResourceLoader resourceLoader24 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.boot.context.embedded.Ssl ssl25 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl25);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean31 = undertowEmbeddedServletContainerFactory30.directBuffers;
        io.undertow.Undertow.Builder builder32 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager33 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer35 = undertowEmbeddedServletContainerFactory30.getUndertowEmbeddedServletContainer(builder32, deploymentManager33, 0);
        undertowEmbeddedServletContainerFactory30.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader38 = undertowEmbeddedServletContainerFactory30.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet39 = undertowEmbeddedServletContainerFactory30.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray40 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray40);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray40);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer43 = undertowEmbeddedServletContainerFactory30.getEmbeddedServletContainer(servletContextInitializerArray40);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray40);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray45 = initializer44.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray45);
        io.undertow.servlet.api.DeploymentManager deploymentManager47 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray45);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 0);
        io.undertow.server.handlers.resource.ResourceManager resourceManager50 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList51 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList19);
        org.junit.Assert.assertNotNull(errorPageSet20);
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer35);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(errorPageSet39);
        org.junit.Assert.assertNotNull(servletContextInitializerArray40);
        org.junit.Assert.assertNotNull(embeddedServletContainer43);
        org.junit.Assert.assertNotNull(servletContextInitializerArray45);
        org.junit.Assert.assertNotNull(deploymentManager47);
        org.junit.Assert.assertNotNull(resourceManager50);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList51);
    }

    @Test
    public void test06297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06297");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '4');
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader6;
        java.lang.Boolean boolean8 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList9 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList9);
    }

    @Test
    public void test06298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06298");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "";
        java.lang.String str4 = jarResourcemanager1.jarPath;
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener5 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.registerResourceChangeListener(resourceChangeListener5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test06299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06299");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        io.undertow.Undertow.Builder builder18 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, 0);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        java.lang.String str24 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "0.0.0.0" + "'", str24, "0.0.0.0");
    }

    @Test
    public void test06300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06300");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo3 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo3);
        int int5 = undertowEmbeddedServletContainerFactory1.getPort();
        java.lang.ClassLoader classLoader6 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.workerThreads = 35;
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertNotNull(classLoader6);
    }

    @Test
    public void test06301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06301");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "hi!";
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener9 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.removeResourceChangeListener(resourceChangeListener9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test06302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06302");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file19);
        org.springframework.core.io.ResourceLoader resourceLoader21 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader21);
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean27 = undertowEmbeddedServletContainerFactory26.directBuffers;
        undertowEmbeddedServletContainerFactory26.setSessionTimeout(0);
        boolean boolean30 = undertowEmbeddedServletContainerFactory26.isRegisterDefaultServlet();
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory26.ioThreads;
        boolean boolean32 = undertowEmbeddedServletContainerFactory26.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory26.setJspServletClassName("");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection35 = undertowEmbeddedServletContainerFactory26.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory26.setJspServletClassName("");
        java.lang.String str38 = undertowEmbeddedServletContainerFactory26.getListenAddress();
        java.lang.Integer int39 = undertowEmbeddedServletContainerFactory26.workerThreads;
        boolean boolean40 = undertowEmbeddedServletContainerFactory26.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList41 = undertowEmbeddedServletContainerFactory26.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList41;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean45 = undertowEmbeddedServletContainerFactory44.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray46);
        undertowEmbeddedServletContainerFactory44.addInitializers(servletContextInitializerArray46);
        boolean boolean49 = undertowEmbeddedServletContainerFactory44.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList50 = undertowEmbeddedServletContainerFactory44.deploymentInfoCustomizers;
        java.lang.Integer int51 = undertowEmbeddedServletContainerFactory44.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean54 = undertowEmbeddedServletContainerFactory53.directBuffers;
        io.undertow.Undertow.Builder builder55 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager56 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer58 = undertowEmbeddedServletContainerFactory53.getUndertowEmbeddedServletContainer(builder55, deploymentManager56, 0);
        undertowEmbeddedServletContainerFactory53.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader61 = undertowEmbeddedServletContainerFactory53.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl62 = null;
        undertowEmbeddedServletContainerFactory53.setSsl(ssl62);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean66 = undertowEmbeddedServletContainerFactory65.directBuffers;
        undertowEmbeddedServletContainerFactory65.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings69 = undertowEmbeddedServletContainerFactory65.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader70 = undertowEmbeddedServletContainerFactory65.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection71 = undertowEmbeddedServletContainerFactory65.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory65.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray74 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory65.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray74);
        undertowEmbeddedServletContainerFactory53.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray74);
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray74);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList78 = undertowEmbeddedServletContainerFactory44.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList78;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "0.0.0.0" + "'", str38, "0.0.0.0");
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList41);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer58);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNotNull(mimeMappings69);
        org.junit.Assert.assertNull(resourceLoader70);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection71);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray74);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList78);
    }

    @Test
    public void test06303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06303");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        java.lang.String str5 = jarResourcemanager1.jarPath;
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener6 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.registerResourceChangeListener(resourceChangeListener6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0.0.0.0" + "'", str5, "0.0.0.0");
    }

    @Test
    public void test06304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06304");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList5, undertowBuilderCustomizerArray4);
        undertowEmbeddedServletContainerFactory2.builderCustomizers = undertowBuilderCustomizerList5;
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory2.ioThreads = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory13.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray15 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray15);
        undertowEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer19 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap18);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer19, initParameterConfiguringServletContextInitializer21 };
        undertowEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray22);
        undertowEmbeddedServletContainerFactory13.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer26 };
        undertowEmbeddedServletContainerFactory13.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str32 = undertowEmbeddedServletContainerFactory31.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet33 = undertowEmbeddedServletContainerFactory31.getErrorPages();
        undertowEmbeddedServletContainerFactory13.setErrorPages(errorPageSet33);
        undertowEmbeddedServletContainerFactory2.setErrorPages(errorPageSet33);
        org.springframework.boot.context.embedded.Ssl ssl36 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl36);
        io.undertow.server.handlers.resource.ResourceManager resourceManager38 = undertowEmbeddedServletContainerFactory2.getDocumentRootResourceManager();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo39 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean42 = undertowEmbeddedServletContainerFactory41.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray43 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray43);
        undertowEmbeddedServletContainerFactory41.addInitializers(servletContextInitializerArray43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer47 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap46);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer49 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap48);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray50 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer47, initParameterConfiguringServletContextInitializer49 };
        undertowEmbeddedServletContainerFactory41.addInitializers(servletContextInitializerArray50);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = undertowEmbeddedServletContainerFactory41.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean55 = undertowEmbeddedServletContainerFactory54.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray56 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray56);
        undertowEmbeddedServletContainerFactory54.addInitializers(servletContextInitializerArray56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer60 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap59);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer62 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap61);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray63 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer60, initParameterConfiguringServletContextInitializer62 };
        undertowEmbeddedServletContainerFactory54.addInitializers(servletContextInitializerArray63);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray63);
        undertowEmbeddedServletContainerFactory41.addInitializers(servletContextInitializerArray63);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray63);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray63);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray69 = initializer68.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray69);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray69);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray69);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer73 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray69);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory2.registerServletContainerInitializerToDriveServletContextInitializers(deploymentInfo39, servletContextInitializerArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0.0.0.0" + "'", str3, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "0.0.0.0" + "'", str32, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet33);
        org.junit.Assert.assertNotNull(resourceManager38);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(servletContextInitializerArray43);
        org.junit.Assert.assertNotNull(servletContextInitializerArray50);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(servletContextInitializerArray56);
        org.junit.Assert.assertNotNull(servletContextInitializerArray63);
        org.junit.Assert.assertNotNull(servletContextInitializerArray69);
    }

    @Test
    public void test06305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06305");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        undertowEmbeddedServletContainerFactory15.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader20 = undertowEmbeddedServletContainerFactory15.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection21 = undertowEmbeddedServletContainerFactory15.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory15.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray24 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory15.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray24);
        java.lang.String str26 = undertowEmbeddedServletContainerFactory15.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory15.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList27;
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        undertowEmbeddedServletContainerFactory1.setPort((int) 'a');
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.server.handlers.resource.ResourceManager resourceManager35 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.ErrorPage errorPage36 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage37 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(resourceLoader20);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection21);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0.0.0.0" + "'", str26, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertNotNull(resourceManager35);
    }

    @Test
    public void test06306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06306");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet3 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file4);
        org.springframework.boot.context.embedded.Ssl ssl6 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl6);
        org.springframework.boot.context.embedded.Ssl ssl8 = undertowEmbeddedServletContainerFactory0.getSsl();
        undertowEmbeddedServletContainerFactory0.workerThreads = 35;
        org.junit.Assert.assertNotNull(errorPageSet3);
        org.junit.Assert.assertNull(ssl8);
    }

    @Test
    public void test06307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06307");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.ioThreads = 100;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection14 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        io.undertow.servlet.api.DeploymentInfo deploymentInfo19 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo19);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray21 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection14);
    }

    @Test
    public void test06308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06308");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo5 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo5);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList7 = undertowEmbeddedServletContainerFactory2.builderCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList8 = undertowEmbeddedServletContainerFactory2.deploymentInfoCustomizers;
        java.net.InetAddress inetAddress9 = undertowEmbeddedServletContainerFactory2.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory2.buffersPerRegion;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList8);
        org.junit.Assert.assertNull(inetAddress9);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test06309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06309");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.jarPath = "";
        boolean boolean10 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.Class<?> wildcardClass11 = jarResourcemanager1.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test06310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06310");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory1.directBuffers;
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader14;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory17.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray19);
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray19);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer23, initParameterConfiguringServletContextInitializer25 };
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray26);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection29 = undertowEmbeddedServletContainerFactory17.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray32 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory31.addErrorPages(errorPageArray32);
        undertowEmbeddedServletContainerFactory17.addErrorPages(errorPageArray32);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray32);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        io.undertow.server.handlers.resource.ResourceManager resourceManager38 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.Ssl ssl39 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList40 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Ssl ssl41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode42 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection29);
        org.junit.Assert.assertNotNull(errorPageArray32);
        org.junit.Assert.assertNotNull(resourceManager38);
        org.junit.Assert.assertNull(ssl39);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList40);
    }

    @Test
    public void test06311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06311");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray2 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory5.directBuffers;
        undertowEmbeddedServletContainerFactory5.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray9 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet10, errorPageArray9);
        undertowEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet10);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet10);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 1);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.junit.Assert.assertNotNull(errorPageArray2);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(errorPageArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06312");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray9 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray9);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray9);
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory1.getSsl();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo13 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo13);
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        java.lang.Boolean boolean20 = undertowEmbeddedServletContainerFactory18.directBuffers;
        undertowEmbeddedServletContainerFactory18.ioThreads = (-1);
        org.springframework.core.io.ResourceLoader resourceLoader23 = null;
        undertowEmbeddedServletContainerFactory18.resourceLoader = resourceLoader23;
        undertowEmbeddedServletContainerFactory18.setPort(100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean29 = undertowEmbeddedServletContainerFactory28.directBuffers;
        undertowEmbeddedServletContainerFactory28.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory28.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader33 = undertowEmbeddedServletContainerFactory28.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection34 = undertowEmbeddedServletContainerFactory28.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray37 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory36.addErrorPages(errorPageArray37);
        undertowEmbeddedServletContainerFactory28.addErrorPages(errorPageArray37);
        boolean boolean40 = undertowEmbeddedServletContainerFactory28.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean43 = undertowEmbeddedServletContainerFactory42.directBuffers;
        io.undertow.Undertow.Builder builder44 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager45 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer47 = undertowEmbeddedServletContainerFactory42.getUndertowEmbeddedServletContainer(builder44, deploymentManager45, 0);
        undertowEmbeddedServletContainerFactory42.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader50 = undertowEmbeddedServletContainerFactory42.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet51 = undertowEmbeddedServletContainerFactory42.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray52 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray52);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray52);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer55 = undertowEmbeddedServletContainerFactory42.getEmbeddedServletContainer(servletContextInitializerArray52);
        io.undertow.servlet.api.DeploymentManager deploymentManager56 = undertowEmbeddedServletContainerFactory28.createDeploymentManager(servletContextInitializerArray52);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray52);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray58 = initializer57.initializers;
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer59 = undertowEmbeddedServletContainerFactory18.getEmbeddedServletContainer(servletContextInitializerArray58);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray58);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray58);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray58);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(errorPageArray9);
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNull(resourceLoader33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection34);
        org.junit.Assert.assertNotNull(errorPageArray37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer47);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(errorPageSet51);
        org.junit.Assert.assertNotNull(servletContextInitializerArray52);
        org.junit.Assert.assertNotNull(embeddedServletContainer55);
        org.junit.Assert.assertNotNull(deploymentManager56);
        org.junit.Assert.assertNotNull(servletContextInitializerArray58);
        org.junit.Assert.assertNotNull(embeddedServletContainer59);
    }

    @Test
    public void test06313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06313");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl8);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        java.lang.ClassLoader classLoader14 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory16.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray18);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer24 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap23);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer22, initParameterConfiguringServletContextInitializer24 };
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection28 = undertowEmbeddedServletContainerFactory16.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray31 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory30.addErrorPages(errorPageArray31);
        undertowEmbeddedServletContainerFactory16.addErrorPages(errorPageArray31);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray31);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList35 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 35);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.springframework.core.io.ResourceLoader resourceLoader41 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader41);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection28);
        org.junit.Assert.assertNotNull(errorPageArray31);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList35);
        org.junit.Assert.assertNotNull(mimeMappings36);
    }

    @Test
    public void test06314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06314");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.close();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource10 = jarResourcemanager1.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test06315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06315");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader8);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo10 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo10);
        int int12 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer13 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray14 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer13 };
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray14);
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode17 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray14);
    }

    @Test
    public void test06316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06316");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.lang.String str3 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0.0.0.0" + "'", str3, "0.0.0.0");
    }

    @Test
    public void test06317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06317");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "0.0.0.0";
        boolean boolean9 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        jarResourcemanager1.jarPath = "0.0.0.0";
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06318");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory16.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray18);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer24 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap23);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer22, initParameterConfiguringServletContextInitializer24 };
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection28 = undertowEmbeddedServletContainerFactory16.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray31 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory30.addErrorPages(errorPageArray31);
        undertowEmbeddedServletContainerFactory16.addErrorPages(errorPageArray31);
        java.lang.Integer int34 = undertowEmbeddedServletContainerFactory16.buffersPerRegion;
        org.springframework.core.io.ResourceLoader resourceLoader35 = null;
        undertowEmbeddedServletContainerFactory16.resourceLoader = resourceLoader35;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList37 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList37;
        org.springframework.core.io.ResourceLoader resourceLoader39 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.concurrent.TimeUnit timeUnit41 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '#', timeUnit41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection28);
        org.junit.Assert.assertNotNull(errorPageArray31);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList37);
        org.junit.Assert.assertNull(resourceLoader39);
    }

    @Test
    public void test06319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06319");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getListenAddress();
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory2.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean7 = undertowEmbeddedServletContainerFactory6.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray8);
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray8);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer14 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap13);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray15 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer12, initParameterConfiguringServletContextInitializer14 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray15);
        undertowEmbeddedServletContainerFactory6.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer19 };
        undertowEmbeddedServletContainerFactory6.addBuilderCustomizers(undertowBuilderCustomizerArray20);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory6.addBuilderCustomizers(undertowBuilderCustomizerArray22);
        java.lang.String str24 = undertowEmbeddedServletContainerFactory6.getListenAddress();
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory6.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory27.buffersPerRegion;
        java.lang.String str29 = undertowEmbeddedServletContainerFactory27.getListenAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager30 = undertowEmbeddedServletContainerFactory27.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = undertowEmbeddedServletContainerFactory27.getMimeMappings();
        undertowEmbeddedServletContainerFactory6.setMimeMappings(mimeMappings31);
        undertowEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings31);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList34 = undertowEmbeddedServletContainerFactory2.deploymentInfoCustomizers;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0.0.0.0" + "'", str3, "0.0.0.0");
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNotNull(servletContextInitializerArray15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "0.0.0.0" + "'", str24, "0.0.0.0");
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "0.0.0.0" + "'", str29, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager30);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList34);
    }

    @Test
    public void test06320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06320");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        java.lang.String str19 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.io.File file20 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        org.springframework.boot.context.embedded.Ssl ssl23 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList25 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 100;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 52);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "0.0.0.0" + "'", str19, "0.0.0.0");
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(ssl23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList25);
        org.junit.Assert.assertNotNull(errorPageSet26);
    }

    @Test
    public void test06321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06321");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager1.jarPath;
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "";
        boolean boolean9 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean10 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.String str11 = jarResourcemanager1.jarPath;
        java.lang.String str12 = jarResourcemanager1.jarPath;
        java.lang.String str13 = jarResourcemanager1.jarPath;
        jarResourcemanager1.close();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource16 = jarResourcemanager1.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test06322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06322");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        jarResourcemanager1.jarPath = "";
        boolean boolean7 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        jarResourcemanager1.jarPath = "0.0.0.0";
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource12 = jarResourcemanager1.getResource("");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test06323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06323");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.net.InetAddress inetAddress11 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getContextPath();
        int int13 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 10);
        java.lang.ClassLoader classLoader16 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode18 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(classLoader16);
    }

    @Test
    public void test06324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06324");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        io.undertow.server.handlers.resource.ResourceManager resourceManager7 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.net.InetAddress inetAddress9 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(resourceManager7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNull(inetAddress9);
    }

    @Test
    public void test06325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06325");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        undertowEmbeddedServletContainerFactory15.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader20 = undertowEmbeddedServletContainerFactory15.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection21 = undertowEmbeddedServletContainerFactory15.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory15.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray24 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory15.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray24);
        java.lang.String str26 = undertowEmbeddedServletContainerFactory15.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory15.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList27;
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        undertowEmbeddedServletContainerFactory1.setPort((int) 'a');
        org.springframework.core.io.ResourceLoader resourceLoader33 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader33);
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file35);
        java.io.File file37 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray40 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory39.addErrorPages(errorPageArray40);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer42 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray43 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer42 };
        undertowEmbeddedServletContainerFactory39.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray43);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray45 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray45);
        undertowEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray45);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray45);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray45);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray45);
        boolean boolean51 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList52 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.springframework.boot.context.embedded.Ssl ssl53 = undertowEmbeddedServletContainerFactory1.getSsl();
        int int54 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader55 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader55);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(resourceLoader20);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection21);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0.0.0.0" + "'", str26, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(errorPageArray40);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray43);
        org.junit.Assert.assertNotNull(servletContextInitializerArray45);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList52);
        org.junit.Assert.assertNull(ssl53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
    }

    @Test
    public void test06326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06326");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.core.io.ResourceLoader resourceLoader8 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(resourceLoader8);
    }

    @Test
    public void test06327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06327");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean9 = undertowEmbeddedServletContainerFactory8.directBuffers;
        undertowEmbeddedServletContainerFactory8.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader13 = undertowEmbeddedServletContainerFactory8.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection14 = undertowEmbeddedServletContainerFactory8.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory8.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray17);
        java.lang.String str19 = undertowEmbeddedServletContainerFactory8.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean22 = undertowEmbeddedServletContainerFactory21.directBuffers;
        undertowEmbeddedServletContainerFactory21.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray25 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet26, errorPageArray25);
        undertowEmbeddedServletContainerFactory21.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet26);
        undertowEmbeddedServletContainerFactory8.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet26);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet26);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.ioThreads = 100;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection14);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "0.0.0.0" + "'", str19, "0.0.0.0");
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(errorPageArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test06328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06328");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 52;
    }

    @Test
    public void test06329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06329");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        boolean boolean2 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        java.lang.String str4 = jarResourcemanager1.jarPath;
        java.lang.String str5 = jarResourcemanager1.jarPath;
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener6 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.registerResourceChangeListener(resourceChangeListener6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test06330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06330");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory14.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray16);
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer20 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap19);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer20, initParameterConfiguringServletContextInitializer22 };
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray23);
        undertowEmbeddedServletContainerFactory14.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer27 };
        undertowEmbeddedServletContainerFactory14.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        java.lang.Integer int30 = undertowEmbeddedServletContainerFactory14.ioThreads;
        java.lang.String str31 = undertowEmbeddedServletContainerFactory14.getContextPath();
        undertowEmbeddedServletContainerFactory14.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory36.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder40 = undertowEmbeddedServletContainerFactory36.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager41 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer43 = undertowEmbeddedServletContainerFactory14.getUndertowEmbeddedServletContainer(builder40, deploymentManager41, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory14.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory14.bufferSize = 1;
        undertowEmbeddedServletContainerFactory14.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean52 = undertowEmbeddedServletContainerFactory51.directBuffers;
        undertowEmbeddedServletContainerFactory51.setSessionTimeout(0);
        boolean boolean55 = undertowEmbeddedServletContainerFactory51.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean58 = undertowEmbeddedServletContainerFactory57.directBuffers;
        undertowEmbeddedServletContainerFactory57.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = undertowEmbeddedServletContainerFactory57.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader62 = undertowEmbeddedServletContainerFactory57.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection63 = undertowEmbeddedServletContainerFactory57.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory57.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray66 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory57.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray66);
        boolean boolean68 = undertowEmbeddedServletContainerFactory57.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList69 = undertowEmbeddedServletContainerFactory57.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet70 = undertowEmbeddedServletContainerFactory57.getErrorPages();
        undertowEmbeddedServletContainerFactory51.setErrorPages(errorPageSet70);
        undertowEmbeddedServletContainerFactory14.setErrorPages(errorPageSet70);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet70);
        java.lang.String str74 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.core.io.ResourceLoader resourceLoader75 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader75);
        org.springframework.core.io.ResourceLoader resourceLoader77 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        org.springframework.core.io.ResourceLoader resourceLoader80 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.lang.Class<?> wildcardClass81 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer43);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNull(resourceLoader62);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection63);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList69);
        org.junit.Assert.assertNotNull(errorPageSet70);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "0.0.0.0" + "'", str74, "0.0.0.0");
        org.junit.Assert.assertNull(resourceLoader77);
        org.junit.Assert.assertNull(resourceLoader80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test06331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06331");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory23.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory23.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        int int33 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setPort(1);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet36 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.lang.ClassLoader classLoader37 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1800 + "'", int33 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet36);
        org.junit.Assert.assertNotNull(classLoader37);
    }

    @Test
    public void test06332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06332");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        java.net.InetAddress inetAddress10 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress10);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.bufferSize = 35;
        undertowEmbeddedServletContainerFactory1.workerThreads = 35;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNull(inetAddress18);
    }

    @Test
    public void test06333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06333");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader7;
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo11);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        java.lang.Integer int15 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(1800);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test06334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06334");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean4 = undertowEmbeddedServletContainerFactory3.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray5 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray5);
        undertowEmbeddedServletContainerFactory3.addInitializers(servletContextInitializerArray5);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer11 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap10);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer9, initParameterConfiguringServletContextInitializer11 };
        undertowEmbeddedServletContainerFactory3.addInitializers(servletContextInitializerArray12);
        undertowEmbeddedServletContainerFactory3.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer16 };
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory3.ioThreads;
        undertowEmbeddedServletContainerFactory3.setWorkerThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray22 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet23, errorPageArray22);
        undertowEmbeddedServletContainerFactory3.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet23);
        java.lang.Boolean boolean26 = undertowEmbeddedServletContainerFactory3.directBuffers;
        boolean boolean27 = undertowEmbeddedServletContainerFactory3.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean30 = undertowEmbeddedServletContainerFactory29.directBuffers;
        undertowEmbeddedServletContainerFactory29.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader34 = undertowEmbeddedServletContainerFactory29.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection35 = undertowEmbeddedServletContainerFactory29.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory29.buffersPerRegion = 0;
        io.undertow.server.handlers.resource.ResourceManager resourceManager38 = undertowEmbeddedServletContainerFactory29.getDocumentRootResourceManager();
        org.springframework.core.io.ResourceLoader resourceLoader39 = undertowEmbeddedServletContainerFactory29.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList43 = undertowEmbeddedServletContainerFactory42.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory42.setIoThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean48 = undertowEmbeddedServletContainerFactory47.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray49 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray49);
        undertowEmbeddedServletContainerFactory47.addInitializers(servletContextInitializerArray49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer53 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap52);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer55 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap54);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray56 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer53, initParameterConfiguringServletContextInitializer55 };
        undertowEmbeddedServletContainerFactory47.addInitializers(servletContextInitializerArray56);
        undertowEmbeddedServletContainerFactory47.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer60 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray61 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer60 };
        undertowEmbeddedServletContainerFactory47.addBuilderCustomizers(undertowBuilderCustomizerArray61);
        java.lang.Integer int63 = undertowEmbeddedServletContainerFactory47.ioThreads;
        java.lang.String str64 = undertowEmbeddedServletContainerFactory47.getContextPath();
        undertowEmbeddedServletContainerFactory47.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory69.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder73 = undertowEmbeddedServletContainerFactory69.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager74 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer76 = undertowEmbeddedServletContainerFactory47.getUndertowEmbeddedServletContainer(builder73, deploymentManager74, (int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray77 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory47.addBuilderCustomizers(undertowBuilderCustomizerArray77);
        undertowEmbeddedServletContainerFactory42.addBuilderCustomizers(undertowBuilderCustomizerArray77);
        undertowEmbeddedServletContainerFactory29.addBuilderCustomizers(undertowBuilderCustomizerArray77);
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray77);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray77);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo83 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo83);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) ' ');
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList87 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.lang.Boolean boolean88 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(servletContextInitializerArray5);
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(errorPageArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNull(resourceLoader34);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection35);
        org.junit.Assert.assertNotNull(resourceManager38);
        org.junit.Assert.assertNull(resourceLoader39);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList43);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray49);
        org.junit.Assert.assertNotNull(servletContextInitializerArray56);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray61);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer76);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray77);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList87);
        org.junit.Assert.assertNull(boolean88);
    }

    @Test
    public void test06335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06335");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager1.jarPath;
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "";
        boolean boolean9 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean10 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.String str11 = jarResourcemanager1.jarPath;
        boolean boolean12 = jarResourcemanager1.isResourceChangeListenerSupported();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.removeResourceChangeListener(resourceChangeListener13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06336");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory1.directBuffers;
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory14.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray16);
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer20 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap19);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer20, initParameterConfiguringServletContextInitializer22 };
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray23);
        undertowEmbeddedServletContainerFactory14.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer27 };
        undertowEmbeddedServletContainerFactory14.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory14.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        undertowEmbeddedServletContainerFactory14.bufferSize = 1;
        boolean boolean34 = undertowEmbeddedServletContainerFactory14.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean37 = undertowEmbeddedServletContainerFactory36.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray38 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray38);
        undertowEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer42 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap41);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer44 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap43);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray45 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer42, initParameterConfiguringServletContextInitializer44 };
        undertowEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray45);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean50 = undertowEmbeddedServletContainerFactory49.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray51 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray51);
        undertowEmbeddedServletContainerFactory49.addInitializers(servletContextInitializerArray51);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer55 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap54);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer57 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap56);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray58 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer55, initParameterConfiguringServletContextInitializer57 };
        undertowEmbeddedServletContainerFactory49.addInitializers(servletContextInitializerArray58);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray58);
        undertowEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray58);
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray58);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray58);
        java.net.InetAddress inetAddress64 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress64);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(servletContextInitializerArray38);
        org.junit.Assert.assertNotNull(servletContextInitializerArray45);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(servletContextInitializerArray51);
        org.junit.Assert.assertNotNull(servletContextInitializerArray58);
    }

    @Test
    public void test06337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06337");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        jarResourcemanager0.close();
        java.lang.String str2 = jarResourcemanager0.jarPath;
        boolean boolean3 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.jarPath = "hi!";
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener6 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager0.removeResourceChangeListener(resourceChangeListener6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test06338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06338");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        int int19 = undertowEmbeddedServletContainerFactory1.getPort();
        boolean boolean20 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file22 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo23 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = undertowEmbeddedServletContainerFactory25.getMimeMappings();
        java.lang.Boolean boolean27 = undertowEmbeddedServletContainerFactory25.directBuffers;
        undertowEmbeddedServletContainerFactory25.ioThreads = (-1);
        java.lang.String str30 = undertowEmbeddedServletContainerFactory25.getListenAddress();
        java.lang.String str31 = undertowEmbeddedServletContainerFactory25.getListenAddress();
        undertowEmbeddedServletContainerFactory25.setBufferSize((java.lang.Integer) (-1));
        io.undertow.Undertow.Builder builder35 = undertowEmbeddedServletContainerFactory25.createBuilder((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean38 = undertowEmbeddedServletContainerFactory37.directBuffers;
        io.undertow.Undertow.Builder builder39 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager40 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer42 = undertowEmbeddedServletContainerFactory37.getUndertowEmbeddedServletContainer(builder39, deploymentManager40, 0);
        undertowEmbeddedServletContainerFactory37.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader45 = undertowEmbeddedServletContainerFactory37.getServletClassLoader();
        undertowEmbeddedServletContainerFactory37.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory37.setWorkerThreads((java.lang.Integer) 1);
        org.springframework.core.io.ResourceLoader resourceLoader50 = null;
        undertowEmbeddedServletContainerFactory37.resourceLoader = resourceLoader50;
        java.lang.Boolean boolean52 = undertowEmbeddedServletContainerFactory37.directBuffers;
        org.springframework.boot.context.embedded.Ssl ssl53 = undertowEmbeddedServletContainerFactory37.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean58 = undertowEmbeddedServletContainerFactory57.directBuffers;
        io.undertow.Undertow.Builder builder59 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager60 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer62 = undertowEmbeddedServletContainerFactory57.getUndertowEmbeddedServletContainer(builder59, deploymentManager60, 0);
        org.springframework.core.io.ResourceLoader resourceLoader63 = null;
        undertowEmbeddedServletContainerFactory57.resourceLoader = resourceLoader63;
        java.lang.Integer int65 = undertowEmbeddedServletContainerFactory57.buffersPerRegion;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection66 = undertowEmbeddedServletContainerFactory57.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean69 = undertowEmbeddedServletContainerFactory68.directBuffers;
        io.undertow.Undertow.Builder builder70 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager71 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer73 = undertowEmbeddedServletContainerFactory68.getUndertowEmbeddedServletContainer(builder70, deploymentManager71, 0);
        undertowEmbeddedServletContainerFactory68.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader76 = undertowEmbeddedServletContainerFactory68.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet77 = undertowEmbeddedServletContainerFactory68.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray78 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer79 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray78);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer80 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray78);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer81 = undertowEmbeddedServletContainerFactory68.getEmbeddedServletContainer(servletContextInitializerArray78);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray78);
        undertowEmbeddedServletContainerFactory57.addInitializers(servletContextInitializerArray78);
        io.undertow.servlet.api.DeploymentManager deploymentManager84 = undertowEmbeddedServletContainerFactory55.createDeploymentManager(servletContextInitializerArray78);
        io.undertow.servlet.api.DeploymentManager deploymentManager85 = undertowEmbeddedServletContainerFactory37.createDeploymentManager(servletContextInitializerArray78);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer86 = undertowEmbeddedServletContainerFactory25.getEmbeddedServletContainer(servletContextInitializerArray78);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer87 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray78);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.registerServletContainerInitializerToDriveServletContextInitializers(deploymentInfo23, servletContextInitializerArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "0.0.0.0" + "'", str30, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "0.0.0.0" + "'", str31, "0.0.0.0");
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer42);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNull(ssl53);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer62);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection66);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer73);
        org.junit.Assert.assertNotNull(classLoader76);
        org.junit.Assert.assertNotNull(errorPageSet77);
        org.junit.Assert.assertNotNull(servletContextInitializerArray78);
        org.junit.Assert.assertNotNull(embeddedServletContainer81);
        org.junit.Assert.assertNotNull(deploymentManager84);
        org.junit.Assert.assertNotNull(deploymentManager85);
        org.junit.Assert.assertNotNull(embeddedServletContainer86);
    }

    @Test
    public void test06339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06339");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 10);
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 10);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + true + "'", boolean17, true);
    }

    @Test
    public void test06340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06340");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        int int23 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
    }

    @Test
    public void test06341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06341");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "";
        boolean boolean4 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str7 = jarResourcemanager1.jarPath;
        boolean boolean8 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean9 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        java.lang.String str11 = jarResourcemanager1.jarPath;
        java.lang.String str12 = jarResourcemanager1.jarPath;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "0.0.0.0" + "'", str11, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
    }

    @Test
    public void test06342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06342");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory9.addErrorPages(errorPageArray10);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray10);
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        io.undertow.Undertow.Builder builder17 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer20 = undertowEmbeddedServletContainerFactory15.getUndertowEmbeddedServletContainer(builder17, deploymentManager18, 0);
        undertowEmbeddedServletContainerFactory15.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader23 = undertowEmbeddedServletContainerFactory15.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer28 = undertowEmbeddedServletContainerFactory15.getEmbeddedServletContainer(servletContextInitializerArray25);
        io.undertow.servlet.api.DeploymentManager deploymentManager29 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.workerThreads = 10;
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 52;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer20);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNotNull(embeddedServletContainer28);
        org.junit.Assert.assertNotNull(deploymentManager29);
        org.junit.Assert.assertNotNull(mimeMappings30);
    }

    @Test
    public void test06343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06343");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        java.io.File file10 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.lang.String str13 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo14 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo14);
        java.io.File file16 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file16);
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        io.undertow.Undertow.Builder builder21 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (short) 10);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test06344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06344");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (-1));
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection3 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory2.buffersPerRegion;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection3);
        org.junit.Assert.assertNull(int4);
    }

    @Test
    public void test06345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06345");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.ioThreads = 35;
        org.springframework.boot.context.embedded.Ssl ssl20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory23.directBuffers;
        undertowEmbeddedServletContainerFactory23.setWorkerThreads((java.lang.Integer) 100);
        boolean boolean27 = undertowEmbeddedServletContainerFactory23.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList28 = undertowEmbeddedServletContainerFactory23.builderCustomizers;
        undertowEmbeddedServletContainerFactory23.buffersPerRegion = 0;
        java.net.InetAddress inetAddress31 = undertowEmbeddedServletContainerFactory23.getAddress();
        io.undertow.Undertow.Builder builder33 = undertowEmbeddedServletContainerFactory23.createBuilder(35);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl20, (int) '#', builder33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList28);
        org.junit.Assert.assertNull(inetAddress31);
        org.junit.Assert.assertNotNull(builder33);
    }

    @Test
    public void test06346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06346");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl8);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.bufferSize = 10;
        org.springframework.core.io.ResourceLoader resourceLoader17 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        boolean boolean18 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.String str19 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "0.0.0.0" + "'", str19, "0.0.0.0");
    }

    @Test
    public void test06347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06347");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        boolean boolean1 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.close();
        boolean boolean3 = jarResourcemanager0.isResourceChangeListenerSupported();
        boolean boolean4 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.close();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener6 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager0.registerResourceChangeListener(resourceChangeListener6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test06348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06348");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.net.InetAddress inetAddress8 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress8);
        java.lang.Boolean boolean10 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader11);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNull(boolean10);
    }

    @Test
    public void test06349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06349");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.workerThreads;
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl10);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
    }

    @Test
    public void test06350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06350");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        java.net.InetAddress inetAddress13 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory1.bufferSize;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory1.createBuilder(1800);
        boolean boolean19 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06351");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.server.handlers.resource.ResourceManager resourceManager12 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        java.lang.Integer int15 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.bufferSize = 52;
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean22 = undertowEmbeddedServletContainerFactory21.directBuffers;
        io.undertow.Undertow.Builder builder23 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer26 = undertowEmbeddedServletContainerFactory21.getUndertowEmbeddedServletContainer(builder23, deploymentManager24, 0);
        undertowEmbeddedServletContainerFactory21.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory21.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory21.directBuffers = true;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection33 = undertowEmbeddedServletContainerFactory21.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = undertowEmbeddedServletContainerFactory21.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings34);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(resourceManager12);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer26);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection33);
        org.junit.Assert.assertNotNull(mimeMappings34);
    }

    @Test
    public void test06352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06352");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        org.springframework.core.io.ResourceLoader resourceLoader14 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        io.undertow.server.handlers.resource.ResourceManager resourceManager15 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory17.directBuffers;
        io.undertow.Undertow.Builder builder19 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer22 = undertowEmbeddedServletContainerFactory17.getUndertowEmbeddedServletContainer(builder19, deploymentManager20, 0);
        undertowEmbeddedServletContainerFactory17.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader25 = undertowEmbeddedServletContainerFactory17.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = undertowEmbeddedServletContainerFactory17.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray27);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray27);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer30 = undertowEmbeddedServletContainerFactory17.getEmbeddedServletContainer(servletContextInitializerArray27);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray27);
        io.undertow.servlet.api.DeploymentManager deploymentManager32 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray27);
        java.net.InetAddress inetAddress33 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertNotNull(resourceManager15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer22);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(errorPageSet26);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(embeddedServletContainer30);
        org.junit.Assert.assertNotNull(deploymentManager32);
        org.junit.Assert.assertNull(inetAddress33);
    }

    @Test
    public void test06353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06353");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList5, undertowBuilderCustomizerArray4);
        undertowEmbeddedServletContainerFactory2.builderCustomizers = undertowBuilderCustomizerList5;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection8 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory2.setContextPath("");
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager13 = undertowEmbeddedServletContainerFactory2.getDocumentRootResourceManager();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0.0.0.0" + "'", str3, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection8);
        org.junit.Assert.assertNotNull(resourceManager13);
    }

    @Test
    public void test06354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06354");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader8;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.ioThreads = 1800;
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06355");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory2.createBuilder((int) '4');
        boolean boolean7 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean10 = undertowEmbeddedServletContainerFactory9.directBuffers;
        undertowEmbeddedServletContainerFactory9.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory9.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader14 = undertowEmbeddedServletContainerFactory9.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection15 = undertowEmbeddedServletContainerFactory9.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory9.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        java.lang.String str20 = undertowEmbeddedServletContainerFactory9.getListenAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory9.getMimeMappings();
        undertowEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings21);
        java.lang.ClassLoader classLoader23 = undertowEmbeddedServletContainerFactory2.getServletClassLoader();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection24 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "0.0.0.0" + "'", str20, "0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection24);
    }

    @Test
    public void test06356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06356");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        boolean boolean2 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        java.lang.String str4 = jarResourcemanager1.jarPath;
        java.lang.String str5 = jarResourcemanager1.jarPath;
        jarResourcemanager1.close();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test06357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06357");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1800);
        undertowEmbeddedServletContainerFactory2.directBuffers = true;
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl5);
    }

    @Test
    public void test06358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06358");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "0.0.0.0";
        boolean boolean9 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        boolean boolean15 = jarResourcemanager1.isResourceChangeListenerSupported();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener16 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.registerResourceChangeListener(resourceChangeListener16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06359");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean7 = jarResourcemanager1.isResourceChangeListenerSupported();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource9 = jarResourcemanager1.getResource("hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test06360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06360");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        java.lang.ClassLoader classLoader15 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.io.File file16 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file16);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection18 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo19 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo19);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection18);
    }

    @Test
    public void test06361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06361");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 10);
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory2.workerThreads;
        undertowEmbeddedServletContainerFactory2.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean8 = undertowEmbeddedServletContainerFactory7.directBuffers;
        io.undertow.Undertow.Builder builder9 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager10 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer12 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder9, deploymentManager10, 0);
        undertowEmbeddedServletContainerFactory7.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader15 = undertowEmbeddedServletContainerFactory7.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        undertowEmbeddedServletContainerFactory7.setSsl(ssl16);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean20 = undertowEmbeddedServletContainerFactory19.directBuffers;
        undertowEmbeddedServletContainerFactory19.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader24 = undertowEmbeddedServletContainerFactory19.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection25 = undertowEmbeddedServletContainerFactory19.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory19.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray28);
        undertowEmbeddedServletContainerFactory7.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray28);
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory7.workerThreads;
        boolean boolean32 = undertowEmbeddedServletContainerFactory7.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean35 = undertowEmbeddedServletContainerFactory34.directBuffers;
        undertowEmbeddedServletContainerFactory34.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = undertowEmbeddedServletContainerFactory34.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader39 = undertowEmbeddedServletContainerFactory34.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection40 = undertowEmbeddedServletContainerFactory34.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory34.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray43 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray43);
        java.lang.String str45 = undertowEmbeddedServletContainerFactory34.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList46 = undertowEmbeddedServletContainerFactory34.builderCustomizers;
        undertowEmbeddedServletContainerFactory7.builderCustomizers = undertowBuilderCustomizerList46;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean50 = undertowEmbeddedServletContainerFactory49.directBuffers;
        undertowEmbeddedServletContainerFactory49.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings53 = undertowEmbeddedServletContainerFactory49.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader54 = undertowEmbeddedServletContainerFactory49.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection55 = undertowEmbeddedServletContainerFactory49.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray58 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory57.addErrorPages(errorPageArray58);
        undertowEmbeddedServletContainerFactory49.addErrorPages(errorPageArray58);
        boolean boolean61 = undertowEmbeddedServletContainerFactory49.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean64 = undertowEmbeddedServletContainerFactory63.directBuffers;
        io.undertow.Undertow.Builder builder65 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager66 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer68 = undertowEmbeddedServletContainerFactory63.getUndertowEmbeddedServletContainer(builder65, deploymentManager66, 0);
        undertowEmbeddedServletContainerFactory63.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader71 = undertowEmbeddedServletContainerFactory63.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet72 = undertowEmbeddedServletContainerFactory63.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray73 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray73);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer75 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray73);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer76 = undertowEmbeddedServletContainerFactory63.getEmbeddedServletContainer(servletContextInitializerArray73);
        io.undertow.servlet.api.DeploymentManager deploymentManager77 = undertowEmbeddedServletContainerFactory49.createDeploymentManager(servletContextInitializerArray73);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer78 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray73);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer79 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray73);
        undertowEmbeddedServletContainerFactory7.addInitializers(servletContextInitializerArray73);
        undertowEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray73);
        org.springframework.boot.context.embedded.Ssl ssl82 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode83 = undertowEmbeddedServletContainerFactory2.getSslClientAuthMode(ssl82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer12);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection25);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNull(resourceLoader39);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection40);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "0.0.0.0" + "'", str45, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList46);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(mimeMappings53);
        org.junit.Assert.assertNull(resourceLoader54);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection55);
        org.junit.Assert.assertNotNull(errorPageArray58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer68);
        org.junit.Assert.assertNotNull(classLoader71);
        org.junit.Assert.assertNotNull(errorPageSet72);
        org.junit.Assert.assertNotNull(servletContextInitializerArray73);
        org.junit.Assert.assertNotNull(embeddedServletContainer76);
        org.junit.Assert.assertNotNull(deploymentManager77);
    }

    @Test
    public void test06362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06362");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList24);
    }

    @Test
    public void test06363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06363");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader3;
        io.undertow.server.handlers.resource.ResourceManager resourceManager5 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList8 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.springframework.core.io.ResourceLoader resourceLoader12 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory14.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray16);
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer20 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap19);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer20, initParameterConfiguringServletContextInitializer22 };
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray23);
        undertowEmbeddedServletContainerFactory14.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer27 };
        undertowEmbeddedServletContainerFactory14.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory14.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        java.lang.String str32 = undertowEmbeddedServletContainerFactory14.getListenAddress();
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory14.bufferSize;
        java.lang.Integer int34 = undertowEmbeddedServletContainerFactory14.buffersPerRegion;
        org.springframework.boot.context.embedded.Ssl ssl35 = null;
        undertowEmbeddedServletContainerFactory14.setSsl(ssl35);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean39 = undertowEmbeddedServletContainerFactory38.directBuffers;
        undertowEmbeddedServletContainerFactory38.setWorkerThreads((java.lang.Integer) 100);
        boolean boolean42 = undertowEmbeddedServletContainerFactory38.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList43 = undertowEmbeddedServletContainerFactory38.builderCustomizers;
        undertowEmbeddedServletContainerFactory14.builderCustomizers = undertowBuilderCustomizerList43;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList43;
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 35;
        org.springframework.core.io.ResourceLoader resourceLoader48 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader48;
        java.lang.Integer int50 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(resourceManager5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "0.0.0.0" + "'", str32, "0.0.0.0");
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList43);
        org.junit.Assert.assertNull(int50);
    }

    @Test
    public void test06364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06364");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        org.springframework.core.io.ResourceLoader resourceLoader14 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        java.util.concurrent.TimeUnit timeUnit18 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) -1, timeUnit18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNull(resourceLoader14);
    }

    @Test
    public void test06365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06365");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(1800);
        java.lang.String str2 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory5.directBuffers;
        io.undertow.Undertow.Builder builder7 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager8 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer10 = undertowEmbeddedServletContainerFactory5.getUndertowEmbeddedServletContainer(builder7, deploymentManager8, 0);
        undertowEmbeddedServletContainerFactory5.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader13 = undertowEmbeddedServletContainerFactory5.getServletClassLoader();
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory5.bufferSize;
        undertowEmbeddedServletContainerFactory5.setIoThreads((java.lang.Integer) 1800);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory5.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory5.resourceLoader = resourceLoader18;
        undertowEmbeddedServletContainerFactory5.directBuffers = true;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList22 = undertowEmbeddedServletContainerFactory5.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory5.setRegisterDefaultServlet(false);
        java.io.File file25 = null;
        undertowEmbeddedServletContainerFactory5.setDocumentRoot(file25);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList27 = undertowEmbeddedServletContainerFactory5.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList27;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer10);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList27);
    }

    @Test
    public void test06366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06366");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 10);
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader14;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList18 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        int int19 = undertowEmbeddedServletContainerFactory1.getPort();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList20 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList20);
    }

    @Test
    public void test06367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06367");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        org.springframework.core.io.ResourceLoader resourceLoader14 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean19 = undertowEmbeddedServletContainerFactory18.directBuffers;
        io.undertow.Undertow.Builder builder20 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory18.getUndertowEmbeddedServletContainer(builder20, deploymentManager21, 0);
        undertowEmbeddedServletContainerFactory18.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader26 = undertowEmbeddedServletContainerFactory18.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = undertowEmbeddedServletContainerFactory18.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet27);
        int int29 = undertowEmbeddedServletContainerFactory1.getPort();
        java.net.InetAddress inetAddress30 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress30);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(errorPageSet27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertNotNull(mimeMappings32);
    }

    @Test
    public void test06368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06368");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        int int6 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader7 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader10;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNull(resourceLoader7);
    }

    @Test
    public void test06369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06369");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo6 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo6);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory12.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray14);
        undertowEmbeddedServletContainerFactory12.addInitializers(servletContextInitializerArray14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer18 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap17);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer20 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap19);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer18, initParameterConfiguringServletContextInitializer20 };
        undertowEmbeddedServletContainerFactory12.addInitializers(servletContextInitializerArray21);
        undertowEmbeddedServletContainerFactory12.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer25 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray26 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer25 };
        undertowEmbeddedServletContainerFactory12.addBuilderCustomizers(undertowBuilderCustomizerArray26);
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory12.ioThreads;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection29 = undertowEmbeddedServletContainerFactory12.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory12.directBuffers = true;
        undertowEmbeddedServletContainerFactory12.setWorkerThreads((java.lang.Integer) 100);
        boolean boolean34 = undertowEmbeddedServletContainerFactory12.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray35 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList36 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList36, undertowDeploymentInfoCustomizerArray35);
        undertowEmbeddedServletContainerFactory12.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList36;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList36;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray40 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray26);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test06370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06370");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        java.io.File file10 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo14 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo14);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) (-1));
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray18 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
    }

    @Test
    public void test06371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06371");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager1.jarPath;
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "hi!";
        boolean boolean9 = jarResourcemanager1.isResourceChangeListenerSupported();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.registerResourceChangeListener(resourceChangeListener10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06372");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        java.net.InetAddress inetAddress14 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader15;
        java.io.File file17 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet18 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        int int19 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection20 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(errorPageSet18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection20);
    }

    @Test
    public void test06373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06373");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray8 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory7.addErrorPages(errorPageArray8);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray8);
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings16);
        java.lang.String str18 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(errorPageArray8);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test06374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06374");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        io.undertow.Undertow.Builder builder4 = undertowEmbeddedServletContainerFactory2.createBuilder((int) ' ');
        io.undertow.server.handlers.resource.ResourceManager resourceManager5 = undertowEmbeddedServletContainerFactory2.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory2.setIoThreads((java.lang.Integer) 100);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo8 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory2.configureMimeMappings(deploymentInfo8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(resourceManager5);
    }

    @Test
    public void test06375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06375");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
    }

    @Test
    public void test06376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06376");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        boolean boolean11 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        org.springframework.core.io.ResourceLoader resourceLoader14 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray15 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(resourceLoader14);
    }

    @Test
    public void test06377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06377");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory1.directBuffers;
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader14;
        java.lang.ClassLoader classLoader16 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        io.undertow.server.handlers.resource.ResourceManager resourceManager18 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection19 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection20 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.io.File file21 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.lang.Boolean boolean22 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.server.handlers.resource.ResourceManager resourceManager23 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.String str28 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.Ssl ssl29 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(resourceManager18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(resourceManager23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(ssl29);
    }

    @Test
    public void test06378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06378");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        java.lang.String str10 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file11);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet15 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.bufferSize = 100;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0.0.0.0" + "'", str10, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet15);
    }

    @Test
    public void test06379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06379");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        java.net.InetAddress inetAddress13 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1800);
        int int16 = undertowEmbeddedServletContainerFactory1.getPort();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo17 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test06380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06380");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray9 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray9);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray9);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet14 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.lang.String str15 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(errorPageArray9);
        org.junit.Assert.assertNotNull(errorPageSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0.0.0.0" + "'", str15, "0.0.0.0");
    }

    @Test
    public void test06381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06381");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        boolean boolean8 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory10.directBuffers;
        io.undertow.Undertow.Builder builder12 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager13 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer15 = undertowEmbeddedServletContainerFactory10.getUndertowEmbeddedServletContainer(builder12, deploymentManager13, 0);
        undertowEmbeddedServletContainerFactory10.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader18 = undertowEmbeddedServletContainerFactory10.getServletClassLoader();
        undertowEmbeddedServletContainerFactory10.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory10.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean25 = undertowEmbeddedServletContainerFactory24.directBuffers;
        undertowEmbeddedServletContainerFactory24.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader29 = undertowEmbeddedServletContainerFactory24.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection30 = undertowEmbeddedServletContainerFactory24.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory24.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory24.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        java.lang.String str35 = undertowEmbeddedServletContainerFactory24.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList36 = undertowEmbeddedServletContainerFactory24.builderCustomizers;
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList36;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList36;
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.Ssl ssl41 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl41);
        int int43 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer15);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNull(resourceLoader29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "0.0.0.0" + "'", str35, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList36);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
    }

    @Test
    public void test06382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06382");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.core.io.ResourceLoader resourceLoader2 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader2;
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader4);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        org.springframework.core.io.ResourceLoader resourceLoader8 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(100);
        org.junit.Assert.assertNull(resourceLoader8);
    }

    @Test
    public void test06383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06383");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        int int13 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.workerThreads = 97;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test06384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06384");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray9 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray9);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray9);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader16);
        int int18 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(errorPageArray9);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
    }

    @Test
    public void test06385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06385");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        java.lang.String str19 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean23 = undertowEmbeddedServletContainerFactory22.directBuffers;
        undertowEmbeddedServletContainerFactory22.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = undertowEmbeddedServletContainerFactory22.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader27 = undertowEmbeddedServletContainerFactory22.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection28 = undertowEmbeddedServletContainerFactory22.getDeploymentInfoCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo29 = null;
        undertowEmbeddedServletContainerFactory22.configureErrorPages(deploymentInfo29);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo31 = null;
        undertowEmbeddedServletContainerFactory22.configureErrorPages(deploymentInfo31);
        undertowEmbeddedServletContainerFactory22.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean37 = undertowEmbeddedServletContainerFactory36.directBuffers;
        undertowEmbeddedServletContainerFactory36.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader41 = undertowEmbeddedServletContainerFactory36.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection42 = undertowEmbeddedServletContainerFactory36.getDeploymentInfoCustomizers();
        boolean boolean43 = undertowEmbeddedServletContainerFactory36.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean46 = undertowEmbeddedServletContainerFactory45.directBuffers;
        io.undertow.Undertow.Builder builder47 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager48 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer50 = undertowEmbeddedServletContainerFactory45.getUndertowEmbeddedServletContainer(builder47, deploymentManager48, 0);
        undertowEmbeddedServletContainerFactory45.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader53 = undertowEmbeddedServletContainerFactory45.getServletClassLoader();
        undertowEmbeddedServletContainerFactory45.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory45.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean60 = undertowEmbeddedServletContainerFactory59.directBuffers;
        undertowEmbeddedServletContainerFactory59.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings63 = undertowEmbeddedServletContainerFactory59.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader64 = undertowEmbeddedServletContainerFactory59.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection65 = undertowEmbeddedServletContainerFactory59.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory59.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray68 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory59.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray68);
        java.lang.String str70 = undertowEmbeddedServletContainerFactory59.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList71 = undertowEmbeddedServletContainerFactory59.builderCustomizers;
        undertowEmbeddedServletContainerFactory45.builderCustomizers = undertowBuilderCustomizerList71;
        undertowEmbeddedServletContainerFactory36.builderCustomizers = undertowBuilderCustomizerList71;
        undertowEmbeddedServletContainerFactory22.builderCustomizers = undertowBuilderCustomizerList71;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList71;
        int int76 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader77 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "0.0.0.0" + "'", str19, "0.0.0.0");
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNull(resourceLoader27);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection28);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNull(resourceLoader41);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer50);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(mimeMappings63);
        org.junit.Assert.assertNull(resourceLoader64);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection65);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "0.0.0.0" + "'", str70, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList71);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 10 + "'", int76 == 10);
        org.junit.Assert.assertNull(resourceLoader77);
    }

    @Test
    public void test06386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06386");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        org.springframework.boot.context.embedded.Ssl ssl13 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 1;
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ErrorPage errorPage22 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage23 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(ssl13);
    }

    @Test
    public void test06387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06387");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        java.net.InetAddress inetAddress13 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray14);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = initializer15.initializers;
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer17 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray16);
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file18);
        boolean boolean20 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.io.File file21 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 35);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(embeddedServletContainer17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file21);
    }

    @Test
    public void test06388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06388");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader11;
        java.net.InetAddress inetAddress13 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress13);
        java.util.concurrent.TimeUnit timeUnit16 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '4', timeUnit16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(inetAddress10);
    }

    @Test
    public void test06389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06389");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean19 = undertowEmbeddedServletContainerFactory18.directBuffers;
        undertowEmbeddedServletContainerFactory18.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory23.directBuffers;
        undertowEmbeddedServletContainerFactory23.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = undertowEmbeddedServletContainerFactory23.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader28 = undertowEmbeddedServletContainerFactory23.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection29 = undertowEmbeddedServletContainerFactory23.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory23.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory23.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray32);
        boolean boolean34 = undertowEmbeddedServletContainerFactory23.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList35 = undertowEmbeddedServletContainerFactory23.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory18.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList35;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList35;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList38 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        io.undertow.server.handlers.resource.ResourceManager resourceManager39 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory1.bufferSize = 1800;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean51 = undertowEmbeddedServletContainerFactory50.directBuffers;
        undertowEmbeddedServletContainerFactory50.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = undertowEmbeddedServletContainerFactory50.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader55 = undertowEmbeddedServletContainerFactory50.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection56 = undertowEmbeddedServletContainerFactory50.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray59 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory58.addErrorPages(errorPageArray59);
        undertowEmbeddedServletContainerFactory50.addErrorPages(errorPageArray59);
        boolean boolean62 = undertowEmbeddedServletContainerFactory50.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean65 = undertowEmbeddedServletContainerFactory64.directBuffers;
        io.undertow.Undertow.Builder builder66 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager67 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer69 = undertowEmbeddedServletContainerFactory64.getUndertowEmbeddedServletContainer(builder66, deploymentManager67, 0);
        undertowEmbeddedServletContainerFactory64.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader72 = undertowEmbeddedServletContainerFactory64.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet73 = undertowEmbeddedServletContainerFactory64.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray74 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer75 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray74);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray74);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer77 = undertowEmbeddedServletContainerFactory64.getEmbeddedServletContainer(servletContextInitializerArray74);
        io.undertow.servlet.api.DeploymentManager deploymentManager78 = undertowEmbeddedServletContainerFactory50.createDeploymentManager(servletContextInitializerArray74);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings79 = undertowEmbeddedServletContainerFactory50.getMimeMappings();
        undertowEmbeddedServletContainerFactory48.setMimeMappings(mimeMappings79);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings79);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings82 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNull(resourceLoader28);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList35);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList38);
        org.junit.Assert.assertNotNull(resourceManager39);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNull(resourceLoader55);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection56);
        org.junit.Assert.assertNotNull(errorPageArray59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer69);
        org.junit.Assert.assertNotNull(classLoader72);
        org.junit.Assert.assertNotNull(errorPageSet73);
        org.junit.Assert.assertNotNull(servletContextInitializerArray74);
        org.junit.Assert.assertNotNull(embeddedServletContainer77);
        org.junit.Assert.assertNotNull(deploymentManager78);
        org.junit.Assert.assertNotNull(mimeMappings79);
        org.junit.Assert.assertNotNull(mimeMappings82);
    }

    @Test
    public void test06390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06390");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        java.net.InetAddress inetAddress14 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl15);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
    }

    @Test
    public void test06391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06391");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(1800);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(ssl17);
    }

    @Test
    public void test06392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06392");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        io.undertow.server.handlers.resource.ResourceManager resourceManager10 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory1.bufferSize;
        io.undertow.server.handlers.resource.ResourceManager resourceManager12 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory14.directBuffers;
        io.undertow.Undertow.Builder builder16 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer19 = undertowEmbeddedServletContainerFactory14.getUndertowEmbeddedServletContainer(builder16, deploymentManager17, 0);
        undertowEmbeddedServletContainerFactory14.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader22 = undertowEmbeddedServletContainerFactory14.getServletClassLoader();
        undertowEmbeddedServletContainerFactory14.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory14.ioThreads = 100;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection27 = undertowEmbeddedServletContainerFactory14.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean30 = undertowEmbeddedServletContainerFactory29.directBuffers;
        undertowEmbeddedServletContainerFactory29.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray34 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory29.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray34);
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray34);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray34);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection38 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.lang.Boolean boolean39 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.lang.Integer int40 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.Integer int41 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(resourceManager10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(resourceManager12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer19);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray34);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNull(int41);
    }

    @Test
    public void test06393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06393");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory9.addErrorPages(errorPageArray10);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray10);
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        io.undertow.Undertow.Builder builder17 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer20 = undertowEmbeddedServletContainerFactory15.getUndertowEmbeddedServletContainer(builder17, deploymentManager18, 0);
        undertowEmbeddedServletContainerFactory15.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader23 = undertowEmbeddedServletContainerFactory15.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer28 = undertowEmbeddedServletContainerFactory15.getEmbeddedServletContainer(servletContextInitializerArray25);
        io.undertow.servlet.api.DeploymentManager deploymentManager29 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray25);
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        java.io.File file32 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file32);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList34 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.net.InetAddress inetAddress35 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.Undertow.Builder builder37 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (short) -1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection38 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer20);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNotNull(embeddedServletContainer28);
        org.junit.Assert.assertNotNull(deploymentManager29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList34);
        org.junit.Assert.assertNull(inetAddress35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection38);
    }

    @Test
    public void test06394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06394");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.net.InetAddress inetAddress14 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection15 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList16 = null;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList16;
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file18);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection15);
    }

    @Test
    public void test06395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06395");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory10.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray12);
        undertowEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer16 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap15);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer18 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap17);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer16, initParameterConfiguringServletContextInitializer18 };
        undertowEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray19);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList21 = undertowEmbeddedServletContainerFactory10.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList21;
        org.springframework.core.io.ResourceLoader resourceLoader23 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader23;
        io.undertow.Undertow.Builder builder26 = undertowEmbeddedServletContainerFactory1.createBuilder((int) '#');
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList21);
        org.junit.Assert.assertNotNull(builder26);
    }

    @Test
    public void test06396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06396");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "";
        boolean boolean4 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.String str5 = jarResourcemanager1.jarPath;
        jarResourcemanager1.close();
        boolean boolean7 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        java.lang.String str9 = jarResourcemanager1.jarPath;
        jarResourcemanager1.close();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test06397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06397");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        boolean boolean7 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.jarPath = "0.0.0.0";
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test06398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06398");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        boolean boolean1 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.jarPath = "hi!";
        jarResourcemanager0.jarPath = "hi!";
        jarResourcemanager0.jarPath = "0.0.0.0";
        jarResourcemanager0.close();
        boolean boolean9 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.close();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06399");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        java.net.InetAddress inetAddress13 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection14 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection14);
    }

    @Test
    public void test06400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06400");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.lang.String str20 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test06401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06401");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        int int7 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test06402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06402");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        java.net.InetAddress inetAddress13 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.lang.Integer int21 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.lang.String str22 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "0.0.0.0" + "'", str22, "0.0.0.0");
    }

    @Test
    public void test06403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06403");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        java.lang.String str15 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test06404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06404");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.close();
        java.lang.String str9 = jarResourcemanager1.jarPath;
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.removeResourceChangeListener(resourceChangeListener12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test06405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06405");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory1.directBuffers;
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader14;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory17.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray19);
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray19);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer23, initParameterConfiguringServletContextInitializer25 };
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray26);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection29 = undertowEmbeddedServletContainerFactory17.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray32 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory31.addErrorPages(errorPageArray32);
        undertowEmbeddedServletContainerFactory17.addErrorPages(errorPageArray32);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray32);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean38 = undertowEmbeddedServletContainerFactory37.directBuffers;
        undertowEmbeddedServletContainerFactory37.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = undertowEmbeddedServletContainerFactory37.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader42 = undertowEmbeddedServletContainerFactory37.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection43 = undertowEmbeddedServletContainerFactory37.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory37.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray46 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory37.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray46);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray46);
        org.springframework.boot.context.embedded.Ssl ssl49 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl49);
        java.lang.String str51 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection29);
        org.junit.Assert.assertNotNull(errorPageArray32);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertNull(resourceLoader42);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection43);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
    }

    @Test
    public void test06406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06406");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "";
        boolean boolean4 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "0.0.0.0";
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener7 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.registerResourceChangeListener(resourceChangeListener7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test06407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06407");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList7 = null;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList7;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass11 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test06408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06408");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "0.0.0.0";
        boolean boolean9 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.registerResourceChangeListener(resourceChangeListener13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06409");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory14.directBuffers;
        undertowEmbeddedServletContainerFactory14.setSessionTimeout(0);
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory14.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray21 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory20.addErrorPages(errorPageArray21);
        undertowEmbeddedServletContainerFactory14.addErrorPages(errorPageArray21);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray21);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection25 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader26 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader26;
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 35);
        io.undertow.Undertow.Builder builder33 = undertowEmbeddedServletContainerFactory1.createBuilder(32);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(errorPageArray21);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection25);
        org.junit.Assert.assertNotNull(builder33);
    }

    @Test
    public void test06410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06410");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        int int14 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean19 = undertowEmbeddedServletContainerFactory18.directBuffers;
        io.undertow.Undertow.Builder builder20 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory18.getUndertowEmbeddedServletContainer(builder20, deploymentManager21, 0);
        undertowEmbeddedServletContainerFactory18.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader26 = undertowEmbeddedServletContainerFactory18.getServletClassLoader();
        java.lang.Integer int27 = undertowEmbeddedServletContainerFactory18.bufferSize;
        undertowEmbeddedServletContainerFactory18.setPort((-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean32 = undertowEmbeddedServletContainerFactory31.directBuffers;
        undertowEmbeddedServletContainerFactory31.setSessionTimeout(0);
        java.lang.Integer int35 = undertowEmbeddedServletContainerFactory31.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray38 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory37.addErrorPages(errorPageArray38);
        undertowEmbeddedServletContainerFactory31.addErrorPages(errorPageArray38);
        undertowEmbeddedServletContainerFactory18.addErrorPages(errorPageArray38);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean44 = undertowEmbeddedServletContainerFactory43.directBuffers;
        undertowEmbeddedServletContainerFactory43.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = undertowEmbeddedServletContainerFactory43.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader48 = undertowEmbeddedServletContainerFactory43.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection49 = undertowEmbeddedServletContainerFactory43.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray52 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory51.addErrorPages(errorPageArray52);
        undertowEmbeddedServletContainerFactory43.addErrorPages(errorPageArray52);
        undertowEmbeddedServletContainerFactory18.addErrorPages(errorPageArray52);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray52);
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet59 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.Ssl ssl60 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.Integer int61 = undertowEmbeddedServletContainerFactory1.workerThreads;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(errorPageArray38);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNull(resourceLoader48);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection49);
        org.junit.Assert.assertNotNull(errorPageArray52);
        org.junit.Assert.assertNotNull(errorPageSet59);
        org.junit.Assert.assertNull(ssl60);
        org.junit.Assert.assertNull(int61);
    }

    @Test
    public void test06411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06411");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        boolean boolean8 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        io.undertow.Undertow.Builder builder10 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (byte) -1);
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.bufferSize;
        java.net.InetAddress inetAddress13 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress13);
        undertowEmbeddedServletContainerFactory1.ioThreads = 97;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test06412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06412");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 52;
        java.net.InetAddress inetAddress24 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(inetAddress24);
    }

    @Test
    public void test06413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06413");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        int int14 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        int int17 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory20.getMimeMappings();
        java.lang.Boolean boolean22 = undertowEmbeddedServletContainerFactory20.directBuffers;
        undertowEmbeddedServletContainerFactory20.ioThreads = (-1);
        java.lang.String str25 = undertowEmbeddedServletContainerFactory20.getListenAddress();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory20.getListenAddress();
        undertowEmbeddedServletContainerFactory20.setBufferSize((java.lang.Integer) (-1));
        io.undertow.Undertow.Builder builder30 = undertowEmbeddedServletContainerFactory20.createBuilder((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean33 = undertowEmbeddedServletContainerFactory32.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray34 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray34);
        undertowEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer38 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap37);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer40 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap39);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray41 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer38, initParameterConfiguringServletContextInitializer40 };
        undertowEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray41);
        undertowEmbeddedServletContainerFactory32.workerThreads = 1;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo45 = null;
        undertowEmbeddedServletContainerFactory32.configureErrorPages(deploymentInfo45);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo47 = null;
        undertowEmbeddedServletContainerFactory32.configureErrorPages(deploymentInfo47);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 10);
        io.undertow.Undertow.Builder builder52 = undertowEmbeddedServletContainerFactory50.createBuilder((int) '4');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean57 = undertowEmbeddedServletContainerFactory56.directBuffers;
        io.undertow.Undertow.Builder builder58 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager59 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer61 = undertowEmbeddedServletContainerFactory56.getUndertowEmbeddedServletContainer(builder58, deploymentManager59, 0);
        org.springframework.core.io.ResourceLoader resourceLoader62 = null;
        undertowEmbeddedServletContainerFactory56.resourceLoader = resourceLoader62;
        java.lang.Integer int64 = undertowEmbeddedServletContainerFactory56.buffersPerRegion;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection65 = undertowEmbeddedServletContainerFactory56.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean68 = undertowEmbeddedServletContainerFactory67.directBuffers;
        io.undertow.Undertow.Builder builder69 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager70 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer72 = undertowEmbeddedServletContainerFactory67.getUndertowEmbeddedServletContainer(builder69, deploymentManager70, 0);
        undertowEmbeddedServletContainerFactory67.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader75 = undertowEmbeddedServletContainerFactory67.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet76 = undertowEmbeddedServletContainerFactory67.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray77 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer78 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray77);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer79 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray77);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer80 = undertowEmbeddedServletContainerFactory67.getEmbeddedServletContainer(servletContextInitializerArray77);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer81 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray77);
        undertowEmbeddedServletContainerFactory56.addInitializers(servletContextInitializerArray77);
        io.undertow.servlet.api.DeploymentManager deploymentManager83 = undertowEmbeddedServletContainerFactory54.createDeploymentManager(servletContextInitializerArray77);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer85 = undertowEmbeddedServletContainerFactory32.getUndertowEmbeddedServletContainer(builder52, deploymentManager83, (int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer87 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder30, deploymentManager83, 100);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0.0.0.0" + "'", str25, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0.0.0.0" + "'", str26, "0.0.0.0");
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(servletContextInitializerArray34);
        org.junit.Assert.assertNotNull(servletContextInitializerArray41);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer61);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection65);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer72);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(errorPageSet76);
        org.junit.Assert.assertNotNull(servletContextInitializerArray77);
        org.junit.Assert.assertNotNull(embeddedServletContainer80);
        org.junit.Assert.assertNotNull(deploymentManager83);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer85);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer87);
    }

    @Test
    public void test06414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06414");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.lang.String str3 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager4 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.net.InetAddress inetAddress5 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress5);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory1.workerThreads;
        java.net.InetAddress inetAddress8 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 32);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0.0.0.0" + "'", str3, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(inetAddress8);
    }

    @Test
    public void test06415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06415");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.lang.String str3 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager4 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.net.InetAddress inetAddress5 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress5);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean9 = undertowEmbeddedServletContainerFactory8.directBuffers;
        undertowEmbeddedServletContainerFactory8.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader13 = undertowEmbeddedServletContainerFactory8.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection14 = undertowEmbeddedServletContainerFactory8.getDeploymentInfoCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo15 = null;
        undertowEmbeddedServletContainerFactory8.configureErrorPages(deploymentInfo15);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo17 = null;
        undertowEmbeddedServletContainerFactory8.configureErrorPages(deploymentInfo17);
        undertowEmbeddedServletContainerFactory8.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean23 = undertowEmbeddedServletContainerFactory22.directBuffers;
        undertowEmbeddedServletContainerFactory22.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = undertowEmbeddedServletContainerFactory22.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader27 = undertowEmbeddedServletContainerFactory22.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection28 = undertowEmbeddedServletContainerFactory22.getDeploymentInfoCustomizers();
        boolean boolean29 = undertowEmbeddedServletContainerFactory22.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean32 = undertowEmbeddedServletContainerFactory31.directBuffers;
        io.undertow.Undertow.Builder builder33 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer36 = undertowEmbeddedServletContainerFactory31.getUndertowEmbeddedServletContainer(builder33, deploymentManager34, 0);
        undertowEmbeddedServletContainerFactory31.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader39 = undertowEmbeddedServletContainerFactory31.getServletClassLoader();
        undertowEmbeddedServletContainerFactory31.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory31.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean46 = undertowEmbeddedServletContainerFactory45.directBuffers;
        undertowEmbeddedServletContainerFactory45.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = undertowEmbeddedServletContainerFactory45.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader50 = undertowEmbeddedServletContainerFactory45.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection51 = undertowEmbeddedServletContainerFactory45.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory45.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray54 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory45.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        java.lang.String str56 = undertowEmbeddedServletContainerFactory45.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList57 = undertowEmbeddedServletContainerFactory45.builderCustomizers;
        undertowEmbeddedServletContainerFactory31.builderCustomizers = undertowBuilderCustomizerList57;
        undertowEmbeddedServletContainerFactory22.builderCustomizers = undertowBuilderCustomizerList57;
        undertowEmbeddedServletContainerFactory8.builderCustomizers = undertowBuilderCustomizerList57;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList57;
        java.net.InetAddress inetAddress62 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress62);
        java.lang.ClassLoader classLoader64 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(10);
        java.net.InetAddress inetAddress69 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress69);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0.0.0.0" + "'", str3, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager4);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection14);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNull(resourceLoader27);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer36);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNull(resourceLoader50);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection51);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "0.0.0.0" + "'", str56, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList57);
        org.junit.Assert.assertNotNull(classLoader64);
    }

    @Test
    public void test06416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06416");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '4');
        io.undertow.servlet.api.DeploymentInfo deploymentInfo4 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo4);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.String str10 = undertowEmbeddedServletContainerFactory9.getContextPath();
        java.net.InetAddress inetAddress11 = null;
        undertowEmbeddedServletContainerFactory9.setAddress(inetAddress11);
        undertowEmbeddedServletContainerFactory9.buffersPerRegion = 1;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory16.directBuffers;
        undertowEmbeddedServletContainerFactory16.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader21 = undertowEmbeddedServletContainerFactory16.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection22 = undertowEmbeddedServletContainerFactory16.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory16.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.core.io.ResourceLoader resourceLoader25 = null;
        undertowEmbeddedServletContainerFactory16.resourceLoader = resourceLoader25;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean29 = undertowEmbeddedServletContainerFactory28.directBuffers;
        undertowEmbeddedServletContainerFactory28.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory28.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader33 = undertowEmbeddedServletContainerFactory28.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection34 = undertowEmbeddedServletContainerFactory28.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory28.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray37 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory28.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        boolean boolean39 = undertowEmbeddedServletContainerFactory28.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList40 = undertowEmbeddedServletContainerFactory28.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet41 = undertowEmbeddedServletContainerFactory28.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean44 = undertowEmbeddedServletContainerFactory43.directBuffers;
        undertowEmbeddedServletContainerFactory43.setSessionTimeout(0);
        java.lang.Integer int47 = undertowEmbeddedServletContainerFactory43.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray50 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory49.addErrorPages(errorPageArray50);
        undertowEmbeddedServletContainerFactory43.addErrorPages(errorPageArray50);
        undertowEmbeddedServletContainerFactory28.addErrorPages(errorPageArray50);
        undertowEmbeddedServletContainerFactory16.addErrorPages(errorPageArray50);
        undertowEmbeddedServletContainerFactory9.addErrorPages(errorPageArray50);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray50);
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection22);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNull(resourceLoader33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection34);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList40);
        org.junit.Assert.assertNotNull(errorPageSet41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(errorPageArray50);
    }

    @Test
    public void test06417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06417");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory1.bufferSize = (-1);
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader8;
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl10);
    }

    @Test
    public void test06418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06418");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader7;
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        org.springframework.core.io.ResourceLoader resourceLoader13 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.core.io.ResourceLoader resourceLoader14 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection10);
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertNull(resourceLoader14);
    }

    @Test
    public void test06419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06419");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory9.addErrorPages(errorPageArray10);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray10);
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        io.undertow.Undertow.Builder builder17 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer20 = undertowEmbeddedServletContainerFactory15.getUndertowEmbeddedServletContainer(builder17, deploymentManager18, 0);
        undertowEmbeddedServletContainerFactory15.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader23 = undertowEmbeddedServletContainerFactory15.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer28 = undertowEmbeddedServletContainerFactory15.getEmbeddedServletContainer(servletContextInitializerArray25);
        io.undertow.servlet.api.DeploymentManager deploymentManager29 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean33 = undertowEmbeddedServletContainerFactory32.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray34 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray34);
        undertowEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer38 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap37);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer40 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap39);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray41 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer38, initParameterConfiguringServletContextInitializer40 };
        undertowEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray41);
        undertowEmbeddedServletContainerFactory32.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer45 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray46 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer45 };
        undertowEmbeddedServletContainerFactory32.addBuilderCustomizers(undertowBuilderCustomizerArray46);
        java.lang.Integer int48 = undertowEmbeddedServletContainerFactory32.ioThreads;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection49 = undertowEmbeddedServletContainerFactory32.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory32.directBuffers = true;
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer53 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap52);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer55 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap54);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer57 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap56);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer59 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap58);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer61 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap60);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray62 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer53, initParameterConfiguringServletContextInitializer55, initParameterConfiguringServletContextInitializer57, initParameterConfiguringServletContextInitializer59, initParameterConfiguringServletContextInitializer61 };
        undertowEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray62);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray62);
        initializer30.initializers = servletContextInitializerArray62;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray62);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray67 = initializer66.initializers;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer20);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNotNull(embeddedServletContainer28);
        org.junit.Assert.assertNotNull(deploymentManager29);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(servletContextInitializerArray34);
        org.junit.Assert.assertNotNull(servletContextInitializerArray41);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray46);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection49);
        org.junit.Assert.assertNotNull(servletContextInitializerArray62);
        org.junit.Assert.assertNotNull(servletContextInitializerArray67);
    }

    @Test
    public void test06420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06420");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file6 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        int int7 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.lang.Boolean boolean8 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 1);
        boolean boolean11 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 35;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test06421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06421");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager1.jarPath;
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str11 = jarResourcemanager1.jarPath;
        boolean boolean12 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "0.0.0.0";
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "0.0.0.0" + "'", str11, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06422");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray5 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet6 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet6, errorPageArray5);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet6);
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(errorPageArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection12);
    }

    @Test
    public void test06423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06423");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory10.directBuffers;
        io.undertow.Undertow.Builder builder12 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager13 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer15 = undertowEmbeddedServletContainerFactory10.getUndertowEmbeddedServletContainer(builder12, deploymentManager13, 0);
        undertowEmbeddedServletContainerFactory10.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader18 = undertowEmbeddedServletContainerFactory10.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl19 = null;
        undertowEmbeddedServletContainerFactory10.setSsl(ssl19);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean23 = undertowEmbeddedServletContainerFactory22.directBuffers;
        undertowEmbeddedServletContainerFactory22.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = undertowEmbeddedServletContainerFactory22.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader27 = undertowEmbeddedServletContainerFactory22.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection28 = undertowEmbeddedServletContainerFactory22.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory22.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory22.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray31);
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray31);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray31);
        org.springframework.core.io.ResourceLoader resourceLoader35 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader35;
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 52;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean41 = undertowEmbeddedServletContainerFactory40.directBuffers;
        undertowEmbeddedServletContainerFactory40.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = undertowEmbeddedServletContainerFactory40.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader45 = undertowEmbeddedServletContainerFactory40.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection46 = undertowEmbeddedServletContainerFactory40.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory40.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray49 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory40.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        java.lang.ClassLoader classLoader51 = undertowEmbeddedServletContainerFactory40.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int54 = undertowEmbeddedServletContainerFactory53.buffersPerRegion;
        undertowEmbeddedServletContainerFactory53.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.Ssl ssl57 = undertowEmbeddedServletContainerFactory53.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean60 = undertowEmbeddedServletContainerFactory59.directBuffers;
        io.undertow.Undertow.Builder builder61 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager62 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer64 = undertowEmbeddedServletContainerFactory59.getUndertowEmbeddedServletContainer(builder61, deploymentManager62, 0);
        undertowEmbeddedServletContainerFactory59.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader67 = undertowEmbeddedServletContainerFactory59.getServletClassLoader();
        java.lang.Integer int68 = undertowEmbeddedServletContainerFactory59.bufferSize;
        undertowEmbeddedServletContainerFactory59.setPort((-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean73 = undertowEmbeddedServletContainerFactory72.directBuffers;
        undertowEmbeddedServletContainerFactory72.setSessionTimeout(0);
        java.lang.Integer int76 = undertowEmbeddedServletContainerFactory72.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray79 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory78.addErrorPages(errorPageArray79);
        undertowEmbeddedServletContainerFactory72.addErrorPages(errorPageArray79);
        undertowEmbeddedServletContainerFactory59.addErrorPages(errorPageArray79);
        undertowEmbeddedServletContainerFactory53.addErrorPages(errorPageArray79);
        undertowEmbeddedServletContainerFactory40.addErrorPages(errorPageArray79);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray79);
        java.lang.Integer int86 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer15);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNull(resourceLoader27);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection28);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray31);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNull(resourceLoader45);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection46);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray49);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(ssl57);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer64);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(errorPageArray79);
        org.junit.Assert.assertNull(int86);
    }

    @Test
    public void test06424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06424");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        java.io.File file15 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test06425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06425");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory14.directBuffers;
        undertowEmbeddedServletContainerFactory14.setSessionTimeout(0);
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory14.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray21 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory20.addErrorPages(errorPageArray21);
        undertowEmbeddedServletContainerFactory14.addErrorPages(errorPageArray21);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray21);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean27 = undertowEmbeddedServletContainerFactory26.directBuffers;
        undertowEmbeddedServletContainerFactory26.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = undertowEmbeddedServletContainerFactory26.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader31 = undertowEmbeddedServletContainerFactory26.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection32 = undertowEmbeddedServletContainerFactory26.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray35 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory34.addErrorPages(errorPageArray35);
        undertowEmbeddedServletContainerFactory26.addErrorPages(errorPageArray35);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray35);
        java.lang.Boolean boolean39 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.ErrorPage errorPage44 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage45 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(errorPageArray21);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNull(resourceLoader31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection32);
        org.junit.Assert.assertNotNull(errorPageArray35);
        org.junit.Assert.assertNull(boolean39);
    }

    @Test
    public void test06426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06426");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray10);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray13);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray13);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray13);
        initializer12.initializers = servletContextInitializerArray13;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray13);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray13);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = initializer19.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray20);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
    }

    @Test
    public void test06427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06427");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        int int20 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.lang.ClassLoader classLoader21 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int22 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.Undertow.Builder builder26 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNull(int22);
    }

    @Test
    public void test06428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06428");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '4');
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.io.File file9 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 97);
        java.lang.String str14 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0.0.0.0" + "'", str14, "0.0.0.0");
    }

    @Test
    public void test06429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06429");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.ioThreads = 100;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '4');
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader13 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.ErrorPage errorPage16 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage17 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(resourceLoader13);
    }

    @Test
    public void test06430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06430");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        boolean boolean4 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        jarResourcemanager1.jarPath = "hi!";
        java.lang.String str10 = jarResourcemanager1.jarPath;
        java.lang.String str11 = jarResourcemanager1.jarPath;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test06431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06431");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray9 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray9);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray9);
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory16.directBuffers;
        io.undertow.Undertow.Builder builder18 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory16.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, 0);
        undertowEmbeddedServletContainerFactory16.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader24 = undertowEmbeddedServletContainerFactory16.getServletClassLoader();
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory16.bufferSize;
        undertowEmbeddedServletContainerFactory16.setIoThreads((java.lang.Integer) 1800);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection28 = undertowEmbeddedServletContainerFactory16.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList29 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList29;
        java.net.InetAddress inetAddress31 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress31);
        io.undertow.server.handlers.resource.ResourceManager resourceManager33 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(errorPageArray9);
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection28);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList29);
        org.junit.Assert.assertNotNull(resourceManager33);
    }

    @Test
    public void test06432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06432");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory12.directBuffers;
        undertowEmbeddedServletContainerFactory12.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader17 = undertowEmbeddedServletContainerFactory12.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection18 = undertowEmbeddedServletContainerFactory12.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory12.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory12.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray21);
        boolean boolean23 = undertowEmbeddedServletContainerFactory12.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean26 = undertowEmbeddedServletContainerFactory25.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray27);
        undertowEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer31 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap30);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer33 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap32);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray34 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer31, initParameterConfiguringServletContextInitializer33 };
        undertowEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray34);
        undertowEmbeddedServletContainerFactory25.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer38 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray39 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer38 };
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        undertowEmbeddedServletContainerFactory12.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        boolean boolean43 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray34);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test06433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06433");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(0);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        java.lang.Class<?> wildcardClass6 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test06434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06434");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int15 = undertowEmbeddedServletContainerFactory14.buffersPerRegion;
        undertowEmbeddedServletContainerFactory14.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean20 = undertowEmbeddedServletContainerFactory19.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray21);
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer27 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap26);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray28 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer25, initParameterConfiguringServletContextInitializer27 };
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray28);
        undertowEmbeddedServletContainerFactory19.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer32 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer32 };
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        java.lang.Integer int35 = undertowEmbeddedServletContainerFactory19.ioThreads;
        java.lang.String str36 = undertowEmbeddedServletContainerFactory19.getContextPath();
        undertowEmbeddedServletContainerFactory19.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory41.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder45 = undertowEmbeddedServletContainerFactory41.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager46 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer48 = undertowEmbeddedServletContainerFactory19.getUndertowEmbeddedServletContainer(builder45, deploymentManager46, (int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray49 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray49);
        undertowEmbeddedServletContainerFactory14.addBuilderCustomizers(undertowBuilderCustomizerArray49);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray49);
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        org.springframework.core.io.ResourceLoader resourceLoader55 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader55);
        org.springframework.boot.context.embedded.ErrorPage errorPage57 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage58 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray33);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer48);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray49);
    }

    @Test
    public void test06435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06435");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 1;
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        java.io.File file12 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test06436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06436");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader3;
        io.undertow.server.handlers.resource.ResourceManager resourceManager5 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.server.handlers.resource.ResourceManager resourceManager8 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory11.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory11.addInitializers(servletContextInitializerArray13);
        boolean boolean16 = undertowEmbeddedServletContainerFactory11.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList17 = undertowEmbeddedServletContainerFactory11.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Ssl ssl18 = null;
        undertowEmbeddedServletContainerFactory11.setSsl(ssl18);
        undertowEmbeddedServletContainerFactory11.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory11.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings24);
        boolean boolean26 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(resourceManager5);
        org.junit.Assert.assertNotNull(resourceManager8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList17);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test06437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06437");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.String str2 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.net.InetAddress inetAddress3 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress3);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 35);
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test06438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06438");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        io.undertow.server.handlers.resource.ResourceManager resourceManager10 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 1;
        java.lang.Class<?> wildcardClass17 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(resourceManager10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test06439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06439");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl8);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        org.springframework.core.io.ResourceLoader resourceLoader19 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader19);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNotNull(mimeMappings14);
    }

    @Test
    public void test06440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06440");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 100);
        org.springframework.boot.context.embedded.Ssl ssl3 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray7 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory6.addErrorPages(errorPageArray7);
        java.io.File file9 = undertowEmbeddedServletContainerFactory6.getDocumentRoot();
        undertowEmbeddedServletContainerFactory6.buffersPerRegion = 10;
        java.lang.String str12 = undertowEmbeddedServletContainerFactory6.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 10);
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory15.workerThreads;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory15.setResourceLoader(resourceLoader18);
        undertowEmbeddedServletContainerFactory15.setDirectBuffers((java.lang.Boolean) false);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        undertowEmbeddedServletContainerFactory6.setErrorPages(errorPageSet22);
        undertowEmbeddedServletContainerFactory2.setErrorPages(errorPageSet22);
        org.junit.Assert.assertNotNull(errorPageArray7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(errorPageSet22);
    }

    @Test
    public void test06441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06441");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory23.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory23.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean39 = undertowEmbeddedServletContainerFactory38.directBuffers;
        undertowEmbeddedServletContainerFactory38.setSessionTimeout(0);
        boolean boolean42 = undertowEmbeddedServletContainerFactory38.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean45 = undertowEmbeddedServletContainerFactory44.directBuffers;
        undertowEmbeddedServletContainerFactory44.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = undertowEmbeddedServletContainerFactory44.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader49 = undertowEmbeddedServletContainerFactory44.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection50 = undertowEmbeddedServletContainerFactory44.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory44.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray53 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        boolean boolean55 = undertowEmbeddedServletContainerFactory44.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList56 = undertowEmbeddedServletContainerFactory44.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet57 = undertowEmbeddedServletContainerFactory44.getErrorPages();
        undertowEmbeddedServletContainerFactory38.setErrorPages(errorPageSet57);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet57);
        int int60 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.lang.String str61 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 1;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNull(resourceLoader49);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection50);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList56);
        org.junit.Assert.assertNotNull(errorPageSet57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1800 + "'", int60 == 1800);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "0.0.0.0" + "'", str61, "0.0.0.0");
    }

    @Test
    public void test06442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06442");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory9.addErrorPages(errorPageArray10);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray10);
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader16;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.lang.Boolean boolean20 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean23 = undertowEmbeddedServletContainerFactory22.directBuffers;
        io.undertow.Undertow.Builder builder24 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager25 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer27 = undertowEmbeddedServletContainerFactory22.getUndertowEmbeddedServletContainer(builder24, deploymentManager25, 0);
        undertowEmbeddedServletContainerFactory22.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory22.setBufferSize((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory22.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory22.setSessionTimeout(1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean38 = undertowEmbeddedServletContainerFactory37.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray39 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray39);
        undertowEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer43 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap42);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer45 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap44);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer43, initParameterConfiguringServletContextInitializer45 };
        undertowEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray46);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = undertowEmbeddedServletContainerFactory37.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection49 = undertowEmbeddedServletContainerFactory37.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray52 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory51.addErrorPages(errorPageArray52);
        undertowEmbeddedServletContainerFactory37.addErrorPages(errorPageArray52);
        java.lang.Integer int55 = undertowEmbeddedServletContainerFactory37.buffersPerRegion;
        org.springframework.core.io.ResourceLoader resourceLoader56 = null;
        undertowEmbeddedServletContainerFactory37.resourceLoader = resourceLoader56;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList58 = undertowEmbeddedServletContainerFactory37.builderCustomizers;
        undertowEmbeddedServletContainerFactory22.builderCustomizers = undertowBuilderCustomizerList58;
        org.springframework.core.io.ResourceLoader resourceLoader60 = undertowEmbeddedServletContainerFactory22.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str64 = undertowEmbeddedServletContainerFactory63.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray65 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList66 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList66, undertowBuilderCustomizerArray65);
        undertowEmbeddedServletContainerFactory63.builderCustomizers = undertowBuilderCustomizerList66;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray69 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray69);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray71 = initializer70.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray71);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer73 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray71);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray71);
        undertowEmbeddedServletContainerFactory63.addInitializers(servletContextInitializerArray71);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray71);
        io.undertow.servlet.api.DeploymentManager deploymentManager77 = undertowEmbeddedServletContainerFactory22.createDeploymentManager(servletContextInitializerArray71);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer78 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray71);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer79 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray71);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer27);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(servletContextInitializerArray39);
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection49);
        org.junit.Assert.assertNotNull(errorPageArray52);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList58);
        org.junit.Assert.assertNull(resourceLoader60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "0.0.0.0" + "'", str64, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray69);
        org.junit.Assert.assertNotNull(servletContextInitializerArray71);
        org.junit.Assert.assertNotNull(deploymentManager77);
        org.junit.Assert.assertNotNull(embeddedServletContainer79);
    }

    @Test
    public void test06443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06443");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl15);
        org.springframework.core.io.ResourceLoader resourceLoader17 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray18);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = initializer19.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray20);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = initializer23.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray24);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray24);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = initializer26.initializers;
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray27);
        java.lang.Class<?> wildcardClass29 = servletContextInitializerArray27.getClass();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection12);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test06444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06444");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        boolean boolean1 = jarResourcemanager0.isResourceChangeListenerSupported();
        boolean boolean2 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.jarPath = "0.0.0.0";
        jarResourcemanager0.close();
        jarResourcemanager0.jarPath = "hi!";
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener8 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager0.removeResourceChangeListener(resourceChangeListener8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test06445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06445");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray2 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory5.directBuffers;
        undertowEmbeddedServletContainerFactory5.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray9 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet10, errorPageArray9);
        undertowEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet10);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet10);
        java.io.File file14 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        io.undertow.server.handlers.resource.ResourceManager resourceManager15 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        int int16 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNotNull(errorPageArray2);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(errorPageArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(resourceManager15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
    }

    @Test
    public void test06446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06446");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection18 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean25 = undertowEmbeddedServletContainerFactory24.directBuffers;
        io.undertow.Undertow.Builder builder26 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory24.getUndertowEmbeddedServletContainer(builder26, deploymentManager27, 0);
        undertowEmbeddedServletContainerFactory24.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader32 = undertowEmbeddedServletContainerFactory24.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet33 = undertowEmbeddedServletContainerFactory24.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet33);
        org.springframework.boot.context.embedded.Ssl ssl35 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean36 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection18);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(errorPageSet33);
        org.junit.Assert.assertNull(ssl35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test06447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06447");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.lang.Boolean boolean3 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        io.undertow.Undertow.Builder builder11 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection16 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection16);
    }

    @Test
    public void test06448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06448");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList14 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList17 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList17;
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory1.workerThreads;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        int int21 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList14);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(errorPageSet20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test06449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06449");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '4');
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.io.File file9 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setPort(10);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray17 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + true + "'", boolean12, true);
    }

    @Test
    public void test06450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06450");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList5, undertowBuilderCustomizerArray4);
        undertowEmbeddedServletContainerFactory2.builderCustomizers = undertowBuilderCustomizerList5;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = initializer9.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray10);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer12 = undertowEmbeddedServletContainerFactory2.getEmbeddedServletContainer(servletContextInitializerArray10);
        boolean boolean13 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0.0.0.0" + "'", str3, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(embeddedServletContainer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test06451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06451");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray8 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer7 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray8);
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray8);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test06452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06452");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory14.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray16);
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer20 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap19);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer20, initParameterConfiguringServletContextInitializer22 };
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray23);
        undertowEmbeddedServletContainerFactory14.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer27 };
        undertowEmbeddedServletContainerFactory14.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        java.lang.Integer int30 = undertowEmbeddedServletContainerFactory14.ioThreads;
        java.lang.String str31 = undertowEmbeddedServletContainerFactory14.getContextPath();
        undertowEmbeddedServletContainerFactory14.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory36.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder40 = undertowEmbeddedServletContainerFactory36.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager41 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer43 = undertowEmbeddedServletContainerFactory14.getUndertowEmbeddedServletContainer(builder40, deploymentManager41, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory14.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory14.bufferSize = 1;
        undertowEmbeddedServletContainerFactory14.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean52 = undertowEmbeddedServletContainerFactory51.directBuffers;
        undertowEmbeddedServletContainerFactory51.setSessionTimeout(0);
        boolean boolean55 = undertowEmbeddedServletContainerFactory51.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean58 = undertowEmbeddedServletContainerFactory57.directBuffers;
        undertowEmbeddedServletContainerFactory57.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = undertowEmbeddedServletContainerFactory57.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader62 = undertowEmbeddedServletContainerFactory57.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection63 = undertowEmbeddedServletContainerFactory57.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory57.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray66 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory57.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray66);
        boolean boolean68 = undertowEmbeddedServletContainerFactory57.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList69 = undertowEmbeddedServletContainerFactory57.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet70 = undertowEmbeddedServletContainerFactory57.getErrorPages();
        undertowEmbeddedServletContainerFactory51.setErrorPages(errorPageSet70);
        undertowEmbeddedServletContainerFactory14.setErrorPages(errorPageSet70);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet70);
        java.lang.Integer int74 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.lang.Integer int75 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        io.undertow.server.handlers.resource.ResourceManager resourceManager76 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.lang.String str77 = undertowEmbeddedServletContainerFactory1.getContextPath();
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setContextPath("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer43);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNull(resourceLoader62);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection63);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList69);
        org.junit.Assert.assertNotNull(errorPageSet70);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(resourceManager76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
    }

    @Test
    public void test06453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06453");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(1800);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList17 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.lang.ClassLoader classLoader18 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean21 = undertowEmbeddedServletContainerFactory20.directBuffers;
        undertowEmbeddedServletContainerFactory20.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = undertowEmbeddedServletContainerFactory20.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader25 = undertowEmbeddedServletContainerFactory20.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection26 = undertowEmbeddedServletContainerFactory20.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory20.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray29 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray29);
        java.lang.String str31 = undertowEmbeddedServletContainerFactory20.getListenAddress();
        undertowEmbeddedServletContainerFactory20.setBuffersPerRegion((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory20.setRegisterJspServlet(false);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet36 = undertowEmbeddedServletContainerFactory20.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet36);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList17);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(resourceLoader25);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection26);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "0.0.0.0" + "'", str31, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet36);
    }

    @Test
    public void test06454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06454");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean19 = undertowEmbeddedServletContainerFactory18.directBuffers;
        undertowEmbeddedServletContainerFactory18.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory23.directBuffers;
        undertowEmbeddedServletContainerFactory23.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = undertowEmbeddedServletContainerFactory23.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader28 = undertowEmbeddedServletContainerFactory23.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection29 = undertowEmbeddedServletContainerFactory23.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory23.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory23.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray32);
        boolean boolean34 = undertowEmbeddedServletContainerFactory23.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList35 = undertowEmbeddedServletContainerFactory23.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory18.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList35;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList35;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        java.lang.ClassLoader classLoader42 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        java.net.InetAddress inetAddress45 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager46 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNull(resourceLoader28);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList35);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNull(inetAddress45);
        org.junit.Assert.assertNotNull(resourceManager46);
    }

    @Test
    public void test06455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06455");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(1800);
        org.springframework.boot.context.embedded.Ssl ssl16 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = (-1);
        java.util.concurrent.TimeUnit timeUnit20 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 100, timeUnit20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(ssl16);
    }

    @Test
    public void test06456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06456");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory13.directBuffers;
        undertowEmbeddedServletContainerFactory13.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader18 = undertowEmbeddedServletContainerFactory13.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection19 = undertowEmbeddedServletContainerFactory13.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory13.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNull(resourceLoader18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray22);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test06457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06457");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file7);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory10.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray12);
        undertowEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer16 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap15);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer18 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap17);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer16, initParameterConfiguringServletContextInitializer18 };
        undertowEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray19);
        undertowEmbeddedServletContainerFactory10.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer23 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray24 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer23 };
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray24);
        java.lang.Integer int26 = undertowEmbeddedServletContainerFactory10.ioThreads;
        java.lang.String str27 = undertowEmbeddedServletContainerFactory10.getContextPath();
        undertowEmbeddedServletContainerFactory10.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory32.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder36 = undertowEmbeddedServletContainerFactory32.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager37 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer39 = undertowEmbeddedServletContainerFactory10.getUndertowEmbeddedServletContainer(builder36, deploymentManager37, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory10.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory10.bufferSize = 1;
        undertowEmbeddedServletContainerFactory10.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean48 = undertowEmbeddedServletContainerFactory47.directBuffers;
        undertowEmbeddedServletContainerFactory47.setSessionTimeout(0);
        boolean boolean51 = undertowEmbeddedServletContainerFactory47.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean54 = undertowEmbeddedServletContainerFactory53.directBuffers;
        undertowEmbeddedServletContainerFactory53.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = undertowEmbeddedServletContainerFactory53.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader58 = undertowEmbeddedServletContainerFactory53.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection59 = undertowEmbeddedServletContainerFactory53.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory53.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray62 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory53.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray62);
        boolean boolean64 = undertowEmbeddedServletContainerFactory53.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList65 = undertowEmbeddedServletContainerFactory53.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet66 = undertowEmbeddedServletContainerFactory53.getErrorPages();
        undertowEmbeddedServletContainerFactory47.setErrorPages(errorPageSet66);
        undertowEmbeddedServletContainerFactory10.setErrorPages(errorPageSet66);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet66);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(35);
        java.lang.Integer int72 = undertowEmbeddedServletContainerFactory1.bufferSize;
        java.lang.Integer int73 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray24);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer39);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertNull(resourceLoader58);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection59);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList65);
        org.junit.Assert.assertNotNull(errorPageSet66);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNull(int73);
    }

    @Test
    public void test06458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06458");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList6 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean9 = undertowEmbeddedServletContainerFactory8.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray10);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer14 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap13);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer16 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap15);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray17 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer14, initParameterConfiguringServletContextInitializer16 };
        undertowEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray17);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean22 = undertowEmbeddedServletContainerFactory21.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray23);
        undertowEmbeddedServletContainerFactory21.addInitializers(servletContextInitializerArray23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer27 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap26);
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer29 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap28);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray30 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer27, initParameterConfiguringServletContextInitializer29 };
        undertowEmbeddedServletContainerFactory21.addInitializers(servletContextInitializerArray30);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray30);
        undertowEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray30);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray30);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray30);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray30);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray30);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray30);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(servletContextInitializerArray17);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(servletContextInitializerArray30);
    }

    @Test
    public void test06459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06459");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(0);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean8 = undertowEmbeddedServletContainerFactory7.directBuffers;
        undertowEmbeddedServletContainerFactory7.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = undertowEmbeddedServletContainerFactory7.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection13 = undertowEmbeddedServletContainerFactory7.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory7.buffersPerRegion = 0;
        io.undertow.server.handlers.resource.ResourceManager resourceManager16 = undertowEmbeddedServletContainerFactory7.getDocumentRootResourceManager();
        org.springframework.core.io.ResourceLoader resourceLoader17 = undertowEmbeddedServletContainerFactory7.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory19.buffersPerRegion;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo21 = null;
        undertowEmbeddedServletContainerFactory19.configureErrorPages(deploymentInfo21);
        int int23 = undertowEmbeddedServletContainerFactory19.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean26 = undertowEmbeddedServletContainerFactory25.directBuffers;
        undertowEmbeddedServletContainerFactory25.setSessionTimeout(0);
        boolean boolean29 = undertowEmbeddedServletContainerFactory25.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Ssl ssl30 = undertowEmbeddedServletContainerFactory25.getSsl();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet31 = undertowEmbeddedServletContainerFactory25.getErrorPages();
        undertowEmbeddedServletContainerFactory19.setErrorPages(errorPageSet31);
        undertowEmbeddedServletContainerFactory7.setErrorPages(errorPageSet31);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet31);
        org.springframework.boot.context.embedded.Ssl ssl35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode36 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection13);
        org.junit.Assert.assertNotNull(resourceManager16);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(ssl30);
        org.junit.Assert.assertNotNull(errorPageSet31);
    }

    @Test
    public void test06460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06460");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.close();
        boolean boolean3 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        java.lang.String str5 = jarResourcemanager1.jarPath;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource7 = jarResourcemanager1.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test06461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06461");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(1800);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory5.directBuffers;
        undertowEmbeddedServletContainerFactory5.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = undertowEmbeddedServletContainerFactory5.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader10 = undertowEmbeddedServletContainerFactory5.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection11 = undertowEmbeddedServletContainerFactory5.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory5.bufferSize = 1;
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory5.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory16.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray18);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer24 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap23);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer22, initParameterConfiguringServletContextInitializer24 };
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray25);
        undertowEmbeddedServletContainerFactory16.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer29 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer29 };
        undertowEmbeddedServletContainerFactory16.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory16.ioThreads;
        undertowEmbeddedServletContainerFactory16.setWorkerThreads((java.lang.Integer) 100);
        int int35 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        undertowEmbeddedServletContainerFactory16.workerThreads = 1800;
        java.lang.Integer int38 = undertowEmbeddedServletContainerFactory16.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = undertowEmbeddedServletContainerFactory40.getMimeMappings();
        undertowEmbeddedServletContainerFactory16.setMimeMappings(mimeMappings41);
        undertowEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings41);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings41);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        java.io.File file47 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(resourceLoader10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection11);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertNull(file47);
    }

    @Test
    public void test06462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06462");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory13.directBuffers;
        undertowEmbeddedServletContainerFactory13.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader18 = undertowEmbeddedServletContainerFactory13.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection19 = undertowEmbeddedServletContainerFactory13.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory13.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory1.workerThreads;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 97);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean30 = undertowEmbeddedServletContainerFactory29.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray31);
        undertowEmbeddedServletContainerFactory29.addInitializers(servletContextInitializerArray31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer35 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap34);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer37 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap36);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray38 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer35, initParameterConfiguringServletContextInitializer37 };
        undertowEmbeddedServletContainerFactory29.addInitializers(servletContextInitializerArray38);
        undertowEmbeddedServletContainerFactory29.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer42 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray43 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer42 };
        undertowEmbeddedServletContainerFactory29.addBuilderCustomizers(undertowBuilderCustomizerArray43);
        java.lang.Boolean boolean45 = undertowEmbeddedServletContainerFactory29.directBuffers;
        java.lang.Integer int46 = undertowEmbeddedServletContainerFactory29.bufferSize;
        undertowEmbeddedServletContainerFactory29.setSessionTimeout(0);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo49 = null;
        undertowEmbeddedServletContainerFactory29.configureErrorPages(deploymentInfo49);
        undertowEmbeddedServletContainerFactory29.workerThreads = 0;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList53 = undertowEmbeddedServletContainerFactory29.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList53;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.Undertow.Builder builder58 = undertowEmbeddedServletContainerFactory1.createBuilder(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNull(resourceLoader18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray22);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertNotNull(servletContextInitializerArray38);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray43);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList53);
    }

    @Test
    public void test06463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06463");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        int int15 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo16 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo16);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo18 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo18);
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.springframework.core.io.ResourceLoader resourceLoader21 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        boolean boolean22 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress23 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) -1);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 10);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(inetAddress23);
    }

    @Test
    public void test06464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06464");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.workerThreads;
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory11.directBuffers;
        io.undertow.Undertow.Builder builder13 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer16 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder13, deploymentManager14, 0);
        undertowEmbeddedServletContainerFactory11.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader19 = undertowEmbeddedServletContainerFactory11.getServletClassLoader();
        undertowEmbeddedServletContainerFactory11.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        boolean boolean23 = undertowEmbeddedServletContainerFactory11.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        undertowEmbeddedServletContainerFactory25.setSessionTimeout((int) '4');
        undertowEmbeddedServletContainerFactory25.setJspServletClassName("0.0.0.0");
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory25.setDocumentRoot(file30);
        org.springframework.core.io.ResourceLoader resourceLoader32 = null;
        undertowEmbeddedServletContainerFactory25.resourceLoader = resourceLoader32;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList34 = undertowEmbeddedServletContainerFactory25.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory11.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList34;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList34;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList37 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.springframework.boot.context.embedded.Ssl ssl38 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode39 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer16);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList34);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList37);
    }

    @Test
    public void test06465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06465");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory9.addErrorPages(errorPageArray10);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray10);
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        io.undertow.Undertow.Builder builder17 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer20 = undertowEmbeddedServletContainerFactory15.getUndertowEmbeddedServletContainer(builder17, deploymentManager18, 0);
        undertowEmbeddedServletContainerFactory15.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader23 = undertowEmbeddedServletContainerFactory15.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer28 = undertowEmbeddedServletContainerFactory15.getEmbeddedServletContainer(servletContextInitializerArray25);
        io.undertow.servlet.api.DeploymentManager deploymentManager29 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray25);
        java.lang.Integer int30 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean34 = undertowEmbeddedServletContainerFactory33.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader35 = null;
        undertowEmbeddedServletContainerFactory33.resourceLoader = resourceLoader35;
        io.undertow.server.handlers.resource.ResourceManager resourceManager37 = undertowEmbeddedServletContainerFactory33.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory33.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.server.handlers.resource.ResourceManager resourceManager40 = undertowEmbeddedServletContainerFactory33.getDocumentRootResourceManager();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList41 = undertowEmbeddedServletContainerFactory33.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList41;
        boolean boolean43 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int46 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer20);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNotNull(embeddedServletContainer28);
        org.junit.Assert.assertNotNull(deploymentManager29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(resourceManager37);
        org.junit.Assert.assertNotNull(resourceManager40);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(int46);
    }

    @Test
    public void test06466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06466");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 10);
        undertowEmbeddedServletContainerFactory1.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory5.directBuffers;
        io.undertow.Undertow.Builder builder7 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager8 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer10 = undertowEmbeddedServletContainerFactory5.getUndertowEmbeddedServletContainer(builder7, deploymentManager8, 0);
        undertowEmbeddedServletContainerFactory5.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory5.setBufferSize((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory16.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray18);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer24 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap23);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer22, initParameterConfiguringServletContextInitializer24 };
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray25);
        undertowEmbeddedServletContainerFactory16.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer29 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer29 };
        undertowEmbeddedServletContainerFactory16.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory16.ioThreads;
        io.undertow.Undertow.Builder builder33 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer36 = undertowEmbeddedServletContainerFactory16.getUndertowEmbeddedServletContainer(builder33, deploymentManager34, 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean39 = undertowEmbeddedServletContainerFactory38.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray40 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray40);
        undertowEmbeddedServletContainerFactory38.addInitializers(servletContextInitializerArray40);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer44 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap43);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer46 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap45);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray47 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer44, initParameterConfiguringServletContextInitializer46 };
        undertowEmbeddedServletContainerFactory38.addInitializers(servletContextInitializerArray47);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = undertowEmbeddedServletContainerFactory38.getMimeMappings();
        undertowEmbeddedServletContainerFactory16.setMimeMappings(mimeMappings49);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList51 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        undertowEmbeddedServletContainerFactory5.builderCustomizers = undertowBuilderCustomizerList51;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList51;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection54 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer10);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(servletContextInitializerArray40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray47);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList51);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection54);
    }

    @Test
    public void test06467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06467");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        java.lang.String str6 = jarResourcemanager1.jarPath;
        java.lang.String str7 = jarResourcemanager1.jarPath;
        java.lang.String str8 = jarResourcemanager1.jarPath;
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        java.lang.Class<?> wildcardClass11 = jarResourcemanager1.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test06468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06468");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory14.directBuffers;
        undertowEmbeddedServletContainerFactory14.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader19 = undertowEmbeddedServletContainerFactory14.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection20 = undertowEmbeddedServletContainerFactory14.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory14.buffersPerRegion = 0;
        io.undertow.server.handlers.resource.ResourceManager resourceManager23 = undertowEmbeddedServletContainerFactory14.getDocumentRootResourceManager();
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory14.bufferSize;
        io.undertow.server.handlers.resource.ResourceManager resourceManager25 = undertowEmbeddedServletContainerFactory14.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean28 = undertowEmbeddedServletContainerFactory27.directBuffers;
        io.undertow.Undertow.Builder builder29 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer32 = undertowEmbeddedServletContainerFactory27.getUndertowEmbeddedServletContainer(builder29, deploymentManager30, 0);
        undertowEmbeddedServletContainerFactory27.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader35 = undertowEmbeddedServletContainerFactory27.getServletClassLoader();
        undertowEmbeddedServletContainerFactory27.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory27.ioThreads = 100;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection40 = undertowEmbeddedServletContainerFactory27.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean43 = undertowEmbeddedServletContainerFactory42.directBuffers;
        undertowEmbeddedServletContainerFactory42.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = undertowEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray47 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory42.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray47);
        undertowEmbeddedServletContainerFactory27.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray47);
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray47);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray47);
        io.undertow.server.handlers.resource.ResourceManager resourceManager52 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean55 = undertowEmbeddedServletContainerFactory54.directBuffers;
        undertowEmbeddedServletContainerFactory54.setSessionTimeout(0);
        boolean boolean58 = undertowEmbeddedServletContainerFactory54.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean61 = undertowEmbeddedServletContainerFactory60.directBuffers;
        undertowEmbeddedServletContainerFactory60.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = undertowEmbeddedServletContainerFactory60.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader65 = undertowEmbeddedServletContainerFactory60.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection66 = undertowEmbeddedServletContainerFactory60.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory60.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray69 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory60.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray69);
        boolean boolean71 = undertowEmbeddedServletContainerFactory60.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList72 = undertowEmbeddedServletContainerFactory60.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet73 = undertowEmbeddedServletContainerFactory60.getErrorPages();
        undertowEmbeddedServletContainerFactory54.setErrorPages(errorPageSet73);
        undertowEmbeddedServletContainerFactory54.setSessionTimeout((int) (byte) -1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings77 = undertowEmbeddedServletContainerFactory54.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings77);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection79 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.lang.String str80 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList81 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.net.InetAddress inetAddress82 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress82);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNull(resourceLoader19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection20);
        org.junit.Assert.assertNotNull(resourceManager23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(resourceManager25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer32);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection40);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray47);
        org.junit.Assert.assertNotNull(resourceManager52);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNull(resourceLoader65);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection66);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList72);
        org.junit.Assert.assertNotNull(errorPageSet73);
        org.junit.Assert.assertNotNull(mimeMappings77);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "0.0.0.0" + "'", str80, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList81);
    }

    @Test
    public void test06469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06469");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        java.net.InetAddress inetAddress13 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray14);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = initializer15.initializers;
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer17 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray16);
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file18);
        boolean boolean20 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean25 = undertowEmbeddedServletContainerFactory24.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray26);
        undertowEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer32 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap31);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray33 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer30, initParameterConfiguringServletContextInitializer32 };
        undertowEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray33);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        boolean boolean36 = undertowEmbeddedServletContainerFactory24.isRegisterJspServlet();
        int int37 = undertowEmbeddedServletContainerFactory24.getPort();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList38 = undertowEmbeddedServletContainerFactory24.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList38;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(embeddedServletContainer17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertNotNull(servletContextInitializerArray33);
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList38);
    }

    @Test
    public void test06470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06470");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean22 = undertowEmbeddedServletContainerFactory21.directBuffers;
        undertowEmbeddedServletContainerFactory21.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader26 = undertowEmbeddedServletContainerFactory21.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection27 = undertowEmbeddedServletContainerFactory21.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory21.buffersPerRegion = 0;
        io.undertow.server.handlers.resource.ResourceManager resourceManager30 = undertowEmbeddedServletContainerFactory21.getDocumentRootResourceManager();
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory21.bufferSize;
        undertowEmbeddedServletContainerFactory21.setPort((int) (byte) 0);
        org.springframework.boot.context.embedded.Ssl ssl34 = undertowEmbeddedServletContainerFactory21.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean37 = undertowEmbeddedServletContainerFactory36.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray38 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray38);
        undertowEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer42 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap41);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer44 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap43);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray45 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer42, initParameterConfiguringServletContextInitializer44 };
        undertowEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray45);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection48 = undertowEmbeddedServletContainerFactory36.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray51 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory50.addErrorPages(errorPageArray51);
        undertowEmbeddedServletContainerFactory36.addErrorPages(errorPageArray51);
        undertowEmbeddedServletContainerFactory21.addErrorPages(errorPageArray51);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray51);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        org.springframework.boot.context.embedded.Ssl ssl58 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl58);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo60 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo60);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNull(resourceLoader26);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection27);
        org.junit.Assert.assertNotNull(resourceManager30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(ssl34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(servletContextInitializerArray38);
        org.junit.Assert.assertNotNull(servletContextInitializerArray45);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection48);
        org.junit.Assert.assertNotNull(errorPageArray51);
    }

    @Test
    public void test06471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06471");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        int int22 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
    }

    @Test
    public void test06472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06472");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory9.addErrorPages(errorPageArray10);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray10);
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        io.undertow.Undertow.Builder builder17 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer20 = undertowEmbeddedServletContainerFactory15.getUndertowEmbeddedServletContainer(builder17, deploymentManager18, 0);
        undertowEmbeddedServletContainerFactory15.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader23 = undertowEmbeddedServletContainerFactory15.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer28 = undertowEmbeddedServletContainerFactory15.getEmbeddedServletContainer(servletContextInitializerArray25);
        io.undertow.servlet.api.DeploymentManager deploymentManager29 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray25);
        undertowEmbeddedServletContainerFactory1.setPort(52);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList32 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer20);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNotNull(embeddedServletContainer28);
        org.junit.Assert.assertNotNull(deploymentManager29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList32);
    }

    @Test
    public void test06473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06473");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        int int19 = undertowEmbeddedServletContainerFactory1.getPort();
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.lang.String str21 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setPort(35);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean26 = undertowEmbeddedServletContainerFactory25.directBuffers;
        undertowEmbeddedServletContainerFactory25.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = undertowEmbeddedServletContainerFactory25.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader30 = undertowEmbeddedServletContainerFactory25.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection31 = undertowEmbeddedServletContainerFactory25.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory25.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray34 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory25.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray34);
        java.net.InetAddress inetAddress36 = undertowEmbeddedServletContainerFactory25.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean39 = undertowEmbeddedServletContainerFactory38.directBuffers;
        undertowEmbeddedServletContainerFactory38.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = undertowEmbeddedServletContainerFactory38.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader43 = undertowEmbeddedServletContainerFactory38.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection44 = undertowEmbeddedServletContainerFactory38.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory38.buffersPerRegion = 0;
        io.undertow.server.handlers.resource.ResourceManager resourceManager47 = undertowEmbeddedServletContainerFactory38.getDocumentRootResourceManager();
        java.lang.Integer int48 = undertowEmbeddedServletContainerFactory38.bufferSize;
        io.undertow.server.handlers.resource.ResourceManager resourceManager49 = undertowEmbeddedServletContainerFactory38.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean52 = undertowEmbeddedServletContainerFactory51.directBuffers;
        io.undertow.Undertow.Builder builder53 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager54 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer56 = undertowEmbeddedServletContainerFactory51.getUndertowEmbeddedServletContainer(builder53, deploymentManager54, 0);
        undertowEmbeddedServletContainerFactory51.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader59 = undertowEmbeddedServletContainerFactory51.getServletClassLoader();
        undertowEmbeddedServletContainerFactory51.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory51.ioThreads = 100;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection64 = undertowEmbeddedServletContainerFactory51.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean67 = undertowEmbeddedServletContainerFactory66.directBuffers;
        undertowEmbeddedServletContainerFactory66.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings70 = undertowEmbeddedServletContainerFactory66.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray71 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory66.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray71);
        undertowEmbeddedServletContainerFactory51.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray71);
        undertowEmbeddedServletContainerFactory38.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray71);
        undertowEmbeddedServletContainerFactory25.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray71);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray71);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory80 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean81 = undertowEmbeddedServletContainerFactory80.directBuffers;
        undertowEmbeddedServletContainerFactory80.setSessionTimeout(0);
        boolean boolean84 = undertowEmbeddedServletContainerFactory80.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory80.workerThreads = 0;
        int int87 = undertowEmbeddedServletContainerFactory80.getSessionTimeout();
        java.lang.String str88 = undertowEmbeddedServletContainerFactory80.getContextPath();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection89 = undertowEmbeddedServletContainerFactory80.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray90 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory80.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray90);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray90);
        java.net.InetAddress inetAddress93 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress93);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNull(resourceLoader30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray34);
        org.junit.Assert.assertNull(inetAddress36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNull(resourceLoader43);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection44);
        org.junit.Assert.assertNotNull(resourceManager47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(resourceManager49);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer56);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection64);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(mimeMappings70);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray71);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection89);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray90);
    }

    @Test
    public void test06474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06474");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean7 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.String str8 = jarResourcemanager1.jarPath;
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
    }

    @Test
    public void test06475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06475");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory17.directBuffers;
        undertowEmbeddedServletContainerFactory17.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader22 = undertowEmbeddedServletContainerFactory17.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection23 = undertowEmbeddedServletContainerFactory17.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory17.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray26 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory17.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray26);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray26);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 52;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(resourceLoader22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection23);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray26);
    }

    @Test
    public void test06476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06476");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.close();
        jarResourcemanager1.jarPath = "";
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "hi!";
        java.lang.String str10 = jarResourcemanager1.jarPath;
        jarResourcemanager1.jarPath = "0.0.0.0";
        boolean boolean13 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean14 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.String str15 = jarResourcemanager1.jarPath;
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0.0.0.0" + "'", str15, "0.0.0.0");
    }

    @Test
    public void test06477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06477");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.lang.String str3 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager4 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file8);
        undertowEmbeddedServletContainerFactory1.bufferSize = 100;
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0.0.0.0" + "'", str3, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test06478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06478");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (-1));
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory2.buffersPerRegion;
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl4);
        java.io.File file6 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory2.ioThreads;
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test06479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06479");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(1800);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader17;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
    }

    @Test
    public void test06480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06480");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray8 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer7 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray8);
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.workerThreads;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.core.io.ResourceLoader resourceLoader13 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 10);
        undertowEmbeddedServletContainerFactory15.ioThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean20 = undertowEmbeddedServletContainerFactory19.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader21 = null;
        undertowEmbeddedServletContainerFactory19.resourceLoader = resourceLoader21;
        io.undertow.server.handlers.resource.ResourceManager resourceManager23 = undertowEmbeddedServletContainerFactory19.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory19.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory19.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean30 = undertowEmbeddedServletContainerFactory29.directBuffers;
        undertowEmbeddedServletContainerFactory29.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader34 = undertowEmbeddedServletContainerFactory29.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection35 = undertowEmbeddedServletContainerFactory29.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray38 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory37.addErrorPages(errorPageArray38);
        undertowEmbeddedServletContainerFactory29.addErrorPages(errorPageArray38);
        undertowEmbeddedServletContainerFactory19.addErrorPages(errorPageArray38);
        undertowEmbeddedServletContainerFactory15.addErrorPages(errorPageArray38);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList43 = undertowEmbeddedServletContainerFactory15.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList43;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray8);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(resourceManager23);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNull(resourceLoader34);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection35);
        org.junit.Assert.assertNotNull(errorPageArray38);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList43);
    }

    @Test
    public void test06481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06481");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean8 = undertowEmbeddedServletContainerFactory7.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray9 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray9);
        undertowEmbeddedServletContainerFactory7.addInitializers(servletContextInitializerArray9);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15 };
        undertowEmbeddedServletContainerFactory7.addInitializers(servletContextInitializerArray16);
        undertowEmbeddedServletContainerFactory7.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer20 };
        undertowEmbeddedServletContainerFactory7.addBuilderCustomizers(undertowBuilderCustomizerArray21);
        java.lang.Integer int23 = undertowEmbeddedServletContainerFactory7.ioThreads;
        java.lang.String str24 = undertowEmbeddedServletContainerFactory7.getContextPath();
        undertowEmbeddedServletContainerFactory7.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory29.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder33 = undertowEmbeddedServletContainerFactory29.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer36 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder33, deploymentManager34, (int) (byte) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager37 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer39 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder33, deploymentManager37, (int) (short) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList43 = undertowEmbeddedServletContainerFactory42.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory42.setIoThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean48 = undertowEmbeddedServletContainerFactory47.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray49 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray49);
        undertowEmbeddedServletContainerFactory47.addInitializers(servletContextInitializerArray49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer53 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap52);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer55 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap54);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray56 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer53, initParameterConfiguringServletContextInitializer55 };
        undertowEmbeddedServletContainerFactory47.addInitializers(servletContextInitializerArray56);
        undertowEmbeddedServletContainerFactory47.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer60 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray61 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer60 };
        undertowEmbeddedServletContainerFactory47.addBuilderCustomizers(undertowBuilderCustomizerArray61);
        java.lang.Integer int63 = undertowEmbeddedServletContainerFactory47.ioThreads;
        java.lang.String str64 = undertowEmbeddedServletContainerFactory47.getContextPath();
        undertowEmbeddedServletContainerFactory47.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory69.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder73 = undertowEmbeddedServletContainerFactory69.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager74 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer76 = undertowEmbeddedServletContainerFactory47.getUndertowEmbeddedServletContainer(builder73, deploymentManager74, (int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray77 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory47.addBuilderCustomizers(undertowBuilderCustomizerArray77);
        undertowEmbeddedServletContainerFactory42.addBuilderCustomizers(undertowBuilderCustomizerArray77);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray77);
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet85 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(servletContextInitializerArray9);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer36);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer39);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList43);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray49);
        org.junit.Assert.assertNotNull(servletContextInitializerArray56);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray61);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer76);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray77);
        org.junit.Assert.assertNotNull(errorPageSet85);
    }

    @Test
    public void test06482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06482");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean5 = undertowEmbeddedServletContainerFactory4.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray6 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray6);
        undertowEmbeddedServletContainerFactory4.addInitializers(servletContextInitializerArray6);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory4.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory4.workerThreads = 1;
        undertowEmbeddedServletContainerFactory4.setBufferSize((java.lang.Integer) (-1));
        int int19 = undertowEmbeddedServletContainerFactory4.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Integer int22 = undertowEmbeddedServletContainerFactory21.buffersPerRegion;
        java.lang.String str23 = undertowEmbeddedServletContainerFactory21.getListenAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager24 = undertowEmbeddedServletContainerFactory21.getDocumentRootResourceManager();
        java.net.InetAddress inetAddress25 = null;
        undertowEmbeddedServletContainerFactory21.setAddress(inetAddress25);
        undertowEmbeddedServletContainerFactory21.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean31 = undertowEmbeddedServletContainerFactory30.directBuffers;
        io.undertow.Undertow.Builder builder32 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager33 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer35 = undertowEmbeddedServletContainerFactory30.getUndertowEmbeddedServletContainer(builder32, deploymentManager33, 0);
        undertowEmbeddedServletContainerFactory30.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader38 = undertowEmbeddedServletContainerFactory30.getServletClassLoader();
        undertowEmbeddedServletContainerFactory30.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = undertowEmbeddedServletContainerFactory30.getMimeMappings();
        undertowEmbeddedServletContainerFactory21.setMimeMappings(mimeMappings41);
        undertowEmbeddedServletContainerFactory4.setMimeMappings(mimeMappings41);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = undertowEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = undertowEmbeddedServletContainerFactory4.getMimeMappings();
        undertowEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings45);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(servletContextInitializerArray6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "0.0.0.0" + "'", str23, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager24);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer35);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNotNull(mimeMappings45);
    }

    @Test
    public void test06483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06483");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray8 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory7.addErrorPages(errorPageArray8);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray8);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory14.directBuffers;
        undertowEmbeddedServletContainerFactory14.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader19 = undertowEmbeddedServletContainerFactory14.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection20 = undertowEmbeddedServletContainerFactory14.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory14.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray23 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        boolean boolean25 = undertowEmbeddedServletContainerFactory14.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList26 = undertowEmbeddedServletContainerFactory14.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList26;
        int int28 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = undertowEmbeddedServletContainerFactory30.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory30.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings32);
        org.springframework.core.io.ResourceLoader resourceLoader34 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader34);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo36 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(errorPageArray8);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNull(resourceLoader19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection20);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(mimeMappings32);
    }

    @Test
    public void test06484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06484");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList5, undertowBuilderCustomizerArray4);
        undertowEmbeddedServletContainerFactory2.builderCustomizers = undertowBuilderCustomizerList5;
        java.lang.String str8 = undertowEmbeddedServletContainerFactory2.getListenAddress();
        boolean boolean9 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        int int10 = undertowEmbeddedServletContainerFactory2.getPort();
        undertowEmbeddedServletContainerFactory2.setIoThreads((java.lang.Integer) 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0.0.0.0" + "'", str3, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
    }

    @Test
    public void test06485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06485");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean5 = undertowEmbeddedServletContainerFactory4.directBuffers;
        undertowEmbeddedServletContainerFactory4.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader9 = undertowEmbeddedServletContainerFactory4.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection10 = undertowEmbeddedServletContainerFactory4.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray13 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory12.addErrorPages(errorPageArray13);
        undertowEmbeddedServletContainerFactory4.addErrorPages(errorPageArray13);
        boolean boolean16 = undertowEmbeddedServletContainerFactory4.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean19 = undertowEmbeddedServletContainerFactory18.directBuffers;
        io.undertow.Undertow.Builder builder20 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory18.getUndertowEmbeddedServletContainer(builder20, deploymentManager21, 0);
        undertowEmbeddedServletContainerFactory18.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader26 = undertowEmbeddedServletContainerFactory18.getServletClassLoader();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = undertowEmbeddedServletContainerFactory18.getErrorPages();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray28 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray28);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray28);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer31 = undertowEmbeddedServletContainerFactory18.getEmbeddedServletContainer(servletContextInitializerArray28);
        io.undertow.servlet.api.DeploymentManager deploymentManager32 = undertowEmbeddedServletContainerFactory4.createDeploymentManager(servletContextInitializerArray28);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = undertowEmbeddedServletContainerFactory4.getMimeMappings();
        undertowEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings33);
        org.springframework.core.io.ResourceLoader resourceLoader35 = null;
        undertowEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader35);
        java.lang.Boolean boolean37 = undertowEmbeddedServletContainerFactory2.directBuffers;
        java.io.File file38 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file38);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList40 = undertowEmbeddedServletContainerFactory2.builderCustomizers;
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 1);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray43 = undertowEmbeddedServletContainerFactory2.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNull(resourceLoader9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection10);
        org.junit.Assert.assertNotNull(errorPageArray13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(errorPageSet27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray28);
        org.junit.Assert.assertNotNull(embeddedServletContainer31);
        org.junit.Assert.assertNotNull(deploymentManager32);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList40);
    }

    @Test
    public void test06486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06486");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean22 = undertowEmbeddedServletContainerFactory21.directBuffers;
        undertowEmbeddedServletContainerFactory21.setSessionTimeout(0);
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory21.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray28 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory27.addErrorPages(errorPageArray28);
        undertowEmbeddedServletContainerFactory21.addErrorPages(errorPageArray28);
        undertowEmbeddedServletContainerFactory21.buffersPerRegion = 100;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList33 = undertowEmbeddedServletContainerFactory21.deploymentInfoCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader34 = undertowEmbeddedServletContainerFactory21.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean37 = undertowEmbeddedServletContainerFactory36.directBuffers;
        undertowEmbeddedServletContainerFactory36.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader41 = undertowEmbeddedServletContainerFactory36.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection42 = undertowEmbeddedServletContainerFactory36.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory36.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray45 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory36.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray45);
        boolean boolean47 = undertowEmbeddedServletContainerFactory36.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList48 = undertowEmbeddedServletContainerFactory36.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet49 = undertowEmbeddedServletContainerFactory36.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean52 = undertowEmbeddedServletContainerFactory51.directBuffers;
        undertowEmbeddedServletContainerFactory51.setSessionTimeout(0);
        java.lang.Integer int55 = undertowEmbeddedServletContainerFactory51.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray58 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory57.addErrorPages(errorPageArray58);
        undertowEmbeddedServletContainerFactory51.addErrorPages(errorPageArray58);
        undertowEmbeddedServletContainerFactory36.addErrorPages(errorPageArray58);
        undertowEmbeddedServletContainerFactory21.addErrorPages(errorPageArray58);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray58);
        int int64 = undertowEmbeddedServletContainerFactory1.getPort();
        int int65 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(errorPageArray28);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList33);
        org.junit.Assert.assertNull(resourceLoader34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNull(resourceLoader41);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection42);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList48);
        org.junit.Assert.assertNotNull(errorPageSet49);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(errorPageArray58);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 10 + "'", int64 == 10);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1800 + "'", int65 == 1800);
    }

    @Test
    public void test06487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06487");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray6);
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo9 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo9);
        int int11 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        int int12 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader13;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray6);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test06488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06488");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager1.jarPath;
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str11 = jarResourcemanager1.jarPath;
        boolean boolean12 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.String str13 = jarResourcemanager1.jarPath;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource15 = jarResourcemanager1.getResource("");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "0.0.0.0" + "'", str11, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
    }

    @Test
    public void test06489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06489");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        java.io.File file10 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.net.InetAddress inetAddress11 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection14 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo15 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection14);
    }

    @Test
    public void test06490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06490");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 32;
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(mimeMappings4);
    }

    @Test
    public void test06491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06491");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray3);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray3);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl8);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1800;
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.io.File file13 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection14 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection14);
    }

    @Test
    public void test06492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06492");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        io.undertow.server.handlers.resource.ResourceManager resourceManager10 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file15);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(resourceManager10);
    }

    @Test
    public void test06493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06493");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        undertowEmbeddedServletContainerFactory1.bufferSize = 10;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList20 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList20);
    }

    @Test
    public void test06494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06494");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory14.directBuffers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray16);
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer20 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap19);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer20, initParameterConfiguringServletContextInitializer22 };
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray23);
        undertowEmbeddedServletContainerFactory14.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer27 };
        undertowEmbeddedServletContainerFactory14.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        java.lang.Integer int30 = undertowEmbeddedServletContainerFactory14.ioThreads;
        java.lang.String str31 = undertowEmbeddedServletContainerFactory14.getContextPath();
        undertowEmbeddedServletContainerFactory14.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory36.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder40 = undertowEmbeddedServletContainerFactory36.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager41 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer43 = undertowEmbeddedServletContainerFactory14.getUndertowEmbeddedServletContainer(builder40, deploymentManager41, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory14.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory14.bufferSize = 1;
        undertowEmbeddedServletContainerFactory14.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean52 = undertowEmbeddedServletContainerFactory51.directBuffers;
        undertowEmbeddedServletContainerFactory51.setSessionTimeout(0);
        boolean boolean55 = undertowEmbeddedServletContainerFactory51.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean58 = undertowEmbeddedServletContainerFactory57.directBuffers;
        undertowEmbeddedServletContainerFactory57.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = undertowEmbeddedServletContainerFactory57.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader62 = undertowEmbeddedServletContainerFactory57.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection63 = undertowEmbeddedServletContainerFactory57.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory57.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray66 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory57.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray66);
        boolean boolean68 = undertowEmbeddedServletContainerFactory57.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList69 = undertowEmbeddedServletContainerFactory57.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet70 = undertowEmbeddedServletContainerFactory57.getErrorPages();
        undertowEmbeddedServletContainerFactory51.setErrorPages(errorPageSet70);
        undertowEmbeddedServletContainerFactory14.setErrorPages(errorPageSet70);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet70);
        java.lang.Integer int74 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection77 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setPort(100);
        java.lang.String str82 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer43);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNull(resourceLoader62);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection63);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList69);
        org.junit.Assert.assertNotNull(errorPageSet70);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection77);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "0.0.0.0" + "'", str82, "0.0.0.0");
    }

    @Test
    public void test06495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06495");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo8 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo8);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo10 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo10);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo12 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo12);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1800;
        boolean boolean16 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 52);
        io.undertow.server.handlers.resource.ResourceManager resourceManager19 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.core.io.ResourceLoader resourceLoader20 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(resourceManager19);
        org.junit.Assert.assertNull(resourceLoader20);
    }

    @Test
    public void test06496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06496");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 10);
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader14;
        int int16 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean19 = undertowEmbeddedServletContainerFactory18.directBuffers;
        undertowEmbeddedServletContainerFactory18.setSessionTimeout(0);
        java.lang.Integer int22 = undertowEmbeddedServletContainerFactory18.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray25 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory24.addErrorPages(errorPageArray25);
        undertowEmbeddedServletContainerFactory18.addErrorPages(errorPageArray25);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray25);
        java.net.InetAddress inetAddress29 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.net.InetAddress inetAddress30 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.Undertow.Builder builder32 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (byte) 100);
        java.lang.Boolean boolean33 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(errorPageArray25);
        org.junit.Assert.assertNull(inetAddress29);
        org.junit.Assert.assertNull(inetAddress30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(boolean33);
    }

    @Test
    public void test06497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06497");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.core.io.ResourceLoader resourceLoader2 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader2;
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader4);
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection8 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection9 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection9);
    }

    @Test
    public void test06498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06498");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        io.undertow.Undertow.Builder builder3 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer6 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder3, deploymentManager4, 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        java.net.InetAddress inetAddress13 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory15.directBuffers;
        undertowEmbeddedServletContainerFactory15.setSessionTimeout(0);
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory15.workerThreads;
        java.net.InetAddress inetAddress20 = null;
        undertowEmbeddedServletContainerFactory15.setAddress(inetAddress20);
        undertowEmbeddedServletContainerFactory15.setBufferSize((java.lang.Integer) 100);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection24 = undertowEmbeddedServletContainerFactory15.getBuilderCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory15.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings25);
        org.springframework.boot.context.embedded.Ssl ssl27 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl27);
        io.undertow.server.handlers.resource.ResourceManager resourceManager29 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer6);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection24);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(resourceManager29);
    }

    @Test
    public void test06499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06499");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "0.0.0.0";
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean7 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean8 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean9 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.String str10 = jarResourcemanager1.jarPath;
        boolean boolean11 = jarResourcemanager1.isResourceChangeListenerSupported();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0.0.0.0" + "'", str10, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06500");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 100);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo5 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo5);
        java.lang.ClassLoader classLoader7 = undertowEmbeddedServletContainerFactory2.getServletClassLoader();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo8 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo8);
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory13.directBuffers;
        undertowEmbeddedServletContainerFactory13.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader18 = undertowEmbeddedServletContainerFactory13.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection19 = undertowEmbeddedServletContainerFactory13.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory13.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection24 = undertowEmbeddedServletContainerFactory13.getDeploymentInfoCustomizers();
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory13.ioThreads;
        undertowEmbeddedServletContainerFactory13.setSessionTimeout(1800);
        undertowEmbeddedServletContainerFactory13.setJspServletClassName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection30 = undertowEmbeddedServletContainerFactory13.getBuilderCustomizers();
        java.lang.String str31 = undertowEmbeddedServletContainerFactory13.getListenAddress();
        io.undertow.Undertow.Builder builder33 = undertowEmbeddedServletContainerFactory13.createBuilder((-1));
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory2.configureSsl(ssl10, (int) (short) -1, builder33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNull(resourceLoader18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "0.0.0.0" + "'", str31, "0.0.0.0");
        org.junit.Assert.assertNotNull(builder33);
    }
}

