import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.manifestFile;
        java.io.File file3 = explodedArchive1.manifestFile;
        java.lang.String str4 = explodedArchive1.toString();
        java.util.jar.Manifest manifest5 = null;
        explodedArchive1.manifest = manifest5;
        java.lang.String str7 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        boolean boolean10 = fileEntryIterator8.hasNext();
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator11.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean27 = fileEntryIterator26.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean29 = explodedArchive28.recursive;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive28.manifest = manifest31;
        java.io.File file33 = explodedArchive28.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.io.File file37 = fileEntryIterator34.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator34.current = file42;
        explodedArchive28.root = file42;
        fileEntryIterator26.root = file42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        boolean boolean51 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        fileEntryIterator52.recursive = true;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator52.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        fileEntryIterator52.root = file77;
        explodedArchive46.root = file77;
        int int80 = entryComparator23.compare(file42, file77);
        java.io.File file81 = explodedArchive1.getManifestFile(file42);
        explodedArchive0.manifestFile = file81;
        java.io.File file83 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor84 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file83);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.net.URLConnection uRLConnection19 = uRL3.openConnection();
        java.net.Proxy proxy20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection21 = uRL3.openConnection(proxy20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(uRLConnection19);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.io.File file4 = explodedArchive0.root;
        boolean boolean5 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.lang.String str8 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive0.getNestedArchives(entryFilter9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "exploded archive", (int) (short) 1, "file", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        boolean boolean28 = explodedArchive26.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        explodedArchive26.root = file33;
        fileEntryIterator0.root = file33;
        boolean boolean36 = fileEntryIterator0.recursive;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        boolean boolean44 = explodedArchive39.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        fileEntryIterator45.recursive = true;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator55.thenComparing(fileComparator58);
        fileEntryIterator50.entryComparator = fileComparator55;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator55.thenComparing(fileComparator63);
        fileEntryIterator45.entryComparator = fileComparator64;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.manifestFile;
        java.io.File file68 = explodedArchive66.manifestFile;
        java.io.File file69 = null;
        java.io.File file70 = explodedArchive66.getManifestFile(file69);
        fileEntryIterator45.root = file70;
        explodedArchive39.root = file70;
        explodedArchive39.recursive = false;
        java.util.jar.Manifest manifest75 = null;
        explodedArchive39.manifest = manifest75;
        java.lang.String str77 = explodedArchive39.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter78 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList79 = explodedArchive39.getNestedArchives(entryFilter78);
        java.io.File file80 = explodedArchive39.root;
        explodedArchive39.recursive = true;
        java.lang.String str83 = explodedArchive39.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator84 = explodedArchive39.spliterator();
        java.lang.String str85 = explodedArchive39.toString();
        java.io.File file86 = explodedArchive39.root;
        fileEntryIterator0.root = file86;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str77, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList79);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str83, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator84);
// flaky:         org.junit.Assert.assertEquals("'" + str85 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str85, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator38 = explodedArchive0.spliterator();
        java.net.URL uRL39 = explodedArchive0.getUrl();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream40 = uRL39.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(entrySpliterator38);
        org.junit.Assert.assertNotNull(uRL39);
// flaky:         org.junit.Assert.assertEquals(uRL39.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = true;
        boolean boolean5 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean7 = fileEntryIterator6.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file9 = fileEntryIterator8.current;
        java.io.File file10 = fileEntryIterator8.poll();
        java.io.File file11 = fileEntryIterator8.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        fileEntryIterator8.entryComparator = entryComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        fileEntryIterator26.recursive = true;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator36.thenComparing(fileComparator39);
        fileEntryIterator31.entryComparator = fileComparator36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        java.util.Comparator<java.io.File> fileComparator45 = fileComparator36.thenComparing(fileComparator44);
        fileEntryIterator26.entryComparator = fileComparator45;
        java.util.Comparator<java.io.File> fileComparator47 = entryComparator23.thenComparing(fileComparator45);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean54 = fileEntryIterator53.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean56 = explodedArchive55.recursive;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.util.jar.Manifest manifest58 = null;
        explodedArchive55.manifest = manifest58;
        java.io.File file60 = explodedArchive55.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.io.File file64 = fileEntryIterator61.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator61.current = file69;
        explodedArchive55.root = file69;
        fileEntryIterator53.root = file69;
        int int73 = entryComparator23.compare(file52, file69);
        java.util.Iterator<java.io.File> fileItor74 = fileEntryIterator6.listFiles(file52);
        fileEntryIterator0.root = file52;
        java.io.File file76 = fileEntryIterator0.poll();
        java.io.File file77 = fileEntryIterator0.root;
        boolean boolean78 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(fileItor74);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file18 = fileEntry17.getFile();
        java.io.File file19 = fileEntry17.file;
        fileEntry17.name = "";
        java.lang.String str22 = fileEntry17.name;
        java.io.File file23 = fileEntry17.file;
        java.io.File file24 = fileEntry17.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file31 = fileEntry30.getFile();
        java.lang.String str32 = fileEntry30.name;
        java.io.File file33 = fileEntry30.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        boolean boolean36 = fileEntryIterator34.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        boolean boolean42 = explodedArchive37.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        fileEntryIterator43.recursive = true;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator53.thenComparing(fileComparator56);
        fileEntryIterator48.entryComparator = fileComparator53;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator53.thenComparing(fileComparator61);
        fileEntryIterator43.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        fileEntryIterator43.root = file68;
        explodedArchive37.root = file68;
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator34.listFiles(file68);
        fileEntry30.file = file68;
        explodedArchive25.manifestFile = file68;
        fileEntry17.file = file68;
        explodedArchive0.root = file68;
        explodedArchive0.recursive = false;
        explodedArchive0.recursive = true;
        java.io.File file80 = explodedArchive0.root;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor71);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.manifestFile;
        java.io.File file7 = explodedArchive5.manifestFile;
        java.io.File file8 = null;
        java.io.File file9 = explodedArchive5.getManifestFile(file8);
        boolean boolean10 = explodedArchive5.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        fileEntryIterator11.recursive = true;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        fileEntryIterator16.entryComparator = fileComparator21;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator21.thenComparing(fileComparator29);
        fileEntryIterator11.entryComparator = fileComparator30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        fileEntryIterator11.root = file36;
        explodedArchive5.root = file36;
        explodedArchive5.recursive = false;
        java.util.jar.Manifest manifest41 = null;
        explodedArchive5.manifest = manifest41;
        java.lang.String str43 = explodedArchive5.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean45 = explodedArchive44.recursive;
        boolean boolean46 = explodedArchive44.recursive;
        java.io.File file47 = explodedArchive44.root;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive44.getManifestFile(file48);
        explodedArchive5.manifestFile = file48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file52 = fileEntryIterator51.current;
        java.io.File file53 = fileEntryIterator51.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file55 = fileEntryIterator54.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        java.util.Comparator<java.io.File> fileComparator65 = fileComparator61.thenComparing(fileComparator64);
        fileEntryIterator56.entryComparator = fileComparator61;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator61.thenComparing(fileComparator69);
        fileEntryIterator54.entryComparator = fileComparator70;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator54.stack;
        fileEntryIterator51.stack = fileItorQueue72;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file75 = fileEntryIterator74.current;
        java.io.File file76 = fileEntryIterator74.poll();
        java.io.File file77 = fileEntryIterator74.poll();
        java.io.File file78 = fileEntryIterator74.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.io.File file81 = fileEntryIterator79.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file83 = explodedArchive82.manifestFile;
        java.io.File file84 = explodedArchive82.manifestFile;
        java.io.File file85 = null;
        java.io.File file86 = explodedArchive82.getManifestFile(file85);
        fileEntryIterator79.root = file85;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file89 = explodedArchive88.manifestFile;
        java.io.File file90 = explodedArchive88.manifestFile;
        java.io.File file91 = null;
        java.io.File file92 = explodedArchive88.getManifestFile(file91);
        java.util.Iterator<java.io.File> fileItor93 = fileEntryIterator79.listFiles(file92);
        fileEntryIterator74.root = file92;
        java.util.Iterator<java.io.File> fileItor95 = fileEntryIterator51.listFiles(file92);
        explodedArchive5.root = file92;
        fileEntryIterator0.current = file92;
        fileEntryIterator0.recursive = false;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str43, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor93);
        org.junit.Assert.assertNotNull(fileItor95);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        boolean boolean41 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest42 = explodedArchive0.manifest;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest43 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(manifest42);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "file://exploded archive", (-1), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file3 = fileEntry2.getFile();
        java.io.File file4 = fileEntry2.file;
        java.io.File file5 = null;
        fileEntry2.file = file5;
        java.lang.String str7 = fileEntry2.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        boolean boolean10 = fileEntryIterator8.hasNext();
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator11.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean27 = fileEntryIterator26.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean29 = explodedArchive28.recursive;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive28.manifest = manifest31;
        java.io.File file33 = explodedArchive28.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.io.File file37 = fileEntryIterator34.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator34.current = file42;
        explodedArchive28.root = file42;
        fileEntryIterator26.root = file42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        boolean boolean51 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        fileEntryIterator52.recursive = true;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator52.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        fileEntryIterator52.root = file77;
        explodedArchive46.root = file77;
        int int80 = entryComparator23.compare(file42, file77);
        fileEntry2.file = file77;
        explodedArchive0.manifestFile = file77;
        explodedArchive0.recursive = true;
        java.io.File file85 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest86 = null;
        explodedArchive0.manifest = manifest86;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList89 = explodedArchive0.getNestedArchives(entryFilter88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        java.net.URI uRI22 = uRL3.toURI();
        java.net.URLConnection uRLConnection23 = uRL3.openConnection();
        java.net.URL uRL24 = null;
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL24, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler26);
        java.lang.String str28 = uRL27.getHost();
        java.lang.String str29 = uRL27.getAuthority();
        java.lang.String str30 = uRL27.getQuery();
        int int31 = uRL27.getDefaultPort();
        java.lang.String str32 = uRL27.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler34 = null;
        java.net.URL uRL35 = new java.net.URL(uRL27, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler34);
        java.lang.String str36 = uRL35.toExternalForm();
        java.lang.String str37 = uRL35.getFile();
        java.net.URLConnection uRLConnection38 = uRL35.openConnection();
        java.lang.String str39 = uRL35.getAuthority();
        java.lang.String str40 = uRL35.getUserInfo();
        boolean boolean41 = uRL3.sameFile(uRL35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = uRL35.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(uRI22);
        org.junit.Assert.assertNotNull(uRLConnection23);
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str36, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str37, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "file", 1, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "file", (int) (byte) 10, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        java.net.URLConnection uRLConnection15 = uRL11.openConnection();
        java.net.URL uRL17 = new java.net.URL(uRL11, "file://exploded archive");
        java.lang.String str18 = uRL17.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertNotNull(uRLConnection15);
        org.junit.Assert.assertEquals(uRL17.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator0.stack = fileItorQueue8;
        fileEntryIterator0.recursive = true;
        java.io.File file12 = fileEntryIterator0.current;
        java.io.File file13 = fileEntryIterator0.current;
        java.io.File file14 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URLConnection uRLConnection73 = uRL72.openConnection();
        java.net.Proxy proxy74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection75 = uRL72.openConnection(proxy74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection73);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.manifestFile;
        java.io.File file4 = explodedArchive2.manifestFile;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive2.getManifestFile(file5);
        fileEntryIterator0.current = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator10;
        java.io.File file12 = null;
        fileEntryIterator0.root = file12;
        boolean boolean14 = fileEntryIterator0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getHost();
        java.lang.String str10 = uRL3.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.manifestFile;
        java.io.File file13 = explodedArchive11.manifestFile;
        java.io.File file14 = null;
        java.io.File file15 = explodedArchive11.getManifestFile(file14);
        boolean boolean16 = explodedArchive11.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        fileEntryIterator17.recursive = true;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator27.thenComparing(fileComparator30);
        fileEntryIterator22.entryComparator = fileComparator27;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator27.thenComparing(fileComparator35);
        fileEntryIterator17.entryComparator = fileComparator36;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator17.root = file42;
        explodedArchive11.root = file42;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor45 = explodedArchive11.iterator();
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor46 = explodedArchive11.iterator();
        java.lang.Class<?> wildcardClass47 = entryItor46.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file49 = fileEntryIterator48.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator55.thenComparing(fileComparator58);
        fileEntryIterator50.entryComparator = fileComparator55;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator55.thenComparing(fileComparator63);
        fileEntryIterator48.entryComparator = fileComparator64;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator48.stack;
        boolean boolean67 = fileEntryIterator48.recursive;
        java.lang.Class<?> wildcardClass68 = fileEntryIterator48.getClass();
        java.lang.Class[] classArray69 = new java.lang.Class[] { wildcardClass47, wildcardClass68 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = uRL3.getContent(classArray69);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file" + "'", str10, "file");
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file15.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor45);
        org.junit.Assert.assertNotNull(entryItor46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(classArray69);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        boolean boolean7 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        boolean boolean13 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator14.root = file39;
        explodedArchive8.root = file39;
        java.util.Iterator<java.io.File> fileItor42 = fileEntryIterator5.listFiles(file39);
        fileEntry0.file = file39;
        fileEntry0.name = "";
        java.lang.Class<?> wildcardClass46 = fileEntry0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor42);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        boolean boolean41 = explodedArchive39.recursive;
        java.io.File file42 = explodedArchive39.root;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive39.getManifestFile(file43);
        explodedArchive0.manifestFile = file43;
        java.io.File file46 = explodedArchive0.root;
        java.lang.Class<?> wildcardClass47 = explodedArchive0.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        boolean boolean22 = uRL11.sameFile(uRL21);
        java.lang.String str23 = uRL11.getProtocol();
        java.net.URL uRL24 = null;
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL24, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler26);
        java.lang.String str28 = uRL27.getHost();
        int int29 = uRL27.getPort();
        java.net.URL uRL30 = null;
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL30, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler32);
        java.lang.String str34 = uRL33.getHost();
        java.lang.String str35 = uRL33.getAuthority();
        java.lang.String str36 = uRL33.getQuery();
        int int37 = uRL33.getDefaultPort();
        boolean boolean38 = uRL27.sameFile(uRL33);
        java.lang.String str39 = uRL33.getFile();
        boolean boolean40 = uRL11.sameFile(uRL33);
        java.lang.String str41 = uRL33.getAuthority();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream42 = uRL33.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file" + "'", str23, "file");
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file6 = fileEntry5.getFile();
        java.lang.String str7 = fileEntry5.name;
        java.io.File file8 = fileEntry5.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        boolean boolean11 = fileEntryIterator9.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        boolean boolean17 = explodedArchive12.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        fileEntryIterator18.root = file43;
        explodedArchive12.root = file43;
        java.util.Iterator<java.io.File> fileItor46 = fileEntryIterator9.listFiles(file43);
        fileEntry5.file = file43;
        explodedArchive0.manifestFile = file43;
        java.io.File file49 = explodedArchive0.manifestFile;
        java.io.File file50 = null;
        java.io.File file51 = explodedArchive0.getManifestFile(file50);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file53 = fileEntry52.getFile();
        java.lang.String str54 = fileEntry52.getName();
        java.lang.String str55 = fileEntry52.getName();
        java.lang.String str56 = fileEntry52.getName();
        java.lang.String str57 = fileEntry52.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive58 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor46);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.lang.String str71 = uRL69.getHost();
        java.net.URL uRL73 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str74 = uRL73.getRef();
        int int75 = uRL73.getDefaultPort();
        java.lang.String str76 = uRL73.getAuthority();
        int int77 = uRL73.getPort();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = uRL73.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals(uRL73.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file", "file://hi!:100hi!", (int) (byte) 100, "file://hi!:100hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: Illegal character found in host: '/'");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = fileEntry0.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file3);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.net.URL uRL38 = explodedArchive0.getUrl();
        int int39 = uRL38.getDefaultPort();
        java.net.URLConnection uRLConnection40 = uRL38.openConnection();
        java.net.URLStreamHandler uRLStreamHandler42 = null;
        java.net.URL uRL43 = new java.net.URL(uRL38, "file", uRLStreamHandler42);
        java.net.URLConnection uRLConnection44 = uRL43.openConnection();
        java.lang.String str45 = uRL43.toExternalForm();
        java.net.Proxy proxy46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection47 = uRL43.openConnection(proxy46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(uRLConnection40);
// flaky:         org.junit.Assert.assertEquals(uRL43.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertNotNull(uRLConnection44);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str45, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        boolean boolean32 = explodedArchive0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL33 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "exploded archive", (int) (short) -1, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = true;
        boolean boolean5 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean7 = fileEntryIterator6.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file9 = fileEntryIterator8.current;
        java.io.File file10 = fileEntryIterator8.poll();
        java.io.File file11 = fileEntryIterator8.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        fileEntryIterator8.entryComparator = entryComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        fileEntryIterator26.recursive = true;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator36.thenComparing(fileComparator39);
        fileEntryIterator31.entryComparator = fileComparator36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        java.util.Comparator<java.io.File> fileComparator45 = fileComparator36.thenComparing(fileComparator44);
        fileEntryIterator26.entryComparator = fileComparator45;
        java.util.Comparator<java.io.File> fileComparator47 = entryComparator23.thenComparing(fileComparator45);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean54 = fileEntryIterator53.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean56 = explodedArchive55.recursive;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.util.jar.Manifest manifest58 = null;
        explodedArchive55.manifest = manifest58;
        java.io.File file60 = explodedArchive55.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.io.File file64 = fileEntryIterator61.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator61.current = file69;
        explodedArchive55.root = file69;
        fileEntryIterator53.root = file69;
        int int73 = entryComparator23.compare(file52, file69);
        java.util.Iterator<java.io.File> fileItor74 = fileEntryIterator6.listFiles(file52);
        fileEntryIterator0.root = file52;
        boolean boolean76 = fileEntryIterator0.hasNext();
        java.io.File file77 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry78 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(fileItor74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(file77);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file://exploded archive:0", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getFile();
        java.lang.String str10 = uRL3.getFile();
        java.lang.String str11 = uRL3.getRef();
        java.lang.String str12 = uRL3.getPath();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        boolean boolean4 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator0.entryComparator;
        boolean boolean8 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file10 = fileEntryIterator9.current;
        java.io.File file11 = fileEntryIterator9.poll();
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator18.thenComparing(fileComparator21);
        fileEntryIterator13.entryComparator = fileComparator18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator18.thenComparing((java.util.Comparator<java.io.File>) entryComparator24);
        fileEntryIterator9.entryComparator = entryComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        fileEntryIterator27.recursive = true;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator37.thenComparing(fileComparator40);
        fileEntryIterator32.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator37.thenComparing(fileComparator45);
        fileEntryIterator27.entryComparator = fileComparator46;
        java.util.Comparator<java.io.File> fileComparator48 = entryComparator24.thenComparing(fileComparator46);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry49.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.io.File file54 = fileEntryIterator52.current;
        boolean boolean55 = fileEntryIterator52.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator52.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean58 = explodedArchive57.recursive;
        boolean boolean59 = explodedArchive57.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file61 = explodedArchive60.manifestFile;
        java.io.File file62 = explodedArchive60.manifestFile;
        java.io.File file63 = null;
        java.io.File file64 = explodedArchive60.getManifestFile(file63);
        explodedArchive57.root = file64;
        fileEntryIterator52.root = file64;
        fileEntry49.file = file64;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.manifestFile;
        explodedArchive68.recursive = true;
        java.lang.String str72 = explodedArchive68.toString();
        boolean boolean73 = explodedArchive68.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file75 = fileEntryIterator74.current;
        java.io.File file76 = fileEntryIterator74.poll();
        java.io.File file77 = fileEntryIterator74.poll();
        java.io.File file78 = fileEntryIterator74.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.io.File file81 = fileEntryIterator79.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file83 = explodedArchive82.manifestFile;
        java.io.File file84 = explodedArchive82.manifestFile;
        java.io.File file85 = null;
        java.io.File file86 = explodedArchive82.getManifestFile(file85);
        fileEntryIterator79.root = file85;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file89 = explodedArchive88.manifestFile;
        java.io.File file90 = explodedArchive88.manifestFile;
        java.io.File file91 = null;
        java.io.File file92 = explodedArchive88.getManifestFile(file91);
        java.util.Iterator<java.io.File> fileItor93 = fileEntryIterator79.listFiles(file92);
        fileEntryIterator74.root = file92;
        explodedArchive68.manifestFile = file92;
        int int96 = entryComparator24.compare(file64, file92);
        fileEntryIterator0.entryComparator = entryComparator24;
        java.util.Comparator<java.io.File> fileComparator98 = entryComparator24.reversed();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "exploded archive" + "'", str72, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor93);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertNotNull(fileComparator98);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file7;
        explodedArchive0.recursive = false;
        java.io.File file11 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive0.getNestedArchives(entryFilter14);
        java.util.jar.Manifest manifest16 = explodedArchive0.manifest;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNull(manifest16);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.recursive;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file18 = fileEntryIterator17.current;
        boolean boolean19 = fileEntryIterator17.hasNext();
        fileEntryIterator17.recursive = true;
        boolean boolean22 = fileEntryIterator17.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        boolean boolean25 = explodedArchive23.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = null;
        fileEntryIterator26.current = file28;
        java.io.File file30 = fileEntryIterator26.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file32 = fileEntry31.getFile();
        java.lang.String str33 = fileEntry31.name;
        java.io.File file34 = fileEntry31.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        boolean boolean37 = fileEntryIterator35.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        boolean boolean43 = explodedArchive38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        fileEntryIterator44.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator54.thenComparing(fileComparator57);
        fileEntryIterator49.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator54.thenComparing(fileComparator62);
        fileEntryIterator44.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator44.root = file69;
        explodedArchive38.root = file69;
        java.util.Iterator<java.io.File> fileItor72 = fileEntryIterator35.listFiles(file69);
        fileEntry31.file = file69;
        fileEntryIterator26.current = file69;
        explodedArchive23.root = file69;
        java.util.Iterator<java.io.File> fileItor76 = fileEntryIterator17.listFiles(file69);
        explodedArchive0.root = file69;
        java.net.URL uRL78 = explodedArchive0.getUrl();
        java.net.URLConnection uRLConnection79 = uRL78.openConnection();
        java.lang.String str80 = uRL78.getRef();
        java.lang.String str81 = uRL78.getRef();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "exploded archive" + "'", str24, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor72);
        org.junit.Assert.assertNotNull(fileItor76);
        org.junit.Assert.assertNotNull(uRL78);
// flaky:         org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(str81);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        java.net.URLStreamHandler uRLStreamHandler23 = null;
        java.net.URL uRL24 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler23);
        java.lang.Class[] classArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = uRL24.getContent(classArray25);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        boolean boolean32 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest33 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file35 = fileEntryIterator34.current;
        java.io.File file36 = fileEntryIterator34.poll();
        java.io.File file37 = fileEntryIterator34.poll();
        java.io.File file38 = fileEntryIterator34.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.io.File file41 = fileEntryIterator39.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator39.root = file45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        java.util.Iterator<java.io.File> fileItor53 = fileEntryIterator39.listFiles(file52);
        fileEntryIterator34.root = file52;
        explodedArchive0.manifestFile = file52;
        java.io.File file56 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file58 = fileEntry57.getFile();
        java.io.File file59 = fileEntry57.file;
        java.io.File file60 = null;
        fileEntry57.file = file60;
        java.io.File file62 = fileEntry57.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive63 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor53);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file62);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.net.URL uRL6 = new java.net.URL(uRL3, "file");
        java.lang.String str7 = uRL3.getFile();
        java.lang.String str8 = uRL3.getAuthority();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        java.net.URL uRL1 = new java.net.URL("file://exploded archive");
        java.net.URL uRL2 = null;
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL(uRL2, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
        java.lang.String str6 = uRL5.getHost();
        java.lang.String str7 = uRL5.getAuthority();
        java.lang.String str8 = uRL5.getQuery();
        int int9 = uRL5.getDefaultPort();
        java.lang.String str10 = uRL5.getAuthority();
        java.net.URLConnection uRLConnection11 = uRL5.openConnection();
        java.lang.String str12 = uRL5.toExternalForm();
        java.lang.String str13 = uRL5.getAuthority();
        boolean boolean14 = uRL1.sameFile(uRL5);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.lang.Class<?> wildcardClass17 = fileItorQueue16.getClass();
        java.net.URL uRL18 = null;
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL(uRL18, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        int int23 = uRL21.getPort();
        java.net.URLStreamHandler uRLStreamHandler25 = null;
        java.net.URL uRL26 = new java.net.URL(uRL21, "hi!", uRLStreamHandler25);
        java.lang.Class<?> wildcardClass27 = uRL21.getClass();
        java.lang.Class[] classArray28 = new java.lang.Class[] { wildcardClass17, wildcardClass27 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = uRL1.getContent(classArray28);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: exploded archive");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals(uRL5.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(uRLConnection11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals(uRL21.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals(uRL26.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(classArray28);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        java.io.File file6 = explodedArchive0.root;
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator10 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(manifest7);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.net.URI uRI19 = uRL3.toURI();
        java.lang.String str20 = uRL3.getUserInfo();
        java.net.Proxy proxy21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection22 = uRL3.openConnection(proxy21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(uRI19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL2 = new java.net.URL(uRL0, "file://hi!:100hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: For input string: \"100hi!\"");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator3.entryComparator = fileComparator19;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator3.stack;
        fileEntryIterator0.stack = fileItorQueue21;
        boolean boolean23 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        fileEntryIterator24.recursive = true;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        java.util.Comparator<java.io.File> fileComparator38 = fileComparator34.thenComparing(fileComparator37);
        fileEntryIterator29.entryComparator = fileComparator34;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.util.Comparator<java.io.File> fileComparator43 = fileComparator34.thenComparing(fileComparator42);
        fileEntryIterator24.entryComparator = fileComparator43;
        fileEntryIterator24.recursive = true;
        fileEntryIterator24.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator24.stack;
        boolean boolean50 = fileEntryIterator24.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.io.File file53 = fileEntryIterator51.current;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator51.stack;
        fileEntryIterator24.stack = fileItorQueue54;
        fileEntryIterator0.stack = fileItorQueue54;
        fileEntryIterator0.recursive = false;
        fileEntryIterator0.recursive = true;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(fileItorQueue54);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.io.File file4 = explodedArchive0.root;
        boolean boolean5 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.io.File file8 = explodedArchive0.manifestFile;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL9 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        java.io.File file5 = null;
        fileEntryIterator3.current = file5;
        java.io.File file7 = fileEntryIterator3.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file9 = fileEntry8.getFile();
        java.lang.String str10 = fileEntry8.name;
        java.io.File file11 = fileEntry8.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        boolean boolean14 = fileEntryIterator12.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.manifestFile;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.io.File file18 = null;
        java.io.File file19 = explodedArchive15.getManifestFile(file18);
        boolean boolean20 = explodedArchive15.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        fileEntryIterator21.recursive = true;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator21.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator21.root = file46;
        explodedArchive15.root = file46;
        java.util.Iterator<java.io.File> fileItor49 = fileEntryIterator12.listFiles(file46);
        fileEntry8.file = file46;
        fileEntryIterator3.current = file46;
        explodedArchive0.root = file46;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator53 = explodedArchive0.spliterator();
        java.lang.String str54 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file56 = fileEntry55.getFile();
        java.io.File file57 = fileEntry55.file;
        fileEntry55.name = "";
        java.lang.String str60 = fileEntry55.name;
        fileEntry55.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!";
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive63 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "exploded archive" + "'", str1, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor49);
        org.junit.Assert.assertNotNull(entrySpliterator53);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str54, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        boolean boolean3 = fileEntryIterator0.recursive;
        java.io.File file4 = fileEntryIterator0.root;
        java.io.File file5 = null;
        fileEntryIterator0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean8 = explodedArchive7.recursive;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.util.jar.Manifest manifest10 = null;
        explodedArchive7.manifest = manifest10;
        java.io.File file12 = explodedArchive7.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.io.File file16 = fileEntryIterator13.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.manifestFile;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.io.File file20 = null;
        java.io.File file21 = explodedArchive17.getManifestFile(file20);
        fileEntryIterator13.current = file21;
        explodedArchive7.root = file21;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file25 = fileEntryIterator24.current;
        boolean boolean26 = fileEntryIterator24.hasNext();
        fileEntryIterator24.recursive = true;
        boolean boolean29 = fileEntryIterator24.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        boolean boolean32 = explodedArchive30.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file34 = fileEntryIterator33.current;
        java.io.File file35 = null;
        fileEntryIterator33.current = file35;
        java.io.File file37 = fileEntryIterator33.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file39 = fileEntry38.getFile();
        java.lang.String str40 = fileEntry38.name;
        java.io.File file41 = fileEntry38.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        boolean boolean44 = fileEntryIterator42.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        boolean boolean50 = explodedArchive45.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        fileEntryIterator51.recursive = true;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        java.util.Comparator<java.io.File> fileComparator65 = fileComparator61.thenComparing(fileComparator64);
        fileEntryIterator56.entryComparator = fileComparator61;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator61.thenComparing(fileComparator69);
        fileEntryIterator51.entryComparator = fileComparator70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file73 = explodedArchive72.manifestFile;
        java.io.File file74 = explodedArchive72.manifestFile;
        java.io.File file75 = null;
        java.io.File file76 = explodedArchive72.getManifestFile(file75);
        fileEntryIterator51.root = file76;
        explodedArchive45.root = file76;
        java.util.Iterator<java.io.File> fileItor79 = fileEntryIterator42.listFiles(file76);
        fileEntry38.file = file76;
        fileEntryIterator33.current = file76;
        explodedArchive30.root = file76;
        java.util.Iterator<java.io.File> fileItor83 = fileEntryIterator24.listFiles(file76);
        explodedArchive7.root = file76;
        fileEntryIterator0.root = file76;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "exploded archive" + "'", str31, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor79);
        org.junit.Assert.assertNotNull(fileItor83);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file6 = fileEntry5.getFile();
        java.lang.String str7 = fileEntry5.name;
        java.io.File file8 = fileEntry5.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        boolean boolean11 = fileEntryIterator9.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        boolean boolean17 = explodedArchive12.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        fileEntryIterator18.root = file43;
        explodedArchive12.root = file43;
        java.util.Iterator<java.io.File> fileItor46 = fileEntryIterator9.listFiles(file43);
        fileEntry5.file = file43;
        explodedArchive0.manifestFile = file43;
        java.io.File file49 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor46);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        boolean boolean26 = fileEntryIterator0.recursive;
        boolean boolean27 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator0.stack;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fileItorQueue28);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        boolean boolean9 = fileEntryIterator7.hasNext();
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator16.thenComparing((java.util.Comparator<java.io.File>) entryComparator22);
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator10.thenComparing((java.util.Comparator<java.io.File>) entryComparator22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean26 = fileEntryIterator25.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean28 = explodedArchive27.recursive;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.util.jar.Manifest manifest30 = null;
        explodedArchive27.manifest = manifest30;
        java.io.File file32 = explodedArchive27.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.io.File file36 = fileEntryIterator33.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        fileEntryIterator33.current = file41;
        explodedArchive27.root = file41;
        fileEntryIterator25.root = file41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        boolean boolean50 = explodedArchive45.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        fileEntryIterator51.recursive = true;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        java.util.Comparator<java.io.File> fileComparator65 = fileComparator61.thenComparing(fileComparator64);
        fileEntryIterator56.entryComparator = fileComparator61;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator61.thenComparing(fileComparator69);
        fileEntryIterator51.entryComparator = fileComparator70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file73 = explodedArchive72.manifestFile;
        java.io.File file74 = explodedArchive72.manifestFile;
        java.io.File file75 = null;
        java.io.File file76 = explodedArchive72.getManifestFile(file75);
        fileEntryIterator51.root = file76;
        explodedArchive45.root = file76;
        int int79 = entryComparator22.compare(file41, file76);
        java.io.File file80 = explodedArchive0.getManifestFile(file41);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file80, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getHost();
        java.lang.String str10 = uRL3.getAuthority();
        java.net.URL uRL12 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "exploded archive", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI17 = uRL15.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in path at index 147: file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str16, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest32 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest33 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest34 = explodedArchive0.getManifest();
        java.io.File file35 = explodedArchive0.root;
        java.io.File file36 = null;
        explodedArchive0.manifestFile = file36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file39 = fileEntry38.getFile();
        java.io.File file40 = fileEntry38.file;
        fileEntry38.name = "";
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive43 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        boolean boolean28 = explodedArchive26.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        explodedArchive26.root = file33;
        fileEntryIterator0.root = file33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.manifestFile;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.io.File file39 = null;
        java.io.File file40 = explodedArchive36.getManifestFile(file39);
        boolean boolean41 = explodedArchive36.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        fileEntryIterator42.recursive = true;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator52.thenComparing(fileComparator55);
        fileEntryIterator47.entryComparator = fileComparator52;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.util.Comparator<java.io.File> fileComparator61 = fileComparator52.thenComparing(fileComparator60);
        fileEntryIterator42.entryComparator = fileComparator61;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.manifestFile;
        java.io.File file65 = explodedArchive63.manifestFile;
        java.io.File file66 = null;
        java.io.File file67 = explodedArchive63.getManifestFile(file66);
        fileEntryIterator42.root = file67;
        explodedArchive36.root = file67;
        explodedArchive36.recursive = false;
        java.util.jar.Manifest manifest72 = null;
        explodedArchive36.manifest = manifest72;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file75 = fileEntryIterator74.current;
        java.io.File file76 = fileEntryIterator74.poll();
        java.io.File file77 = fileEntryIterator74.poll();
        java.io.File file78 = fileEntryIterator74.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.io.File file81 = fileEntryIterator79.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file83 = explodedArchive82.manifestFile;
        java.io.File file84 = explodedArchive82.manifestFile;
        java.io.File file85 = null;
        java.io.File file86 = explodedArchive82.getManifestFile(file85);
        fileEntryIterator79.root = file85;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file89 = explodedArchive88.manifestFile;
        java.io.File file90 = explodedArchive88.manifestFile;
        java.io.File file91 = null;
        java.io.File file92 = explodedArchive88.getManifestFile(file91);
        java.util.Iterator<java.io.File> fileItor93 = fileEntryIterator79.listFiles(file92);
        fileEntryIterator74.root = file92;
        explodedArchive36.root = file92;
        fileEntryIterator0.current = file92;
        java.io.File file97 = null;
        fileEntryIterator0.current = file97;
        java.io.File file99 = fileEntryIterator0.root;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor93);
        org.junit.Assert.assertNotNull(file99);
        org.junit.Assert.assertEquals(file99.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file99.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest25 = explodedArchive0.manifest;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor26 = explodedArchive0.iterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator27 = explodedArchive0.spliterator();
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file31 = fileEntry30.getFile();
        java.io.File file32 = fileEntry30.file;
        fileEntry30.name = "";
        java.io.File file35 = fileEntry30.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive36 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNotNull(entryItor26);
        org.junit.Assert.assertNotNull(entrySpliterator27);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file35);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.io.File file8 = fileEntryIterator6.current;
        boolean boolean9 = fileEntryIterator6.hasNext();
        fileEntryIterator6.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        boolean boolean14 = fileEntryIterator12.hasNext();
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        fileEntryIterator16.entryComparator = fileComparator21;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator21.thenComparing((java.util.Comparator<java.io.File>) entryComparator27);
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator15.thenComparing((java.util.Comparator<java.io.File>) entryComparator27);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean31 = fileEntryIterator30.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean33 = explodedArchive32.recursive;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.util.jar.Manifest manifest35 = null;
        explodedArchive32.manifest = manifest35;
        java.io.File file37 = explodedArchive32.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.io.File file41 = fileEntryIterator38.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator38.current = file46;
        explodedArchive32.root = file46;
        fileEntryIterator30.root = file46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        boolean boolean55 = explodedArchive50.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        fileEntryIterator56.recursive = true;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator66.thenComparing(fileComparator69);
        fileEntryIterator61.entryComparator = fileComparator66;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        java.util.Comparator<java.io.File> fileComparator75 = fileComparator66.thenComparing(fileComparator74);
        fileEntryIterator56.entryComparator = fileComparator75;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file78 = explodedArchive77.manifestFile;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.io.File file80 = null;
        java.io.File file81 = explodedArchive77.getManifestFile(file80);
        fileEntryIterator56.root = file81;
        explodedArchive50.root = file81;
        int int84 = entryComparator27.compare(file46, file81);
        java.util.Iterator<java.io.File> fileItor85 = fileEntryIterator6.listFiles(file46);
        explodedArchive0.manifestFile = file46;
        boolean boolean87 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry88 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file89 = fileEntry88.getFile();
        java.lang.String str90 = fileEntry88.name;
        java.lang.String str91 = fileEntry88.getName();
        java.io.File file92 = fileEntry88.getFile();
        java.lang.String str93 = fileEntry88.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive94 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(fileItor85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertNull(file92);
        org.junit.Assert.assertNull(str93);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "", 1, "hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.io.File file4 = explodedArchive0.root;
        boolean boolean5 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.lang.String str8 = explodedArchive0.toString();
        java.lang.String str9 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive0.getNestedArchives(entryFilter10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "exploded archive" + "'", str9, "exploded archive");
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URL uRL13 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str14 = uRL11.getPath();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str14, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "", uRLStreamHandler13);
        java.net.URL uRL16 = new java.net.URL(uRL14, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream17 = uRL16.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL16.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", (int) 'a', "file", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        java.io.File file6 = explodedArchive0.root;
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator8 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(manifest7);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.manifestFile;
        java.io.File file6 = explodedArchive4.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator7.recursive = true;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator17.thenComparing(fileComparator25);
        fileEntryIterator7.entryComparator = fileComparator26;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.manifestFile;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.io.File file31 = null;
        java.io.File file32 = explodedArchive28.getManifestFile(file31);
        fileEntryIterator7.root = file32;
        explodedArchive4.manifestFile = file32;
        fileEntryIterator0.current = file32;
        java.io.File file36 = fileEntryIterator0.current;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator0.stack;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry38 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue37);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.net.URL uRL20 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = uRL20.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file://exploded archive:0", "file", (int) (short) 1, "file://exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        boolean boolean6 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator12.thenComparing(fileComparator15);
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator9.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        boolean boolean21 = fileEntryIterator19.hasNext();
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator28.thenComparing((java.util.Comparator<java.io.File>) entryComparator34);
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator22.thenComparing((java.util.Comparator<java.io.File>) entryComparator34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean38 = fileEntryIterator37.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive39.manifest = manifest42;
        java.io.File file44 = explodedArchive39.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        java.io.File file48 = fileEntryIterator45.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        fileEntryIterator45.current = file53;
        explodedArchive39.root = file53;
        fileEntryIterator37.root = file53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        boolean boolean62 = explodedArchive57.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        fileEntryIterator63.recursive = true;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.util.Comparator<java.io.File> fileComparator73 = fileEntryIterator71.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator73.thenComparing(fileComparator76);
        fileEntryIterator68.entryComparator = fileComparator73;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.util.Comparator<java.io.File> fileComparator81 = fileEntryIterator79.entryComparator;
        java.util.Comparator<java.io.File> fileComparator82 = fileComparator73.thenComparing(fileComparator81);
        fileEntryIterator63.entryComparator = fileComparator82;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file85 = explodedArchive84.manifestFile;
        java.io.File file86 = explodedArchive84.manifestFile;
        java.io.File file87 = null;
        java.io.File file88 = explodedArchive84.getManifestFile(file87);
        fileEntryIterator63.root = file88;
        explodedArchive57.root = file88;
        int int91 = entryComparator34.compare(file53, file88);
        fileEntryIterator0.entryComparator = entryComparator34;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator93 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file94 = fileEntryIterator93.current;
        java.io.File file95 = fileEntryIterator93.poll();
        java.io.File file96 = fileEntryIterator93.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue97 = fileEntryIterator93.stack;
        fileEntryIterator0.stack = fileItorQueue97;
        java.io.File file99 = fileEntryIterator0.current;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNull(file94);
        org.junit.Assert.assertNull(file95);
        org.junit.Assert.assertNull(file96);
        org.junit.Assert.assertNotNull(fileItorQueue97);
        org.junit.Assert.assertNull(file99);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator3.entryComparator = fileComparator19;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator3.stack;
        fileEntryIterator0.stack = fileItorQueue21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        explodedArchive23.recursive = true;
        java.util.jar.Manifest manifest28 = null;
        explodedArchive23.manifest = manifest28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        fileEntryIterator30.recursive = true;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator30.entryComparator;
        fileEntryIterator30.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        fileEntryIterator30.stack = fileItorQueue38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file41 = fileEntryIterator40.current;
        java.io.File file42 = fileEntryIterator40.poll();
        java.io.File file43 = fileEntryIterator40.poll();
        java.io.File file44 = fileEntryIterator40.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.io.File file47 = fileEntryIterator45.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        fileEntryIterator45.root = file51;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        java.io.File file57 = null;
        java.io.File file58 = explodedArchive54.getManifestFile(file57);
        java.util.Iterator<java.io.File> fileItor59 = fileEntryIterator45.listFiles(file58);
        fileEntryIterator40.root = file58;
        java.util.Iterator<java.io.File> fileItor61 = fileEntryIterator30.listFiles(file58);
        explodedArchive23.manifestFile = file58;
        fileEntryIterator0.root = file58;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry64 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor59);
        org.junit.Assert.assertNotNull(fileItor61);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file://hi!:100hi!", "file://hi!:100hi!", 100, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://hi!:100hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.manifestFile;
        java.io.File file4 = explodedArchive2.manifestFile;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive2.getManifestFile(file5);
        fileEntryIterator0.current = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file13 = fileEntryIterator12.current;
        java.io.File file14 = fileEntryIterator12.poll();
        java.io.File file15 = fileEntryIterator12.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator12.stack;
        fileEntryIterator0.stack = fileItorQueue16;
        java.io.File file18 = fileEntryIterator0.poll();
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNull(file18);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.root;
        java.io.File file4 = explodedArchive0.root;
        explodedArchive0.recursive = false;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean10 = fileEntryIterator9.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file12 = fileEntryIterator11.current;
        java.io.File file13 = fileEntryIterator11.poll();
        java.io.File file14 = fileEntryIterator11.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator20.thenComparing((java.util.Comparator<java.io.File>) entryComparator26);
        fileEntryIterator11.entryComparator = entryComparator26;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        fileEntryIterator29.recursive = true;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.util.Comparator<java.io.File> fileComparator43 = fileComparator39.thenComparing(fileComparator42);
        fileEntryIterator34.entryComparator = fileComparator39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        java.util.Comparator<java.io.File> fileComparator48 = fileComparator39.thenComparing(fileComparator47);
        fileEntryIterator29.entryComparator = fileComparator48;
        java.util.Comparator<java.io.File> fileComparator50 = entryComparator26.thenComparing(fileComparator48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean57 = fileEntryIterator56.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean59 = explodedArchive58.recursive;
        java.io.File file60 = explodedArchive58.manifestFile;
        java.util.jar.Manifest manifest61 = null;
        explodedArchive58.manifest = manifest61;
        java.io.File file63 = explodedArchive58.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.io.File file67 = fileEntryIterator64.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.manifestFile;
        java.io.File file70 = explodedArchive68.manifestFile;
        java.io.File file71 = null;
        java.io.File file72 = explodedArchive68.getManifestFile(file71);
        fileEntryIterator64.current = file72;
        explodedArchive58.root = file72;
        fileEntryIterator56.root = file72;
        int int76 = entryComparator26.compare(file55, file72);
        java.util.Iterator<java.io.File> fileItor77 = fileEntryIterator9.listFiles(file55);
        java.io.File file78 = explodedArchive0.getManifestFile(file55);
        boolean boolean79 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList81 = explodedArchive0.getNestedArchives(entryFilter80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(fileItor77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.lang.String str71 = uRL69.getHost();
        java.net.URL uRL73 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str74 = uRL69.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream75 = uRL69.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals(uRL73.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str74, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file://hi!:100hi!", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://hi!:100hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.lang.String str2 = fileEntry0.name;
        java.lang.String str3 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file5 = fileEntryIterator4.current;
        java.io.File file6 = fileEntryIterator4.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file8 = fileEntryIterator7.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator14.thenComparing(fileComparator22);
        fileEntryIterator7.entryComparator = fileComparator23;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator7.stack;
        fileEntryIterator4.stack = fileItorQueue25;
        boolean boolean27 = fileEntryIterator4.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean30 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean32 = explodedArchive31.recursive;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.util.jar.Manifest manifest34 = null;
        explodedArchive31.manifest = manifest34;
        java.io.File file36 = explodedArchive31.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.io.File file40 = fileEntryIterator37.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file42 = explodedArchive41.manifestFile;
        java.io.File file43 = explodedArchive41.manifestFile;
        java.io.File file44 = null;
        java.io.File file45 = explodedArchive41.getManifestFile(file44);
        fileEntryIterator37.current = file45;
        explodedArchive31.root = file45;
        fileEntryIterator29.root = file45;
        explodedArchive28.root = file45;
        java.util.Iterator<java.io.File> fileItor50 = fileEntryIterator4.listFiles(file45);
        fileEntry0.file = file45;
        fileEntry0.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor50);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = fileEntry0.file;
        java.io.File file4 = fileEntry0.file;
        java.lang.String str5 = fileEntry0.name;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator6.entryComparator = fileComparator22;
        java.io.File file24 = fileEntryIterator6.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean26 = fileEntryIterator25.recursive;
        boolean boolean27 = fileEntryIterator25.recursive;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator25.entryComparator;
        java.io.File file29 = fileEntryIterator25.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file31 = fileEntryIterator30.current;
        java.io.File file32 = fileEntryIterator30.poll();
        java.io.File file33 = fileEntryIterator30.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.util.Comparator<java.io.File> fileComparator43 = fileComparator39.thenComparing(fileComparator42);
        fileEntryIterator34.entryComparator = fileComparator39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator39.thenComparing((java.util.Comparator<java.io.File>) entryComparator45);
        fileEntryIterator30.entryComparator = entryComparator45;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        fileEntryIterator48.recursive = true;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator58.thenComparing(fileComparator61);
        fileEntryIterator53.entryComparator = fileComparator58;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator58.thenComparing(fileComparator66);
        fileEntryIterator48.entryComparator = fileComparator67;
        java.util.Comparator<java.io.File> fileComparator69 = entryComparator45.thenComparing(fileComparator67);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file71 = explodedArchive70.manifestFile;
        java.io.File file72 = explodedArchive70.manifestFile;
        java.io.File file73 = null;
        java.io.File file74 = explodedArchive70.getManifestFile(file73);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean76 = fileEntryIterator75.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean78 = explodedArchive77.recursive;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.util.jar.Manifest manifest80 = null;
        explodedArchive77.manifest = manifest80;
        java.io.File file82 = explodedArchive77.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator83 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue84 = fileEntryIterator83.stack;
        java.util.Comparator<java.io.File> fileComparator85 = fileEntryIterator83.entryComparator;
        java.io.File file86 = fileEntryIterator83.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file88 = explodedArchive87.manifestFile;
        java.io.File file89 = explodedArchive87.manifestFile;
        java.io.File file90 = null;
        java.io.File file91 = explodedArchive87.getManifestFile(file90);
        fileEntryIterator83.current = file91;
        explodedArchive77.root = file91;
        fileEntryIterator75.root = file91;
        int int95 = entryComparator45.compare(file74, file91);
        java.util.Iterator<java.io.File> fileItor96 = fileEntryIterator25.listFiles(file91);
        fileEntryIterator6.root = file91;
        fileEntry0.file = file91;
        java.lang.Class<?> wildcardClass99 = fileEntry0.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNotNull(fileItorQueue84);
        org.junit.Assert.assertNotNull(fileComparator85);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertNotNull(fileItor96);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.io.File file10 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator11.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        java.util.Iterator<java.io.File> fileItor25 = fileEntryIterator11.listFiles(file24);
        fileEntryIterator6.root = file24;
        explodedArchive0.manifestFile = file24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        boolean boolean30 = fileEntryIterator28.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.manifestFile;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.io.File file34 = null;
        java.io.File file35 = explodedArchive31.getManifestFile(file34);
        boolean boolean36 = explodedArchive31.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        fileEntryIterator37.recursive = true;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator47.thenComparing(fileComparator50);
        fileEntryIterator42.entryComparator = fileComparator47;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator47.thenComparing(fileComparator55);
        fileEntryIterator37.entryComparator = fileComparator56;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.manifestFile;
        java.io.File file60 = explodedArchive58.manifestFile;
        java.io.File file61 = null;
        java.io.File file62 = explodedArchive58.getManifestFile(file61);
        fileEntryIterator37.root = file62;
        explodedArchive31.root = file62;
        java.util.Iterator<java.io.File> fileItor65 = fileEntryIterator28.listFiles(file62);
        java.io.File file66 = explodedArchive0.getManifestFile(file62);
        java.lang.String str67 = explodedArchive0.toString();
        java.util.jar.Manifest manifest68 = null;
        explodedArchive0.manifest = manifest68;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL70 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor25);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor65);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "exploded archive" + "'", str67, "exploded archive");
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.lang.String str34 = explodedArchive0.toString();
        java.util.jar.Manifest manifest35 = explodedArchive0.manifest;
        java.io.File file36 = null;
        explodedArchive0.root = file36;
        explodedArchive0.recursive = false;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL40 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest35);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file://exploded archive:0", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        boolean boolean4 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator0.entryComparator;
        boolean boolean8 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file10 = fileEntryIterator9.current;
        java.io.File file11 = fileEntryIterator9.poll();
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator18.thenComparing(fileComparator21);
        fileEntryIterator13.entryComparator = fileComparator18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator18.thenComparing((java.util.Comparator<java.io.File>) entryComparator24);
        fileEntryIterator9.entryComparator = entryComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        fileEntryIterator27.recursive = true;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator37.thenComparing(fileComparator40);
        fileEntryIterator32.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator37.thenComparing(fileComparator45);
        fileEntryIterator27.entryComparator = fileComparator46;
        java.util.Comparator<java.io.File> fileComparator48 = entryComparator24.thenComparing(fileComparator46);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry49.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.io.File file54 = fileEntryIterator52.current;
        boolean boolean55 = fileEntryIterator52.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator52.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean58 = explodedArchive57.recursive;
        boolean boolean59 = explodedArchive57.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file61 = explodedArchive60.manifestFile;
        java.io.File file62 = explodedArchive60.manifestFile;
        java.io.File file63 = null;
        java.io.File file64 = explodedArchive60.getManifestFile(file63);
        explodedArchive57.root = file64;
        fileEntryIterator52.root = file64;
        fileEntry49.file = file64;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.manifestFile;
        explodedArchive68.recursive = true;
        java.lang.String str72 = explodedArchive68.toString();
        boolean boolean73 = explodedArchive68.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file75 = fileEntryIterator74.current;
        java.io.File file76 = fileEntryIterator74.poll();
        java.io.File file77 = fileEntryIterator74.poll();
        java.io.File file78 = fileEntryIterator74.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.io.File file81 = fileEntryIterator79.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file83 = explodedArchive82.manifestFile;
        java.io.File file84 = explodedArchive82.manifestFile;
        java.io.File file85 = null;
        java.io.File file86 = explodedArchive82.getManifestFile(file85);
        fileEntryIterator79.root = file85;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file89 = explodedArchive88.manifestFile;
        java.io.File file90 = explodedArchive88.manifestFile;
        java.io.File file91 = null;
        java.io.File file92 = explodedArchive88.getManifestFile(file91);
        java.util.Iterator<java.io.File> fileItor93 = fileEntryIterator79.listFiles(file92);
        fileEntryIterator74.root = file92;
        explodedArchive68.manifestFile = file92;
        int int96 = entryComparator24.compare(file64, file92);
        fileEntryIterator0.entryComparator = entryComparator24;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "exploded archive" + "'", str72, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor93);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        java.util.jar.Manifest manifest17 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.io.File file21 = null;
        java.io.File file22 = explodedArchive18.getManifestFile(file21);
        boolean boolean23 = explodedArchive18.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        fileEntryIterator24.recursive = true;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        java.util.Comparator<java.io.File> fileComparator38 = fileComparator34.thenComparing(fileComparator37);
        fileEntryIterator29.entryComparator = fileComparator34;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.util.Comparator<java.io.File> fileComparator43 = fileComparator34.thenComparing(fileComparator42);
        fileEntryIterator24.entryComparator = fileComparator43;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        fileEntryIterator24.root = file49;
        explodedArchive18.root = file49;
        java.io.File file52 = explodedArchive0.getManifestFile(file49);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file52, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.lang.String str5 = uRL3.getFile();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL9 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.lang.String str10 = uRL9.getUserInfo();
        java.lang.String str11 = uRL9.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream12 = uRL9.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str5, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.io.File file5 = explodedArchive0.manifestFile;
        boolean boolean6 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file8 = fileEntry7.getFile();
        java.io.File file9 = fileEntry7.file;
        java.io.File file10 = null;
        fileEntry7.file = file10;
        java.lang.String str12 = fileEntry7.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file14 = fileEntryIterator13.current;
        java.io.File file15 = null;
        fileEntryIterator13.current = file15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean18 = explodedArchive17.recursive;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.util.jar.Manifest manifest20 = null;
        explodedArchive17.manifest = manifest20;
        java.io.File file22 = explodedArchive17.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.io.File file26 = fileEntryIterator23.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator23.current = file31;
        explodedArchive17.root = file31;
        fileEntryIterator13.root = file31;
        fileEntry7.file = file31;
        java.io.File file36 = fileEntry7.getFile();
        java.io.File file37 = fileEntry7.file;
        explodedArchive0.manifestFile = file37;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getRef();
        java.net.URL uRL7 = null;
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL7, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler9);
        java.lang.String str11 = uRL10.getHost();
        java.lang.String str12 = uRL10.getAuthority();
        java.lang.String str13 = uRL10.getAuthority();
        java.lang.String str14 = uRL10.getFile();
        int int15 = uRL10.getPort();
        java.lang.String str16 = uRL10.getRef();
        java.net.URL uRL18 = new java.net.URL(uRL10, "hi!");
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL(uRL18, "", uRLStreamHandler20);
        boolean boolean22 = uRL3.sameFile(uRL18);
        java.lang.String str23 = uRL18.getQuery();
        java.net.Proxy proxy24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection25 = uRL18.openConnection(proxy24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL18.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL21.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URL uRL13 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str14 = uRL13.toExternalForm();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = uRL13.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = fileEntry0.file;
        java.io.File file4 = fileEntry0.file;
        java.lang.String str5 = fileEntry0.name;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator6.entryComparator = fileComparator22;
        java.io.File file24 = fileEntryIterator6.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean26 = fileEntryIterator25.recursive;
        boolean boolean27 = fileEntryIterator25.recursive;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator25.entryComparator;
        java.io.File file29 = fileEntryIterator25.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file31 = fileEntryIterator30.current;
        java.io.File file32 = fileEntryIterator30.poll();
        java.io.File file33 = fileEntryIterator30.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.util.Comparator<java.io.File> fileComparator43 = fileComparator39.thenComparing(fileComparator42);
        fileEntryIterator34.entryComparator = fileComparator39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator39.thenComparing((java.util.Comparator<java.io.File>) entryComparator45);
        fileEntryIterator30.entryComparator = entryComparator45;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        fileEntryIterator48.recursive = true;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator58.thenComparing(fileComparator61);
        fileEntryIterator53.entryComparator = fileComparator58;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator58.thenComparing(fileComparator66);
        fileEntryIterator48.entryComparator = fileComparator67;
        java.util.Comparator<java.io.File> fileComparator69 = entryComparator45.thenComparing(fileComparator67);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file71 = explodedArchive70.manifestFile;
        java.io.File file72 = explodedArchive70.manifestFile;
        java.io.File file73 = null;
        java.io.File file74 = explodedArchive70.getManifestFile(file73);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean76 = fileEntryIterator75.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean78 = explodedArchive77.recursive;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.util.jar.Manifest manifest80 = null;
        explodedArchive77.manifest = manifest80;
        java.io.File file82 = explodedArchive77.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator83 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue84 = fileEntryIterator83.stack;
        java.util.Comparator<java.io.File> fileComparator85 = fileEntryIterator83.entryComparator;
        java.io.File file86 = fileEntryIterator83.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file88 = explodedArchive87.manifestFile;
        java.io.File file89 = explodedArchive87.manifestFile;
        java.io.File file90 = null;
        java.io.File file91 = explodedArchive87.getManifestFile(file90);
        fileEntryIterator83.current = file91;
        explodedArchive77.root = file91;
        fileEntryIterator75.root = file91;
        int int95 = entryComparator45.compare(file74, file91);
        java.util.Iterator<java.io.File> fileItor96 = fileEntryIterator25.listFiles(file91);
        fileEntryIterator6.root = file91;
        fileEntry0.file = file91;
        java.lang.String str99 = fileEntry0.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNotNull(fileItorQueue84);
        org.junit.Assert.assertNotNull(fileComparator85);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertNotNull(fileItor96);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        boolean boolean4 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file6 = fileEntryIterator5.current;
        java.io.File file7 = fileEntryIterator5.poll();
        java.io.File file8 = fileEntryIterator5.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator5.stack;
        java.io.File file10 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        java.io.File file14 = fileEntryIterator11.current;
        fileEntryIterator11.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.manifestFile;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.io.File file20 = null;
        java.io.File file21 = explodedArchive17.getManifestFile(file20);
        fileEntryIterator11.root = file21;
        fileEntryIterator5.root = file21;
        java.io.File file24 = fileEntryIterator5.root;
        fileEntryIterator0.current = file24;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        boolean boolean28 = explodedArchive26.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        explodedArchive26.root = file33;
        fileEntryIterator0.root = file33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.manifestFile;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.io.File file39 = null;
        java.io.File file40 = explodedArchive36.getManifestFile(file39);
        boolean boolean41 = explodedArchive36.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        fileEntryIterator42.recursive = true;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator52.thenComparing(fileComparator55);
        fileEntryIterator47.entryComparator = fileComparator52;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.util.Comparator<java.io.File> fileComparator61 = fileComparator52.thenComparing(fileComparator60);
        fileEntryIterator42.entryComparator = fileComparator61;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.manifestFile;
        java.io.File file65 = explodedArchive63.manifestFile;
        java.io.File file66 = null;
        java.io.File file67 = explodedArchive63.getManifestFile(file66);
        fileEntryIterator42.root = file67;
        explodedArchive36.root = file67;
        explodedArchive36.recursive = false;
        java.util.jar.Manifest manifest72 = null;
        explodedArchive36.manifest = manifest72;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file75 = fileEntryIterator74.current;
        java.io.File file76 = fileEntryIterator74.poll();
        java.io.File file77 = fileEntryIterator74.poll();
        java.io.File file78 = fileEntryIterator74.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.io.File file81 = fileEntryIterator79.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file83 = explodedArchive82.manifestFile;
        java.io.File file84 = explodedArchive82.manifestFile;
        java.io.File file85 = null;
        java.io.File file86 = explodedArchive82.getManifestFile(file85);
        fileEntryIterator79.root = file85;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file89 = explodedArchive88.manifestFile;
        java.io.File file90 = explodedArchive88.manifestFile;
        java.io.File file91 = null;
        java.io.File file92 = explodedArchive88.getManifestFile(file91);
        java.util.Iterator<java.io.File> fileItor93 = fileEntryIterator79.listFiles(file92);
        fileEntryIterator74.root = file92;
        explodedArchive36.root = file92;
        fileEntryIterator0.current = file92;
        java.io.File file97 = null;
        fileEntryIterator0.current = file97;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue99 = fileEntryIterator0.stack;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor93);
        org.junit.Assert.assertNotNull(fileItorQueue99);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.root;
        java.io.File file4 = explodedArchive0.root;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        boolean boolean7 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        fileEntryIterator0.stack = fileItorQueue3;
        boolean boolean5 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator0.stack;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry9 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue8);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive0.getNestedArchives(entryFilter42);
        explodedArchive0.recursive = false;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor46 = explodedArchive0.iterator();
        org.springframework.boot.loader.archive.Archive.Entry entry47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive48 = explodedArchive0.getNestedArchive(entry47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(entryItor46);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        java.io.File file18 = fileEntryIterator0.current;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileComparator19);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getRef();
        int int8 = uRL3.getDefaultPort();
        java.lang.Class[] classArray9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = uRL3.getContent(classArray9);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file7;
        explodedArchive0.recursive = false;
        java.io.File file11 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive0.getNestedArchives(entryFilter14);
        explodedArchive0.recursive = true;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList15);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.lang.String str71 = uRL69.getHost();
        java.net.URL uRL73 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str74 = uRL73.getRef();
        int int75 = uRL73.getDefaultPort();
        java.lang.String str76 = uRL73.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler78 = null;
        java.net.URL uRL79 = new java.net.URL(uRL73, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler78);
        java.net.URI uRI80 = uRL73.toURI();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream81 = uRL73.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals(uRL73.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals(uRL79.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(uRI80);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL14 = new java.net.URL(uRL11, "file://hi!:100hi!", uRLStreamHandler13);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: For input string: \"100hi!\"");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive0.manifest = manifest31;
        java.util.jar.Manifest manifest33 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.Entry entry34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive35 = explodedArchive0.getNestedArchive(entry34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest33);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file4 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator0.entryComparator;
        java.io.File file8 = fileEntryIterator0.root;
        java.lang.Class<?> wildcardClass9 = fileEntryIterator0.getClass();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        fileEntryIterator0.root = file6;
        boolean boolean9 = fileEntryIterator0.recursive;
        java.io.File file10 = fileEntryIterator0.current;
        java.io.File file11 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.lang.String str2 = fileEntry0.getName();
        java.lang.String str3 = fileEntry0.getName();
        java.io.File file4 = null;
        fileEntry0.file = file4;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = fileEntry0.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", (int) (short) 100, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", (int) (byte) 100, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        java.io.File file6 = explodedArchive0.manifestFile;
        java.lang.String str7 = explodedArchive0.toString();
        java.io.File file8 = null;
        java.io.File file9 = explodedArchive0.getManifestFile(file8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive0.getNestedArchives(entryFilter10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator0.stack = fileItorQueue8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.io.File file12 = fileEntryIterator10.current;
        java.util.ArrayDeque<java.util.Iterator<java.io.File>> fileItorQueue13 = new java.util.ArrayDeque<java.util.Iterator<java.io.File>>();
        fileEntryIterator10.stack = fileItorQueue13;
        boolean boolean15 = fileEntryIterator10.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator10.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file18 = fileEntryIterator17.current;
        java.io.File file19 = fileEntryIterator17.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file21 = fileEntryIterator20.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator27.thenComparing(fileComparator30);
        fileEntryIterator22.entryComparator = fileComparator27;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator27.thenComparing(fileComparator35);
        fileEntryIterator20.entryComparator = fileComparator36;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator20.stack;
        fileEntryIterator17.stack = fileItorQueue38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file41 = fileEntryIterator40.current;
        java.io.File file42 = fileEntryIterator40.poll();
        java.io.File file43 = fileEntryIterator40.poll();
        java.io.File file44 = fileEntryIterator40.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.io.File file47 = fileEntryIterator45.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        fileEntryIterator45.root = file51;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        java.io.File file57 = null;
        java.io.File file58 = explodedArchive54.getManifestFile(file57);
        java.util.Iterator<java.io.File> fileItor59 = fileEntryIterator45.listFiles(file58);
        fileEntryIterator40.root = file58;
        java.util.Iterator<java.io.File> fileItor61 = fileEntryIterator17.listFiles(file58);
        fileEntryIterator10.current = file58;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        fileEntryIterator63.recursive = true;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator63.entryComparator;
        fileEntryIterator63.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        fileEntryIterator63.stack = fileItorQueue71;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file74 = fileEntryIterator73.current;
        java.io.File file75 = fileEntryIterator73.poll();
        java.io.File file76 = fileEntryIterator73.poll();
        java.io.File file77 = fileEntryIterator73.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator78.stack;
        java.io.File file80 = fileEntryIterator78.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file82 = explodedArchive81.manifestFile;
        java.io.File file83 = explodedArchive81.manifestFile;
        java.io.File file84 = null;
        java.io.File file85 = explodedArchive81.getManifestFile(file84);
        fileEntryIterator78.root = file84;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file88 = explodedArchive87.manifestFile;
        java.io.File file89 = explodedArchive87.manifestFile;
        java.io.File file90 = null;
        java.io.File file91 = explodedArchive87.getManifestFile(file90);
        java.util.Iterator<java.io.File> fileItor92 = fileEntryIterator78.listFiles(file91);
        fileEntryIterator73.root = file91;
        java.util.Iterator<java.io.File> fileItor94 = fileEntryIterator63.listFiles(file91);
        fileEntryIterator10.root = file91;
        fileEntryIterator0.current = file91;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive97 = new org.springframework.boot.loader.archive.ExplodedArchive(file91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor59);
        org.junit.Assert.assertNotNull(fileItor61);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor92);
        org.junit.Assert.assertNotNull(fileItor94);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator3.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean19 = fileEntryIterator18.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean21 = explodedArchive20.recursive;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.util.jar.Manifest manifest23 = null;
        explodedArchive20.manifest = manifest23;
        java.io.File file25 = explodedArchive20.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.io.File file29 = fileEntryIterator26.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator26.current = file34;
        explodedArchive20.root = file34;
        fileEntryIterator18.root = file34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        boolean boolean43 = explodedArchive38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        fileEntryIterator44.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator54.thenComparing(fileComparator57);
        fileEntryIterator49.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator54.thenComparing(fileComparator62);
        fileEntryIterator44.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator44.root = file69;
        explodedArchive38.root = file69;
        int int72 = entryComparator15.compare(file34, file69);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file69, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        int int84 = uRL69.getPort();
        java.net.URI uRI85 = uRL69.toURI();
        java.net.URLConnection uRLConnection86 = uRL69.openConnection();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(uRI85);
        org.junit.Assert.assertNotNull(uRLConnection86);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "file://hi!:100hi!", "exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", 0, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: Illegal character found in host: '/'");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.manifestFile;
        java.io.File file21 = explodedArchive19.manifestFile;
        explodedArchive19.recursive = true;
        java.util.jar.Manifest manifest24 = null;
        explodedArchive19.manifest = manifest24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str27 = fileEntry26.name;
        java.io.File file28 = fileEntry26.file;
        fileEntry26.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        boolean boolean33 = fileEntryIterator31.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        boolean boolean39 = explodedArchive34.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        fileEntryIterator40.recursive = true;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator40.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        java.util.Comparator<java.io.File> fileComparator54 = fileComparator50.thenComparing(fileComparator53);
        fileEntryIterator45.entryComparator = fileComparator50;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator50.thenComparing(fileComparator58);
        fileEntryIterator40.entryComparator = fileComparator59;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.manifestFile;
        java.io.File file63 = explodedArchive61.manifestFile;
        java.io.File file64 = null;
        java.io.File file65 = explodedArchive61.getManifestFile(file64);
        fileEntryIterator40.root = file65;
        explodedArchive34.root = file65;
        java.util.Iterator<java.io.File> fileItor68 = fileEntryIterator31.listFiles(file65);
        fileEntry26.file = file65;
        explodedArchive19.manifestFile = file65;
        boolean boolean71 = uRL3.equals((java.lang.Object) explodedArchive19);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        int int13 = uRL11.getDefaultPort();
        java.lang.String str14 = uRL11.getUserInfo();
        java.lang.String str15 = uRL11.getRef();
        int int16 = uRL11.getPort();
        java.lang.String str17 = uRL11.getQuery();
        java.lang.String str18 = uRL11.getRef();
        java.lang.String str19 = uRL11.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = uRL11.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.io.File file18 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        fileEntryIterator0.entryComparator = entryComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator29.thenComparing(fileComparator32);
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator26.thenComparing(fileComparator32);
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator23.thenComparing(fileComparator32);
        java.util.Comparator<java.io.File> fileComparator36 = entryComparator19.thenComparing(fileComparator23);
        java.util.Comparator<java.io.File> fileComparator37 = entryComparator19.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean39 = explodedArchive38.recursive;
        java.io.File file40 = null;
        explodedArchive38.manifestFile = file40;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str43 = fileEntry42.getName();
        fileEntry42.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean47 = explodedArchive46.recursive;
        boolean boolean48 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        explodedArchive46.root = file53;
        fileEntry42.file = file53;
        java.io.File file56 = fileEntry42.getFile();
        explodedArchive38.manifestFile = file56;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.manifestFile;
        java.io.File file60 = explodedArchive58.manifestFile;
        java.io.File file61 = null;
        java.io.File file62 = explodedArchive58.getManifestFile(file61);
        boolean boolean63 = explodedArchive58.recursive;
        java.io.File file64 = explodedArchive58.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        explodedArchive65.recursive = true;
        java.lang.String str69 = explodedArchive65.toString();
        boolean boolean70 = explodedArchive65.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.io.File file74 = null;
        java.io.File file75 = explodedArchive71.getManifestFile(file74);
        java.io.File file76 = explodedArchive65.getManifestFile(file74);
        explodedArchive58.root = file76;
        int int78 = entryComparator19.compare(file56, file76);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive(file56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "exploded archive" + "'", str69, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file45 = fileEntry44.getFile();
        java.io.File file46 = fileEntry44.file;
        java.io.File file47 = null;
        fileEntry44.file = file47;
        java.lang.String str49 = fileEntry44.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file51 = fileEntryIterator50.current;
        java.io.File file52 = null;
        fileEntryIterator50.current = file52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean55 = explodedArchive54.recursive;
        java.io.File file56 = explodedArchive54.manifestFile;
        java.util.jar.Manifest manifest57 = null;
        explodedArchive54.manifest = manifest57;
        java.io.File file59 = explodedArchive54.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.io.File file63 = fileEntryIterator60.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        fileEntryIterator60.current = file68;
        explodedArchive54.root = file68;
        fileEntryIterator50.root = file68;
        fileEntry44.file = file68;
        java.io.File file73 = fileEntry44.file;
        explodedArchive0.root = file73;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter75 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList76 = explodedArchive0.getNestedArchives(entryFilter75);
        java.lang.String str77 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest78 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList76);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str77, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.io.File file10 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator11.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        java.util.Iterator<java.io.File> fileItor25 = fileEntryIterator11.listFiles(file24);
        fileEntryIterator6.root = file24;
        explodedArchive0.manifestFile = file24;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL28 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor25);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        fileEntryIterator0.root = file10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean14 = fileEntryIterator13.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean16 = explodedArchive15.recursive;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive15.manifest = manifest18;
        java.io.File file20 = explodedArchive15.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.io.File file24 = fileEntryIterator21.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        fileEntryIterator21.current = file29;
        explodedArchive15.root = file29;
        fileEntryIterator13.root = file29;
        java.util.Iterator<java.io.File> fileItor33 = fileEntryIterator0.listFiles(file29);
        fileEntryIterator0.recursive = true;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor33);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest32 = explodedArchive0.manifest;
        java.io.File file33 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive0.getNestedArchives(entryFilter34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.net.URL uRL38 = explodedArchive0.getUrl();
        java.util.jar.Manifest manifest39 = null;
        explodedArchive0.manifest = manifest39;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.lang.String str5 = uRL3.getFile();
        java.lang.String str6 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "", uRLStreamHandler8);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream10 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str5, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", (int) (byte) 10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        boolean boolean8 = fileEntryIterator6.hasNext();
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator15.thenComparing(fileComparator18);
        fileEntryIterator10.entryComparator = fileComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator15.thenComparing((java.util.Comparator<java.io.File>) entryComparator21);
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean25 = fileEntryIterator24.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        java.io.File file28 = explodedArchive26.manifestFile;
        java.util.jar.Manifest manifest29 = null;
        explodedArchive26.manifest = manifest29;
        java.io.File file31 = explodedArchive26.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.io.File file35 = fileEntryIterator32.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.manifestFile;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.io.File file39 = null;
        java.io.File file40 = explodedArchive36.getManifestFile(file39);
        fileEntryIterator32.current = file40;
        explodedArchive26.root = file40;
        fileEntryIterator24.root = file40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        boolean boolean49 = explodedArchive44.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator60.thenComparing(fileComparator63);
        fileEntryIterator55.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator60.thenComparing(fileComparator68);
        fileEntryIterator50.entryComparator = fileComparator69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.io.File file74 = null;
        java.io.File file75 = explodedArchive71.getManifestFile(file74);
        fileEntryIterator50.root = file75;
        explodedArchive44.root = file75;
        int int78 = entryComparator21.compare(file40, file75);
        fileEntry0.file = file75;
        java.lang.String str80 = fileEntry0.getName();
        java.io.File file81 = fileEntry0.getFile();
        java.io.File file82 = fileEntry0.getFile();
        java.lang.String str83 = fileEntry0.getName();
        java.io.File file84 = fileEntry0.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.net.Proxy proxy19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection20 = uRL17.openConnection(proxy19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        java.io.File file6 = explodedArchive0.manifestFile;
        java.lang.String str7 = explodedArchive0.toString();
        java.io.File file8 = null;
        java.io.File file9 = explodedArchive0.getManifestFile(file8);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL10 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive0.getNestedArchives(entryFilter36);
        java.net.URL uRL38 = explodedArchive0.getUrl();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator39 = explodedArchive0.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest40 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator39);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream7 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        boolean boolean5 = fileEntryIterator0.hasNext();
        boolean boolean6 = fileEntryIterator0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        boolean boolean22 = uRL11.sameFile(uRL21);
        java.lang.String str23 = uRL11.getProtocol();
        java.net.URL uRL24 = null;
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL24, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler26);
        java.lang.String str28 = uRL27.getHost();
        int int29 = uRL27.getPort();
        java.net.URL uRL30 = null;
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL30, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler32);
        java.lang.String str34 = uRL33.getHost();
        java.lang.String str35 = uRL33.getAuthority();
        java.lang.String str36 = uRL33.getQuery();
        int int37 = uRL33.getDefaultPort();
        boolean boolean38 = uRL27.sameFile(uRL33);
        java.lang.String str39 = uRL33.getFile();
        boolean boolean40 = uRL11.sameFile(uRL33);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream41 = uRL33.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file" + "'", str23, "file");
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file://hi!:100hi!", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", 1, "file", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://hi!:100hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file10 = fileEntryIterator9.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator9.entryComparator = fileComparator25;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator9.stack;
        fileEntryIterator6.stack = fileItorQueue27;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file30 = fileEntryIterator29.current;
        java.io.File file31 = fileEntryIterator29.poll();
        java.io.File file32 = fileEntryIterator29.poll();
        java.io.File file33 = fileEntryIterator29.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.io.File file36 = fileEntryIterator34.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        fileEntryIterator34.root = file40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.manifestFile;
        java.io.File file45 = explodedArchive43.manifestFile;
        java.io.File file46 = null;
        java.io.File file47 = explodedArchive43.getManifestFile(file46);
        java.util.Iterator<java.io.File> fileItor48 = fileEntryIterator34.listFiles(file47);
        fileEntryIterator29.root = file47;
        java.util.Iterator<java.io.File> fileItor50 = fileEntryIterator6.listFiles(file47);
        fileEntry0.file = file47;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file47, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor48);
        org.junit.Assert.assertNotNull(fileItor50);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.lang.String str41 = explodedArchive38.toString();
        java.lang.String str42 = explodedArchive38.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean44 = fileEntryIterator43.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean46 = explodedArchive45.recursive;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.util.jar.Manifest manifest48 = null;
        explodedArchive45.manifest = manifest48;
        java.io.File file50 = explodedArchive45.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        java.io.File file54 = fileEntryIterator51.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.manifestFile;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.io.File file58 = null;
        java.io.File file59 = explodedArchive55.getManifestFile(file58);
        fileEntryIterator51.current = file59;
        explodedArchive45.root = file59;
        fileEntryIterator43.root = file59;
        java.io.File file63 = explodedArchive38.getManifestFile(file59);
        java.io.File file64 = explodedArchive0.getManifestFile(file63);
        java.io.File file65 = explodedArchive0.root;
        java.io.File file66 = explodedArchive0.manifestFile;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest67 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "exploded archive" + "'", str41, "exploded archive");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "exploded archive" + "'", str42, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file66);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        java.io.File file5 = explodedArchive0.manifestFile;
        java.io.File file6 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator12.thenComparing(fileComparator15);
        fileEntryIterator7.entryComparator = fileComparator12;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean19 = fileEntryIterator18.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean21 = explodedArchive20.recursive;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.util.jar.Manifest manifest23 = null;
        explodedArchive20.manifest = manifest23;
        java.io.File file25 = explodedArchive20.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.io.File file29 = fileEntryIterator26.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator26.current = file34;
        explodedArchive20.root = file34;
        fileEntryIterator18.root = file34;
        fileEntryIterator7.root = file34;
        java.io.File file39 = explodedArchive0.getManifestFile(file34);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL40 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("exploded archive", "file://exploded archive", (int) ' ', "file://hi!:100hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        boolean boolean5 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator0.stack;
        java.io.File file7 = fileEntryIterator0.poll();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = file7.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "hi!", 100, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file3 = fileEntry2.getFile();
        java.io.File file4 = fileEntry2.file;
        java.io.File file5 = null;
        fileEntry2.file = file5;
        java.lang.String str7 = fileEntry2.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        boolean boolean10 = fileEntryIterator8.hasNext();
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator11.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean27 = fileEntryIterator26.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean29 = explodedArchive28.recursive;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive28.manifest = manifest31;
        java.io.File file33 = explodedArchive28.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.io.File file37 = fileEntryIterator34.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator34.current = file42;
        explodedArchive28.root = file42;
        fileEntryIterator26.root = file42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        boolean boolean51 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        fileEntryIterator52.recursive = true;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator52.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        fileEntryIterator52.root = file77;
        explodedArchive46.root = file77;
        int int80 = entryComparator23.compare(file42, file77);
        fileEntry2.file = file77;
        explodedArchive0.manifestFile = file77;
        java.util.jar.Manifest manifest83 = null;
        explodedArchive0.manifest = manifest83;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor85 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("", "hi!", 0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        boolean boolean4 = fileEntryIterator0.recursive;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator0.entryComparator;
        java.io.File file6 = fileEntryIterator0.root;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNull(file6);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URLStreamHandler uRLStreamHandler74 = null;
        java.net.URL uRL75 = new java.net.URL(uRL72, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler74);
        int int76 = uRL75.getDefaultPort();
        java.lang.String str77 = uRL75.getRef();
        java.net.URL uRL78 = null;
        java.net.URLStreamHandler uRLStreamHandler80 = null;
        java.net.URL uRL81 = new java.net.URL(uRL78, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler80);
        java.lang.String str82 = uRL81.getHost();
        java.lang.String str83 = uRL81.getAuthority();
        java.lang.String str84 = uRL81.toExternalForm();
        java.net.URLConnection uRLConnection85 = uRL81.openConnection();
        java.lang.String str86 = uRL81.getFile();
        java.net.URL uRL88 = new java.net.URL(uRL81, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        boolean boolean89 = uRL75.equals((java.lang.Object) "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals(uRL81.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str84, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str86, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL88.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        java.io.File file6 = explodedArchive0.manifestFile;
        java.lang.String str7 = explodedArchive0.toString();
        java.io.File file8 = null;
        java.io.File file9 = explodedArchive0.getManifestFile(file8);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str5 = fileEntry4.getName();
        fileEntry4.name = "exploded archive";
        fileEntry4.name = "hi!";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.lang.String str13 = explodedArchive10.toString();
        java.lang.String str14 = explodedArchive10.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean16 = fileEntryIterator15.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean18 = explodedArchive17.recursive;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.util.jar.Manifest manifest20 = null;
        explodedArchive17.manifest = manifest20;
        java.io.File file22 = explodedArchive17.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.io.File file26 = fileEntryIterator23.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator23.current = file31;
        explodedArchive17.root = file31;
        fileEntryIterator15.root = file31;
        java.io.File file35 = explodedArchive10.getManifestFile(file31);
        fileEntry4.file = file35;
        fileEntry4.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        java.io.File file39 = fileEntry4.file;
        java.io.File file40 = fileEntry4.file;
        java.io.File file41 = explodedArchive0.getManifestFile(file40);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL42 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "exploded archive" + "'", str13, "exploded archive");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "exploded archive" + "'", str14, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator5;
        java.io.File file7 = fileEntryIterator0.poll();
        java.io.File file8 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler4);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI6 = uRL5.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in authority at index 7: file://exploded archive:0");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive:0");
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        boolean boolean4 = fileEntryIterator0.recursive;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file8 = fileEntry7.getFile();
        java.io.File file9 = fileEntry7.file;
        fileEntry7.name = "";
        java.io.File file12 = fileEntry7.file;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean14 = explodedArchive13.recursive;
        boolean boolean15 = explodedArchive13.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.manifestFile;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.io.File file19 = null;
        java.io.File file20 = explodedArchive16.getManifestFile(file19);
        explodedArchive13.root = file20;
        explodedArchive13.recursive = false;
        java.io.File file24 = explodedArchive13.root;
        fileEntry7.file = file24;
        java.io.File file26 = fileEntry7.getFile();
        java.util.Iterator<java.io.File> fileItor27 = fileEntryIterator0.listFiles(file26);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file29 = fileEntryIterator28.current;
        java.io.File file30 = fileEntryIterator28.poll();
        java.io.File file31 = fileEntryIterator28.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator37.thenComparing(fileComparator40);
        fileEntryIterator32.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator37.thenComparing((java.util.Comparator<java.io.File>) entryComparator43);
        fileEntryIterator28.entryComparator = entryComparator43;
        java.io.File file46 = fileEntryIterator28.current;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator28.entryComparator;
        java.util.Comparator<java.io.File> fileComparator48 = fileComparator47.reversed();
        fileEntryIterator0.entryComparator = fileComparator48;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry50 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileComparator48);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.io.File file18 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        fileEntryIterator0.entryComparator = entryComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file22 = fileEntryIterator21.current;
        java.io.File file23 = fileEntryIterator21.poll();
        java.io.File file24 = fileEntryIterator21.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator30.thenComparing(fileComparator33);
        fileEntryIterator25.entryComparator = fileComparator30;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator30.thenComparing((java.util.Comparator<java.io.File>) entryComparator36);
        fileEntryIterator21.entryComparator = entryComparator36;
        java.io.File file39 = fileEntryIterator21.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean42 = fileEntryIterator41.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean44 = explodedArchive43.recursive;
        java.io.File file45 = explodedArchive43.manifestFile;
        java.util.jar.Manifest manifest46 = null;
        explodedArchive43.manifest = manifest46;
        java.io.File file48 = explodedArchive43.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.io.File file52 = fileEntryIterator49.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file54 = explodedArchive53.manifestFile;
        java.io.File file55 = explodedArchive53.manifestFile;
        java.io.File file56 = null;
        java.io.File file57 = explodedArchive53.getManifestFile(file56);
        fileEntryIterator49.current = file57;
        explodedArchive43.root = file57;
        fileEntryIterator41.root = file57;
        explodedArchive40.root = file57;
        fileEntryIterator21.current = file57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean64 = explodedArchive63.recursive;
        boolean boolean65 = explodedArchive63.recursive;
        java.io.File file66 = explodedArchive63.root;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive63.getManifestFile(file67);
        fileEntryIterator21.current = file68;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file71 = fileEntryIterator70.current;
        java.io.File file72 = fileEntryIterator70.poll();
        java.io.File file73 = fileEntryIterator70.poll();
        java.io.File file74 = fileEntryIterator70.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator75.stack;
        java.io.File file77 = fileEntryIterator75.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file79 = explodedArchive78.manifestFile;
        java.io.File file80 = explodedArchive78.manifestFile;
        java.io.File file81 = null;
        java.io.File file82 = explodedArchive78.getManifestFile(file81);
        fileEntryIterator75.root = file81;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file85 = explodedArchive84.manifestFile;
        java.io.File file86 = explodedArchive84.manifestFile;
        java.io.File file87 = null;
        java.io.File file88 = explodedArchive84.getManifestFile(file87);
        java.util.Iterator<java.io.File> fileItor89 = fileEntryIterator75.listFiles(file88);
        fileEntryIterator70.root = file88;
        int int91 = entryComparator19.compare(file68, file88);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive92 = new org.springframework.boot.loader.archive.ExplodedArchive(file68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        java.util.Comparator<java.io.File> fileComparator39 = entryComparator15.thenComparing(fileComparator37);
        java.util.Comparator<java.io.File> fileComparator40 = entryComparator15.reversed();
        java.util.Comparator<java.io.File> fileComparator41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Comparator<java.io.File> fileComparator42 = entryComparator15.thenComparing(fileComparator41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator3.entryComparator = fileComparator19;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator3.stack;
        fileEntryIterator0.stack = fileItorQueue21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        explodedArchive23.recursive = true;
        java.util.jar.Manifest manifest28 = null;
        explodedArchive23.manifest = manifest28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        fileEntryIterator30.recursive = true;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator30.entryComparator;
        fileEntryIterator30.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        fileEntryIterator30.stack = fileItorQueue38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file41 = fileEntryIterator40.current;
        java.io.File file42 = fileEntryIterator40.poll();
        java.io.File file43 = fileEntryIterator40.poll();
        java.io.File file44 = fileEntryIterator40.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.io.File file47 = fileEntryIterator45.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        fileEntryIterator45.root = file51;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        java.io.File file57 = null;
        java.io.File file58 = explodedArchive54.getManifestFile(file57);
        java.util.Iterator<java.io.File> fileItor59 = fileEntryIterator45.listFiles(file58);
        fileEntryIterator40.root = file58;
        java.util.Iterator<java.io.File> fileItor61 = fileEntryIterator30.listFiles(file58);
        explodedArchive23.manifestFile = file58;
        fileEntryIterator0.root = file58;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor59);
        org.junit.Assert.assertNotNull(fileItor61);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        boolean boolean4 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file6 = fileEntryIterator5.current;
        java.io.File file7 = fileEntryIterator5.poll();
        java.io.File file8 = fileEntryIterator5.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator5.stack;
        java.io.File file10 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        java.io.File file14 = fileEntryIterator11.current;
        fileEntryIterator11.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.manifestFile;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.io.File file20 = null;
        java.io.File file21 = explodedArchive17.getManifestFile(file20);
        fileEntryIterator11.root = file21;
        fileEntryIterator5.root = file21;
        java.io.File file24 = fileEntryIterator5.root;
        fileEntryIterator0.current = file24;
        java.lang.Class<?> wildcardClass26 = file24.getClass();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        explodedArchive0.root = file56;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive0.getNestedArchives(entryFilter60);
        java.net.URL uRL62 = explodedArchive0.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.manifestFile;
        java.io.File file65 = explodedArchive63.manifestFile;
        java.io.File file66 = null;
        java.io.File file67 = explodedArchive63.getManifestFile(file66);
        explodedArchive0.manifestFile = file67;
        java.io.File file69 = explodedArchive0.root;
        java.io.File file70 = explodedArchive0.manifestFile;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(uRL62);
// flaky:         org.junit.Assert.assertEquals(uRL62.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "file://exploded archive:0", (int) '4', "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.lang.String str2 = uRL1.getUserInfo();
        java.lang.String str3 = uRL1.getPath();
        java.lang.String str4 = uRL1.getQuery();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.util.jar.Manifest manifest38 = explodedArchive0.manifest;
        java.lang.String str39 = explodedArchive0.toString();
        java.lang.String str40 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator41 = explodedArchive0.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest42 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest38);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str40, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator41);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getHost();
        java.net.URL uRL10 = null;
        java.net.URLStreamHandler uRLStreamHandler12 = null;
        java.net.URL uRL13 = new java.net.URL(uRL10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler12);
        java.lang.String str14 = uRL13.getHost();
        java.net.URI uRI15 = uRL13.toURI();
        java.lang.String str16 = uRL13.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler18 = null;
        java.net.URL uRL19 = new java.net.URL(uRL13, "file", uRLStreamHandler18);
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL13, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        boolean boolean23 = uRL3.sameFile(uRL13);
        java.net.URL uRL24 = null;
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL24, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler26);
        java.lang.String str28 = uRL27.getHost();
        java.lang.String str29 = uRL27.getAuthority();
        java.lang.String str30 = uRL27.getHost();
        java.lang.String str31 = uRL27.getQuery();
        java.lang.String str32 = uRL27.getAuthority();
        java.lang.String str33 = uRL27.getFile();
        java.lang.String str34 = uRL27.getFile();
        java.lang.String str35 = uRL27.getProtocol();
        boolean boolean36 = uRL3.sameFile(uRL27);
        java.lang.String str37 = uRL3.getPath();
        java.lang.String str38 = uRL3.getProtocol();
        java.lang.String str39 = uRL3.getAuthority();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(uRI15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL19.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str33, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "file" + "'", str35, "file");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str37, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file" + "'", str38, "file");
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.io.File file10 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator11.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        java.util.Iterator<java.io.File> fileItor25 = fileEntryIterator11.listFiles(file24);
        fileEntryIterator6.root = file24;
        explodedArchive0.manifestFile = file24;
        explodedArchive0.recursive = false;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor30 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor25);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        boolean boolean6 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean8 = explodedArchive7.recursive;
        boolean boolean9 = explodedArchive7.recursive;
        java.io.File file10 = explodedArchive7.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file12 = fileEntry11.getFile();
        java.io.File file13 = fileEntry11.file;
        java.io.File file14 = null;
        fileEntry11.file = file14;
        java.lang.String str16 = fileEntry11.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        boolean boolean19 = fileEntryIterator17.hasNext();
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator26.thenComparing(fileComparator29);
        fileEntryIterator21.entryComparator = fileComparator26;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator26.thenComparing((java.util.Comparator<java.io.File>) entryComparator32);
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator20.thenComparing((java.util.Comparator<java.io.File>) entryComparator32);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean36 = fileEntryIterator35.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean38 = explodedArchive37.recursive;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.util.jar.Manifest manifest40 = null;
        explodedArchive37.manifest = manifest40;
        java.io.File file42 = explodedArchive37.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        java.io.File file46 = fileEntryIterator43.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.manifestFile;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.io.File file50 = null;
        java.io.File file51 = explodedArchive47.getManifestFile(file50);
        fileEntryIterator43.current = file51;
        explodedArchive37.root = file51;
        fileEntryIterator35.root = file51;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.manifestFile;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.io.File file58 = null;
        java.io.File file59 = explodedArchive55.getManifestFile(file58);
        boolean boolean60 = explodedArchive55.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        fileEntryIterator61.recursive = true;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        java.util.Comparator<java.io.File> fileComparator75 = fileComparator71.thenComparing(fileComparator74);
        fileEntryIterator66.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        java.util.Comparator<java.io.File> fileComparator79 = fileEntryIterator77.entryComparator;
        java.util.Comparator<java.io.File> fileComparator80 = fileComparator71.thenComparing(fileComparator79);
        fileEntryIterator61.entryComparator = fileComparator80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file83 = explodedArchive82.manifestFile;
        java.io.File file84 = explodedArchive82.manifestFile;
        java.io.File file85 = null;
        java.io.File file86 = explodedArchive82.getManifestFile(file85);
        fileEntryIterator61.root = file86;
        explodedArchive55.root = file86;
        int int89 = entryComparator32.compare(file51, file86);
        fileEntry11.file = file86;
        java.io.File file91 = explodedArchive7.getManifestFile(file86);
        fileEntryIterator0.root = file86;
        java.lang.Class<?> wildcardClass93 = file86.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler4);
        java.lang.String str6 = uRL5.getPath();
        java.lang.String str7 = uRL5.getQuery();
        java.lang.String str8 = uRL5.getPath();
        java.lang.Class[] classArray9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = uRL5.getContent(classArray9);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: exploded archive");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file://exploded archive:0", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.root;
        java.lang.String str4 = explodedArchive0.toString();
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        java.lang.String str7 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL8 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.lang.String str5 = uRL3.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file10 = fileEntryIterator9.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator9.entryComparator = fileComparator25;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator9.stack;
        fileEntryIterator6.stack = fileItorQueue27;
        boolean boolean29 = fileEntryIterator6.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        fileEntryIterator30.recursive = true;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator40.thenComparing(fileComparator43);
        fileEntryIterator35.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        java.util.Comparator<java.io.File> fileComparator49 = fileComparator40.thenComparing(fileComparator48);
        fileEntryIterator30.entryComparator = fileComparator49;
        fileEntryIterator30.recursive = true;
        fileEntryIterator30.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator30.stack;
        boolean boolean56 = fileEntryIterator30.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.io.File file59 = fileEntryIterator57.current;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator57.stack;
        fileEntryIterator30.stack = fileItorQueue60;
        fileEntryIterator6.stack = fileItorQueue60;
        fileEntryIterator6.recursive = false;
        boolean boolean65 = uRL3.equals((java.lang.Object) false);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str5, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        java.util.jar.Manifest manifest17 = explodedArchive0.manifest;
        java.lang.String str18 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest19 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str18, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        boolean boolean14 = uRL3.sameFile(uRL9);
        java.lang.String str15 = uRL3.getQuery();
        java.net.URLStreamHandler uRLStreamHandler17 = null;
        java.net.URL uRL18 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = uRL18.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals(uRL18.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        java.io.File file5 = null;
        fileEntryIterator3.current = file5;
        java.io.File file7 = fileEntryIterator3.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file9 = fileEntry8.getFile();
        java.lang.String str10 = fileEntry8.name;
        java.io.File file11 = fileEntry8.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        boolean boolean14 = fileEntryIterator12.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.manifestFile;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.io.File file18 = null;
        java.io.File file19 = explodedArchive15.getManifestFile(file18);
        boolean boolean20 = explodedArchive15.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        fileEntryIterator21.recursive = true;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator21.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator21.root = file46;
        explodedArchive15.root = file46;
        java.util.Iterator<java.io.File> fileItor49 = fileEntryIterator12.listFiles(file46);
        fileEntry8.file = file46;
        fileEntryIterator3.current = file46;
        explodedArchive0.root = file46;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator53 = explodedArchive0.spliterator();
        java.lang.String str54 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.manifestFile;
        java.io.File file57 = explodedArchive55.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        fileEntryIterator58.recursive = true;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        java.util.Comparator<java.io.File> fileComparator72 = fileComparator68.thenComparing(fileComparator71);
        fileEntryIterator63.entryComparator = fileComparator68;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator68.thenComparing(fileComparator76);
        fileEntryIterator58.entryComparator = fileComparator77;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file80 = explodedArchive79.manifestFile;
        java.io.File file81 = explodedArchive79.manifestFile;
        java.io.File file82 = null;
        java.io.File file83 = explodedArchive79.getManifestFile(file82);
        fileEntryIterator58.root = file83;
        explodedArchive55.manifestFile = file83;
        java.util.jar.Manifest manifest86 = explodedArchive55.manifest;
        java.util.jar.Manifest manifest87 = explodedArchive55.manifest;
        java.util.jar.Manifest manifest88 = explodedArchive55.getManifest();
        java.util.jar.Manifest manifest89 = explodedArchive55.getManifest();
        java.io.File file90 = explodedArchive55.root;
        java.io.File file91 = explodedArchive55.manifestFile;
        java.io.File file92 = explodedArchive0.getManifestFile(file91);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive94 = new org.springframework.boot.loader.archive.ExplodedArchive(file92, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "exploded archive" + "'", str1, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor49);
        org.junit.Assert.assertNotNull(entrySpliterator53);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str54, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest86);
        org.junit.Assert.assertNull(manifest87);
        org.junit.Assert.assertNull(manifest88);
        org.junit.Assert.assertNull(manifest89);
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        boolean boolean6 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean8 = explodedArchive7.recursive;
        boolean boolean9 = explodedArchive7.recursive;
        java.io.File file10 = explodedArchive7.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file12 = fileEntry11.getFile();
        java.io.File file13 = fileEntry11.file;
        java.io.File file14 = null;
        fileEntry11.file = file14;
        java.lang.String str16 = fileEntry11.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        boolean boolean19 = fileEntryIterator17.hasNext();
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator26.thenComparing(fileComparator29);
        fileEntryIterator21.entryComparator = fileComparator26;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator26.thenComparing((java.util.Comparator<java.io.File>) entryComparator32);
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator20.thenComparing((java.util.Comparator<java.io.File>) entryComparator32);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean36 = fileEntryIterator35.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean38 = explodedArchive37.recursive;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.util.jar.Manifest manifest40 = null;
        explodedArchive37.manifest = manifest40;
        java.io.File file42 = explodedArchive37.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        java.io.File file46 = fileEntryIterator43.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.manifestFile;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.io.File file50 = null;
        java.io.File file51 = explodedArchive47.getManifestFile(file50);
        fileEntryIterator43.current = file51;
        explodedArchive37.root = file51;
        fileEntryIterator35.root = file51;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.manifestFile;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.io.File file58 = null;
        java.io.File file59 = explodedArchive55.getManifestFile(file58);
        boolean boolean60 = explodedArchive55.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        fileEntryIterator61.recursive = true;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        java.util.Comparator<java.io.File> fileComparator75 = fileComparator71.thenComparing(fileComparator74);
        fileEntryIterator66.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        java.util.Comparator<java.io.File> fileComparator79 = fileEntryIterator77.entryComparator;
        java.util.Comparator<java.io.File> fileComparator80 = fileComparator71.thenComparing(fileComparator79);
        fileEntryIterator61.entryComparator = fileComparator80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file83 = explodedArchive82.manifestFile;
        java.io.File file84 = explodedArchive82.manifestFile;
        java.io.File file85 = null;
        java.io.File file86 = explodedArchive82.getManifestFile(file85);
        fileEntryIterator61.root = file86;
        explodedArchive55.root = file86;
        int int89 = entryComparator32.compare(file51, file86);
        fileEntry11.file = file86;
        java.io.File file91 = explodedArchive7.getManifestFile(file86);
        fileEntryIterator0.root = file86;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL73 = null;
        java.net.URLStreamHandler uRLStreamHandler75 = null;
        java.net.URL uRL76 = new java.net.URL(uRL73, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler75);
        java.lang.String str77 = uRL76.getHost();
        java.lang.String str78 = uRL76.getAuthority();
        java.lang.String str79 = uRL76.getHost();
        java.lang.String str80 = uRL76.getQuery();
        java.lang.String str81 = uRL76.getAuthority();
        java.lang.String str82 = uRL76.getRef();
        boolean boolean83 = uRL69.sameFile(uRL76);
        java.lang.String str84 = uRL69.getAuthority();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL76.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(str82);
// flaky:         org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", 0, "file://exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "file", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.net.URL uRL9 = new java.net.URL(uRL3, "exploded archive");
        java.lang.String str10 = uRL3.getAuthority();
        int int11 = uRL3.getPort();
        java.lang.String str12 = uRL3.getProtocol();
        java.lang.String str13 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file" + "'", str12, "file");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file22 = fileEntryIterator21.current;
        java.io.File file23 = fileEntryIterator21.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file25 = fileEntryIterator24.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator24.entryComparator = fileComparator40;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator24.stack;
        fileEntryIterator21.stack = fileItorQueue42;
        fileEntryIterator0.stack = fileItorQueue42;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean46 = fileEntryIterator45.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean48 = explodedArchive47.recursive;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.util.jar.Manifest manifest50 = null;
        explodedArchive47.manifest = manifest50;
        java.io.File file52 = explodedArchive47.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.io.File file56 = fileEntryIterator53.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        fileEntryIterator53.current = file61;
        explodedArchive47.root = file61;
        fileEntryIterator45.root = file61;
        fileEntryIterator0.current = file61;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator0.stack;
        java.io.File file67 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNull(file67);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        boolean boolean14 = uRL3.sameFile(uRL9);
        java.lang.String str15 = uRL3.getQuery();
        java.net.URLStreamHandler uRLStreamHandler17 = null;
        java.net.URL uRL18 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler17);
        java.net.URL uRL20 = new java.net.URL(uRL3, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream21 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals(uRL18.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.io.File file4 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.io.File file7 = null;
        explodedArchive0.manifestFile = file7;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor9 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file4);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        boolean boolean22 = uRL11.sameFile(uRL21);
        java.lang.String str23 = uRL11.getProtocol();
        java.net.URL uRL24 = null;
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL24, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler26);
        java.lang.String str28 = uRL27.getHost();
        int int29 = uRL27.getPort();
        java.net.URL uRL30 = null;
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL30, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler32);
        java.lang.String str34 = uRL33.getHost();
        java.lang.String str35 = uRL33.getAuthority();
        java.lang.String str36 = uRL33.getQuery();
        int int37 = uRL33.getDefaultPort();
        boolean boolean38 = uRL27.sameFile(uRL33);
        java.lang.String str39 = uRL33.getFile();
        boolean boolean40 = uRL11.sameFile(uRL33);
        java.net.URLConnection uRLConnection41 = uRL11.openConnection();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream42 = uRL11.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file" + "'", str23, "file");
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(uRLConnection41);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.recursive;
        boolean boolean2 = fileEntryIterator0.recursive;
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file6 = fileEntryIterator5.current;
        java.io.File file7 = fileEntryIterator5.poll();
        java.io.File file8 = fileEntryIterator5.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator14.thenComparing((java.util.Comparator<java.io.File>) entryComparator20);
        fileEntryIterator5.entryComparator = entryComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        fileEntryIterator23.recursive = true;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator33.thenComparing(fileComparator36);
        fileEntryIterator28.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator33.thenComparing(fileComparator41);
        fileEntryIterator23.entryComparator = fileComparator42;
        java.util.Comparator<java.io.File> fileComparator44 = entryComparator20.thenComparing(fileComparator42);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean51 = fileEntryIterator50.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean53 = explodedArchive52.recursive;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.util.jar.Manifest manifest55 = null;
        explodedArchive52.manifest = manifest55;
        java.io.File file57 = explodedArchive52.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.io.File file61 = fileEntryIterator58.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        fileEntryIterator58.current = file66;
        explodedArchive52.root = file66;
        fileEntryIterator50.root = file66;
        int int70 = entryComparator20.compare(file49, file66);
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator0.listFiles(file66);
        java.io.File file72 = fileEntryIterator0.current;
        java.io.File file73 = fileEntryIterator0.current;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(fileItor71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "exploded archive", "file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.recursive;
        boolean boolean2 = fileEntryIterator0.recursive;
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean7 = fileEntryIterator6.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean9 = explodedArchive8.recursive;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive8.manifest = manifest11;
        java.io.File file13 = explodedArchive8.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.io.File file17 = fileEntryIterator14.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.io.File file21 = null;
        java.io.File file22 = explodedArchive18.getManifestFile(file21);
        fileEntryIterator14.current = file22;
        explodedArchive8.root = file22;
        fileEntryIterator6.root = file22;
        explodedArchive5.root = file22;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator27 = explodedArchive5.spliterator();
        java.io.File file28 = explodedArchive5.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str30 = fileEntry29.name;
        java.io.File file31 = fileEntry29.file;
        fileEntry29.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        boolean boolean36 = fileEntryIterator34.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        boolean boolean42 = explodedArchive37.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        fileEntryIterator43.recursive = true;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator53.thenComparing(fileComparator56);
        fileEntryIterator48.entryComparator = fileComparator53;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator53.thenComparing(fileComparator61);
        fileEntryIterator43.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        fileEntryIterator43.root = file68;
        explodedArchive37.root = file68;
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator34.listFiles(file68);
        fileEntry29.file = file68;
        explodedArchive5.root = file68;
        java.util.Iterator<java.io.File> fileItor74 = fileEntryIterator0.listFiles(file68);
        java.io.File file75 = fileEntryIterator0.poll();
        java.io.File file76 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        boolean boolean79 = fileEntryIterator77.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator80 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean81 = fileEntryIterator80.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator82 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue83 = fileEntryIterator82.stack;
        fileEntryIterator80.stack = fileItorQueue83;
        fileEntryIterator77.stack = fileItorQueue83;
        fileEntryIterator0.stack = fileItorQueue83;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue87 = fileEntryIterator0.stack;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor71);
        org.junit.Assert.assertNotNull(fileItor74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(fileItorQueue83);
        org.junit.Assert.assertNotNull(fileItorQueue87);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.lang.String str3 = fileEntry0.getName();
        java.io.File file4 = fileEntry0.getFile();
        fileEntry0.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive";
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(file4);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file18 = fileEntryIterator17.current;
        boolean boolean19 = fileEntryIterator17.hasNext();
        fileEntryIterator17.recursive = true;
        boolean boolean22 = fileEntryIterator17.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        boolean boolean25 = explodedArchive23.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = null;
        fileEntryIterator26.current = file28;
        java.io.File file30 = fileEntryIterator26.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file32 = fileEntry31.getFile();
        java.lang.String str33 = fileEntry31.name;
        java.io.File file34 = fileEntry31.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        boolean boolean37 = fileEntryIterator35.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        boolean boolean43 = explodedArchive38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        fileEntryIterator44.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator54.thenComparing(fileComparator57);
        fileEntryIterator49.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator54.thenComparing(fileComparator62);
        fileEntryIterator44.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator44.root = file69;
        explodedArchive38.root = file69;
        java.util.Iterator<java.io.File> fileItor72 = fileEntryIterator35.listFiles(file69);
        fileEntry31.file = file69;
        fileEntryIterator26.current = file69;
        explodedArchive23.root = file69;
        java.util.Iterator<java.io.File> fileItor76 = fileEntryIterator17.listFiles(file69);
        explodedArchive0.root = file69;
        java.net.URL uRL78 = explodedArchive0.getUrl();
        boolean boolean79 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest80 = null;
        explodedArchive0.manifest = manifest80;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest82 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "exploded archive" + "'", str24, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor72);
        org.junit.Assert.assertNotNull(fileItor76);
        org.junit.Assert.assertNotNull(uRL78);
// flaky:         org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest32 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest33 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest34 = explodedArchive0.getManifest();
        java.io.File file35 = explodedArchive0.root;
        java.io.File file36 = null;
        explodedArchive0.manifestFile = file36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        fileEntryIterator45.recursive = true;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator55.thenComparing(fileComparator58);
        fileEntryIterator50.entryComparator = fileComparator55;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator55.thenComparing(fileComparator63);
        fileEntryIterator45.entryComparator = fileComparator64;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.manifestFile;
        java.io.File file68 = explodedArchive66.manifestFile;
        java.io.File file69 = null;
        java.io.File file70 = explodedArchive66.getManifestFile(file69);
        fileEntryIterator45.root = file70;
        explodedArchive42.manifestFile = file70;
        fileEntryIterator38.current = file70;
        java.io.File file74 = fileEntryIterator38.current;
        java.io.File file75 = explodedArchive0.getManifestFile(file74);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        boolean boolean32 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest33 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file35 = fileEntryIterator34.current;
        java.io.File file36 = fileEntryIterator34.poll();
        java.io.File file37 = fileEntryIterator34.poll();
        java.io.File file38 = fileEntryIterator34.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.io.File file41 = fileEntryIterator39.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator39.root = file45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        java.util.Iterator<java.io.File> fileItor53 = fileEntryIterator39.listFiles(file52);
        fileEntryIterator34.root = file52;
        explodedArchive0.manifestFile = file52;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator56 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor53);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.lang.String str8 = uRL3.getUserInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue4);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.io.File file18 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean20 = fileEntryIterator19.recursive;
        boolean boolean21 = fileEntryIterator19.recursive;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator19.entryComparator;
        java.io.File file23 = fileEntryIterator19.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file25 = fileEntryIterator24.current;
        java.io.File file26 = fileEntryIterator24.poll();
        java.io.File file27 = fileEntryIterator24.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator33.thenComparing(fileComparator36);
        fileEntryIterator28.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator33.thenComparing((java.util.Comparator<java.io.File>) entryComparator39);
        fileEntryIterator24.entryComparator = entryComparator39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        fileEntryIterator42.recursive = true;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator52.thenComparing(fileComparator55);
        fileEntryIterator47.entryComparator = fileComparator52;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.util.Comparator<java.io.File> fileComparator61 = fileComparator52.thenComparing(fileComparator60);
        fileEntryIterator42.entryComparator = fileComparator61;
        java.util.Comparator<java.io.File> fileComparator63 = entryComparator39.thenComparing(fileComparator61);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean70 = fileEntryIterator69.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean72 = explodedArchive71.recursive;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.util.jar.Manifest manifest74 = null;
        explodedArchive71.manifest = manifest74;
        java.io.File file76 = explodedArchive71.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        java.util.Comparator<java.io.File> fileComparator79 = fileEntryIterator77.entryComparator;
        java.io.File file80 = fileEntryIterator77.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file82 = explodedArchive81.manifestFile;
        java.io.File file83 = explodedArchive81.manifestFile;
        java.io.File file84 = null;
        java.io.File file85 = explodedArchive81.getManifestFile(file84);
        fileEntryIterator77.current = file85;
        explodedArchive71.root = file85;
        fileEntryIterator69.root = file85;
        int int89 = entryComparator39.compare(file68, file85);
        java.util.Iterator<java.io.File> fileItor90 = fileEntryIterator19.listFiles(file85);
        fileEntryIterator0.root = file85;
        java.io.File file92 = fileEntryIterator0.poll();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry93 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(fileItor90);
        org.junit.Assert.assertNull(file92);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        java.util.Comparator<java.io.File> fileComparator39 = entryComparator15.thenComparing(fileComparator37);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean41 = fileEntryIterator40.recursive;
        boolean boolean42 = fileEntryIterator40.recursive;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator40.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator43.reversed();
        java.util.Comparator<java.io.File> fileComparator45 = entryComparator15.thenComparing(fileComparator43);
        java.util.Comparator<java.io.File> fileComparator46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Comparator<java.io.File> fileComparator47 = fileComparator43.thenComparing(fileComparator46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator45);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "exploded archive";
        java.lang.String str5 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        boolean boolean11 = explodedArchive6.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        fileEntryIterator12.recursive = true;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator22.thenComparing(fileComparator25);
        fileEntryIterator17.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator22.thenComparing(fileComparator30);
        fileEntryIterator12.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.manifestFile;
        java.io.File file35 = explodedArchive33.manifestFile;
        java.io.File file36 = null;
        java.io.File file37 = explodedArchive33.getManifestFile(file36);
        fileEntryIterator12.root = file37;
        explodedArchive6.root = file37;
        explodedArchive6.recursive = false;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive6.manifest = manifest42;
        java.lang.String str44 = explodedArchive6.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean46 = explodedArchive45.recursive;
        boolean boolean47 = explodedArchive45.recursive;
        java.io.File file48 = explodedArchive45.root;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive45.getManifestFile(file49);
        explodedArchive6.manifestFile = file49;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file53 = fileEntryIterator52.current;
        java.io.File file54 = fileEntryIterator52.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file56 = fileEntryIterator55.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator55.entryComparator = fileComparator71;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator55.stack;
        fileEntryIterator52.stack = fileItorQueue73;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file76 = fileEntryIterator75.current;
        java.io.File file77 = fileEntryIterator75.poll();
        java.io.File file78 = fileEntryIterator75.poll();
        java.io.File file79 = fileEntryIterator75.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator80 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue81 = fileEntryIterator80.stack;
        java.io.File file82 = fileEntryIterator80.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file84 = explodedArchive83.manifestFile;
        java.io.File file85 = explodedArchive83.manifestFile;
        java.io.File file86 = null;
        java.io.File file87 = explodedArchive83.getManifestFile(file86);
        fileEntryIterator80.root = file86;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive89 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file90 = explodedArchive89.manifestFile;
        java.io.File file91 = explodedArchive89.manifestFile;
        java.io.File file92 = null;
        java.io.File file93 = explodedArchive89.getManifestFile(file92);
        java.util.Iterator<java.io.File> fileItor94 = fileEntryIterator80.listFiles(file93);
        fileEntryIterator75.root = file93;
        java.util.Iterator<java.io.File> fileItor96 = fileEntryIterator52.listFiles(file93);
        explodedArchive6.root = file93;
        fileEntry0.file = file93;
        java.io.File file99 = fileEntry0.file;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "exploded archive" + "'", str5, "exploded archive");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str44, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(fileItorQueue81);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNull(file91);
        org.junit.Assert.assertNotNull(file93);
        org.junit.Assert.assertEquals(file93.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file93.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor94);
        org.junit.Assert.assertNotNull(fileItor96);
        org.junit.Assert.assertNotNull(file99);
        org.junit.Assert.assertEquals(file99.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file99.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        boolean boolean25 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator0.entryComparator;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(fileComparator26);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file6 = fileEntryIterator5.current;
        java.io.File file7 = fileEntryIterator5.poll();
        java.io.File file8 = fileEntryIterator5.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator14.thenComparing((java.util.Comparator<java.io.File>) entryComparator20);
        fileEntryIterator5.entryComparator = entryComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        fileEntryIterator23.recursive = true;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator33.thenComparing(fileComparator36);
        fileEntryIterator28.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator33.thenComparing(fileComparator41);
        fileEntryIterator23.entryComparator = fileComparator42;
        java.util.Comparator<java.io.File> fileComparator44 = entryComparator20.thenComparing(fileComparator42);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean51 = fileEntryIterator50.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean53 = explodedArchive52.recursive;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.util.jar.Manifest manifest55 = null;
        explodedArchive52.manifest = manifest55;
        java.io.File file57 = explodedArchive52.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.io.File file61 = fileEntryIterator58.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        fileEntryIterator58.current = file66;
        explodedArchive52.root = file66;
        fileEntryIterator50.root = file66;
        int int70 = entryComparator20.compare(file49, file66);
        java.io.File file71 = explodedArchive0.getManifestFile(file66);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive(file66, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.io.File file10 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator11.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        java.util.Iterator<java.io.File> fileItor25 = fileEntryIterator11.listFiles(file24);
        fileEntryIterator6.root = file24;
        explodedArchive0.manifestFile = file24;
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        boolean boolean35 = explodedArchive30.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        fileEntryIterator36.recursive = true;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        java.util.Comparator<java.io.File> fileComparator50 = fileComparator46.thenComparing(fileComparator49);
        fileEntryIterator41.entryComparator = fileComparator46;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        java.util.Comparator<java.io.File> fileComparator55 = fileComparator46.thenComparing(fileComparator54);
        fileEntryIterator36.entryComparator = fileComparator55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        fileEntryIterator36.root = file61;
        explodedArchive30.root = file61;
        explodedArchive30.recursive = false;
        java.util.jar.Manifest manifest66 = null;
        explodedArchive30.manifest = manifest66;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file69 = fileEntryIterator68.current;
        java.io.File file70 = fileEntryIterator68.poll();
        java.io.File file71 = fileEntryIterator68.poll();
        java.io.File file72 = fileEntryIterator68.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.io.File file75 = fileEntryIterator73.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file77 = explodedArchive76.manifestFile;
        java.io.File file78 = explodedArchive76.manifestFile;
        java.io.File file79 = null;
        java.io.File file80 = explodedArchive76.getManifestFile(file79);
        fileEntryIterator73.root = file79;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file83 = explodedArchive82.manifestFile;
        java.io.File file84 = explodedArchive82.manifestFile;
        java.io.File file85 = null;
        java.io.File file86 = explodedArchive82.getManifestFile(file85);
        java.util.Iterator<java.io.File> fileItor87 = fileEntryIterator73.listFiles(file86);
        fileEntryIterator68.root = file86;
        explodedArchive30.root = file86;
        java.io.File file90 = explodedArchive30.root;
        java.io.File file91 = explodedArchive30.root;
        java.io.File file92 = explodedArchive0.getManifestFile(file91);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive93 = new org.springframework.boot.loader.archive.ExplodedArchive(file91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor25);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor87);
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file90.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file4 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = false;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator0.entryComparator;
        boolean boolean8 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file10 = fileEntryIterator9.current;
        java.io.File file11 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file13 = fileEntryIterator12.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator12.entryComparator = fileComparator28;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator12.stack;
        fileEntryIterator9.stack = fileItorQueue30;
        boolean boolean32 = fileEntryIterator9.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean35 = fileEntryIterator34.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean37 = explodedArchive36.recursive;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.util.jar.Manifest manifest39 = null;
        explodedArchive36.manifest = manifest39;
        java.io.File file41 = explodedArchive36.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        java.io.File file45 = fileEntryIterator42.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator42.current = file50;
        explodedArchive36.root = file50;
        fileEntryIterator34.root = file50;
        explodedArchive33.root = file50;
        java.util.Iterator<java.io.File> fileItor55 = fileEntryIterator9.listFiles(file50);
        java.util.Iterator<java.io.File> fileItor56 = fileEntryIterator0.listFiles(file50);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry57 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor55);
        org.junit.Assert.assertNotNull(fileItor56);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file6 = fileEntryIterator5.current;
        java.io.File file7 = fileEntryIterator5.poll();
        java.io.File file8 = fileEntryIterator5.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator14.thenComparing((java.util.Comparator<java.io.File>) entryComparator20);
        fileEntryIterator5.entryComparator = entryComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        fileEntryIterator23.recursive = true;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator33.thenComparing(fileComparator36);
        fileEntryIterator28.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator33.thenComparing(fileComparator41);
        fileEntryIterator23.entryComparator = fileComparator42;
        java.util.Comparator<java.io.File> fileComparator44 = entryComparator20.thenComparing(fileComparator42);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean51 = fileEntryIterator50.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean53 = explodedArchive52.recursive;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.util.jar.Manifest manifest55 = null;
        explodedArchive52.manifest = manifest55;
        java.io.File file57 = explodedArchive52.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.io.File file61 = fileEntryIterator58.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        fileEntryIterator58.current = file66;
        explodedArchive52.root = file66;
        fileEntryIterator50.root = file66;
        int int70 = entryComparator20.compare(file49, file66);
        java.io.File file71 = explodedArchive0.getManifestFile(file66);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator72 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file45 = fileEntry44.getFile();
        java.io.File file46 = fileEntry44.file;
        java.io.File file47 = null;
        fileEntry44.file = file47;
        java.lang.String str49 = fileEntry44.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file51 = fileEntryIterator50.current;
        java.io.File file52 = null;
        fileEntryIterator50.current = file52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean55 = explodedArchive54.recursive;
        java.io.File file56 = explodedArchive54.manifestFile;
        java.util.jar.Manifest manifest57 = null;
        explodedArchive54.manifest = manifest57;
        java.io.File file59 = explodedArchive54.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.io.File file63 = fileEntryIterator60.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        fileEntryIterator60.current = file68;
        explodedArchive54.root = file68;
        fileEntryIterator50.root = file68;
        fileEntry44.file = file68;
        java.io.File file73 = fileEntry44.file;
        explodedArchive0.root = file73;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter75 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList76 = explodedArchive0.getNestedArchives(entryFilter75);
        java.util.jar.Manifest manifest77 = null;
        explodedArchive0.manifest = manifest77;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList76);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        boolean boolean4 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file6 = fileEntryIterator5.current;
        java.io.File file7 = fileEntryIterator5.poll();
        java.io.File file8 = fileEntryIterator5.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator14.thenComparing((java.util.Comparator<java.io.File>) entryComparator20);
        fileEntryIterator5.entryComparator = entryComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        fileEntryIterator23.recursive = true;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator33.thenComparing(fileComparator36);
        fileEntryIterator28.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator33.thenComparing(fileComparator41);
        fileEntryIterator23.entryComparator = fileComparator42;
        java.util.Comparator<java.io.File> fileComparator44 = entryComparator20.thenComparing(fileComparator42);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean51 = fileEntryIterator50.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean53 = explodedArchive52.recursive;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.util.jar.Manifest manifest55 = null;
        explodedArchive52.manifest = manifest55;
        java.io.File file57 = explodedArchive52.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.io.File file61 = fileEntryIterator58.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        fileEntryIterator58.current = file66;
        explodedArchive52.root = file66;
        fileEntryIterator50.root = file66;
        int int70 = entryComparator20.compare(file49, file66);
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator0.listFiles(file66);
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator0.stack;
        java.lang.Class<?> wildcardClass73 = fileItorQueue72.getClass();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(fileItor71);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        java.net.URL uRL84 = null;
        java.net.URLStreamHandler uRLStreamHandler86 = null;
        java.net.URL uRL87 = new java.net.URL(uRL84, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler86);
        java.lang.String str88 = uRL87.getHost();
        java.lang.String str89 = uRL87.getAuthority();
        java.lang.String str90 = uRL87.getQuery();
        int int91 = uRL87.getDefaultPort();
        int int92 = uRL87.getPort();
        boolean boolean93 = uRL82.sameFile(uRL87);
        java.net.URLStreamHandler uRLStreamHandler95 = null;
        java.net.URL uRL96 = new java.net.URL(uRL87, "file", uRLStreamHandler95);
        java.net.URL uRL98 = new java.net.URL(uRL87, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        int int99 = uRL87.getDefaultPort();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals(uRL87.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals(uRL96.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL98.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + (-1) + "'", int99 == (-1));
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "hi!", 100, "hi!", uRLStreamHandler4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean8 = fileEntryIterator7.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean10 = explodedArchive9.recursive;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive9.manifest = manifest12;
        java.io.File file14 = explodedArchive9.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.io.File file18 = fileEntryIterator15.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.manifestFile;
        java.io.File file21 = explodedArchive19.manifestFile;
        java.io.File file22 = null;
        java.io.File file23 = explodedArchive19.getManifestFile(file22);
        fileEntryIterator15.current = file23;
        explodedArchive9.root = file23;
        fileEntryIterator7.root = file23;
        explodedArchive6.root = file23;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator28 = explodedArchive6.spliterator();
        java.io.File file29 = explodedArchive6.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str31 = fileEntry30.name;
        java.io.File file32 = fileEntry30.file;
        fileEntry30.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        boolean boolean37 = fileEntryIterator35.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        boolean boolean43 = explodedArchive38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        fileEntryIterator44.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator54.thenComparing(fileComparator57);
        fileEntryIterator49.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator54.thenComparing(fileComparator62);
        fileEntryIterator44.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator44.root = file69;
        explodedArchive38.root = file69;
        java.util.Iterator<java.io.File> fileItor72 = fileEntryIterator35.listFiles(file69);
        fileEntry30.file = file69;
        explodedArchive6.root = file69;
        java.net.URL uRL75 = explodedArchive6.getUrl();
        java.lang.String str76 = uRL75.getUserInfo();
        java.net.URL uRL78 = new java.net.URL(uRL75, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URLStreamHandler uRLStreamHandler80 = null;
        java.net.URL uRL81 = new java.net.URL(uRL78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler80);
        int int82 = uRL81.getDefaultPort();
        boolean boolean83 = uRL5.sameFile(uRL81);
        java.lang.Class[] classArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = uRL81.getContent(classArray84);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL5.toString(), "file://hi!:100hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor72);
        org.junit.Assert.assertNotNull(uRL75);
// flaky:         org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL81.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.manifestFile;
        java.io.File file4 = explodedArchive2.manifestFile;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive2.getManifestFile(file5);
        fileEntryIterator0.current = file5;
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean11 = explodedArchive10.recursive;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.util.jar.Manifest manifest13 = null;
        explodedArchive10.manifest = manifest13;
        java.io.File file15 = explodedArchive10.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.io.File file19 = fileEntryIterator16.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        fileEntryIterator16.current = file24;
        explodedArchive10.root = file24;
        java.util.Iterator<java.io.File> fileItor27 = fileEntryIterator0.listFiles(file24);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor27);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.lang.String str19 = uRL3.getProtocol();
        java.lang.String str20 = uRL3.getQuery();
        java.lang.String str21 = uRL3.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "file" + "'", str19, "file");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str21, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        boolean boolean32 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest33 = explodedArchive0.getManifest();
        java.io.File file34 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor35 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertNull(file34);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        boolean boolean8 = explodedArchive3.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator9.recursive = true;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator9.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator9.root = file34;
        explodedArchive3.root = file34;
        java.util.Iterator<java.io.File> fileItor37 = fileEntryIterator0.listFiles(file34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.io.File file41 = fileEntryIterator38.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator38.stack;
        fileEntryIterator0.stack = fileItorQueue42;
        java.io.File file44 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNull(file44);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        explodedArchive0.root = file56;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean63 = explodedArchive62.recursive;
        boolean boolean64 = explodedArchive62.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        explodedArchive62.root = file69;
        explodedArchive62.recursive = false;
        java.io.File file73 = explodedArchive62.root;
        java.io.File file74 = explodedArchive0.getManifestFile(file73);
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator75 = explodedArchive0.spliterator();
        boolean boolean76 = explodedArchive0.recursive;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        boolean boolean28 = explodedArchive26.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        explodedArchive26.root = file33;
        fileEntryIterator0.root = file33;
        boolean boolean36 = fileEntryIterator0.recursive;
        boolean boolean37 = fileEntryIterator0.recursive;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URLConnection uRLConnection73 = uRL72.openConnection();
        java.lang.String str74 = uRL72.getHost();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj75 = uRL72.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        java.net.URL uRL3 = new java.net.URL("file", "file", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL3.toString(), "file://filefile:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        int int73 = uRL69.getPort();
        java.lang.String str74 = uRL69.getFile();
        java.lang.String str75 = uRL69.getPath();
        java.lang.Class<?> wildcardClass76 = uRL69.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str74, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str75, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator0.stack;
        java.io.File file7 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        boolean boolean10 = fileEntryIterator8.hasNext();
        boolean boolean11 = fileEntryIterator8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator17.thenComparing(fileComparator25);
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator25.reversed();
        fileEntryIterator8.entryComparator = fileComparator25;
        boolean boolean29 = fileEntryIterator8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file31 = fileEntryIterator30.current;
        java.io.File file32 = fileEntryIterator30.poll();
        java.io.File file33 = fileEntryIterator30.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.util.Comparator<java.io.File> fileComparator43 = fileComparator39.thenComparing(fileComparator42);
        fileEntryIterator34.entryComparator = fileComparator39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator39.thenComparing((java.util.Comparator<java.io.File>) entryComparator45);
        fileEntryIterator30.entryComparator = entryComparator45;
        java.io.File file48 = fileEntryIterator30.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean51 = fileEntryIterator50.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean53 = explodedArchive52.recursive;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.util.jar.Manifest manifest55 = null;
        explodedArchive52.manifest = manifest55;
        java.io.File file57 = explodedArchive52.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.io.File file61 = fileEntryIterator58.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        fileEntryIterator58.current = file66;
        explodedArchive52.root = file66;
        fileEntryIterator50.root = file66;
        explodedArchive49.root = file66;
        fileEntryIterator30.current = file66;
        fileEntryIterator8.root = file66;
        fileEntryIterator0.current = file66;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLConnection uRLConnection9 = uRL3.openConnection();
        java.lang.String str10 = uRL3.toExternalForm();
        int int11 = uRL3.getPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(uRLConnection9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.lang.String str6 = uRL3.getProtocol();
        java.lang.String str7 = uRL3.getPath();
        java.lang.String str8 = uRL3.getRef();
        java.lang.String str9 = uRL3.getProtocol();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file" + "'", str6, "file");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "file" + "'", str9, "file");
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL3.getHost();
        java.lang.String str16 = uRL3.toExternalForm();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URL uRL34 = null;
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler36);
        java.lang.String str38 = uRL37.getHost();
        java.lang.String str39 = uRL37.getAuthority();
        java.lang.String str40 = uRL37.getAuthority();
        java.lang.String str41 = uRL37.getFile();
        int int42 = uRL37.getPort();
        java.lang.String str43 = uRL37.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL37, "hi!");
        boolean boolean46 = uRL3.sameFile(uRL45);
        int int47 = uRL3.getDefaultPort();
        java.lang.String str48 = uRL3.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream49 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str41, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.lang.String str4 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean6 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean8 = explodedArchive7.recursive;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.util.jar.Manifest manifest10 = null;
        explodedArchive7.manifest = manifest10;
        java.io.File file12 = explodedArchive7.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.io.File file16 = fileEntryIterator13.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.manifestFile;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.io.File file20 = null;
        java.io.File file21 = explodedArchive17.getManifestFile(file20);
        fileEntryIterator13.current = file21;
        explodedArchive7.root = file21;
        fileEntryIterator5.root = file21;
        java.io.File file25 = explodedArchive0.getManifestFile(file21);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL26 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator9.thenComparing(fileComparator17);
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator17.reversed();
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator3.thenComparing(fileComparator17);
        java.lang.Class<?> wildcardClass21 = fileComparator17.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "", 0, "", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file://exploded archive", "file", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.lang.String str34 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator35 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.net.URL uRL37 = explodedArchive0.getUrl();
        java.lang.String str38 = uRL37.getUserInfo();
        java.net.URLConnection uRLConnection39 = uRL37.openConnection();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(uRL37);
// flaky:         org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(uRLConnection39);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.net.URL uRL8 = null;
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getHost();
        java.net.URI uRI13 = uRL11.toURI();
        java.lang.String str14 = uRL11.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL11, "file", uRLStreamHandler16);
        java.lang.String str18 = uRL11.getFile();
        int int19 = uRL11.getPort();
        java.lang.String str20 = uRL11.toExternalForm();
        boolean boolean21 = uRL3.sameFile(uRL11);
        java.net.URLStreamHandler uRLStreamHandler23 = null;
        java.net.URL uRL24 = new java.net.URL(uRL3, "exploded archive", uRLStreamHandler23);
        java.net.Proxy proxy25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection26 = uRL24.openConnection(proxy25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(uRI13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str18, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str20, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.io.File file4 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file8 = fileEntryIterator7.current;
        java.io.File file9 = fileEntryIterator7.poll();
        java.io.File file10 = fileEntryIterator7.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator7.stack;
        java.io.File file12 = fileEntryIterator7.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.io.File file15 = fileEntryIterator13.current;
        java.io.File file16 = fileEntryIterator13.current;
        fileEntryIterator13.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.manifestFile;
        java.io.File file21 = explodedArchive19.manifestFile;
        java.io.File file22 = null;
        java.io.File file23 = explodedArchive19.getManifestFile(file22);
        fileEntryIterator13.root = file23;
        fileEntryIterator7.root = file23;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean29 = fileEntryIterator28.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean31 = explodedArchive30.recursive;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.util.jar.Manifest manifest33 = null;
        explodedArchive30.manifest = manifest33;
        java.io.File file35 = explodedArchive30.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.io.File file39 = fileEntryIterator36.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        fileEntryIterator36.current = file44;
        explodedArchive30.root = file44;
        fileEntryIterator28.root = file44;
        explodedArchive27.root = file44;
        fileEntryIterator7.root = file44;
        explodedArchive0.manifestFile = file44;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL51 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URL uRL13 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean15 = explodedArchive14.recursive;
        java.lang.String str16 = explodedArchive14.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean19 = fileEntryIterator18.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean21 = explodedArchive20.recursive;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.util.jar.Manifest manifest23 = null;
        explodedArchive20.manifest = manifest23;
        java.io.File file25 = explodedArchive20.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.io.File file29 = fileEntryIterator26.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator26.current = file34;
        explodedArchive20.root = file34;
        fileEntryIterator18.root = file34;
        explodedArchive17.root = file34;
        java.io.File file39 = explodedArchive17.root;
        explodedArchive14.manifestFile = file39;
        boolean boolean41 = uRL13.equals((java.lang.Object) explodedArchive14);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "exploded archive" + "'", str16, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive0.getNestedArchives(entryFilter42);
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator44 = explodedArchive0.spliterator();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(entrySpliterator44);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getQuery();
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str12 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.io.File file10 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator11.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        java.util.Iterator<java.io.File> fileItor25 = fileEntryIterator11.listFiles(file24);
        fileEntryIterator6.root = file24;
        explodedArchive0.manifestFile = file24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        boolean boolean30 = fileEntryIterator28.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.manifestFile;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.io.File file34 = null;
        java.io.File file35 = explodedArchive31.getManifestFile(file34);
        boolean boolean36 = explodedArchive31.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        fileEntryIterator37.recursive = true;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator47.thenComparing(fileComparator50);
        fileEntryIterator42.entryComparator = fileComparator47;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator47.thenComparing(fileComparator55);
        fileEntryIterator37.entryComparator = fileComparator56;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.manifestFile;
        java.io.File file60 = explodedArchive58.manifestFile;
        java.io.File file61 = null;
        java.io.File file62 = explodedArchive58.getManifestFile(file61);
        fileEntryIterator37.root = file62;
        explodedArchive31.root = file62;
        java.util.Iterator<java.io.File> fileItor65 = fileEntryIterator28.listFiles(file62);
        java.io.File file66 = explodedArchive0.getManifestFile(file62);
        java.lang.String str67 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor68 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor25);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor65);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "exploded archive" + "'", str67, "exploded archive");
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        fileEntryIterator5.root = file11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        java.util.Iterator<java.io.File> fileItor19 = fileEntryIterator5.listFiles(file18);
        fileEntryIterator0.root = file18;
        java.io.File file21 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file23 = fileEntryIterator22.current;
        java.io.File file24 = fileEntryIterator22.poll();
        java.io.File file25 = fileEntryIterator22.poll();
        java.io.File file26 = fileEntryIterator22.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.io.File file29 = fileEntryIterator27.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        fileEntryIterator30.recursive = true;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator40.thenComparing(fileComparator43);
        fileEntryIterator35.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        java.util.Comparator<java.io.File> fileComparator49 = fileComparator40.thenComparing(fileComparator48);
        fileEntryIterator30.entryComparator = fileComparator49;
        fileEntryIterator30.recursive = true;
        fileEntryIterator30.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator30.stack;
        fileEntryIterator27.stack = fileItorQueue55;
        fileEntryIterator22.stack = fileItorQueue55;
        fileEntryIterator0.stack = fileItorQueue55;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator0.entryComparator;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry60 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor19);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator59);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "exploded archive", "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        int int9 = uRL3.getDefaultPort();
        java.lang.String str10 = uRL3.getPath();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getHost();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.lang.String str9 = explodedArchive6.toString();
        java.lang.String str10 = explodedArchive6.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean12 = fileEntryIterator11.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean14 = explodedArchive13.recursive;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.util.jar.Manifest manifest16 = null;
        explodedArchive13.manifest = manifest16;
        java.io.File file18 = explodedArchive13.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.io.File file22 = fileEntryIterator19.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.io.File file26 = null;
        java.io.File file27 = explodedArchive23.getManifestFile(file26);
        fileEntryIterator19.current = file27;
        explodedArchive13.root = file27;
        fileEntryIterator11.root = file27;
        java.io.File file31 = explodedArchive6.getManifestFile(file27);
        fileEntryIterator0.current = file31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        fileEntryIterator33.recursive = true;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator33.entryComparator;
        fileEntryIterator33.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.io.File file42 = explodedArchive40.root;
        java.io.File file43 = explodedArchive40.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file45 = fileEntryIterator44.current;
        java.io.File file46 = fileEntryIterator44.poll();
        java.io.File file47 = fileEntryIterator44.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator53.thenComparing(fileComparator56);
        fileEntryIterator48.entryComparator = fileComparator53;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator60 = fileComparator53.thenComparing((java.util.Comparator<java.io.File>) entryComparator59);
        fileEntryIterator44.entryComparator = entryComparator59;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        fileEntryIterator65.recursive = true;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator70.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator76 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue77 = fileEntryIterator76.stack;
        java.util.Comparator<java.io.File> fileComparator78 = fileEntryIterator76.entryComparator;
        java.util.Comparator<java.io.File> fileComparator79 = fileComparator75.thenComparing(fileComparator78);
        fileEntryIterator70.entryComparator = fileComparator75;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator81 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue82 = fileEntryIterator81.stack;
        java.util.Comparator<java.io.File> fileComparator83 = fileEntryIterator81.entryComparator;
        java.util.Comparator<java.io.File> fileComparator84 = fileComparator75.thenComparing(fileComparator83);
        fileEntryIterator65.entryComparator = fileComparator84;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file87 = explodedArchive86.manifestFile;
        java.io.File file88 = explodedArchive86.manifestFile;
        java.io.File file89 = null;
        java.io.File file90 = explodedArchive86.getManifestFile(file89);
        fileEntryIterator65.root = file90;
        explodedArchive62.manifestFile = file90;
        fileEntryIterator44.root = file90;
        explodedArchive40.root = file90;
        fileEntryIterator33.current = file90;
        java.util.Iterator<java.io.File> fileItor96 = fileEntryIterator0.listFiles(file90);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive98 = new org.springframework.boot.loader.archive.ExplodedArchive(file90, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "exploded archive" + "'", str9, "exploded archive");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "exploded archive" + "'", str10, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "exploded archive" + "'", str41, "exploded archive");
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileItorQueue77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNotNull(fileItorQueue82);
        org.junit.Assert.assertNotNull(fileComparator83);
        org.junit.Assert.assertNotNull(fileComparator84);
        org.junit.Assert.assertNull(file87);
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file90.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor96);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str5, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL8 = null;
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getHost();
        java.net.URI uRI13 = uRL11.toURI();
        java.lang.String str14 = uRL11.toExternalForm();
        boolean boolean15 = uRL3.sameFile(uRL11);
        java.lang.String str16 = uRL11.toExternalForm();
        java.lang.String str17 = uRL11.getPath();
        int int18 = uRL11.getDefaultPort();
        java.lang.String str19 = uRL11.getHost();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(uRI13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str17, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.io.File file4 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.io.File file7 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str9 = fileEntry8.getName();
        fileEntry8.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean13 = explodedArchive12.recursive;
        boolean boolean14 = explodedArchive12.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.manifestFile;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.io.File file18 = null;
        java.io.File file19 = explodedArchive15.getManifestFile(file18);
        explodedArchive12.root = file19;
        fileEntry8.file = file19;
        java.io.File file22 = fileEntry8.getFile();
        boolean boolean23 = fileEntry8.isDirectory();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive24 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", 0, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URL uRL10 = new java.net.URL(uRL3, "");
        java.net.URI uRI11 = uRL3.toURI();
        java.lang.String str12 = uRL3.getQuery();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file6 = fileEntry5.getFile();
        java.lang.String str7 = fileEntry5.name;
        java.io.File file8 = fileEntry5.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        boolean boolean11 = fileEntryIterator9.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        boolean boolean17 = explodedArchive12.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        fileEntryIterator18.root = file43;
        explodedArchive12.root = file43;
        java.util.Iterator<java.io.File> fileItor46 = fileEntryIterator9.listFiles(file43);
        fileEntry5.file = file43;
        explodedArchive0.manifestFile = file43;
        java.io.File file49 = explodedArchive0.manifestFile;
        java.io.File file50 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest51 = null;
        explodedArchive0.manifest = manifest51;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor46);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URL uRL13 = new java.net.URL(uRL3, "file://exploded archive");
        java.lang.String str14 = uRL13.getProtocol();
        java.lang.String str15 = uRL13.getHost();
        java.lang.String str16 = uRL13.getFile();
        java.lang.String str17 = uRL13.toExternalForm();
        java.lang.String str18 = uRL13.getQuery();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL13.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "exploded archive" + "'", str15, "exploded archive");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "file://exploded archive" + "'", str17, "file://exploded archive");
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.net.URLStreamHandler uRLStreamHandler11 = null;
        java.net.URL uRL12 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler11);
        java.net.URL uRL13 = null;
        java.net.URLStreamHandler uRLStreamHandler15 = null;
        java.net.URL uRL16 = new java.net.URL(uRL13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler15);
        java.lang.String str17 = uRL16.getHost();
        java.lang.String str18 = uRL16.getAuthority();
        java.lang.String str19 = uRL16.toExternalForm();
        java.net.URLConnection uRLConnection20 = uRL16.openConnection();
        java.lang.String str21 = uRL16.getFile();
        boolean boolean22 = uRL3.sameFile(uRL16);
        java.lang.String str23 = uRL16.getQuery();
        java.lang.String str24 = uRL16.getPath();
        java.lang.String str25 = uRL16.getQuery();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL16.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str21, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str24, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL11 = new java.net.URL(uRL3, "file://hi!:100hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: For input string: \"100hi!\"");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.manifestFile;
        java.io.File file23 = explodedArchive21.manifestFile;
        java.io.File file24 = null;
        java.io.File file25 = explodedArchive21.getManifestFile(file24);
        fileEntryIterator0.root = file25;
        java.io.File file27 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file27);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "file://exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        explodedArchive0.root = file56;
        explodedArchive0.recursive = true;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor62 = explodedArchive0.iterator();
        java.net.URL uRL63 = explodedArchive0.getUrl();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator64 = explodedArchive0.spliterator();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertNotNull(entryItor62);
        org.junit.Assert.assertNotNull(uRL63);
// flaky:         org.junit.Assert.assertEquals(uRL63.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator64);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.manifestFile;
        java.io.File file7 = explodedArchive5.manifestFile;
        java.lang.String str8 = explodedArchive5.toString();
        java.util.jar.Manifest manifest9 = explodedArchive5.manifest;
        java.io.File file10 = explodedArchive5.manifestFile;
        boolean boolean11 = explodedArchive5.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file13 = fileEntry12.getFile();
        java.io.File file14 = fileEntry12.file;
        java.io.File file15 = null;
        fileEntry12.file = file15;
        java.lang.String str17 = fileEntry12.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file19 = fileEntryIterator18.current;
        java.io.File file20 = null;
        fileEntryIterator18.current = file20;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean23 = explodedArchive22.recursive;
        java.io.File file24 = explodedArchive22.manifestFile;
        java.util.jar.Manifest manifest25 = null;
        explodedArchive22.manifest = manifest25;
        java.io.File file27 = explodedArchive22.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.io.File file31 = fileEntryIterator28.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        fileEntryIterator28.current = file36;
        explodedArchive22.root = file36;
        fileEntryIterator18.root = file36;
        fileEntry12.file = file36;
        java.io.File file41 = fileEntry12.getFile();
        java.io.File file42 = fileEntry12.file;
        explodedArchive5.manifestFile = file42;
        fileEntry0.file = file42;
        fileEntry0.name = "file://hi!:100hi!";
        boolean boolean47 = fileEntry0.isDirectory();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        fileEntryIterator4.recursive = true;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator14.thenComparing(fileComparator22);
        fileEntryIterator4.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file26 = fileEntryIterator25.current;
        java.io.File file27 = fileEntryIterator25.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file29 = fileEntryIterator28.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator35.thenComparing(fileComparator38);
        fileEntryIterator30.entryComparator = fileComparator35;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator35.thenComparing(fileComparator43);
        fileEntryIterator28.entryComparator = fileComparator44;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator28.stack;
        fileEntryIterator25.stack = fileItorQueue46;
        fileEntryIterator4.stack = fileItorQueue46;
        fileEntryIterator0.stack = fileItorQueue46;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        boolean boolean57 = explodedArchive52.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        fileEntryIterator58.recursive = true;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        java.util.Comparator<java.io.File> fileComparator72 = fileComparator68.thenComparing(fileComparator71);
        fileEntryIterator63.entryComparator = fileComparator68;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator68.thenComparing(fileComparator76);
        fileEntryIterator58.entryComparator = fileComparator77;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file80 = explodedArchive79.manifestFile;
        java.io.File file81 = explodedArchive79.manifestFile;
        java.io.File file82 = null;
        java.io.File file83 = explodedArchive79.getManifestFile(file82);
        fileEntryIterator58.root = file83;
        explodedArchive52.root = file83;
        java.util.Iterator<java.io.File> fileItor86 = fileEntryIterator0.listFiles(file83);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = new org.springframework.boot.loader.archive.ExplodedArchive(file83, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor86);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive0.manifest = manifest31;
        boolean boolean33 = explodedArchive0.recursive;
        java.io.File file34 = explodedArchive0.root;
        java.lang.String str35 = explodedArchive0.toString();
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        boolean boolean38 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str40 = fileEntry39.getName();
        fileEntry39.name = "exploded archive";
        fileEntry39.name = "hi!";
        java.lang.String str45 = fileEntry39.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive46 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "exploded archive" + "'", str35, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest25 = explodedArchive0.manifest;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor26 = explodedArchive0.iterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator27 = explodedArchive0.spliterator();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean30 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean32 = explodedArchive31.recursive;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.util.jar.Manifest manifest34 = null;
        explodedArchive31.manifest = manifest34;
        java.io.File file36 = explodedArchive31.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.io.File file40 = fileEntryIterator37.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file42 = explodedArchive41.manifestFile;
        java.io.File file43 = explodedArchive41.manifestFile;
        java.io.File file44 = null;
        java.io.File file45 = explodedArchive41.getManifestFile(file44);
        fileEntryIterator37.current = file45;
        explodedArchive31.root = file45;
        fileEntryIterator29.root = file45;
        explodedArchive28.root = file45;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator50 = explodedArchive28.spliterator();
        java.io.File file51 = explodedArchive28.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str53 = fileEntry52.name;
        java.io.File file54 = fileEntry52.file;
        fileEntry52.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        boolean boolean59 = fileEntryIterator57.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file61 = explodedArchive60.manifestFile;
        java.io.File file62 = explodedArchive60.manifestFile;
        java.io.File file63 = null;
        java.io.File file64 = explodedArchive60.getManifestFile(file63);
        boolean boolean65 = explodedArchive60.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        fileEntryIterator66.recursive = true;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator66.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.util.Comparator<java.io.File> fileComparator73 = fileEntryIterator71.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        java.util.Comparator<java.io.File> fileComparator79 = fileEntryIterator77.entryComparator;
        java.util.Comparator<java.io.File> fileComparator80 = fileComparator76.thenComparing(fileComparator79);
        fileEntryIterator71.entryComparator = fileComparator76;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator82 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue83 = fileEntryIterator82.stack;
        java.util.Comparator<java.io.File> fileComparator84 = fileEntryIterator82.entryComparator;
        java.util.Comparator<java.io.File> fileComparator85 = fileComparator76.thenComparing(fileComparator84);
        fileEntryIterator66.entryComparator = fileComparator85;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file88 = explodedArchive87.manifestFile;
        java.io.File file89 = explodedArchive87.manifestFile;
        java.io.File file90 = null;
        java.io.File file91 = explodedArchive87.getManifestFile(file90);
        fileEntryIterator66.root = file91;
        explodedArchive60.root = file91;
        java.util.Iterator<java.io.File> fileItor94 = fileEntryIterator57.listFiles(file91);
        fileEntry52.file = file91;
        explodedArchive28.root = file91;
        boolean boolean97 = explodedArchive28.recursive;
        java.io.File file98 = explodedArchive28.root;
        java.io.File file99 = explodedArchive0.getManifestFile(file98);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNotNull(entryItor26);
        org.junit.Assert.assertNotNull(entrySpliterator27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator50);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNotNull(fileItorQueue83);
        org.junit.Assert.assertNotNull(fileComparator84);
        org.junit.Assert.assertNotNull(fileComparator85);
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor94);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(file98);
        org.junit.Assert.assertEquals(file98.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file98.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file99);
        org.junit.Assert.assertEquals(file99.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file99.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        java.lang.String str7 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean10 = fileEntryIterator9.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean12 = explodedArchive11.recursive;
        java.io.File file13 = explodedArchive11.manifestFile;
        java.util.jar.Manifest manifest14 = null;
        explodedArchive11.manifest = manifest14;
        java.io.File file16 = explodedArchive11.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.io.File file20 = fileEntryIterator17.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.manifestFile;
        java.io.File file23 = explodedArchive21.manifestFile;
        java.io.File file24 = null;
        java.io.File file25 = explodedArchive21.getManifestFile(file24);
        fileEntryIterator17.current = file25;
        explodedArchive11.root = file25;
        fileEntryIterator9.root = file25;
        explodedArchive8.root = file25;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator30 = explodedArchive8.spliterator();
        java.io.File file31 = explodedArchive8.root;
        java.util.jar.Manifest manifest32 = explodedArchive8.manifest;
        java.io.File file33 = explodedArchive8.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file35 = fileEntryIterator34.current;
        java.io.File file36 = null;
        fileEntryIterator34.current = file36;
        java.io.File file38 = fileEntryIterator34.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file40 = fileEntry39.getFile();
        java.lang.String str41 = fileEntry39.name;
        java.io.File file42 = fileEntry39.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        boolean boolean45 = fileEntryIterator43.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        boolean boolean51 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        fileEntryIterator52.recursive = true;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator52.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        fileEntryIterator52.root = file77;
        explodedArchive46.root = file77;
        java.util.Iterator<java.io.File> fileItor80 = fileEntryIterator43.listFiles(file77);
        fileEntry39.file = file77;
        fileEntryIterator34.current = file77;
        explodedArchive8.root = file77;
        explodedArchive0.manifestFile = file77;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = new org.springframework.boot.loader.archive.ExplodedArchive(file77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor80);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "hi!", 100, "hi!", uRLStreamHandler4);
        java.net.URI uRI6 = uRL5.toURI();
        org.junit.Assert.assertEquals(uRL5.toString(), "file://hi!:100hi!");
        org.junit.Assert.assertNotNull(uRI6);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        boolean boolean26 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator32.thenComparing(fileComparator35);
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator29.thenComparing(fileComparator35);
        fileEntryIterator0.entryComparator = fileComparator29;
        boolean boolean39 = fileEntryIterator0.recursive;
        java.io.File file40 = fileEntryIterator0.root;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(file40);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getRef();
        java.lang.String str8 = uRL3.getFile();
        java.lang.String str9 = uRL3.getRef();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getRef();
        java.lang.String str8 = uRL3.getQuery();
        java.lang.String str9 = uRL3.toExternalForm();
        java.lang.String str10 = uRL3.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.manifestFile;
        java.io.File file13 = explodedArchive11.manifestFile;
        java.io.File file14 = null;
        java.io.File file15 = explodedArchive11.getManifestFile(file14);
        boolean boolean16 = explodedArchive11.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        fileEntryIterator17.recursive = true;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator27.thenComparing(fileComparator30);
        fileEntryIterator22.entryComparator = fileComparator27;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator27.thenComparing(fileComparator35);
        fileEntryIterator17.entryComparator = fileComparator36;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator17.root = file42;
        explodedArchive11.root = file42;
        explodedArchive11.recursive = false;
        java.util.jar.Manifest manifest47 = null;
        explodedArchive11.manifest = manifest47;
        java.lang.String str49 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean51 = explodedArchive50.recursive;
        boolean boolean52 = explodedArchive50.recursive;
        java.io.File file53 = explodedArchive50.root;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive50.getManifestFile(file54);
        explodedArchive11.manifestFile = file54;
        java.io.File file57 = explodedArchive11.root;
        boolean boolean58 = uRL3.equals((java.lang.Object) explodedArchive11);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file15.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str49, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) '#', "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str8 = explodedArchive7.toString();
        java.io.File file9 = explodedArchive7.root;
        java.io.File file10 = explodedArchive7.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file12 = fileEntryIterator11.current;
        java.io.File file13 = fileEntryIterator11.poll();
        java.io.File file14 = fileEntryIterator11.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator20.thenComparing((java.util.Comparator<java.io.File>) entryComparator26);
        fileEntryIterator11.entryComparator = entryComparator26;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        fileEntryIterator32.recursive = true;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator42.thenComparing(fileComparator45);
        fileEntryIterator37.entryComparator = fileComparator42;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator42.thenComparing(fileComparator50);
        fileEntryIterator32.entryComparator = fileComparator51;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file54 = explodedArchive53.manifestFile;
        java.io.File file55 = explodedArchive53.manifestFile;
        java.io.File file56 = null;
        java.io.File file57 = explodedArchive53.getManifestFile(file56);
        fileEntryIterator32.root = file57;
        explodedArchive29.manifestFile = file57;
        fileEntryIterator11.root = file57;
        explodedArchive7.root = file57;
        fileEntryIterator0.current = file57;
        java.io.File file63 = null;
        fileEntryIterator0.current = file63;
        java.io.File file65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator0.listFiles(file65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL8 = null;
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getHost();
        java.net.URI uRI13 = uRL11.toURI();
        java.lang.String str14 = uRL11.toExternalForm();
        boolean boolean15 = uRL3.sameFile(uRL11);
        java.lang.String str16 = uRL11.toExternalForm();
        java.lang.String str17 = uRL11.getPath();
        java.net.URI uRI18 = uRL11.toURI();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(uRI13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str17, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI18);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getQuery();
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream12 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file44 = fileEntry43.getFile();
        java.lang.String str45 = fileEntry43.name;
        java.io.File file46 = fileEntry43.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        boolean boolean49 = fileEntryIterator47.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        boolean boolean55 = explodedArchive50.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        fileEntryIterator56.recursive = true;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator66.thenComparing(fileComparator69);
        fileEntryIterator61.entryComparator = fileComparator66;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        java.util.Comparator<java.io.File> fileComparator75 = fileComparator66.thenComparing(fileComparator74);
        fileEntryIterator56.entryComparator = fileComparator75;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file78 = explodedArchive77.manifestFile;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.io.File file80 = null;
        java.io.File file81 = explodedArchive77.getManifestFile(file80);
        fileEntryIterator56.root = file81;
        explodedArchive50.root = file81;
        java.util.Iterator<java.io.File> fileItor84 = fileEntryIterator47.listFiles(file81);
        fileEntry43.file = file81;
        explodedArchive38.manifestFile = file81;
        explodedArchive0.root = file81;
        java.io.File file88 = null;
        explodedArchive0.root = file88;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest90 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor84);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getUserInfo();
        java.lang.String str10 = uRL3.getUserInfo();
        java.net.Proxy proxy11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection12 = uRL3.openConnection(proxy11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.lang.String str9 = explodedArchive6.toString();
        java.lang.String str10 = explodedArchive6.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean12 = fileEntryIterator11.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean14 = explodedArchive13.recursive;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.util.jar.Manifest manifest16 = null;
        explodedArchive13.manifest = manifest16;
        java.io.File file18 = explodedArchive13.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.io.File file22 = fileEntryIterator19.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.io.File file26 = null;
        java.io.File file27 = explodedArchive23.getManifestFile(file26);
        fileEntryIterator19.current = file27;
        explodedArchive13.root = file27;
        fileEntryIterator11.root = file27;
        java.io.File file31 = explodedArchive6.getManifestFile(file27);
        fileEntryIterator0.current = file31;
        java.io.File file33 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry34 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "exploded archive" + "'", str9, "exploded archive");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "exploded archive" + "'", str10, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.io.File file5 = fileEntryIterator3.current;
        boolean boolean6 = fileEntryIterator3.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator3.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean9 = explodedArchive8.recursive;
        boolean boolean10 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.manifestFile;
        java.io.File file13 = explodedArchive11.manifestFile;
        java.io.File file14 = null;
        java.io.File file15 = explodedArchive11.getManifestFile(file14);
        explodedArchive8.root = file15;
        fileEntryIterator3.root = file15;
        fileEntry0.file = file15;
        java.io.File file19 = fileEntry0.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file15.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("", "", "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getQuery();
        java.lang.String str16 = uRL14.getUserInfo();
        java.net.URL uRL17 = null;
        java.net.URLStreamHandler uRLStreamHandler19 = null;
        java.net.URL uRL20 = new java.net.URL(uRL17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler19);
        java.lang.String str21 = uRL20.getHost();
        java.lang.String str22 = uRL20.getAuthority();
        java.lang.String str23 = uRL20.getHost();
        java.lang.String str24 = uRL20.getQuery();
        java.lang.String str25 = uRL20.getAuthority();
        java.lang.String str26 = uRL20.getFile();
        java.lang.String str27 = uRL20.getFile();
        java.lang.String str28 = uRL20.getProtocol();
        boolean boolean29 = uRL14.sameFile(uRL20);
        int int30 = uRL20.getDefaultPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str26, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str27, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "file" + "'", str28, "file");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str8 = fileEntry7.name;
        java.lang.String str9 = fileEntry7.getName();
        java.lang.String str10 = fileEntry7.getName();
        java.lang.String str11 = fileEntry7.name;
        java.io.File file12 = fileEntry7.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive13 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "file://exploded archive", (int) (short) 1, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", 100, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        boolean boolean22 = uRL11.sameFile(uRL21);
        java.lang.String str23 = uRL11.getProtocol();
        java.net.URL uRL24 = null;
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL24, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler26);
        java.lang.String str28 = uRL27.getHost();
        int int29 = uRL27.getPort();
        java.net.URL uRL30 = null;
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL30, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler32);
        java.lang.String str34 = uRL33.getHost();
        java.lang.String str35 = uRL33.getAuthority();
        java.lang.String str36 = uRL33.getQuery();
        int int37 = uRL33.getDefaultPort();
        boolean boolean38 = uRL27.sameFile(uRL33);
        java.lang.String str39 = uRL33.getFile();
        boolean boolean40 = uRL11.sameFile(uRL33);
        java.lang.String str41 = uRL33.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.io.File file44 = fileEntryIterator42.current;
        boolean boolean45 = fileEntryIterator42.hasNext();
        fileEntryIterator42.recursive = false;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator42.entryComparator;
        java.lang.Class<?> wildcardClass49 = fileEntryIterator42.getClass();
        java.lang.Class[] classArray50 = new java.lang.Class[] { wildcardClass49 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = uRL33.getContent(classArray50);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file" + "'", str23, "file");
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str41, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(classArray50);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getRef();
        java.lang.String str7 = uRL3.getHost();
        java.net.Proxy proxy8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection9 = uRL3.openConnection(proxy8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        boolean boolean8 = explodedArchive3.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator9.recursive = true;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator9.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator9.root = file34;
        explodedArchive3.root = file34;
        java.util.Iterator<java.io.File> fileItor37 = fileEntryIterator0.listFiles(file34);
        boolean boolean38 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive39.manifest = manifest42;
        java.io.File file44 = explodedArchive39.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        boolean boolean50 = explodedArchive45.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        fileEntryIterator51.recursive = true;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        java.util.Comparator<java.io.File> fileComparator65 = fileComparator61.thenComparing(fileComparator64);
        fileEntryIterator56.entryComparator = fileComparator61;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator61.thenComparing(fileComparator69);
        fileEntryIterator51.entryComparator = fileComparator70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file73 = explodedArchive72.manifestFile;
        java.io.File file74 = explodedArchive72.manifestFile;
        java.io.File file75 = null;
        java.io.File file76 = explodedArchive72.getManifestFile(file75);
        fileEntryIterator51.root = file76;
        explodedArchive45.root = file76;
        explodedArchive45.recursive = false;
        java.util.jar.Manifest manifest81 = null;
        explodedArchive45.manifest = manifest81;
        java.lang.String str83 = explodedArchive45.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter84 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList85 = explodedArchive45.getNestedArchives(entryFilter84);
        java.io.File file86 = explodedArchive45.root;
        explodedArchive39.root = file86;
        fileEntryIterator0.root = file86;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator89 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file90 = fileEntryIterator89.current;
        java.io.File file91 = fileEntryIterator89.poll();
        java.util.Comparator<java.io.File> fileComparator92 = fileEntryIterator89.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator92;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str83, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList85);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNull(file91);
        org.junit.Assert.assertNotNull(fileComparator92);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        boolean boolean41 = explodedArchive39.recursive;
        java.io.File file42 = explodedArchive39.root;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive39.getManifestFile(file43);
        explodedArchive0.manifestFile = file43;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive0.getNestedArchives(entryFilter46);
        java.util.jar.Manifest manifest48 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.io.File file52 = fileEntryIterator49.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file54 = explodedArchive53.manifestFile;
        java.io.File file55 = explodedArchive53.manifestFile;
        java.io.File file56 = null;
        java.io.File file57 = explodedArchive53.getManifestFile(file56);
        fileEntryIterator49.current = file57;
        explodedArchive0.manifestFile = file57;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive(file57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        boolean boolean8 = explodedArchive3.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator9.recursive = true;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator9.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator9.root = file34;
        explodedArchive3.root = file34;
        java.util.Iterator<java.io.File> fileItor37 = fileEntryIterator0.listFiles(file34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        fileEntryIterator45.recursive = true;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator55.thenComparing(fileComparator58);
        fileEntryIterator50.entryComparator = fileComparator55;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator55.thenComparing(fileComparator63);
        fileEntryIterator45.entryComparator = fileComparator64;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.manifestFile;
        java.io.File file68 = explodedArchive66.manifestFile;
        java.io.File file69 = null;
        java.io.File file70 = explodedArchive66.getManifestFile(file69);
        fileEntryIterator45.root = file70;
        explodedArchive42.manifestFile = file70;
        fileEntryIterator38.current = file70;
        fileEntryIterator0.root = file70;
        boolean boolean75 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean80 = explodedArchive79.recursive;
        boolean boolean81 = explodedArchive79.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file83 = explodedArchive82.manifestFile;
        java.io.File file84 = explodedArchive82.manifestFile;
        java.io.File file85 = null;
        java.io.File file86 = explodedArchive82.getManifestFile(file85);
        explodedArchive79.root = file86;
        fileEntryIterator0.current = file86;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.net.URL uRL9 = new java.net.URL(uRL3, "exploded archive");
        java.lang.String str10 = uRL3.getAuthority();
        java.lang.String str11 = uRL3.toExternalForm();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        java.lang.String str20 = uRL15.getAuthority();
        java.net.URL uRL22 = new java.net.URL(uRL15, "");
        boolean boolean23 = uRL3.sameFile(uRL22);
        java.net.Proxy proxy24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection25 = uRL22.openConnection(proxy24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        fileEntryIterator4.recursive = true;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator14.thenComparing(fileComparator22);
        fileEntryIterator4.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file26 = fileEntryIterator25.current;
        java.io.File file27 = fileEntryIterator25.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file29 = fileEntryIterator28.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator35.thenComparing(fileComparator38);
        fileEntryIterator30.entryComparator = fileComparator35;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator35.thenComparing(fileComparator43);
        fileEntryIterator28.entryComparator = fileComparator44;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator28.stack;
        fileEntryIterator25.stack = fileItorQueue46;
        fileEntryIterator4.stack = fileItorQueue46;
        fileEntryIterator0.stack = fileItorQueue46;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str75 = uRL69.getRef();
        java.lang.String str76 = uRL69.getQuery();
        java.lang.String str77 = uRL69.getPath();
        java.lang.String str78 = uRL69.getRef();
        java.net.Proxy proxy79 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection80 = uRL69.openConnection(proxy79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str77, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.lang.String str73 = uRL69.toExternalForm();
        java.lang.String str74 = uRL69.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL76 = new java.net.URL(uRL69, "file://hi!:100hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: For input string: \"100hi!\"");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str73, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getFile();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getFile();
        java.lang.String str9 = uRL3.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        boolean boolean26 = fileEntryIterator0.recursive;
        boolean boolean27 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        boolean boolean34 = explodedArchive29.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        fileEntryIterator35.recursive = true;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        java.util.Comparator<java.io.File> fileComparator49 = fileComparator45.thenComparing(fileComparator48);
        fileEntryIterator40.entryComparator = fileComparator45;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        java.util.Comparator<java.io.File> fileComparator54 = fileComparator45.thenComparing(fileComparator53);
        fileEntryIterator35.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file57 = explodedArchive56.manifestFile;
        java.io.File file58 = explodedArchive56.manifestFile;
        java.io.File file59 = null;
        java.io.File file60 = explodedArchive56.getManifestFile(file59);
        fileEntryIterator35.root = file60;
        explodedArchive29.root = file60;
        explodedArchive29.recursive = false;
        java.util.jar.Manifest manifest65 = null;
        explodedArchive29.manifest = manifest65;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file68 = fileEntryIterator67.current;
        java.io.File file69 = fileEntryIterator67.poll();
        java.io.File file70 = fileEntryIterator67.poll();
        java.io.File file71 = fileEntryIterator67.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.io.File file74 = fileEntryIterator72.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file76 = explodedArchive75.manifestFile;
        java.io.File file77 = explodedArchive75.manifestFile;
        java.io.File file78 = null;
        java.io.File file79 = explodedArchive75.getManifestFile(file78);
        fileEntryIterator72.root = file78;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file82 = explodedArchive81.manifestFile;
        java.io.File file83 = explodedArchive81.manifestFile;
        java.io.File file84 = null;
        java.io.File file85 = explodedArchive81.getManifestFile(file84);
        java.util.Iterator<java.io.File> fileItor86 = fileEntryIterator72.listFiles(file85);
        fileEntryIterator67.root = file85;
        explodedArchive29.root = file85;
        java.io.File file89 = explodedArchive29.root;
        java.util.Iterator<java.io.File> fileItor90 = fileEntryIterator0.listFiles(file89);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive91 = new org.springframework.boot.loader.archive.ExplodedArchive(file89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor86);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor90);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        java.net.URL uRL1 = new java.net.URL("file://exploded archive");
        java.lang.String str2 = uRL1.getQuery();
        int int3 = uRL1.getPort();
        org.junit.Assert.assertEquals(uRL1.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "file", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "", uRLStreamHandler13);
        java.lang.String str15 = uRL11.getQuery();
        java.net.URL uRL17 = new java.net.URL(uRL11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        fileEntryIterator18.recursive = false;
        java.io.File file25 = fileEntryIterator18.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = fileEntryIterator26.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file30 = fileEntryIterator29.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator36.thenComparing(fileComparator39);
        fileEntryIterator31.entryComparator = fileComparator36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        java.util.Comparator<java.io.File> fileComparator45 = fileComparator36.thenComparing(fileComparator44);
        fileEntryIterator29.entryComparator = fileComparator45;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator29.stack;
        fileEntryIterator26.stack = fileItorQueue47;
        boolean boolean49 = fileEntryIterator26.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator60.thenComparing(fileComparator63);
        fileEntryIterator55.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator60.thenComparing(fileComparator68);
        fileEntryIterator50.entryComparator = fileComparator69;
        fileEntryIterator50.recursive = true;
        fileEntryIterator50.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator50.stack;
        boolean boolean76 = fileEntryIterator50.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        java.io.File file79 = fileEntryIterator77.current;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator77.stack;
        fileEntryIterator50.stack = fileItorQueue80;
        fileEntryIterator26.stack = fileItorQueue80;
        fileEntryIterator18.stack = fileItorQueue80;
        boolean boolean84 = uRL17.equals((java.lang.Object) fileItorQueue80);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        java.util.Comparator<java.io.File> fileComparator39 = entryComparator15.thenComparing(fileComparator37);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean46 = fileEntryIterator45.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean48 = explodedArchive47.recursive;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.util.jar.Manifest manifest50 = null;
        explodedArchive47.manifest = manifest50;
        java.io.File file52 = explodedArchive47.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.io.File file56 = fileEntryIterator53.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        fileEntryIterator53.current = file61;
        explodedArchive47.root = file61;
        fileEntryIterator45.root = file61;
        int int65 = entryComparator15.compare(file44, file61);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getUserInfo();
        java.net.URLStreamHandler uRLStreamHandler11 = null;
        java.net.URL uRL12 = new java.net.URL(uRL3, "file://exploded archive", uRLStreamHandler11);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI13 = uRL12.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in authority at index 7: file://exploded archive");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL12.toString(), "file://exploded archive");
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "exploded archive", 10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.io.File file3 = fileEntryIterator0.poll();
        boolean boolean4 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        java.lang.String str2 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive0.getNestedArchives(entryFilter3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "exploded archive" + "'", str2, "exploded archive");
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        fileEntryIterator0.root = file10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean14 = fileEntryIterator13.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean16 = explodedArchive15.recursive;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive15.manifest = manifest18;
        java.io.File file20 = explodedArchive15.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.io.File file24 = fileEntryIterator21.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        fileEntryIterator21.current = file29;
        explodedArchive15.root = file29;
        fileEntryIterator13.root = file29;
        java.util.Iterator<java.io.File> fileItor33 = fileEntryIterator0.listFiles(file29);
        fileEntryIterator0.recursive = true;
        boolean boolean36 = fileEntryIterator0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.lang.String str3 = fileEntry0.getName();
        java.lang.String str4 = fileEntry0.getName();
        java.lang.String str5 = fileEntry0.name;
        java.io.File file6 = fileEntry0.file;
        java.io.File file7 = fileEntry0.getFile();
        java.io.File file8 = fileEntry0.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean3 = explodedArchive2.recursive;
        java.io.File file4 = explodedArchive2.manifestFile;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive2.manifest = manifest5;
        java.io.File file7 = explodedArchive2.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.io.File file11 = fileEntryIterator8.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        fileEntryIterator8.current = file16;
        explodedArchive2.root = file16;
        fileEntryIterator0.root = file16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        boolean boolean22 = fileEntryIterator20.hasNext();
        boolean boolean23 = fileEntryIterator20.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator29.thenComparing(fileComparator32);
        fileEntryIterator24.entryComparator = fileComparator29;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        java.util.Comparator<java.io.File> fileComparator38 = fileComparator29.thenComparing(fileComparator37);
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator37.reversed();
        fileEntryIterator20.entryComparator = fileComparator37;
        boolean boolean41 = fileEntryIterator20.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file43 = fileEntryIterator42.current;
        java.io.File file44 = fileEntryIterator42.poll();
        java.io.File file45 = fileEntryIterator42.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        java.util.Comparator<java.io.File> fileComparator55 = fileComparator51.thenComparing(fileComparator54);
        fileEntryIterator46.entryComparator = fileComparator51;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator51.thenComparing((java.util.Comparator<java.io.File>) entryComparator57);
        fileEntryIterator42.entryComparator = entryComparator57;
        java.io.File file60 = fileEntryIterator42.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean63 = fileEntryIterator62.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean65 = explodedArchive64.recursive;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.util.jar.Manifest manifest67 = null;
        explodedArchive64.manifest = manifest67;
        java.io.File file69 = explodedArchive64.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator70.entryComparator;
        java.io.File file73 = fileEntryIterator70.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file75 = explodedArchive74.manifestFile;
        java.io.File file76 = explodedArchive74.manifestFile;
        java.io.File file77 = null;
        java.io.File file78 = explodedArchive74.getManifestFile(file77);
        fileEntryIterator70.current = file78;
        explodedArchive64.root = file78;
        fileEntryIterator62.root = file78;
        explodedArchive61.root = file78;
        fileEntryIterator42.current = file78;
        fileEntryIterator20.root = file78;
        fileEntryIterator0.root = file78;
        java.io.File file86 = fileEntryIterator0.poll();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file86);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        java.net.URL uRL17 = explodedArchive0.getUrl();
        java.util.jar.Manifest manifest18 = null;
        explodedArchive0.manifest = manifest18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry20.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.io.File file25 = fileEntryIterator23.current;
        boolean boolean26 = fileEntryIterator23.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator23.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean29 = explodedArchive28.recursive;
        boolean boolean30 = explodedArchive28.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.manifestFile;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.io.File file34 = null;
        java.io.File file35 = explodedArchive31.getManifestFile(file34);
        explodedArchive28.root = file35;
        fileEntryIterator23.root = file35;
        fileEntry20.file = file35;
        java.io.File file39 = fileEntry20.getFile();
        java.lang.String str40 = fileEntry20.name;
        fileEntry20.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        fileEntry20.name = "file";
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive45 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL17);
// flaky:         org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "exploded archive" + "'", str40, "exploded archive");
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        java.net.URL uRL17 = explodedArchive0.getUrl();
        explodedArchive0.recursive = true;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL17);
// flaky:         org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.io.File file25 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest26 = null;
        explodedArchive0.manifest = manifest26;
        java.net.URL uRL28 = explodedArchive0.getUrl();
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest29 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(uRL28);
// flaky:         org.junit.Assert.assertEquals(uRL28.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator22.thenComparing(fileComparator25);
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator19.thenComparing(fileComparator25);
        java.util.Comparator<java.io.File> fileComparator28 = entryComparator15.thenComparing(fileComparator27);
        java.util.Comparator<java.io.File> fileComparator29 = entryComparator15.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        fileEntryIterator30.recursive = true;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator40.thenComparing(fileComparator43);
        fileEntryIterator35.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        java.util.Comparator<java.io.File> fileComparator49 = fileComparator40.thenComparing(fileComparator48);
        fileEntryIterator30.entryComparator = fileComparator49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        fileEntryIterator30.root = file55;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = entryComparator15.thenComparing(fileComparator57);
        fileEntryIterator0.entryComparator = entryComparator15;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry60 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        boolean boolean3 = fileEntryIterator0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry4 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.util.jar.Manifest manifest38 = explodedArchive0.manifest;
        java.lang.String str39 = explodedArchive0.toString();
        java.io.File file40 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file40, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest38);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.lang.String str2 = explodedArchive0.toString();
        boolean boolean3 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.manifestFile;
        java.io.File file7 = explodedArchive5.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        fileEntryIterator8.recursive = true;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator18.thenComparing(fileComparator21);
        fileEntryIterator13.entryComparator = fileComparator18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator18.thenComparing(fileComparator26);
        fileEntryIterator8.entryComparator = fileComparator27;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        fileEntryIterator8.root = file33;
        explodedArchive5.manifestFile = file33;
        java.io.File file36 = explodedArchive0.getManifestFile(file33);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "exploded archive" + "'", str2, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        boolean boolean7 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        boolean boolean13 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator14.root = file39;
        explodedArchive8.root = file39;
        java.util.Iterator<java.io.File> fileItor42 = fileEntryIterator5.listFiles(file39);
        fileEntry0.file = file39;
        boolean boolean44 = fileEntry0.isDirectory();
        java.io.File file45 = fileEntry0.file;
        java.io.File file46 = fileEntry0.getFile();
        java.io.File file47 = fileEntry0.getFile();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.lang.String str5 = uRL3.getFile();
        java.lang.String str6 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getAuthority();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str5, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.net.URL uRL6 = new java.net.URL(uRL3, "file");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean9 = fileEntryIterator8.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean11 = explodedArchive10.recursive;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.util.jar.Manifest manifest13 = null;
        explodedArchive10.manifest = manifest13;
        java.io.File file15 = explodedArchive10.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.io.File file19 = fileEntryIterator16.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        fileEntryIterator16.current = file24;
        explodedArchive10.root = file24;
        fileEntryIterator8.root = file24;
        explodedArchive7.root = file24;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator29 = explodedArchive7.spliterator();
        java.io.File file30 = explodedArchive7.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str32 = fileEntry31.name;
        java.io.File file33 = fileEntry31.file;
        fileEntry31.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        boolean boolean38 = fileEntryIterator36.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        boolean boolean44 = explodedArchive39.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        fileEntryIterator45.recursive = true;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator55.thenComparing(fileComparator58);
        fileEntryIterator50.entryComparator = fileComparator55;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator55.thenComparing(fileComparator63);
        fileEntryIterator45.entryComparator = fileComparator64;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.manifestFile;
        java.io.File file68 = explodedArchive66.manifestFile;
        java.io.File file69 = null;
        java.io.File file70 = explodedArchive66.getManifestFile(file69);
        fileEntryIterator45.root = file70;
        explodedArchive39.root = file70;
        java.util.Iterator<java.io.File> fileItor73 = fileEntryIterator36.listFiles(file70);
        fileEntry31.file = file70;
        explodedArchive7.root = file70;
        java.net.URL uRL76 = explodedArchive7.getUrl();
        java.lang.String str77 = uRL76.getUserInfo();
        java.lang.String str78 = uRL76.getHost();
        java.net.URL uRL80 = new java.net.URL(uRL76, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str81 = uRL76.getFile();
        java.net.URL uRL83 = new java.net.URL(uRL76, "file");
        boolean boolean84 = uRL3.equals((java.lang.Object) uRL76);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor73);
        org.junit.Assert.assertNotNull(uRL76);
// flaky:         org.junit.Assert.assertEquals(uRL76.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals(uRL80.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str81, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals(uRL83.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
// flaky:         org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        boolean boolean22 = uRL11.sameFile(uRL21);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI23 = uRL21.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in authority at index 7: file://exploded archive:0");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.recursive = true;
        java.io.File file3 = explodedArchive0.manifestFile;
        java.io.File file4 = explodedArchive0.manifestFile;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        java.net.URL uRL4 = new java.net.URL("file", "hi!", (int) (byte) -1, "hi!");
        java.net.URI uRI5 = uRL4.toURI();
        java.lang.String str6 = uRL4.getUserInfo();
        org.junit.Assert.assertEquals(uRL4.toString(), "file://hi!hi!");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("", "exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        boolean boolean8 = explodedArchive3.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator9.recursive = true;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator9.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator9.root = file34;
        explodedArchive3.root = file34;
        java.util.Iterator<java.io.File> fileItor37 = fileEntryIterator0.listFiles(file34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        boolean boolean40 = fileEntryIterator38.hasNext();
        boolean boolean41 = fileEntryIterator38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator47.thenComparing(fileComparator50);
        fileEntryIterator42.entryComparator = fileComparator47;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator47.thenComparing(fileComparator55);
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator55.reversed();
        fileEntryIterator38.entryComparator = fileComparator55;
        fileEntryIterator0.entryComparator = fileComparator55;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file61 = fileEntryIterator60.current;
        java.io.File file62 = fileEntryIterator60.poll();
        java.io.File file63 = fileEntryIterator60.poll();
        java.io.File file64 = fileEntryIterator60.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.io.File file67 = fileEntryIterator65.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.manifestFile;
        java.io.File file70 = explodedArchive68.manifestFile;
        java.io.File file71 = null;
        java.io.File file72 = explodedArchive68.getManifestFile(file71);
        fileEntryIterator65.root = file71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file75 = explodedArchive74.manifestFile;
        java.io.File file76 = explodedArchive74.manifestFile;
        java.io.File file77 = null;
        java.io.File file78 = explodedArchive74.getManifestFile(file77);
        java.util.Iterator<java.io.File> fileItor79 = fileEntryIterator65.listFiles(file78);
        fileEntryIterator60.root = file78;
        fileEntryIterator60.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator83 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue84 = fileEntryIterator83.stack;
        fileEntryIterator83.recursive = true;
        java.util.Comparator<java.io.File> fileComparator87 = fileEntryIterator83.entryComparator;
        fileEntryIterator83.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator90 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue91 = fileEntryIterator90.stack;
        fileEntryIterator83.stack = fileItorQueue91;
        fileEntryIterator60.stack = fileItorQueue91;
        fileEntryIterator0.stack = fileItorQueue91;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue95 = fileEntryIterator0.stack;
        java.io.File file96 = fileEntryIterator0.poll();
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor79);
        org.junit.Assert.assertNotNull(fileItorQueue84);
        org.junit.Assert.assertNotNull(fileComparator87);
        org.junit.Assert.assertNotNull(fileItorQueue91);
        org.junit.Assert.assertNotNull(fileItorQueue95);
        org.junit.Assert.assertNull(file96);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.manifestFile;
        java.io.File file6 = explodedArchive4.manifestFile;
        java.io.File file7 = null;
        java.io.File file8 = explodedArchive4.getManifestFile(file7);
        boolean boolean9 = explodedArchive4.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        fileEntryIterator10.recursive = true;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator20.thenComparing(fileComparator28);
        fileEntryIterator10.entryComparator = fileComparator29;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.manifestFile;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.io.File file34 = null;
        java.io.File file35 = explodedArchive31.getManifestFile(file34);
        fileEntryIterator10.root = file35;
        explodedArchive4.root = file35;
        explodedArchive4.recursive = false;
        java.util.jar.Manifest manifest40 = null;
        explodedArchive4.manifest = manifest40;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file43 = fileEntryIterator42.current;
        java.io.File file44 = fileEntryIterator42.poll();
        java.io.File file45 = fileEntryIterator42.poll();
        java.io.File file46 = fileEntryIterator42.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.io.File file49 = fileEntryIterator47.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        fileEntryIterator47.root = file53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file57 = explodedArchive56.manifestFile;
        java.io.File file58 = explodedArchive56.manifestFile;
        java.io.File file59 = null;
        java.io.File file60 = explodedArchive56.getManifestFile(file59);
        java.util.Iterator<java.io.File> fileItor61 = fileEntryIterator47.listFiles(file60);
        fileEntryIterator42.root = file60;
        explodedArchive4.root = file60;
        explodedArchive4.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file67 = fileEntryIterator66.current;
        java.io.File file68 = null;
        fileEntryIterator66.current = file68;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean71 = explodedArchive70.recursive;
        java.io.File file72 = explodedArchive70.manifestFile;
        java.util.jar.Manifest manifest73 = null;
        explodedArchive70.manifest = manifest73;
        java.io.File file75 = explodedArchive70.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator76 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue77 = fileEntryIterator76.stack;
        java.util.Comparator<java.io.File> fileComparator78 = fileEntryIterator76.entryComparator;
        java.io.File file79 = fileEntryIterator76.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file81 = explodedArchive80.manifestFile;
        java.io.File file82 = explodedArchive80.manifestFile;
        java.io.File file83 = null;
        java.io.File file84 = explodedArchive80.getManifestFile(file83);
        fileEntryIterator76.current = file84;
        explodedArchive70.root = file84;
        fileEntryIterator66.root = file84;
        java.io.File file88 = explodedArchive4.getManifestFile(file84);
        java.util.Iterator<java.io.File> fileItor89 = fileEntryIterator0.listFiles(file88);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive90 = new org.springframework.boot.loader.archive.ExplodedArchive(file88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor61);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(fileItorQueue77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor89);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        int int9 = uRL3.getPort();
        java.lang.String str10 = uRL3.getFile();
        java.lang.String str11 = uRL3.getProtocol();
        java.net.URLConnection uRLConnection12 = uRL3.openConnection();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream13 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file" + "'", str11, "file");
        org.junit.Assert.assertNotNull(uRLConnection12);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) ' ', "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URL uRL13 = new java.net.URL(uRL3, "file://exploded archive");
        java.net.Proxy proxy14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection15 = uRL3.openConnection(proxy14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL13.toString(), "file://exploded archive");
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str75 = uRL69.getRef();
        int int76 = uRL69.getDefaultPort();
        java.lang.String str77 = uRL69.getPath();
        java.net.URLConnection uRLConnection78 = uRL69.openConnection();
        java.net.URL uRL80 = new java.net.URL(uRL69, "exploded archive");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj81 = uRL80.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str77, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection78);
// flaky:         org.junit.Assert.assertEquals(uRL80.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("exploded archive", "file://exploded archive", (int) (byte) 0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) (byte) 1, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        boolean boolean4 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.net.URL uRL38 = explodedArchive0.getUrl();
        java.lang.String str39 = uRL38.toExternalForm();
        java.net.Proxy proxy40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection41 = uRL38.openConnection(proxy40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        boolean boolean3 = fileEntryIterator0.recursive;
        java.io.File file4 = fileEntryIterator0.root;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = false;
        java.lang.Class<?> wildcardClass12 = fileEntryIterator0.getClass();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", 1, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.io.File file8 = fileEntryIterator6.current;
        boolean boolean9 = fileEntryIterator6.hasNext();
        fileEntryIterator6.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        boolean boolean14 = fileEntryIterator12.hasNext();
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        fileEntryIterator16.entryComparator = fileComparator21;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator21.thenComparing((java.util.Comparator<java.io.File>) entryComparator27);
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator15.thenComparing((java.util.Comparator<java.io.File>) entryComparator27);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean31 = fileEntryIterator30.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean33 = explodedArchive32.recursive;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.util.jar.Manifest manifest35 = null;
        explodedArchive32.manifest = manifest35;
        java.io.File file37 = explodedArchive32.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.io.File file41 = fileEntryIterator38.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator38.current = file46;
        explodedArchive32.root = file46;
        fileEntryIterator30.root = file46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        boolean boolean55 = explodedArchive50.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        fileEntryIterator56.recursive = true;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator66.thenComparing(fileComparator69);
        fileEntryIterator61.entryComparator = fileComparator66;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        java.util.Comparator<java.io.File> fileComparator75 = fileComparator66.thenComparing(fileComparator74);
        fileEntryIterator56.entryComparator = fileComparator75;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file78 = explodedArchive77.manifestFile;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.io.File file80 = null;
        java.io.File file81 = explodedArchive77.getManifestFile(file80);
        fileEntryIterator56.root = file81;
        explodedArchive50.root = file81;
        int int84 = entryComparator27.compare(file46, file81);
        java.util.Iterator<java.io.File> fileItor85 = fileEntryIterator6.listFiles(file46);
        explodedArchive0.manifestFile = file46;
        boolean boolean87 = explodedArchive0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL88 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(fileItor85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.manifestFile;
        java.lang.String str4 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.manifestFile;
        java.io.File file7 = explodedArchive5.manifestFile;
        java.io.File file8 = null;
        java.io.File file9 = explodedArchive5.getManifestFile(file8);
        boolean boolean10 = explodedArchive5.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        fileEntryIterator11.recursive = true;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        fileEntryIterator16.entryComparator = fileComparator21;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator21.thenComparing(fileComparator29);
        fileEntryIterator11.entryComparator = fileComparator30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        fileEntryIterator11.root = file36;
        explodedArchive5.root = file36;
        explodedArchive5.recursive = false;
        java.util.jar.Manifest manifest41 = null;
        explodedArchive5.manifest = manifest41;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file44 = fileEntryIterator43.current;
        java.io.File file45 = fileEntryIterator43.poll();
        java.io.File file46 = fileEntryIterator43.poll();
        java.io.File file47 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.io.File file50 = fileEntryIterator48.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        fileEntryIterator48.root = file54;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        java.util.Iterator<java.io.File> fileItor62 = fileEntryIterator48.listFiles(file61);
        fileEntryIterator43.root = file61;
        explodedArchive5.root = file61;
        explodedArchive5.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean68 = explodedArchive67.recursive;
        boolean boolean69 = explodedArchive67.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file71 = explodedArchive70.manifestFile;
        java.io.File file72 = explodedArchive70.manifestFile;
        java.io.File file73 = null;
        java.io.File file74 = explodedArchive70.getManifestFile(file73);
        explodedArchive67.root = file74;
        explodedArchive67.recursive = false;
        java.io.File file78 = explodedArchive67.root;
        java.io.File file79 = explodedArchive5.getManifestFile(file78);
        explodedArchive0.root = file78;
        java.util.jar.Manifest manifest81 = explodedArchive0.manifest;
        java.lang.String str82 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest83 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest81);
// flaky:         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str82, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", 100, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getProtocol();
        java.lang.String str8 = uRL3.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean11 = fileEntryIterator10.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean13 = explodedArchive12.recursive;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive12.manifest = manifest15;
        java.io.File file17 = explodedArchive12.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.io.File file21 = fileEntryIterator18.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.manifestFile;
        java.io.File file24 = explodedArchive22.manifestFile;
        java.io.File file25 = null;
        java.io.File file26 = explodedArchive22.getManifestFile(file25);
        fileEntryIterator18.current = file26;
        explodedArchive12.root = file26;
        fileEntryIterator10.root = file26;
        explodedArchive9.root = file26;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator31 = explodedArchive9.spliterator();
        java.io.File file32 = explodedArchive9.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str34 = fileEntry33.name;
        java.io.File file35 = fileEntry33.file;
        fileEntry33.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        boolean boolean40 = fileEntryIterator38.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file42 = explodedArchive41.manifestFile;
        java.io.File file43 = explodedArchive41.manifestFile;
        java.io.File file44 = null;
        java.io.File file45 = explodedArchive41.getManifestFile(file44);
        boolean boolean46 = explodedArchive41.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        fileEntryIterator47.recursive = true;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator47.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.util.Comparator<java.io.File> fileComparator61 = fileComparator57.thenComparing(fileComparator60);
        fileEntryIterator52.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator57.thenComparing(fileComparator65);
        fileEntryIterator47.entryComparator = fileComparator66;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.manifestFile;
        java.io.File file70 = explodedArchive68.manifestFile;
        java.io.File file71 = null;
        java.io.File file72 = explodedArchive68.getManifestFile(file71);
        fileEntryIterator47.root = file72;
        explodedArchive41.root = file72;
        java.util.Iterator<java.io.File> fileItor75 = fileEntryIterator38.listFiles(file72);
        fileEntry33.file = file72;
        explodedArchive9.root = file72;
        java.net.URL uRL78 = explodedArchive9.getUrl();
        java.lang.String str79 = uRL78.getUserInfo();
        java.net.URL uRL81 = new java.net.URL(uRL78, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        boolean boolean82 = uRL3.equals((java.lang.Object) "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file" + "'", str7, "file");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file" + "'", str8, "file");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor75);
        org.junit.Assert.assertNotNull(uRL78);
// flaky:         org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertEquals(uRL81.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.io.File file5 = fileEntry0.file;
        java.lang.String str6 = fileEntry0.name;
        java.io.File file7 = fileEntry0.file;
        java.io.File file8 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        explodedArchive9.recursive = true;
        java.lang.String str13 = explodedArchive9.toString();
        boolean boolean14 = explodedArchive9.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.manifestFile;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.io.File file18 = null;
        java.io.File file19 = explodedArchive15.getManifestFile(file18);
        java.io.File file20 = explodedArchive9.getManifestFile(file18);
        fileEntry0.file = file18;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = fileEntry0.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "exploded archive" + "'", str13, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.lang.Class<?> wildcardClass18 = fileComparator16.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        java.io.File file18 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        fileEntryIterator19.recursive = true;
        java.io.File file23 = fileEntryIterator19.poll();
        fileEntryIterator19.recursive = true;
        boolean boolean26 = fileEntryIterator19.recursive;
        boolean boolean27 = fileEntryIterator19.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.io.File file30 = fileEntryIterator28.current;
        java.io.File file31 = fileEntryIterator28.current;
        fileEntryIterator28.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator28.root = file38;
        java.util.Iterator<java.io.File> fileItor40 = fileEntryIterator19.listFiles(file38);
        java.util.Iterator<java.io.File> fileItor41 = fileEntryIterator0.listFiles(file38);
        java.io.File file42 = fileEntryIterator0.root;
        java.io.File file43 = fileEntryIterator0.current;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor40);
        org.junit.Assert.assertNotNull(fileItor41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.net.URI uRI19 = uRL3.toURI();
        java.lang.String str20 = uRL3.getUserInfo();
        java.net.URLConnection uRLConnection21 = uRL3.openConnection();
        java.lang.String str22 = uRL3.getHost();
        java.lang.String str23 = uRL3.getQuery();
        java.lang.Class[] classArray24 = new java.lang.Class[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = uRL3.getContent(classArray24);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(uRI19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(uRLConnection21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(classArray24);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getPath();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str75 = uRL69.getRef();
        int int76 = uRL69.getDefaultPort();
        java.lang.String str77 = uRL69.getPath();
        java.net.URLConnection uRLConnection78 = uRL69.openConnection();
        java.net.URL uRL79 = null;
        java.net.URLStreamHandler uRLStreamHandler81 = null;
        java.net.URL uRL82 = new java.net.URL(uRL79, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler81);
        java.lang.String str83 = uRL82.getHost();
        java.lang.String str84 = uRL82.getAuthority();
        java.lang.String str85 = uRL82.getQuery();
        int int86 = uRL82.getDefaultPort();
        java.lang.String str87 = uRL82.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler89 = null;
        java.net.URL uRL90 = new java.net.URL(uRL82, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler89);
        java.lang.String str91 = uRL90.toExternalForm();
        java.lang.String str92 = uRL90.getAuthority();
        java.lang.String str93 = uRL90.toExternalForm();
        boolean boolean94 = uRL69.equals((java.lang.Object) str93);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str77, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection78);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertEquals(uRL90.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str91, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str93, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URL uRL13 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str14 = uRL13.toExternalForm();
        java.lang.String str15 = uRL13.getHost();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = null;
        explodedArchive0.manifestFile = file2;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.io.File file8 = fileEntryIterator6.current;
        boolean boolean9 = fileEntryIterator6.hasNext();
        fileEntryIterator6.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        boolean boolean14 = fileEntryIterator12.hasNext();
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        fileEntryIterator16.entryComparator = fileComparator21;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator21.thenComparing((java.util.Comparator<java.io.File>) entryComparator27);
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator15.thenComparing((java.util.Comparator<java.io.File>) entryComparator27);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean31 = fileEntryIterator30.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean33 = explodedArchive32.recursive;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.util.jar.Manifest manifest35 = null;
        explodedArchive32.manifest = manifest35;
        java.io.File file37 = explodedArchive32.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.io.File file41 = fileEntryIterator38.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator38.current = file46;
        explodedArchive32.root = file46;
        fileEntryIterator30.root = file46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        boolean boolean55 = explodedArchive50.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        fileEntryIterator56.recursive = true;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator66.thenComparing(fileComparator69);
        fileEntryIterator61.entryComparator = fileComparator66;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        java.util.Comparator<java.io.File> fileComparator75 = fileComparator66.thenComparing(fileComparator74);
        fileEntryIterator56.entryComparator = fileComparator75;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file78 = explodedArchive77.manifestFile;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.io.File file80 = null;
        java.io.File file81 = explodedArchive77.getManifestFile(file80);
        fileEntryIterator56.root = file81;
        explodedArchive50.root = file81;
        int int84 = entryComparator27.compare(file46, file81);
        java.util.Iterator<java.io.File> fileItor85 = fileEntryIterator6.listFiles(file46);
        java.io.File file86 = explodedArchive0.getManifestFile(file46);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive(file86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(fileItor85);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.lang.String str5 = uRL3.getFile();
        java.lang.String str6 = uRL3.getAuthority();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str5, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator38 = explodedArchive0.spliterator();
        java.net.URL uRL39 = explodedArchive0.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.Class<?> wildcardClass41 = explodedArchive40.getClass();
        java.lang.Class[] classArray42 = new java.lang.Class[] { wildcardClass41 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = uRL39.getContent(classArray42);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(entrySpliterator38);
        org.junit.Assert.assertNotNull(uRL39);
// flaky:         org.junit.Assert.assertEquals(uRL39.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(classArray42);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getQuery();
        java.lang.Class<?> wildcardClass71 = uRL69.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        fileEntry0.name = "";
        fileEntry0.name = "hi!";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean8 = fileEntryIterator7.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean10 = explodedArchive9.recursive;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive9.manifest = manifest12;
        java.io.File file14 = explodedArchive9.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.io.File file18 = fileEntryIterator15.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.manifestFile;
        java.io.File file21 = explodedArchive19.manifestFile;
        java.io.File file22 = null;
        java.io.File file23 = explodedArchive19.getManifestFile(file22);
        fileEntryIterator15.current = file23;
        explodedArchive9.root = file23;
        fileEntryIterator7.root = file23;
        explodedArchive6.root = file23;
        java.io.File file28 = explodedArchive6.root;
        fileEntry0.file = file28;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getRef();
        int int7 = uRL3.getDefaultPort();
        java.net.URL uRL9 = new java.net.URL(uRL3, "");
        java.net.URLStreamHandler uRLStreamHandler11 = null;
        java.net.URL uRL12 = new java.net.URL(uRL9, "file", uRLStreamHandler11);
        java.net.URL uRL13 = null;
        java.net.URLStreamHandler uRLStreamHandler15 = null;
        java.net.URL uRL16 = new java.net.URL(uRL13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler15);
        java.lang.String str17 = uRL16.getHost();
        java.lang.String str18 = uRL16.getAuthority();
        java.lang.String str19 = uRL16.getQuery();
        int int20 = uRL16.getDefaultPort();
        java.lang.String str21 = uRL16.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler23 = null;
        java.net.URL uRL24 = new java.net.URL(uRL16, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler23);
        java.lang.String str25 = uRL24.toExternalForm();
        int int26 = uRL24.getDefaultPort();
        java.lang.String str27 = uRL24.getUserInfo();
        java.lang.String str28 = uRL24.getRef();
        java.net.URLConnection uRLConnection29 = uRL24.openConnection();
        java.lang.String str30 = uRL24.getProtocol();
        java.lang.String str31 = uRL24.getHost();
        java.net.URL uRL32 = null;
        java.net.URLStreamHandler uRLStreamHandler34 = null;
        java.net.URL uRL35 = new java.net.URL(uRL32, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler34);
        java.lang.String str36 = uRL35.getHost();
        java.lang.String str37 = uRL35.getAuthority();
        java.lang.String str38 = uRL35.getQuery();
        int int39 = uRL35.getDefaultPort();
        java.lang.String str40 = uRL35.getAuthority();
        boolean boolean41 = uRL24.sameFile(uRL35);
        boolean boolean42 = uRL9.equals((java.lang.Object) boolean41);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL16.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str25, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(uRLConnection29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "file" + "'", str30, "file");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "exploded archive", "exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        fileEntryIterator5.root = file11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        java.util.Iterator<java.io.File> fileItor19 = fileEntryIterator5.listFiles(file18);
        fileEntryIterator0.root = file18;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        fileEntryIterator23.recursive = true;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator23.entryComparator;
        fileEntryIterator23.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        fileEntryIterator23.stack = fileItorQueue31;
        fileEntryIterator0.stack = fileItorQueue31;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry34 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor19);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue31);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        boolean boolean32 = explodedArchive0.recursive;
        java.io.File file33 = explodedArchive0.root;
        boolean boolean34 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        boolean boolean40 = explodedArchive35.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        fileEntryIterator41.recursive = true;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator41.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        java.util.Comparator<java.io.File> fileComparator55 = fileComparator51.thenComparing(fileComparator54);
        fileEntryIterator46.entryComparator = fileComparator51;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        java.util.Comparator<java.io.File> fileComparator60 = fileComparator51.thenComparing(fileComparator59);
        fileEntryIterator41.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        fileEntryIterator41.root = file66;
        explodedArchive35.root = file66;
        explodedArchive35.recursive = false;
        java.util.jar.Manifest manifest71 = null;
        explodedArchive35.manifest = manifest71;
        java.lang.String str73 = explodedArchive35.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter74 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList75 = explodedArchive35.getNestedArchives(entryFilter74);
        java.io.File file76 = explodedArchive35.root;
        explodedArchive35.recursive = true;
        java.io.File file79 = explodedArchive35.root;
        explodedArchive0.manifestFile = file79;
        java.util.jar.Manifest manifest81 = explodedArchive0.manifest;
        java.lang.Class<?> wildcardClass82 = explodedArchive0.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str73, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList75);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.recursive;
        boolean boolean2 = fileEntryIterator0.recursive;
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        java.io.File file4 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file4);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        java.util.jar.Manifest manifest17 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator18 = explodedArchive0.spliterator();
        java.net.URL uRL19 = explodedArchive0.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str21 = fileEntry20.name;
        java.io.File file22 = fileEntry20.file;
        fileEntry20.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        boolean boolean27 = fileEntryIterator25.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.manifestFile;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.io.File file31 = null;
        java.io.File file32 = explodedArchive28.getManifestFile(file31);
        boolean boolean33 = explodedArchive28.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        fileEntryIterator34.recursive = true;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        java.util.Comparator<java.io.File> fileComparator48 = fileComparator44.thenComparing(fileComparator47);
        fileEntryIterator39.entryComparator = fileComparator44;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        java.util.Comparator<java.io.File> fileComparator53 = fileComparator44.thenComparing(fileComparator52);
        fileEntryIterator34.entryComparator = fileComparator53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.manifestFile;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.io.File file58 = null;
        java.io.File file59 = explodedArchive55.getManifestFile(file58);
        fileEntryIterator34.root = file59;
        explodedArchive28.root = file59;
        java.util.Iterator<java.io.File> fileItor62 = fileEntryIterator25.listFiles(file59);
        fileEntry20.file = file59;
        java.lang.String str64 = fileEntry20.getName();
        fileEntry20.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!";
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive67 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNotNull(entrySpliterator18);
        org.junit.Assert.assertNotNull(uRL19);
// flaky:         org.junit.Assert.assertEquals(uRL19.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "exploded archive" + "'", str64, "exploded archive");
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.manifestFile;
        java.io.File file23 = explodedArchive21.manifestFile;
        java.io.File file24 = null;
        java.io.File file25 = explodedArchive21.getManifestFile(file24);
        fileEntryIterator0.root = file25;
        boolean boolean27 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.io.File file30 = fileEntryIterator28.current;
        java.util.ArrayDeque<java.util.Iterator<java.io.File>> fileItorQueue31 = new java.util.ArrayDeque<java.util.Iterator<java.io.File>>();
        fileEntryIterator28.stack = fileItorQueue31;
        fileEntryIterator0.stack = fileItorQueue31;
        java.io.File file34 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file34);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        boolean boolean5 = fileEntryIterator0.recursive;
        boolean boolean6 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.net.URL uRL25 = explodedArchive0.getUrl();
        java.lang.String str26 = uRL25.getPath();
        java.lang.String str27 = uRL25.getPath();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNotNull(uRL25);
// flaky:         org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str26, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str27, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.lang.String str34 = explodedArchive0.toString();
        java.io.File file35 = explodedArchive0.manifestFile;
        boolean boolean36 = explodedArchive0.recursive;
        java.lang.String str37 = explodedArchive0.toString();
        java.util.jar.Manifest manifest38 = null;
        explodedArchive0.manifest = manifest38;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str37, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        fileEntryIterator0.stack = fileItorQueue3;
        java.io.File file5 = fileEntryIterator0.poll();
        java.io.File file6 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator7.recursive = true;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator17.thenComparing(fileComparator25);
        fileEntryIterator7.entryComparator = fileComparator26;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.manifestFile;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.io.File file31 = null;
        java.io.File file32 = explodedArchive28.getManifestFile(file31);
        fileEntryIterator7.root = file32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        fileEntryIterator37.recursive = true;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator47.thenComparing(fileComparator50);
        fileEntryIterator42.entryComparator = fileComparator47;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator47.thenComparing(fileComparator55);
        fileEntryIterator37.entryComparator = fileComparator56;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.manifestFile;
        java.io.File file60 = explodedArchive58.manifestFile;
        java.io.File file61 = null;
        java.io.File file62 = explodedArchive58.getManifestFile(file61);
        fileEntryIterator37.root = file62;
        explodedArchive34.manifestFile = file62;
        java.util.jar.Manifest manifest65 = explodedArchive34.manifest;
        java.util.jar.Manifest manifest66 = explodedArchive34.manifest;
        java.io.File file67 = explodedArchive34.manifestFile;
        java.util.Iterator<java.io.File> fileItor68 = fileEntryIterator7.listFiles(file67);
        java.util.Iterator<java.io.File> fileItor69 = fileEntryIterator0.listFiles(file67);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest65);
        org.junit.Assert.assertNull(manifest66);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor68);
        org.junit.Assert.assertNotNull(fileItor69);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getRef();
        java.lang.String str8 = uRL3.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file://hi!:100hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://hi!:100hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        boolean boolean6 = explodedArchive0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL7 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getPath();
        java.net.URL uRL9 = null;
        java.net.URLStreamHandler uRLStreamHandler11 = null;
        java.net.URL uRL12 = new java.net.URL(uRL9, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler11);
        java.lang.String str13 = uRL12.getHost();
        int int14 = uRL12.getPort();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL12, "hi!", uRLStreamHandler16);
        java.net.URLConnection uRLConnection18 = uRL17.openConnection();
        java.lang.String str19 = uRL17.getQuery();
        boolean boolean20 = uRL3.equals((java.lang.Object) uRL17);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(uRLConnection18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file8 = fileEntryIterator7.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator14.thenComparing(fileComparator22);
        fileEntryIterator7.entryComparator = fileComparator23;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator7.stack;
        java.io.File file26 = fileEntryIterator7.current;
        java.io.File file27 = fileEntryIterator7.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file29 = fileEntryIterator28.current;
        java.io.File file30 = fileEntryIterator28.poll();
        java.io.File file31 = fileEntryIterator28.poll();
        java.io.File file32 = fileEntryIterator28.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.io.File file35 = fileEntryIterator33.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.manifestFile;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.io.File file39 = null;
        java.io.File file40 = explodedArchive36.getManifestFile(file39);
        fileEntryIterator33.root = file39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        java.util.Iterator<java.io.File> fileItor47 = fileEntryIterator33.listFiles(file46);
        fileEntryIterator28.root = file46;
        java.io.File file49 = fileEntryIterator28.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file51 = fileEntryIterator50.current;
        java.io.File file52 = fileEntryIterator50.poll();
        java.io.File file53 = fileEntryIterator50.poll();
        java.io.File file54 = fileEntryIterator50.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.io.File file57 = fileEntryIterator55.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        fileEntryIterator58.recursive = true;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        java.util.Comparator<java.io.File> fileComparator72 = fileComparator68.thenComparing(fileComparator71);
        fileEntryIterator63.entryComparator = fileComparator68;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator68.thenComparing(fileComparator76);
        fileEntryIterator58.entryComparator = fileComparator77;
        fileEntryIterator58.recursive = true;
        fileEntryIterator58.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue83 = fileEntryIterator58.stack;
        fileEntryIterator55.stack = fileItorQueue83;
        fileEntryIterator50.stack = fileItorQueue83;
        fileEntryIterator28.stack = fileItorQueue83;
        fileEntryIterator7.stack = fileItorQueue83;
        fileEntryIterator0.stack = fileItorQueue83;
        java.io.File file89 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor47);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue83);
        org.junit.Assert.assertNull(file89);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        java.net.URL uRL84 = null;
        java.net.URLStreamHandler uRLStreamHandler86 = null;
        java.net.URL uRL87 = new java.net.URL(uRL84, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler86);
        java.lang.String str88 = uRL87.getHost();
        java.lang.String str89 = uRL87.getAuthority();
        java.lang.String str90 = uRL87.getQuery();
        int int91 = uRL87.getDefaultPort();
        int int92 = uRL87.getPort();
        boolean boolean93 = uRL82.sameFile(uRL87);
        int int94 = uRL87.getDefaultPort();
        int int95 = uRL87.getPort();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = uRL87.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals(uRL87.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "file://exploded archive:0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        boolean boolean22 = uRL11.sameFile(uRL21);
        java.lang.String str23 = uRL11.getProtocol();
        java.net.URL uRL25 = new java.net.URL(uRL11, "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = uRL11.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file" + "'", str23, "file");
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getFile();
        java.net.URLConnection uRLConnection14 = uRL11.openConnection();
        java.net.Proxy proxy15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection16 = uRL11.openConnection(proxy15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str13, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection14);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        boolean boolean2 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.lang.String str5 = explodedArchive0.toString();
        boolean boolean6 = explodedArchive0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor7 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "exploded archive" + "'", str1, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "exploded archive" + "'", str5, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", 0, "exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor34 = explodedArchive0.iterator();
        java.io.File file35 = null;
        explodedArchive0.root = file35;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean38 = explodedArchive37.recursive;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.util.jar.Manifest manifest40 = null;
        explodedArchive37.manifest = manifest40;
        java.io.File file42 = explodedArchive37.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.manifestFile;
        java.io.File file45 = explodedArchive43.manifestFile;
        java.io.File file46 = null;
        java.io.File file47 = explodedArchive43.getManifestFile(file46);
        boolean boolean48 = explodedArchive43.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        fileEntryIterator49.recursive = true;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator59.thenComparing(fileComparator62);
        fileEntryIterator54.entryComparator = fileComparator59;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        java.util.Comparator<java.io.File> fileComparator68 = fileComparator59.thenComparing(fileComparator67);
        fileEntryIterator49.entryComparator = fileComparator68;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file71 = explodedArchive70.manifestFile;
        java.io.File file72 = explodedArchive70.manifestFile;
        java.io.File file73 = null;
        java.io.File file74 = explodedArchive70.getManifestFile(file73);
        fileEntryIterator49.root = file74;
        explodedArchive43.root = file74;
        explodedArchive43.recursive = false;
        java.util.jar.Manifest manifest79 = null;
        explodedArchive43.manifest = manifest79;
        java.lang.String str81 = explodedArchive43.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter82 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList83 = explodedArchive43.getNestedArchives(entryFilter82);
        java.io.File file84 = explodedArchive43.root;
        explodedArchive37.root = file84;
        explodedArchive0.manifestFile = file84;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor87 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str81, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList83);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file", "file://exploded archive", (int) ' ', "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: Illegal character found in host: '/'");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.lang.String str6 = uRL3.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.lang.String str19 = uRL3.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL3, "hi!", uRLStreamHandler21);
        java.lang.String str23 = uRL3.getUserInfo();
        java.net.URLStreamHandler uRLStreamHandler25 = null;
        java.net.URL uRL26 = new java.net.URL(uRL3, "file://exploded archive", uRLStreamHandler25);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI27 = uRL26.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in authority at index 7: file://exploded archive");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "file" + "'", str19, "file");
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals(uRL26.toString(), "file://exploded archive");
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.lang.String str8 = uRL3.getUserInfo();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "file://exploded archive");
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream12 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file://exploded archive");
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URLStreamHandler uRLStreamHandler7 = null;
        java.net.URL uRL8 = new java.net.URL(uRL3, "hi!", uRLStreamHandler7);
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler13);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream15 = uRL8.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("exploded archive", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "file://hi!:100hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.recursive;
        boolean boolean2 = fileEntryIterator0.recursive;
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean7 = fileEntryIterator6.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean9 = explodedArchive8.recursive;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive8.manifest = manifest11;
        java.io.File file13 = explodedArchive8.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.io.File file17 = fileEntryIterator14.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.io.File file21 = null;
        java.io.File file22 = explodedArchive18.getManifestFile(file21);
        fileEntryIterator14.current = file22;
        explodedArchive8.root = file22;
        fileEntryIterator6.root = file22;
        explodedArchive5.root = file22;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator27 = explodedArchive5.spliterator();
        java.io.File file28 = explodedArchive5.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str30 = fileEntry29.name;
        java.io.File file31 = fileEntry29.file;
        fileEntry29.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        boolean boolean36 = fileEntryIterator34.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        boolean boolean42 = explodedArchive37.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        fileEntryIterator43.recursive = true;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator53.thenComparing(fileComparator56);
        fileEntryIterator48.entryComparator = fileComparator53;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator53.thenComparing(fileComparator61);
        fileEntryIterator43.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        fileEntryIterator43.root = file68;
        explodedArchive37.root = file68;
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator34.listFiles(file68);
        fileEntry29.file = file68;
        explodedArchive5.root = file68;
        java.util.Iterator<java.io.File> fileItor74 = fileEntryIterator0.listFiles(file68);
        java.io.File file75 = fileEntryIterator0.poll();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry76 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor71);
        org.junit.Assert.assertNotNull(fileItor74);
        org.junit.Assert.assertNull(file75);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        fileEntryIterator0.stack = fileItorQueue3;
        boolean boolean5 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file9 = fileEntry8.getFile();
        java.lang.String str10 = fileEntry8.name;
        java.io.File file11 = fileEntry8.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        boolean boolean14 = fileEntryIterator12.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.manifestFile;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.io.File file18 = null;
        java.io.File file19 = explodedArchive15.getManifestFile(file18);
        boolean boolean20 = explodedArchive15.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        fileEntryIterator21.recursive = true;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator21.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator21.root = file46;
        explodedArchive15.root = file46;
        java.util.Iterator<java.io.File> fileItor49 = fileEntryIterator12.listFiles(file46);
        fileEntry8.file = file46;
        fileEntryIterator0.current = file46;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry52 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor49);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler4);
        java.lang.String str6 = uRL5.getPath();
        java.lang.String str7 = uRL5.getHost();
        java.net.Proxy proxy8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection9 = uRL5.openConnection(proxy8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor34 = explodedArchive0.iterator();
        java.io.File file35 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        fileEntryIterator0.stack = fileItorQueue3;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        boolean boolean8 = fileEntryIterator6.hasNext();
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator6.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator9;
        java.io.File file11 = fileEntryIterator0.root;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        java.io.File file18 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive0.getNestedArchives(entryFilter36);
        java.net.URL uRL38 = explodedArchive0.getUrl();
        java.lang.String str39 = uRL38.toExternalForm();
        java.lang.String str40 = uRL38.getPath();
        java.net.URLStreamHandler uRLStreamHandler42 = null;
        java.net.URL uRL43 = new java.net.URL(uRL38, "hi!", uRLStreamHandler42);
        java.net.URLStreamHandler uRLStreamHandler45 = null;
        java.net.URL uRL46 = new java.net.URL(uRL38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler45);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str40, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals(uRL43.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL46.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        boolean boolean69 = explodedArchive0.recursive;
        java.io.File file70 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest71 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator0.stack = fileItorQueue8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.io.File file12 = fileEntryIterator10.current;
        java.util.ArrayDeque<java.util.Iterator<java.io.File>> fileItorQueue13 = new java.util.ArrayDeque<java.util.Iterator<java.io.File>>();
        fileEntryIterator10.stack = fileItorQueue13;
        boolean boolean15 = fileEntryIterator10.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator10.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file18 = fileEntryIterator17.current;
        java.io.File file19 = fileEntryIterator17.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file21 = fileEntryIterator20.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator27.thenComparing(fileComparator30);
        fileEntryIterator22.entryComparator = fileComparator27;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator27.thenComparing(fileComparator35);
        fileEntryIterator20.entryComparator = fileComparator36;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator20.stack;
        fileEntryIterator17.stack = fileItorQueue38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file41 = fileEntryIterator40.current;
        java.io.File file42 = fileEntryIterator40.poll();
        java.io.File file43 = fileEntryIterator40.poll();
        java.io.File file44 = fileEntryIterator40.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.io.File file47 = fileEntryIterator45.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        fileEntryIterator45.root = file51;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        java.io.File file57 = null;
        java.io.File file58 = explodedArchive54.getManifestFile(file57);
        java.util.Iterator<java.io.File> fileItor59 = fileEntryIterator45.listFiles(file58);
        fileEntryIterator40.root = file58;
        java.util.Iterator<java.io.File> fileItor61 = fileEntryIterator17.listFiles(file58);
        fileEntryIterator10.current = file58;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        fileEntryIterator63.recursive = true;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator63.entryComparator;
        fileEntryIterator63.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        fileEntryIterator63.stack = fileItorQueue71;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file74 = fileEntryIterator73.current;
        java.io.File file75 = fileEntryIterator73.poll();
        java.io.File file76 = fileEntryIterator73.poll();
        java.io.File file77 = fileEntryIterator73.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator78.stack;
        java.io.File file80 = fileEntryIterator78.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file82 = explodedArchive81.manifestFile;
        java.io.File file83 = explodedArchive81.manifestFile;
        java.io.File file84 = null;
        java.io.File file85 = explodedArchive81.getManifestFile(file84);
        fileEntryIterator78.root = file84;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file88 = explodedArchive87.manifestFile;
        java.io.File file89 = explodedArchive87.manifestFile;
        java.io.File file90 = null;
        java.io.File file91 = explodedArchive87.getManifestFile(file90);
        java.util.Iterator<java.io.File> fileItor92 = fileEntryIterator78.listFiles(file91);
        fileEntryIterator73.root = file91;
        java.util.Iterator<java.io.File> fileItor94 = fileEntryIterator63.listFiles(file91);
        fileEntryIterator10.root = file91;
        fileEntryIterator0.current = file91;
        java.lang.Class<?> wildcardClass97 = fileEntryIterator0.getClass();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor59);
        org.junit.Assert.assertNotNull(fileItor61);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor92);
        org.junit.Assert.assertNotNull(fileItor94);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor34 = explodedArchive0.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest35 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor34);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator3.entryComparator = fileComparator19;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator3.stack;
        fileEntryIterator0.stack = fileItorQueue21;
        boolean boolean23 = fileEntryIterator0.recursive;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.lang.String str28 = explodedArchive25.toString();
        java.io.File file29 = explodedArchive25.root;
        explodedArchive25.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file33 = fileEntryIterator32.current;
        java.io.File file34 = fileEntryIterator32.poll();
        java.io.File file35 = fileEntryIterator32.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator32.stack;
        java.io.File file37 = fileEntryIterator32.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.io.File file40 = fileEntryIterator38.current;
        java.io.File file41 = fileEntryIterator38.current;
        fileEntryIterator38.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        fileEntryIterator38.root = file48;
        fileEntryIterator32.root = file48;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean54 = fileEntryIterator53.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean56 = explodedArchive55.recursive;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.util.jar.Manifest manifest58 = null;
        explodedArchive55.manifest = manifest58;
        java.io.File file60 = explodedArchive55.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.io.File file64 = fileEntryIterator61.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator61.current = file69;
        explodedArchive55.root = file69;
        fileEntryIterator53.root = file69;
        explodedArchive52.root = file69;
        fileEntryIterator32.root = file69;
        explodedArchive25.manifestFile = file69;
        fileEntryIterator0.root = file69;
        boolean boolean77 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "exploded archive" + "'", str28, "exploded archive");
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        int int73 = uRL69.getPort();
        java.lang.String str74 = uRL69.getFile();
        java.lang.String str75 = uRL69.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry76 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file77 = fileEntry76.getFile();
        java.lang.String str78 = fileEntry76.getName();
        java.lang.String str79 = fileEntry76.getName();
        fileEntry76.name = "";
        java.io.File file82 = fileEntry76.file;
        java.lang.String str83 = fileEntry76.getName();
        java.io.File file84 = fileEntry76.getFile();
        fileEntry76.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file";
        boolean boolean87 = uRL69.equals((java.lang.Object) fileEntry76);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str74, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str75, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getPath();
        java.lang.String str10 = uRL3.toExternalForm();
        java.lang.String str11 = uRL3.toExternalForm();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URLStreamHandler uRLStreamHandler74 = null;
        java.net.URL uRL75 = new java.net.URL(uRL72, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler74);
        int int76 = uRL75.getDefaultPort();
        java.net.URI uRI77 = uRL75.toURI();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(uRI77);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "file", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.lang.String str4 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean6 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean8 = explodedArchive7.recursive;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.util.jar.Manifest manifest10 = null;
        explodedArchive7.manifest = manifest10;
        java.io.File file12 = explodedArchive7.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.io.File file16 = fileEntryIterator13.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.manifestFile;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.io.File file20 = null;
        java.io.File file21 = explodedArchive17.getManifestFile(file20);
        fileEntryIterator13.current = file21;
        explodedArchive7.root = file21;
        fileEntryIterator5.root = file21;
        java.io.File file25 = explodedArchive0.getManifestFile(file21);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator26 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.net.URI uRI19 = uRL3.toURI();
        java.lang.String str20 = uRL3.toExternalForm();
        java.lang.String str21 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(uRI19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str20, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str21, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        java.lang.String str22 = uRL9.getUserInfo();
        java.lang.String str23 = uRL9.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str23, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.lang.String str71 = uRL69.getHost();
        java.net.URI uRI72 = uRL69.toURI();
        java.lang.String str73 = uRL69.getQuery();
        java.lang.String str74 = uRL69.getRef();
        java.net.URL uRL76 = new java.net.URL(uRL69, "");
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream77 = uRL76.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(uRI72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str74);
// flaky:         org.junit.Assert.assertEquals(uRL76.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URL uRL34 = null;
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler36);
        java.lang.String str38 = uRL37.getHost();
        java.lang.String str39 = uRL37.getAuthority();
        java.lang.String str40 = uRL37.getAuthority();
        java.lang.String str41 = uRL37.getFile();
        int int42 = uRL37.getPort();
        java.lang.String str43 = uRL37.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL37, "hi!");
        boolean boolean46 = uRL3.sameFile(uRL45);
        int int47 = uRL3.getDefaultPort();
        java.net.URL uRL48 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean49 = uRL3.sameFile(uRL48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str41, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest7 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        int int22 = uRL3.getDefaultPort();
        java.lang.String str23 = uRL3.getUserInfo();
        java.lang.String str24 = uRL3.getUserInfo();
        java.net.Proxy proxy25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection26 = uRL3.openConnection(proxy25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file://exploded archive:0", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) (short) -1, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        boolean boolean9 = fileEntryIterator7.hasNext();
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator16.thenComparing((java.util.Comparator<java.io.File>) entryComparator22);
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator10.thenComparing((java.util.Comparator<java.io.File>) entryComparator22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean26 = fileEntryIterator25.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean28 = explodedArchive27.recursive;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.util.jar.Manifest manifest30 = null;
        explodedArchive27.manifest = manifest30;
        java.io.File file32 = explodedArchive27.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.io.File file36 = fileEntryIterator33.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        fileEntryIterator33.current = file41;
        explodedArchive27.root = file41;
        fileEntryIterator25.root = file41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        boolean boolean50 = explodedArchive45.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        fileEntryIterator51.recursive = true;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        java.util.Comparator<java.io.File> fileComparator65 = fileComparator61.thenComparing(fileComparator64);
        fileEntryIterator56.entryComparator = fileComparator61;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator61.thenComparing(fileComparator69);
        fileEntryIterator51.entryComparator = fileComparator70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file73 = explodedArchive72.manifestFile;
        java.io.File file74 = explodedArchive72.manifestFile;
        java.io.File file75 = null;
        java.io.File file76 = explodedArchive72.getManifestFile(file75);
        fileEntryIterator51.root = file76;
        explodedArchive45.root = file76;
        int int79 = entryComparator22.compare(file41, file76);
        java.io.File file80 = explodedArchive0.getManifestFile(file41);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator81 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file3 = fileEntry2.getFile();
        java.io.File file4 = fileEntry2.file;
        java.io.File file5 = null;
        fileEntry2.file = file5;
        java.lang.String str7 = fileEntry2.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        boolean boolean10 = fileEntryIterator8.hasNext();
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator11.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean27 = fileEntryIterator26.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean29 = explodedArchive28.recursive;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive28.manifest = manifest31;
        java.io.File file33 = explodedArchive28.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.io.File file37 = fileEntryIterator34.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator34.current = file42;
        explodedArchive28.root = file42;
        fileEntryIterator26.root = file42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        boolean boolean51 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        fileEntryIterator52.recursive = true;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator52.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        fileEntryIterator52.root = file77;
        explodedArchive46.root = file77;
        int int80 = entryComparator23.compare(file42, file77);
        fileEntry2.file = file77;
        explodedArchive0.manifestFile = file77;
        explodedArchive0.recursive = true;
        java.io.File file85 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest86 = null;
        explodedArchive0.manifest = manifest86;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator88 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive0.getNestedArchives(entryFilter36);
        java.net.URL uRL38 = explodedArchive0.getUrl();
        java.lang.String str39 = uRL38.toExternalForm();
        java.lang.String str40 = uRL38.getPath();
        java.net.URLStreamHandler uRLStreamHandler42 = null;
        java.net.URL uRL43 = new java.net.URL(uRL38, "hi!", uRLStreamHandler42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = uRL43.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str40, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals(uRL43.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.net.URL uRL8 = null;
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getHost();
        java.net.URI uRI13 = uRL11.toURI();
        java.lang.String str14 = uRL11.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL11, "file", uRLStreamHandler16);
        java.lang.String str18 = uRL11.getFile();
        int int19 = uRL11.getPort();
        java.lang.String str20 = uRL11.toExternalForm();
        boolean boolean21 = uRL3.sameFile(uRL11);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file23 = fileEntry22.getFile();
        java.lang.String str24 = fileEntry22.name;
        java.io.File file25 = fileEntry22.file;
        java.io.File file26 = fileEntry22.file;
        java.lang.String str27 = fileEntry22.name;
        java.io.File file28 = fileEntry22.getFile();
        boolean boolean29 = uRL11.equals((java.lang.Object) file28);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(uRI13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str18, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str20, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("exploded archive", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", (int) (byte) 10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLConnection uRLConnection9 = uRL3.openConnection();
        java.lang.String str10 = uRL3.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream11 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(uRLConnection9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.io.File file3 = fileEntryIterator0.current;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        boolean boolean9 = fileEntryIterator7.hasNext();
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator16.thenComparing((java.util.Comparator<java.io.File>) entryComparator22);
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator10.thenComparing((java.util.Comparator<java.io.File>) entryComparator22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean26 = fileEntryIterator25.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean28 = explodedArchive27.recursive;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.util.jar.Manifest manifest30 = null;
        explodedArchive27.manifest = manifest30;
        java.io.File file32 = explodedArchive27.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.io.File file36 = fileEntryIterator33.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        fileEntryIterator33.current = file41;
        explodedArchive27.root = file41;
        fileEntryIterator25.root = file41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        boolean boolean50 = explodedArchive45.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        fileEntryIterator51.recursive = true;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        java.util.Comparator<java.io.File> fileComparator65 = fileComparator61.thenComparing(fileComparator64);
        fileEntryIterator56.entryComparator = fileComparator61;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator61.thenComparing(fileComparator69);
        fileEntryIterator51.entryComparator = fileComparator70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file73 = explodedArchive72.manifestFile;
        java.io.File file74 = explodedArchive72.manifestFile;
        java.io.File file75 = null;
        java.io.File file76 = explodedArchive72.getManifestFile(file75);
        fileEntryIterator51.root = file76;
        explodedArchive45.root = file76;
        int int79 = entryComparator22.compare(file41, file76);
        fileEntryIterator0.current = file41;
        java.lang.Class<?> wildcardClass81 = file41.getClass();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL8 = null;
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getHost();
        java.net.URI uRI13 = uRL11.toURI();
        java.lang.String str14 = uRL11.toExternalForm();
        boolean boolean15 = uRL3.sameFile(uRL11);
        java.lang.String str16 = uRL11.getQuery();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(uRI13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.io.File file18 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean20 = fileEntryIterator19.recursive;
        boolean boolean21 = fileEntryIterator19.recursive;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator19.entryComparator;
        java.io.File file23 = fileEntryIterator19.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file25 = fileEntryIterator24.current;
        java.io.File file26 = fileEntryIterator24.poll();
        java.io.File file27 = fileEntryIterator24.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator33.thenComparing(fileComparator36);
        fileEntryIterator28.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator33.thenComparing((java.util.Comparator<java.io.File>) entryComparator39);
        fileEntryIterator24.entryComparator = entryComparator39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        fileEntryIterator42.recursive = true;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator52.thenComparing(fileComparator55);
        fileEntryIterator47.entryComparator = fileComparator52;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.util.Comparator<java.io.File> fileComparator61 = fileComparator52.thenComparing(fileComparator60);
        fileEntryIterator42.entryComparator = fileComparator61;
        java.util.Comparator<java.io.File> fileComparator63 = entryComparator39.thenComparing(fileComparator61);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean70 = fileEntryIterator69.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean72 = explodedArchive71.recursive;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.util.jar.Manifest manifest74 = null;
        explodedArchive71.manifest = manifest74;
        java.io.File file76 = explodedArchive71.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        java.util.Comparator<java.io.File> fileComparator79 = fileEntryIterator77.entryComparator;
        java.io.File file80 = fileEntryIterator77.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file82 = explodedArchive81.manifestFile;
        java.io.File file83 = explodedArchive81.manifestFile;
        java.io.File file84 = null;
        java.io.File file85 = explodedArchive81.getManifestFile(file84);
        fileEntryIterator77.current = file85;
        explodedArchive71.root = file85;
        fileEntryIterator69.root = file85;
        int int89 = entryComparator39.compare(file68, file85);
        java.util.Iterator<java.io.File> fileItor90 = fileEntryIterator19.listFiles(file85);
        fileEntryIterator0.root = file85;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive93 = new org.springframework.boot.loader.archive.ExplodedArchive(file85, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(fileItor90);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str75 = uRL74.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = uRL74.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        boolean boolean32 = explodedArchive0.recursive;
        java.io.File file33 = explodedArchive0.root;
        boolean boolean34 = explodedArchive0.recursive;
        boolean boolean35 = explodedArchive0.recursive;
        java.lang.String str36 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL37 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "exploded archive" + "'", str36, "exploded archive");
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = true;
        java.io.File file6 = fileEntryIterator0.root;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry7 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file6);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        fileEntryIterator6.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.io.File file15 = fileEntryIterator13.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        fileEntryIterator13.entryComparator = fileComparator18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        fileEntryIterator13.root = file23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = null;
        fileEntryIterator26.current = file28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean31 = explodedArchive30.recursive;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.util.jar.Manifest manifest33 = null;
        explodedArchive30.manifest = manifest33;
        java.io.File file35 = explodedArchive30.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.io.File file39 = fileEntryIterator36.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        fileEntryIterator36.current = file44;
        explodedArchive30.root = file44;
        fileEntryIterator26.root = file44;
        fileEntryIterator13.current = file44;
        java.util.Iterator<java.io.File> fileItor49 = fileEntryIterator6.listFiles(file44);
        fileEntryIterator0.root = file44;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator0.stack;
        java.io.File file52 = fileEntryIterator0.root;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        explodedArchive0.root = file56;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive0.getNestedArchives(entryFilter60);
        java.net.URL uRL62 = explodedArchive0.getUrl();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter63 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList64 = explodedArchive0.getNestedArchives(entryFilter63);
        java.io.File file65 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(uRL62);
// flaky:         org.junit.Assert.assertEquals(uRL62.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.root;
        java.io.File file4 = explodedArchive0.manifestFile;
        boolean boolean5 = explodedArchive0.recursive;
        java.lang.String str6 = explodedArchive0.toString();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.getName();
        java.lang.String str3 = fileEntry0.getName();
        fileEntry0.name = "";
        java.io.File file6 = fileEntry0.getFile();
        fileEntry0.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(file6);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getFile();
        int int14 = uRL11.getPort();
        java.lang.String str15 = uRL11.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str13, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str15, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getQuery();
        java.lang.String str16 = uRL14.getQuery();
        java.lang.String str17 = uRL14.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        boolean boolean6 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator12.thenComparing(fileComparator15);
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator9.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        boolean boolean21 = fileEntryIterator19.hasNext();
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator28.thenComparing((java.util.Comparator<java.io.File>) entryComparator34);
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator22.thenComparing((java.util.Comparator<java.io.File>) entryComparator34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean38 = fileEntryIterator37.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive39.manifest = manifest42;
        java.io.File file44 = explodedArchive39.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        java.io.File file48 = fileEntryIterator45.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        fileEntryIterator45.current = file53;
        explodedArchive39.root = file53;
        fileEntryIterator37.root = file53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        boolean boolean62 = explodedArchive57.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        fileEntryIterator63.recursive = true;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.util.Comparator<java.io.File> fileComparator73 = fileEntryIterator71.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator73.thenComparing(fileComparator76);
        fileEntryIterator68.entryComparator = fileComparator73;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.util.Comparator<java.io.File> fileComparator81 = fileEntryIterator79.entryComparator;
        java.util.Comparator<java.io.File> fileComparator82 = fileComparator73.thenComparing(fileComparator81);
        fileEntryIterator63.entryComparator = fileComparator82;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file85 = explodedArchive84.manifestFile;
        java.io.File file86 = explodedArchive84.manifestFile;
        java.io.File file87 = null;
        java.io.File file88 = explodedArchive84.getManifestFile(file87);
        fileEntryIterator63.root = file88;
        explodedArchive57.root = file88;
        int int91 = entryComparator34.compare(file53, file88);
        fileEntryIterator0.entryComparator = entryComparator34;
        java.io.File file93 = fileEntryIterator0.root;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue94 = fileEntryIterator0.stack;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue95 = fileEntryIterator0.stack;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNull(file93);
        org.junit.Assert.assertNotNull(fileItorQueue94);
        org.junit.Assert.assertNotNull(fileItorQueue95);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file://exploded archive", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) (short) 100, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.net.URL uRL38 = explodedArchive0.getUrl();
        int int39 = uRL38.getDefaultPort();
        java.net.URLConnection uRLConnection40 = uRL38.openConnection();
        java.net.URLStreamHandler uRLStreamHandler42 = null;
        java.net.URL uRL43 = new java.net.URL(uRL38, "file", uRLStreamHandler42);
        java.lang.String str44 = uRL43.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(uRLConnection40);
// flaky:         org.junit.Assert.assertEquals(uRL43.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str44, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getRef();
        int int7 = uRL3.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL3, "", uRLStreamHandler9);
        java.net.URL uRL12 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        boolean boolean13 = uRL3.sameFile(uRL12);
        java.net.URI uRI14 = uRL3.toURI();
        java.lang.String str15 = uRL3.getUserInfo();
        java.net.Proxy proxy16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection17 = uRL3.openConnection(proxy16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(uRI14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.lang.String str7 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getRef();
        java.lang.String str7 = uRL3.getHost();
        int int8 = uRL3.getPort();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream9 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.manifestFile;
        java.io.File file3 = explodedArchive1.manifestFile;
        java.lang.String str4 = explodedArchive1.toString();
        java.util.jar.Manifest manifest5 = null;
        explodedArchive1.manifest = manifest5;
        java.lang.String str7 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        boolean boolean10 = fileEntryIterator8.hasNext();
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator11.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean27 = fileEntryIterator26.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean29 = explodedArchive28.recursive;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive28.manifest = manifest31;
        java.io.File file33 = explodedArchive28.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.io.File file37 = fileEntryIterator34.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator34.current = file42;
        explodedArchive28.root = file42;
        fileEntryIterator26.root = file42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        boolean boolean51 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        fileEntryIterator52.recursive = true;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator52.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        fileEntryIterator52.root = file77;
        explodedArchive46.root = file77;
        int int80 = entryComparator23.compare(file42, file77);
        java.io.File file81 = explodedArchive1.getManifestFile(file42);
        explodedArchive0.manifestFile = file81;
        java.util.jar.Manifest manifest83 = null;
        explodedArchive0.manifest = manifest83;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList86 = explodedArchive0.getNestedArchives(entryFilter85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL3, "", uRLStreamHandler9);
        java.lang.String str11 = uRL3.getRef();
        java.lang.String str12 = uRL3.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        java.net.URL uRL84 = null;
        java.net.URLStreamHandler uRLStreamHandler86 = null;
        java.net.URL uRL87 = new java.net.URL(uRL84, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler86);
        java.lang.String str88 = uRL87.getHost();
        java.lang.String str89 = uRL87.getAuthority();
        java.lang.String str90 = uRL87.getQuery();
        int int91 = uRL87.getDefaultPort();
        int int92 = uRL87.getPort();
        boolean boolean93 = uRL82.sameFile(uRL87);
        int int94 = uRL87.getDefaultPort();
        int int95 = uRL87.getPort();
        java.lang.String str96 = uRL87.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream97 = uRL87.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals(uRL87.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "file" + "'", str96, "file");
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.name;
        java.io.File file6 = fileEntry0.getFile();
        java.io.File file7 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.io.File file10 = fileEntryIterator8.current;
        boolean boolean11 = fileEntryIterator8.hasNext();
        fileEntryIterator8.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        boolean boolean16 = fileEntryIterator14.hasNext();
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator23.thenComparing(fileComparator26);
        fileEntryIterator18.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator23.thenComparing((java.util.Comparator<java.io.File>) entryComparator29);
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator29);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean33 = fileEntryIterator32.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean35 = explodedArchive34.recursive;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.util.jar.Manifest manifest37 = null;
        explodedArchive34.manifest = manifest37;
        java.io.File file39 = explodedArchive34.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.io.File file43 = fileEntryIterator40.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        fileEntryIterator40.current = file48;
        explodedArchive34.root = file48;
        fileEntryIterator32.root = file48;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        boolean boolean57 = explodedArchive52.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        fileEntryIterator58.recursive = true;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        java.util.Comparator<java.io.File> fileComparator72 = fileComparator68.thenComparing(fileComparator71);
        fileEntryIterator63.entryComparator = fileComparator68;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator68.thenComparing(fileComparator76);
        fileEntryIterator58.entryComparator = fileComparator77;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file80 = explodedArchive79.manifestFile;
        java.io.File file81 = explodedArchive79.manifestFile;
        java.io.File file82 = null;
        java.io.File file83 = explodedArchive79.getManifestFile(file82);
        fileEntryIterator58.root = file83;
        explodedArchive52.root = file83;
        int int86 = entryComparator29.compare(file48, file83);
        java.util.Iterator<java.io.File> fileItor87 = fileEntryIterator8.listFiles(file48);
        fileEntry0.file = file48;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(fileItor87);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        boolean boolean69 = explodedArchive0.recursive;
        explodedArchive0.recursive = false;
        explodedArchive0.recursive = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getRef();
        java.lang.String str8 = uRL3.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        java.io.File file11 = explodedArchive9.manifestFile;
        explodedArchive9.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file15 = fileEntryIterator14.current;
        java.io.File file16 = fileEntryIterator14.poll();
        java.io.File file17 = fileEntryIterator14.poll();
        java.io.File file18 = fileEntryIterator14.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.io.File file21 = fileEntryIterator19.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.manifestFile;
        java.io.File file24 = explodedArchive22.manifestFile;
        java.io.File file25 = null;
        java.io.File file26 = explodedArchive22.getManifestFile(file25);
        fileEntryIterator19.root = file25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.manifestFile;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.io.File file31 = null;
        java.io.File file32 = explodedArchive28.getManifestFile(file31);
        java.util.Iterator<java.io.File> fileItor33 = fileEntryIterator19.listFiles(file32);
        fileEntryIterator14.root = file32;
        fileEntryIterator14.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file38 = fileEntryIterator37.current;
        java.io.File file39 = fileEntryIterator37.poll();
        java.io.File file40 = fileEntryIterator37.poll();
        java.io.File file41 = fileEntryIterator37.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.io.File file44 = fileEntryIterator42.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        fileEntryIterator42.root = file48;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        java.util.Iterator<java.io.File> fileItor56 = fileEntryIterator42.listFiles(file55);
        fileEntryIterator37.root = file55;
        fileEntryIterator37.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        fileEntryIterator60.recursive = true;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator60.entryComparator;
        fileEntryIterator60.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        fileEntryIterator60.stack = fileItorQueue68;
        fileEntryIterator37.stack = fileItorQueue68;
        fileEntryIterator14.stack = fileItorQueue68;
        java.io.File file72 = fileEntryIterator14.root;
        java.io.File file73 = explodedArchive9.getManifestFile(file72);
        boolean boolean74 = uRL3.equals((java.lang.Object) explodedArchive9);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor33);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor56);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLConnection uRLConnection9 = uRL3.openConnection();
        java.lang.String str10 = uRL3.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean12 = explodedArchive11.recursive;
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.io.File file17 = fileEntryIterator15.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.io.File file21 = null;
        java.io.File file22 = explodedArchive18.getManifestFile(file21);
        fileEntryIterator15.root = file21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        java.util.Iterator<java.io.File> fileItor29 = fileEntryIterator15.listFiles(file28);
        explodedArchive11.manifestFile = file28;
        java.lang.Class<?> wildcardClass31 = explodedArchive11.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        boolean boolean34 = fileEntryIterator32.hasNext();
        boolean boolean35 = fileEntryIterator32.recursive;
        java.io.File file36 = fileEntryIterator32.root;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator32.stack;
        fileEntryIterator32.recursive = true;
        fileEntryIterator32.recursive = true;
        fileEntryIterator32.recursive = false;
        java.lang.Class<?> wildcardClass44 = fileEntryIterator32.getClass();
        java.net.URL uRL45 = null;
        java.net.URLStreamHandler uRLStreamHandler47 = null;
        java.net.URL uRL48 = new java.net.URL(uRL45, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler47);
        java.lang.String str49 = uRL48.getHost();
        java.lang.String str50 = uRL48.getAuthority();
        java.lang.String str51 = uRL48.getQuery();
        int int52 = uRL48.getDefaultPort();
        java.lang.String str53 = uRL48.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler55 = null;
        java.net.URL uRL56 = new java.net.URL(uRL48, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler55);
        java.net.URL uRL58 = new java.net.URL(uRL48, "file://exploded archive");
        java.lang.Class<?> wildcardClass59 = uRL58.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[] { wildcardClass31, wildcardClass44, wildcardClass59 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = uRL3.getContent(classArray60);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(uRLConnection9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals(uRL48.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals(uRL56.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL58.toString(), "file://exploded archive");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(classArray60);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        boolean boolean11 = explodedArchive6.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        fileEntryIterator12.recursive = true;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator22.thenComparing(fileComparator25);
        fileEntryIterator17.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator22.thenComparing(fileComparator30);
        fileEntryIterator12.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.manifestFile;
        java.io.File file35 = explodedArchive33.manifestFile;
        java.io.File file36 = null;
        java.io.File file37 = explodedArchive33.getManifestFile(file36);
        fileEntryIterator12.root = file37;
        explodedArchive6.root = file37;
        explodedArchive6.recursive = false;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive6.manifest = manifest42;
        java.lang.String str44 = explodedArchive6.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean46 = explodedArchive45.recursive;
        boolean boolean47 = explodedArchive45.recursive;
        java.io.File file48 = explodedArchive45.root;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive45.getManifestFile(file49);
        explodedArchive6.manifestFile = file49;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file53 = fileEntryIterator52.current;
        java.io.File file54 = fileEntryIterator52.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file56 = fileEntryIterator55.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator55.entryComparator = fileComparator71;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator55.stack;
        fileEntryIterator52.stack = fileItorQueue73;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file76 = fileEntryIterator75.current;
        java.io.File file77 = fileEntryIterator75.poll();
        java.io.File file78 = fileEntryIterator75.poll();
        java.io.File file79 = fileEntryIterator75.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator80 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue81 = fileEntryIterator80.stack;
        java.io.File file82 = fileEntryIterator80.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file84 = explodedArchive83.manifestFile;
        java.io.File file85 = explodedArchive83.manifestFile;
        java.io.File file86 = null;
        java.io.File file87 = explodedArchive83.getManifestFile(file86);
        fileEntryIterator80.root = file86;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive89 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file90 = explodedArchive89.manifestFile;
        java.io.File file91 = explodedArchive89.manifestFile;
        java.io.File file92 = null;
        java.io.File file93 = explodedArchive89.getManifestFile(file92);
        java.util.Iterator<java.io.File> fileItor94 = fileEntryIterator80.listFiles(file93);
        fileEntryIterator75.root = file93;
        java.util.Iterator<java.io.File> fileItor96 = fileEntryIterator52.listFiles(file93);
        explodedArchive6.root = file93;
        fileEntryIterator0.root = file93;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue99 = fileEntryIterator0.stack;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str44, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(fileItorQueue81);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNull(file91);
        org.junit.Assert.assertNotNull(file93);
        org.junit.Assert.assertEquals(file93.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file93.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor94);
        org.junit.Assert.assertNotNull(fileItor96);
        org.junit.Assert.assertNotNull(fileItorQueue99);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.lang.String str7 = uRL3.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        fileEntryIterator5.root = file11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        java.util.Iterator<java.io.File> fileItor19 = fileEntryIterator5.listFiles(file18);
        fileEntryIterator0.root = file18;
        java.io.File file21 = fileEntryIterator0.poll();
        java.io.File file22 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        fileEntryIterator23.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        fileEntryIterator30.recursive = true;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator40.thenComparing(fileComparator43);
        fileEntryIterator35.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        java.util.Comparator<java.io.File> fileComparator49 = fileComparator40.thenComparing(fileComparator48);
        fileEntryIterator30.entryComparator = fileComparator49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        fileEntryIterator30.root = file55;
        explodedArchive27.manifestFile = file55;
        fileEntryIterator23.current = file55;
        java.io.File file59 = fileEntryIterator23.current;
        java.util.Iterator<java.io.File> fileItor60 = fileEntryIterator0.listFiles(file59);
        boolean boolean61 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor19);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean12 = fileEntryIterator11.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean14 = explodedArchive13.recursive;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.util.jar.Manifest manifest16 = null;
        explodedArchive13.manifest = manifest16;
        java.io.File file18 = explodedArchive13.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.io.File file22 = fileEntryIterator19.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.io.File file26 = null;
        java.io.File file27 = explodedArchive23.getManifestFile(file26);
        fileEntryIterator19.current = file27;
        explodedArchive13.root = file27;
        fileEntryIterator11.root = file27;
        explodedArchive10.root = file27;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator32 = explodedArchive10.spliterator();
        java.io.File file33 = explodedArchive10.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str35 = fileEntry34.name;
        java.io.File file36 = fileEntry34.file;
        fileEntry34.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        boolean boolean41 = fileEntryIterator39.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        boolean boolean47 = explodedArchive42.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        fileEntryIterator48.recursive = true;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator58.thenComparing(fileComparator61);
        fileEntryIterator53.entryComparator = fileComparator58;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator58.thenComparing(fileComparator66);
        fileEntryIterator48.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file70 = explodedArchive69.manifestFile;
        java.io.File file71 = explodedArchive69.manifestFile;
        java.io.File file72 = null;
        java.io.File file73 = explodedArchive69.getManifestFile(file72);
        fileEntryIterator48.root = file73;
        explodedArchive42.root = file73;
        java.util.Iterator<java.io.File> fileItor76 = fileEntryIterator39.listFiles(file73);
        fileEntry34.file = file73;
        explodedArchive10.root = file73;
        java.net.URL uRL79 = explodedArchive10.getUrl();
        java.lang.String str80 = uRL79.getUserInfo();
        java.net.URL uRL81 = null;
        java.net.URLStreamHandler uRLStreamHandler83 = null;
        java.net.URL uRL84 = new java.net.URL(uRL81, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler83);
        java.lang.String str85 = uRL84.getHost();
        java.lang.String str86 = uRL84.getAuthority();
        java.lang.String str87 = uRL84.getAuthority();
        java.lang.String str88 = uRL84.getFile();
        int int89 = uRL84.getPort();
        java.lang.String str90 = uRL84.getRef();
        java.net.URL uRL92 = new java.net.URL(uRL84, "hi!");
        boolean boolean93 = uRL79.sameFile(uRL92);
        int int94 = uRL92.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler96 = null;
        java.net.URL uRL97 = new java.net.URL(uRL92, "file://exploded archive", uRLStreamHandler96);
        boolean boolean98 = uRL3.sameFile(uRL92);
        java.lang.String str99 = uRL92.getRef();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor76);
        org.junit.Assert.assertNotNull(uRL79);
// flaky:         org.junit.Assert.assertEquals(uRL79.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL84.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str88, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertEquals(uRL92.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertEquals(uRL97.toString(), "file://exploded archive");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "file://hi!:100hi!", 1, "", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getHost();
        java.lang.String str10 = uRL3.getAuthority();
        java.net.URL uRL12 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "exploded archive", uRLStreamHandler14);
        java.lang.String str16 = uRL12.getAuthority();
        java.lang.String str17 = uRL12.getUserInfo();
        java.lang.String str18 = uRL12.getAuthority();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URLStreamHandler uRLStreamHandler74 = null;
        java.net.URL uRL75 = new java.net.URL(uRL69, "", uRLStreamHandler74);
        java.lang.String str76 = uRL69.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str76, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator25 = explodedArchive0.spliterator();
        java.io.File file26 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str29 = explodedArchive0.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNotNull(entrySpliterator25);
        org.junit.Assert.assertNull(file26);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str29, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str73 = uRL72.getFile();
        java.lang.String str74 = uRL72.getUserInfo();
        java.lang.String str75 = uRL72.getPath();
        java.net.URL uRL76 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean77 = uRL72.sameFile(uRL76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str73, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str75, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.io.File file10 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        fileEntryIterator14.recursive = true;
        fileEntryIterator14.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator14.stack;
        fileEntryIterator11.stack = fileItorQueue39;
        fileEntryIterator6.stack = fileItorQueue39;
        fileEntryIterator0.stack = fileItorQueue39;
        java.lang.Class<?> wildcardClass43 = fileItorQueue39.getClass();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file://exploded archive:0", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", 100, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "file", (int) (byte) 1, "file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLConnection uRLConnection9 = uRL3.openConnection();
        java.lang.String str10 = uRL3.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(uRLConnection9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        boolean boolean22 = uRL11.sameFile(uRL21);
        java.lang.String str23 = uRL11.getProtocol();
        java.net.URL uRL25 = new java.net.URL(uRL11, "");
        java.net.URI uRI26 = uRL11.toURI();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file" + "'", str23, "file");
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI26);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.lang.String str34 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator35 = explodedArchive0.spliterator();
        java.io.File file36 = null;
        explodedArchive0.manifestFile = file36;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.lang.String str41 = explodedArchive38.toString();
        java.lang.String str42 = explodedArchive38.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean44 = fileEntryIterator43.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean46 = explodedArchive45.recursive;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.util.jar.Manifest manifest48 = null;
        explodedArchive45.manifest = manifest48;
        java.io.File file50 = explodedArchive45.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        java.io.File file54 = fileEntryIterator51.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.manifestFile;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.io.File file58 = null;
        java.io.File file59 = explodedArchive55.getManifestFile(file58);
        fileEntryIterator51.current = file59;
        explodedArchive45.root = file59;
        fileEntryIterator43.root = file59;
        java.io.File file63 = explodedArchive38.getManifestFile(file59);
        java.io.File file64 = explodedArchive0.getManifestFile(file59);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter65 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList66 = explodedArchive0.getNestedArchives(entryFilter65);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator35);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "exploded archive" + "'", str41, "exploded archive");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "exploded archive" + "'", str42, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList66);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.lang.String str44 = explodedArchive0.toString();
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor45 = explodedArchive0.iterator();
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor46 = explodedArchive0.iterator();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str44, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor45);
        org.junit.Assert.assertNotNull(entryItor46);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str2 = uRL1.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean5 = fileEntryIterator4.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean7 = explodedArchive6.recursive;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive6.manifest = manifest9;
        java.io.File file11 = explodedArchive6.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        java.io.File file15 = fileEntryIterator12.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.manifestFile;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.io.File file19 = null;
        java.io.File file20 = explodedArchive16.getManifestFile(file19);
        fileEntryIterator12.current = file20;
        explodedArchive6.root = file20;
        fileEntryIterator4.root = file20;
        explodedArchive3.root = file20;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator25 = explodedArchive3.spliterator();
        java.io.File file26 = explodedArchive3.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str28 = fileEntry27.name;
        java.io.File file29 = fileEntry27.file;
        fileEntry27.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        boolean boolean34 = fileEntryIterator32.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        boolean boolean40 = explodedArchive35.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        fileEntryIterator41.recursive = true;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator41.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        java.util.Comparator<java.io.File> fileComparator55 = fileComparator51.thenComparing(fileComparator54);
        fileEntryIterator46.entryComparator = fileComparator51;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        java.util.Comparator<java.io.File> fileComparator60 = fileComparator51.thenComparing(fileComparator59);
        fileEntryIterator41.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        fileEntryIterator41.root = file66;
        explodedArchive35.root = file66;
        java.util.Iterator<java.io.File> fileItor69 = fileEntryIterator32.listFiles(file66);
        fileEntry27.file = file66;
        explodedArchive3.root = file66;
        java.net.URL uRL72 = explodedArchive3.getUrl();
        java.net.URLStreamHandler uRLStreamHandler74 = null;
        java.net.URL uRL75 = new java.net.URL(uRL72, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler74);
        java.net.URL uRL77 = new java.net.URL(uRL72, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str78 = uRL72.getRef();
        int int79 = uRL72.getDefaultPort();
        java.lang.String str80 = uRL72.getPath();
        java.net.URLConnection uRLConnection81 = uRL72.openConnection();
        java.lang.String str82 = uRL72.getProtocol();
        java.lang.String str83 = uRL72.getUserInfo();
        boolean boolean84 = uRL1.equals((java.lang.Object) str83);
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor69);
        org.junit.Assert.assertNotNull(uRL72);
// flaky:         org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL77.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str80, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "file" + "'", str82, "file");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        java.io.File file5 = fileEntryIterator3.poll();
        java.io.File file6 = fileEntryIterator3.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator3.stack;
        java.io.File file8 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.io.File file11 = fileEntryIterator9.current;
        java.io.File file12 = fileEntryIterator9.current;
        fileEntryIterator9.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.manifestFile;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.io.File file18 = null;
        java.io.File file19 = explodedArchive15.getManifestFile(file18);
        fileEntryIterator9.root = file19;
        fileEntryIterator3.root = file19;
        java.io.File file22 = explodedArchive0.getManifestFile(file19);
        java.util.jar.Manifest manifest23 = null;
        explodedArchive0.manifest = manifest23;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator3.entryComparator = fileComparator19;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator3.stack;
        fileEntryIterator0.stack = fileItorQueue21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        explodedArchive23.recursive = true;
        java.util.jar.Manifest manifest28 = null;
        explodedArchive23.manifest = manifest28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        fileEntryIterator30.recursive = true;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator30.entryComparator;
        fileEntryIterator30.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        fileEntryIterator30.stack = fileItorQueue38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file41 = fileEntryIterator40.current;
        java.io.File file42 = fileEntryIterator40.poll();
        java.io.File file43 = fileEntryIterator40.poll();
        java.io.File file44 = fileEntryIterator40.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.io.File file47 = fileEntryIterator45.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        fileEntryIterator45.root = file51;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        java.io.File file57 = null;
        java.io.File file58 = explodedArchive54.getManifestFile(file57);
        java.util.Iterator<java.io.File> fileItor59 = fileEntryIterator45.listFiles(file58);
        fileEntryIterator40.root = file58;
        java.util.Iterator<java.io.File> fileItor61 = fileEntryIterator30.listFiles(file58);
        explodedArchive23.manifestFile = file58;
        fileEntryIterator0.root = file58;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive(file58, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor59);
        org.junit.Assert.assertNotNull(fileItor61);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        int int9 = uRL3.getPort();
        java.lang.String str10 = uRL3.getFile();
        java.lang.String str11 = uRL3.toExternalForm();
        java.net.URL uRL13 = new java.net.URL(uRL3, "hi!");
        java.lang.String str14 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!", "file://exploded archive:0", "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.lang.String str6 = uRL3.getProtocol();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file" + "'", str6, "file");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file8 = fileEntryIterator7.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator14.thenComparing(fileComparator22);
        fileEntryIterator7.entryComparator = fileComparator23;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator7.stack;
        java.io.File file26 = fileEntryIterator7.current;
        java.io.File file27 = fileEntryIterator7.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file29 = fileEntryIterator28.current;
        java.io.File file30 = fileEntryIterator28.poll();
        java.io.File file31 = fileEntryIterator28.poll();
        java.io.File file32 = fileEntryIterator28.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.io.File file35 = fileEntryIterator33.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.manifestFile;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.io.File file39 = null;
        java.io.File file40 = explodedArchive36.getManifestFile(file39);
        fileEntryIterator33.root = file39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        java.util.Iterator<java.io.File> fileItor47 = fileEntryIterator33.listFiles(file46);
        fileEntryIterator28.root = file46;
        java.io.File file49 = fileEntryIterator28.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file51 = fileEntryIterator50.current;
        java.io.File file52 = fileEntryIterator50.poll();
        java.io.File file53 = fileEntryIterator50.poll();
        java.io.File file54 = fileEntryIterator50.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.io.File file57 = fileEntryIterator55.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        fileEntryIterator58.recursive = true;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        java.util.Comparator<java.io.File> fileComparator72 = fileComparator68.thenComparing(fileComparator71);
        fileEntryIterator63.entryComparator = fileComparator68;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator68.thenComparing(fileComparator76);
        fileEntryIterator58.entryComparator = fileComparator77;
        fileEntryIterator58.recursive = true;
        fileEntryIterator58.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue83 = fileEntryIterator58.stack;
        fileEntryIterator55.stack = fileItorQueue83;
        fileEntryIterator50.stack = fileItorQueue83;
        fileEntryIterator28.stack = fileItorQueue83;
        fileEntryIterator7.stack = fileItorQueue83;
        fileEntryIterator0.stack = fileItorQueue83;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry89 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor47);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue83);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL3, "", uRLStreamHandler9);
        java.lang.String str11 = uRL3.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator22.thenComparing(fileComparator25);
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator19.thenComparing(fileComparator25);
        java.util.Comparator<java.io.File> fileComparator28 = entryComparator15.thenComparing(fileComparator27);
        java.util.Comparator<java.io.File> fileComparator29 = entryComparator15.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        fileEntryIterator30.recursive = true;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator40.thenComparing(fileComparator43);
        fileEntryIterator35.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        java.util.Comparator<java.io.File> fileComparator49 = fileComparator40.thenComparing(fileComparator48);
        fileEntryIterator30.entryComparator = fileComparator49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        fileEntryIterator30.root = file55;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = entryComparator15.thenComparing(fileComparator57);
        fileEntryIterator0.entryComparator = entryComparator15;
        java.io.File file60 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNull(file60);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        boolean boolean4 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file6 = fileEntry5.getFile();
        java.io.File file7 = fileEntry5.file;
        java.io.File file8 = null;
        fileEntry5.file = file8;
        java.lang.String str10 = fileEntry5.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        boolean boolean13 = fileEntryIterator11.hasNext();
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator20.thenComparing((java.util.Comparator<java.io.File>) entryComparator26);
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator14.thenComparing((java.util.Comparator<java.io.File>) entryComparator26);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean30 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean32 = explodedArchive31.recursive;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.util.jar.Manifest manifest34 = null;
        explodedArchive31.manifest = manifest34;
        java.io.File file36 = explodedArchive31.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.io.File file40 = fileEntryIterator37.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file42 = explodedArchive41.manifestFile;
        java.io.File file43 = explodedArchive41.manifestFile;
        java.io.File file44 = null;
        java.io.File file45 = explodedArchive41.getManifestFile(file44);
        fileEntryIterator37.current = file45;
        explodedArchive31.root = file45;
        fileEntryIterator29.root = file45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        boolean boolean54 = explodedArchive49.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        fileEntryIterator55.recursive = true;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator65.thenComparing(fileComparator68);
        fileEntryIterator60.entryComparator = fileComparator65;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.util.Comparator<java.io.File> fileComparator73 = fileEntryIterator71.entryComparator;
        java.util.Comparator<java.io.File> fileComparator74 = fileComparator65.thenComparing(fileComparator73);
        fileEntryIterator55.entryComparator = fileComparator74;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file77 = explodedArchive76.manifestFile;
        java.io.File file78 = explodedArchive76.manifestFile;
        java.io.File file79 = null;
        java.io.File file80 = explodedArchive76.getManifestFile(file79);
        fileEntryIterator55.root = file80;
        explodedArchive49.root = file80;
        int int83 = entryComparator26.compare(file45, file80);
        fileEntry5.file = file80;
        explodedArchive0.manifestFile = file80;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry86 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file87 = fileEntry86.getFile();
        java.io.File file88 = fileEntry86.file;
        fileEntry86.name = "";
        java.lang.String str91 = fileEntry86.name;
        fileEntry86.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!";
        java.lang.String str94 = fileEntry86.getName();
        java.lang.String str95 = fileEntry86.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive96 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNull(file87);
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str94, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str95, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive0.getNestedArchives(entryFilter42);
        java.lang.String str44 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest45 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList43);
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str44, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "", uRLStreamHandler13);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean17 = fileEntryIterator16.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean19 = explodedArchive18.recursive;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.util.jar.Manifest manifest21 = null;
        explodedArchive18.manifest = manifest21;
        java.io.File file23 = explodedArchive18.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.io.File file27 = fileEntryIterator24.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.manifestFile;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.io.File file31 = null;
        java.io.File file32 = explodedArchive28.getManifestFile(file31);
        fileEntryIterator24.current = file32;
        explodedArchive18.root = file32;
        fileEntryIterator16.root = file32;
        explodedArchive15.root = file32;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive15.spliterator();
        java.io.File file38 = explodedArchive15.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str40 = fileEntry39.name;
        java.io.File file41 = fileEntry39.file;
        fileEntry39.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        boolean boolean46 = fileEntryIterator44.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.manifestFile;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.io.File file50 = null;
        java.io.File file51 = explodedArchive47.getManifestFile(file50);
        boolean boolean52 = explodedArchive47.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        fileEntryIterator53.recursive = true;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator63.thenComparing(fileComparator66);
        fileEntryIterator58.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        java.util.Comparator<java.io.File> fileComparator72 = fileComparator63.thenComparing(fileComparator71);
        fileEntryIterator53.entryComparator = fileComparator72;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file75 = explodedArchive74.manifestFile;
        java.io.File file76 = explodedArchive74.manifestFile;
        java.io.File file77 = null;
        java.io.File file78 = explodedArchive74.getManifestFile(file77);
        fileEntryIterator53.root = file78;
        explodedArchive47.root = file78;
        java.util.Iterator<java.io.File> fileItor81 = fileEntryIterator44.listFiles(file78);
        fileEntry39.file = file78;
        explodedArchive15.root = file78;
        java.net.URL uRL84 = explodedArchive15.getUrl();
        java.lang.String str85 = uRL84.getUserInfo();
        java.lang.String str86 = uRL84.getHost();
        java.net.URL uRL88 = new java.net.URL(uRL84, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        boolean boolean89 = uRL11.sameFile(uRL84);
        java.net.URI uRI90 = uRL11.toURI();
        java.lang.String str91 = uRL11.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor81);
        org.junit.Assert.assertNotNull(uRL84);
// flaky:         org.junit.Assert.assertEquals(uRL84.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertEquals(uRL88.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(uRI90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str91, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        java.io.File file5 = explodedArchive0.manifestFile;
        java.io.File file6 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator12.thenComparing(fileComparator15);
        fileEntryIterator7.entryComparator = fileComparator12;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean19 = fileEntryIterator18.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean21 = explodedArchive20.recursive;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.util.jar.Manifest manifest23 = null;
        explodedArchive20.manifest = manifest23;
        java.io.File file25 = explodedArchive20.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.io.File file29 = fileEntryIterator26.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator26.current = file34;
        explodedArchive20.root = file34;
        fileEntryIterator18.root = file34;
        fileEntryIterator7.root = file34;
        java.io.File file39 = explodedArchive0.getManifestFile(file34);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file39, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "file://exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.getName();
        java.lang.String str3 = fileEntry0.getName();
        fileEntry0.name = "";
        java.io.File file6 = fileEntry0.file;
        java.lang.String str7 = fileEntry0.getName();
        java.io.File file8 = fileEntry0.getFile();
        fileEntry0.name = "file://exploded archive";
        java.io.File file11 = fileEntry0.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file://exploded archive:0", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", (int) (byte) 10, "file://exploded archive:0", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        int int9 = uRL3.getPort();
        java.lang.String str10 = uRL3.getPath();
        java.lang.String str11 = uRL3.toExternalForm();
        java.lang.String str12 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URL uRL34 = null;
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler36);
        java.lang.String str38 = uRL37.getHost();
        java.lang.String str39 = uRL37.getAuthority();
        java.lang.String str40 = uRL37.getAuthority();
        java.lang.String str41 = uRL37.getFile();
        int int42 = uRL37.getPort();
        java.lang.String str43 = uRL37.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL37, "hi!");
        boolean boolean46 = uRL3.sameFile(uRL45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj47 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str41, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        fileEntryIterator4.recursive = true;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator14.thenComparing(fileComparator22);
        fileEntryIterator4.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file26 = fileEntryIterator25.current;
        java.io.File file27 = fileEntryIterator25.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file29 = fileEntryIterator28.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator35.thenComparing(fileComparator38);
        fileEntryIterator30.entryComparator = fileComparator35;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator35.thenComparing(fileComparator43);
        fileEntryIterator28.entryComparator = fileComparator44;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator28.stack;
        fileEntryIterator25.stack = fileItorQueue46;
        fileEntryIterator4.stack = fileItorQueue46;
        fileEntryIterator0.stack = fileItorQueue46;
        java.io.File file50 = fileEntryIterator0.poll();
        boolean boolean51 = fileEntryIterator0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", (int) (byte) 0, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        fileEntryIterator0.stack = fileItorQueue3;
        java.io.File file5 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator6.stack;
        fileEntryIterator0.stack = fileItorQueue10;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator18.thenComparing(fileComparator21);
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator15.thenComparing(fileComparator21);
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator12.thenComparing(fileComparator23);
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator24.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.io.File file28 = fileEntryIterator26.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        fileEntryIterator26.root = file32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        java.util.Iterator<java.io.File> fileItor40 = fileEntryIterator26.listFiles(file39);
        boolean boolean41 = fileEntryIterator26.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator25.thenComparing(fileComparator43);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file://exploded archive:0", "", (int) ' ', "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.lang.String str19 = uRL3.getProtocol();
        java.net.URL uRL21 = new java.net.URL(uRL3, "file://exploded archive:0");
        java.lang.String str22 = uRL21.getRef();
        java.lang.String str23 = uRL21.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = uRL21.getContent();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: exploded archive");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "file" + "'", str19, "file");
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator39 = explodedArchive0.spliterator();
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor40 = explodedArchive0.iterator();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive0.getNestedArchives(entryFilter41);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry43.name = "exploded archive";
        java.io.File file46 = fileEntry43.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive47 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator39);
        org.junit.Assert.assertNotNull(entryItor40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNull(file46);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest32 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest33 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest34 = explodedArchive0.getManifest();
        java.io.File file35 = explodedArchive0.root;
        java.io.File file36 = null;
        explodedArchive0.manifestFile = file36;
        java.lang.String str38 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator39 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "exploded archive" + "'", str38, "exploded archive");
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        boolean boolean7 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        boolean boolean13 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator14.root = file39;
        explodedArchive8.root = file39;
        java.util.Iterator<java.io.File> fileItor42 = fileEntryIterator5.listFiles(file39);
        fileEntry0.file = file39;
        fileEntry0.name = "";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file52 = fileEntry51.getFile();
        java.lang.String str53 = fileEntry51.name;
        java.io.File file54 = fileEntry51.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        boolean boolean57 = fileEntryIterator55.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.manifestFile;
        java.io.File file60 = explodedArchive58.manifestFile;
        java.io.File file61 = null;
        java.io.File file62 = explodedArchive58.getManifestFile(file61);
        boolean boolean63 = explodedArchive58.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        fileEntryIterator64.recursive = true;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator64.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator75.stack;
        java.util.Comparator<java.io.File> fileComparator77 = fileEntryIterator75.entryComparator;
        java.util.Comparator<java.io.File> fileComparator78 = fileComparator74.thenComparing(fileComparator77);
        fileEntryIterator69.entryComparator = fileComparator74;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator80 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue81 = fileEntryIterator80.stack;
        java.util.Comparator<java.io.File> fileComparator82 = fileEntryIterator80.entryComparator;
        java.util.Comparator<java.io.File> fileComparator83 = fileComparator74.thenComparing(fileComparator82);
        fileEntryIterator64.entryComparator = fileComparator83;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file86 = explodedArchive85.manifestFile;
        java.io.File file87 = explodedArchive85.manifestFile;
        java.io.File file88 = null;
        java.io.File file89 = explodedArchive85.getManifestFile(file88);
        fileEntryIterator64.root = file89;
        explodedArchive58.root = file89;
        java.util.Iterator<java.io.File> fileItor92 = fileEntryIterator55.listFiles(file89);
        fileEntry51.file = file89;
        explodedArchive46.manifestFile = file89;
        java.io.File file95 = explodedArchive46.manifestFile;
        fileEntry0.file = file95;
        java.io.File file97 = fileEntry0.getFile();
        java.lang.String str98 = fileEntry0.getName();
        java.io.File file99 = fileEntry0.file;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor42);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNotNull(fileItorQueue81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNotNull(fileComparator83);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNull(file87);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor92);
        org.junit.Assert.assertNotNull(file95);
        org.junit.Assert.assertEquals(file95.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file95.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file97);
        org.junit.Assert.assertEquals(file97.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file97.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "" + "'", str98, "");
        org.junit.Assert.assertNotNull(file99);
        org.junit.Assert.assertEquals(file99.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file99.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        boolean boolean6 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator12.thenComparing(fileComparator15);
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator9.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        boolean boolean21 = fileEntryIterator19.hasNext();
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator28.thenComparing((java.util.Comparator<java.io.File>) entryComparator34);
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator22.thenComparing((java.util.Comparator<java.io.File>) entryComparator34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean38 = fileEntryIterator37.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive39.manifest = manifest42;
        java.io.File file44 = explodedArchive39.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        java.io.File file48 = fileEntryIterator45.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        fileEntryIterator45.current = file53;
        explodedArchive39.root = file53;
        fileEntryIterator37.root = file53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        boolean boolean62 = explodedArchive57.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        fileEntryIterator63.recursive = true;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.util.Comparator<java.io.File> fileComparator73 = fileEntryIterator71.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator73.thenComparing(fileComparator76);
        fileEntryIterator68.entryComparator = fileComparator73;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.util.Comparator<java.io.File> fileComparator81 = fileEntryIterator79.entryComparator;
        java.util.Comparator<java.io.File> fileComparator82 = fileComparator73.thenComparing(fileComparator81);
        fileEntryIterator63.entryComparator = fileComparator82;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file85 = explodedArchive84.manifestFile;
        java.io.File file86 = explodedArchive84.manifestFile;
        java.io.File file87 = null;
        java.io.File file88 = explodedArchive84.getManifestFile(file87);
        fileEntryIterator63.root = file88;
        explodedArchive57.root = file88;
        int int91 = entryComparator34.compare(file53, file88);
        fileEntryIterator0.root = file88;
        fileEntryIterator0.recursive = false;
        java.io.File file95 = fileEntryIterator0.poll();
        boolean boolean96 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNull(file95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URI uRI34 = uRL3.toURI();
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL3, "exploded archive", uRLStreamHandler36);
        java.lang.String str38 = uRL37.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(uRI34);
        org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.io.File file10 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator11.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        java.util.Iterator<java.io.File> fileItor25 = fileEntryIterator11.listFiles(file24);
        fileEntryIterator6.root = file24;
        explodedArchive0.manifestFile = file24;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest30 = null;
        explodedArchive0.manifest = manifest30;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file33 = fileEntry32.getFile();
        java.lang.String str34 = fileEntry32.getName();
        java.lang.String str35 = fileEntry32.getName();
        fileEntry32.name = "";
        java.io.File file38 = fileEntry32.file;
        java.lang.String str39 = fileEntry32.getName();
        java.io.File file40 = fileEntry32.getFile();
        java.io.File file41 = fileEntry32.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive42 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor25);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getHost();
        java.net.URL uRL10 = null;
        java.net.URLStreamHandler uRLStreamHandler12 = null;
        java.net.URL uRL13 = new java.net.URL(uRL10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler12);
        java.lang.String str14 = uRL13.getHost();
        java.net.URI uRI15 = uRL13.toURI();
        java.lang.String str16 = uRL13.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler18 = null;
        java.net.URL uRL19 = new java.net.URL(uRL13, "file", uRLStreamHandler18);
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL13, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        boolean boolean23 = uRL3.sameFile(uRL13);
        java.lang.String str24 = uRL13.getPath();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream25 = uRL13.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(uRI15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL19.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str24, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        fileEntryIterator10.recursive = true;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator20.thenComparing(fileComparator28);
        fileEntryIterator10.entryComparator = fileComparator29;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.manifestFile;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.io.File file34 = null;
        java.io.File file35 = explodedArchive31.getManifestFile(file34);
        fileEntryIterator10.root = file35;
        explodedArchive7.manifestFile = file35;
        explodedArchive0.root = file35;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file40 = fileEntry39.getFile();
        java.lang.String str41 = fileEntry39.name;
        java.io.File file42 = fileEntry39.file;
        java.io.File file43 = fileEntry39.file;
        java.io.File file44 = fileEntry39.file;
        fileEntry39.name = "hi!";
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive47 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean8 = explodedArchive7.recursive;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.util.jar.Manifest manifest10 = null;
        explodedArchive7.manifest = manifest10;
        boolean boolean12 = explodedArchive7.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.lang.String str16 = explodedArchive13.toString();
        java.util.jar.Manifest manifest17 = null;
        explodedArchive13.manifest = manifest17;
        java.lang.String str19 = explodedArchive13.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        boolean boolean22 = fileEntryIterator20.hasNext();
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator29.thenComparing(fileComparator32);
        fileEntryIterator24.entryComparator = fileComparator29;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator29.thenComparing((java.util.Comparator<java.io.File>) entryComparator35);
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator23.thenComparing((java.util.Comparator<java.io.File>) entryComparator35);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean39 = fileEntryIterator38.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean41 = explodedArchive40.recursive;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.util.jar.Manifest manifest43 = null;
        explodedArchive40.manifest = manifest43;
        java.io.File file45 = explodedArchive40.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        java.io.File file49 = fileEntryIterator46.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        fileEntryIterator46.current = file54;
        explodedArchive40.root = file54;
        fileEntryIterator38.root = file54;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.manifestFile;
        java.io.File file60 = explodedArchive58.manifestFile;
        java.io.File file61 = null;
        java.io.File file62 = explodedArchive58.getManifestFile(file61);
        boolean boolean63 = explodedArchive58.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        fileEntryIterator64.recursive = true;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator64.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator75.stack;
        java.util.Comparator<java.io.File> fileComparator77 = fileEntryIterator75.entryComparator;
        java.util.Comparator<java.io.File> fileComparator78 = fileComparator74.thenComparing(fileComparator77);
        fileEntryIterator69.entryComparator = fileComparator74;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator80 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue81 = fileEntryIterator80.stack;
        java.util.Comparator<java.io.File> fileComparator82 = fileEntryIterator80.entryComparator;
        java.util.Comparator<java.io.File> fileComparator83 = fileComparator74.thenComparing(fileComparator82);
        fileEntryIterator64.entryComparator = fileComparator83;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file86 = explodedArchive85.manifestFile;
        java.io.File file87 = explodedArchive85.manifestFile;
        java.io.File file88 = null;
        java.io.File file89 = explodedArchive85.getManifestFile(file88);
        fileEntryIterator64.root = file89;
        explodedArchive58.root = file89;
        int int92 = entryComparator35.compare(file54, file89);
        java.io.File file93 = explodedArchive13.getManifestFile(file54);
        java.io.File file94 = explodedArchive7.getManifestFile(file54);
        fileEntryIterator0.current = file94;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive96 = new org.springframework.boot.loader.archive.ExplodedArchive(file94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "exploded archive" + "'", str16, "exploded archive");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "exploded archive" + "'", str19, "exploded archive");
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNotNull(fileItorQueue81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNotNull(fileComparator83);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNull(file87);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(file93);
        org.junit.Assert.assertEquals(file93.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file93.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file94);
        org.junit.Assert.assertEquals(file94.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file94.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URL uRL34 = null;
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler36);
        java.lang.String str38 = uRL37.getHost();
        java.lang.String str39 = uRL37.getAuthority();
        java.lang.String str40 = uRL37.getAuthority();
        java.lang.String str41 = uRL37.getFile();
        int int42 = uRL37.getPort();
        java.lang.String str43 = uRL37.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL37, "hi!");
        boolean boolean46 = uRL3.sameFile(uRL45);
        java.lang.String str47 = uRL45.getPath();
        int int48 = uRL45.getDefaultPort();
        java.net.Proxy proxy49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection50 = uRL45.openConnection(proxy49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str41, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str47, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getQuery();
        java.net.URI uRI16 = uRL14.toURI();
        java.lang.String str17 = uRL14.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(uRI16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.toExternalForm();
        java.lang.String str10 = uRL3.getPath();
        java.lang.Class[] classArray11 = new java.lang.Class[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = uRL3.getContent(classArray11);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(classArray11);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getRef();
        java.lang.String str7 = uRL3.getHost();
        java.lang.String str8 = uRL3.getFile();
        int int9 = uRL3.getPort();
        java.lang.Class[] classArray10 = new java.lang.Class[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = uRL3.getContent(classArray10);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(classArray10);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getRef();
        java.lang.String str7 = uRL3.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream8 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        fileEntryIterator21.recursive = true;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator21.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator21.root = file46;
        explodedArchive18.manifestFile = file46;
        fileEntryIterator0.root = file46;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.io.File file52 = fileEntryIterator50.current;
        java.io.File file53 = fileEntryIterator50.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file55 = fileEntryIterator54.current;
        boolean boolean56 = fileEntryIterator54.hasNext();
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator54.entryComparator;
        fileEntryIterator50.entryComparator = fileComparator58;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        fileEntryIterator50.stack = fileItorQueue61;
        fileEntryIterator0.stack = fileItorQueue61;
        fileEntryIterator0.recursive = true;
        java.io.File file66 = fileEntryIterator0.current;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNull(file66);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator5;
        fileEntryIterator0.recursive = false;
        boolean boolean9 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file11 = fileEntryIterator10.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator17.thenComparing(fileComparator25);
        fileEntryIterator10.entryComparator = fileComparator26;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator10.stack;
        boolean boolean29 = fileEntryIterator10.recursive;
        java.io.File file30 = fileEntryIterator10.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.io.File file33 = fileEntryIterator31.current;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator31.stack;
        fileEntryIterator10.stack = fileItorQueue34;
        fileEntryIterator0.stack = fileItorQueue34;
        java.io.File file37 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNull(file37);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.manifestFile;
        java.io.File file4 = explodedArchive2.manifestFile;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive2.getManifestFile(file5);
        fileEntryIterator0.current = file5;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = true;
        java.io.File file13 = fileEntryIterator0.root;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        java.net.URL uRL1 = new java.net.URL("file://exploded archive");
        java.lang.String str2 = uRL1.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL(uRL1, "", uRLStreamHandler4);
        java.lang.String str6 = uRL5.getFile();
        java.net.URLConnection uRLConnection7 = uRL5.openConnection();
        org.junit.Assert.assertEquals(uRL1.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "file" + "'", str2, "file");
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(uRLConnection7);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.manifestFile;
        java.io.File file6 = explodedArchive4.manifestFile;
        java.io.File file7 = null;
        java.io.File file8 = explodedArchive4.getManifestFile(file7);
        fileEntryIterator0.current = file8;
        java.io.File file10 = fileEntryIterator0.root;
        java.io.File file11 = fileEntryIterator0.current;
        java.io.File file12 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "hi!", (int) (byte) 1, "file://exploded archive:0", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean5 = explodedArchive4.recursive;
        java.io.File file6 = explodedArchive4.manifestFile;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive4.manifest = manifest7;
        java.io.File file9 = explodedArchive4.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.io.File file13 = fileEntryIterator10.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator10.current = file18;
        explodedArchive4.root = file18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file22 = fileEntry21.getFile();
        java.io.File file23 = fileEntry21.file;
        fileEntry21.name = "";
        java.lang.String str26 = fileEntry21.name;
        java.io.File file27 = fileEntry21.file;
        java.io.File file28 = fileEntry21.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file35 = fileEntry34.getFile();
        java.lang.String str36 = fileEntry34.name;
        java.io.File file37 = fileEntry34.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        boolean boolean40 = fileEntryIterator38.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file42 = explodedArchive41.manifestFile;
        java.io.File file43 = explodedArchive41.manifestFile;
        java.io.File file44 = null;
        java.io.File file45 = explodedArchive41.getManifestFile(file44);
        boolean boolean46 = explodedArchive41.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        fileEntryIterator47.recursive = true;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator47.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.util.Comparator<java.io.File> fileComparator61 = fileComparator57.thenComparing(fileComparator60);
        fileEntryIterator52.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator57.thenComparing(fileComparator65);
        fileEntryIterator47.entryComparator = fileComparator66;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.manifestFile;
        java.io.File file70 = explodedArchive68.manifestFile;
        java.io.File file71 = null;
        java.io.File file72 = explodedArchive68.getManifestFile(file71);
        fileEntryIterator47.root = file72;
        explodedArchive41.root = file72;
        java.util.Iterator<java.io.File> fileItor75 = fileEntryIterator38.listFiles(file72);
        fileEntry34.file = file72;
        explodedArchive29.manifestFile = file72;
        fileEntry21.file = file72;
        explodedArchive4.root = file72;
        fileEntryIterator0.current = file72;
        java.lang.Class<?> wildcardClass81 = fileEntryIterator0.getClass();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor75);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file6 = fileEntry5.getFile();
        java.lang.String str7 = fileEntry5.name;
        java.io.File file8 = fileEntry5.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        boolean boolean11 = fileEntryIterator9.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        boolean boolean17 = explodedArchive12.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        fileEntryIterator18.root = file43;
        explodedArchive12.root = file43;
        java.util.Iterator<java.io.File> fileItor46 = fileEntryIterator9.listFiles(file43);
        fileEntry5.file = file43;
        explodedArchive0.manifestFile = file43;
        java.util.jar.Manifest manifest49 = explodedArchive0.getManifest();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL50 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor46);
        org.junit.Assert.assertNull(manifest49);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        java.net.URL uRL84 = null;
        java.net.URLStreamHandler uRLStreamHandler86 = null;
        java.net.URL uRL87 = new java.net.URL(uRL84, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler86);
        java.lang.String str88 = uRL87.getHost();
        java.lang.String str89 = uRL87.getAuthority();
        java.lang.String str90 = uRL87.getQuery();
        int int91 = uRL87.getDefaultPort();
        int int92 = uRL87.getPort();
        boolean boolean93 = uRL82.sameFile(uRL87);
        java.net.URLStreamHandler uRLStreamHandler95 = null;
        java.net.URL uRL96 = new java.net.URL(uRL87, "file", uRLStreamHandler95);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream97 = uRL96.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals(uRL87.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals(uRL96.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        fileEntryIterator0.root = file6;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.io.File file12 = null;
        java.io.File file13 = explodedArchive9.getManifestFile(file12);
        java.util.Iterator<java.io.File> fileItor14 = fileEntryIterator0.listFiles(file13);
        java.io.File file15 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor14);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file6;
        java.io.File file9 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest10 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor44 = explodedArchive0.iterator();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive0.getNestedArchives(entryFilter45);
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator47 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest48 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor44);
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertNotNull(entrySpliterator47);
        org.junit.Assert.assertNull(manifest48);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest32 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest33 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest34 = explodedArchive0.getManifest();
        java.io.File file35 = explodedArchive0.root;
        java.io.File file36 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive0.getNestedArchives(entryFilter37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL3, "", uRLStreamHandler9);
        java.lang.String str11 = uRL3.getRef();
        java.lang.String str12 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.net.URL uRL9 = new java.net.URL(uRL3, "exploded archive");
        java.lang.String str10 = uRL3.getAuthority();
        java.lang.String str11 = uRL3.toExternalForm();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        java.lang.String str20 = uRL15.getAuthority();
        java.net.URL uRL22 = new java.net.URL(uRL15, "");
        boolean boolean23 = uRL3.sameFile(uRL22);
        java.lang.String str24 = uRL3.getHost();
        int int25 = uRL3.getDefaultPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "exploded archive", (int) (byte) -1, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        int int8 = uRL3.getPort();
        java.net.Proxy proxy9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection10 = uRL3.openConnection(proxy9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.net.URL uRL8 = null;
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getHost();
        java.net.URI uRI13 = uRL11.toURI();
        java.lang.String str14 = uRL11.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL11, "file", uRLStreamHandler16);
        java.lang.String str18 = uRL11.getFile();
        int int19 = uRL11.getPort();
        java.lang.String str20 = uRL11.toExternalForm();
        boolean boolean21 = uRL3.sameFile(uRL11);
        java.net.URLConnection uRLConnection22 = uRL11.openConnection();
        java.net.URL uRL24 = new java.net.URL(uRL11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(uRI13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str18, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str20, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(uRLConnection22);
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getRef();
        int int7 = uRL3.getDefaultPort();
        java.net.URL uRL9 = new java.net.URL(uRL3, "");
        java.net.URLStreamHandler uRLStreamHandler11 = null;
        java.net.URL uRL12 = new java.net.URL(uRL9, "file", uRLStreamHandler11);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream13 = uRL9.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        boolean boolean4 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.lang.String str71 = uRL69.getHost();
        java.net.URL uRL73 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream74 = uRL69.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals(uRL73.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean6 = explodedArchive5.recursive;
        boolean boolean7 = explodedArchive5.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        explodedArchive5.root = file12;
        fileEntryIterator0.root = file12;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator20.thenComparing(fileComparator28);
        fileEntryIterator0.entryComparator = fileComparator29;
        java.io.File file31 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNull(file31);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        boolean boolean41 = explodedArchive0.recursive;
        java.lang.String str42 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file44 = fileEntry43.getFile();
        java.io.File file45 = fileEntry43.file;
        java.io.File file46 = null;
        fileEntry43.file = file46;
        java.lang.String str48 = fileEntry43.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file50 = fileEntryIterator49.current;
        java.io.File file51 = null;
        fileEntryIterator49.current = file51;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean54 = explodedArchive53.recursive;
        java.io.File file55 = explodedArchive53.manifestFile;
        java.util.jar.Manifest manifest56 = null;
        explodedArchive53.manifest = manifest56;
        java.io.File file58 = explodedArchive53.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.io.File file62 = fileEntryIterator59.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.manifestFile;
        java.io.File file65 = explodedArchive63.manifestFile;
        java.io.File file66 = null;
        java.io.File file67 = explodedArchive63.getManifestFile(file66);
        fileEntryIterator59.current = file67;
        explodedArchive53.root = file67;
        fileEntryIterator49.root = file67;
        fileEntry43.file = file67;
        fileEntry43.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        fileEntry43.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive76 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str42, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getAuthority();
        java.lang.String str14 = uRL11.toExternalForm();
        java.lang.String str15 = uRL11.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str15, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.lang.String str71 = uRL69.getAuthority();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream72 = uRL69.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "";
        java.io.File file5 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean7 = explodedArchive6.recursive;
        boolean boolean8 = explodedArchive6.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.io.File file12 = null;
        java.io.File file13 = explodedArchive9.getManifestFile(file12);
        explodedArchive6.root = file13;
        explodedArchive6.recursive = false;
        java.io.File file17 = explodedArchive6.root;
        fileEntry0.file = file17;
        java.io.File file19 = fileEntry0.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", (int) (short) 100, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getRef();
        java.net.URL uRL7 = null;
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL7, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler9);
        java.lang.String str11 = uRL10.getHost();
        java.lang.String str12 = uRL10.getAuthority();
        java.lang.String str13 = uRL10.getAuthority();
        java.lang.String str14 = uRL10.getFile();
        int int15 = uRL10.getPort();
        java.lang.String str16 = uRL10.getRef();
        java.net.URL uRL18 = new java.net.URL(uRL10, "hi!");
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL(uRL18, "", uRLStreamHandler20);
        boolean boolean22 = uRL3.sameFile(uRL18);
        java.lang.String str23 = uRL18.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = uRL18.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL18.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL21.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.net.URI uRI19 = uRL17.toURI();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream20 = uRL17.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(uRI19);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator0.stack;
        boolean boolean19 = fileEntryIterator0.recursive;
        java.io.File file20 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.io.File file23 = fileEntryIterator21.current;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator21.stack;
        fileEntryIterator0.stack = fileItorQueue24;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator32.thenComparing(fileComparator35);
        fileEntryIterator27.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator32.thenComparing((java.util.Comparator<java.io.File>) entryComparator38);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        java.util.Comparator<java.io.File> fileComparator49 = fileComparator45.thenComparing(fileComparator48);
        java.util.Comparator<java.io.File> fileComparator50 = fileComparator42.thenComparing(fileComparator48);
        java.util.Comparator<java.io.File> fileComparator51 = entryComparator38.thenComparing(fileComparator50);
        java.util.Comparator<java.io.File> fileComparator52 = entryComparator38.reversed();
        java.util.Comparator<java.io.File> fileComparator53 = fileComparator52.reversed();
        java.util.Comparator<java.io.File> fileComparator54 = fileComparator26.thenComparing(fileComparator53);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator60.thenComparing(fileComparator63);
        fileEntryIterator55.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator60.thenComparing(fileComparator68);
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator68.reversed();
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator70.reversed();
        java.util.Comparator<java.io.File> fileComparator72 = fileComparator71.reversed();
        java.util.Comparator<java.io.File> fileComparator73 = fileComparator54.thenComparing(fileComparator71);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileComparator73);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.lang.String str34 = uRL30.getFile();
        java.net.URL uRL35 = null;
        java.net.URLStreamHandler uRLStreamHandler37 = null;
        java.net.URL uRL38 = new java.net.URL(uRL35, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler37);
        java.lang.String str39 = uRL38.getProtocol();
        java.lang.String str40 = uRL38.getUserInfo();
        java.net.URL uRL41 = null;
        java.net.URLStreamHandler uRLStreamHandler43 = null;
        java.net.URL uRL44 = new java.net.URL(uRL41, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler43);
        java.lang.String str45 = uRL44.getHost();
        java.lang.String str46 = uRL44.getAuthority();
        java.lang.String str47 = uRL44.getQuery();
        int int48 = uRL44.getDefaultPort();
        java.lang.String str49 = uRL44.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler51 = null;
        java.net.URL uRL52 = new java.net.URL(uRL44, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler51);
        boolean boolean53 = uRL38.sameFile(uRL52);
        java.net.URI uRI54 = uRL38.toURI();
        java.lang.String str55 = uRL38.toExternalForm();
        boolean boolean56 = uRL30.equals((java.lang.Object) uRL38);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "file" + "'", str39, "file");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals(uRL44.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals(uRL52.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(uRI54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str55, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        java.util.Comparator<java.io.File> fileComparator4 = fileComparator3.reversed();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNotNull(fileComparator4);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest32 = explodedArchive0.manifest;
        java.io.File file33 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        java.net.URL uRL84 = null;
        java.net.URLStreamHandler uRLStreamHandler86 = null;
        java.net.URL uRL87 = new java.net.URL(uRL84, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler86);
        java.lang.String str88 = uRL87.getHost();
        java.lang.String str89 = uRL87.getAuthority();
        java.lang.String str90 = uRL87.getQuery();
        int int91 = uRL87.getDefaultPort();
        int int92 = uRL87.getPort();
        boolean boolean93 = uRL82.sameFile(uRL87);
        java.lang.String str94 = uRL87.getPath();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals(uRL87.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str94, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getProtocol();
        java.lang.String str9 = uRL3.getHost();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file" + "'", str8, "file");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        java.net.URL uRL1 = new java.net.URL("file://exploded archive");
        java.lang.String str2 = uRL1.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL(uRL1, "", uRLStreamHandler4);
        java.lang.String str6 = uRL5.getRef();
        java.lang.String str7 = uRL5.getUserInfo();
        org.junit.Assert.assertEquals(uRL1.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "file" + "'", str2, "file");
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file://exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", 0, "", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.lang.String str2 = fileEntry0.getName();
        java.io.File file3 = fileEntry0.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry4.name = "exploded archive";
        java.lang.String str7 = fileEntry4.getName();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        fileEntryIterator11.recursive = true;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        fileEntryIterator16.entryComparator = fileComparator21;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator21.thenComparing(fileComparator29);
        fileEntryIterator11.entryComparator = fileComparator30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        fileEntryIterator11.root = file36;
        explodedArchive8.manifestFile = file36;
        java.util.jar.Manifest manifest39 = explodedArchive8.manifest;
        java.util.jar.Manifest manifest40 = explodedArchive8.manifest;
        java.util.jar.Manifest manifest41 = explodedArchive8.getManifest();
        java.util.jar.Manifest manifest42 = explodedArchive8.getManifest();
        java.io.File file43 = explodedArchive8.root;
        java.io.File file44 = explodedArchive8.manifestFile;
        java.io.File file45 = explodedArchive8.manifestFile;
        fileEntry4.file = file45;
        fileEntry0.file = file45;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.util.Comparator<java.io.File> fileComparator9 = fileComparator5.thenComparing(fileComparator8);
        java.util.Comparator<java.io.File> fileComparator10 = fileComparator2.thenComparing(fileComparator8);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator16.thenComparing((java.util.Comparator<java.io.File>) entryComparator22);
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator10.thenComparing((java.util.Comparator<java.io.File>) entryComparator22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file26 = fileEntryIterator25.current;
        java.io.File file27 = fileEntryIterator25.poll();
        java.io.File file28 = fileEntryIterator25.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        java.util.Comparator<java.io.File> fileComparator38 = fileComparator34.thenComparing(fileComparator37);
        fileEntryIterator29.entryComparator = fileComparator34;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator34.thenComparing((java.util.Comparator<java.io.File>) entryComparator40);
        fileEntryIterator25.entryComparator = entryComparator40;
        java.io.File file43 = fileEntryIterator25.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        boolean boolean46 = fileEntryIterator44.hasNext();
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator53.thenComparing(fileComparator56);
        fileEntryIterator48.entryComparator = fileComparator53;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator60 = fileComparator53.thenComparing((java.util.Comparator<java.io.File>) entryComparator59);
        java.util.Comparator<java.io.File> fileComparator61 = fileComparator47.thenComparing((java.util.Comparator<java.io.File>) entryComparator59);
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator61.reversed();
        fileEntryIterator25.entryComparator = fileComparator61;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file70 = explodedArchive69.manifestFile;
        java.io.File file71 = explodedArchive69.manifestFile;
        java.io.File file72 = null;
        java.io.File file73 = explodedArchive69.getManifestFile(file72);
        fileEntryIterator67.current = file72;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator75.stack;
        java.util.Comparator<java.io.File> fileComparator77 = fileEntryIterator75.entryComparator;
        fileEntryIterator67.entryComparator = fileComparator77;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.util.Comparator<java.io.File> fileComparator81 = fileEntryIterator79.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator82 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue83 = fileEntryIterator82.stack;
        java.util.Comparator<java.io.File> fileComparator84 = fileEntryIterator82.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator85 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue86 = fileEntryIterator85.stack;
        java.util.Comparator<java.io.File> fileComparator87 = fileEntryIterator85.entryComparator;
        java.util.Comparator<java.io.File> fileComparator88 = fileComparator84.thenComparing(fileComparator87);
        fileEntryIterator79.entryComparator = fileComparator84;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator90 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator91 = fileComparator84.thenComparing((java.util.Comparator<java.io.File>) entryComparator90);
        java.util.Comparator<java.io.File> fileComparator92 = fileComparator77.thenComparing(fileComparator84);
        java.util.Comparator<java.io.File> fileComparator93 = fileComparator77.reversed();
        java.util.Comparator<java.io.File> fileComparator94 = fileComparator66.thenComparing(fileComparator77);
        java.util.Comparator<java.io.File> fileComparator95 = fileComparator61.thenComparing(fileComparator94);
        java.util.Comparator<java.io.File> fileComparator96 = fileComparator10.thenComparing(fileComparator94);
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileItorQueue83);
        org.junit.Assert.assertNotNull(fileComparator84);
        org.junit.Assert.assertNotNull(fileItorQueue86);
        org.junit.Assert.assertNotNull(fileComparator87);
        org.junit.Assert.assertNotNull(fileComparator88);
        org.junit.Assert.assertNotNull(fileComparator91);
        org.junit.Assert.assertNotNull(fileComparator92);
        org.junit.Assert.assertNotNull(fileComparator93);
        org.junit.Assert.assertNotNull(fileComparator94);
        org.junit.Assert.assertNotNull(fileComparator95);
        org.junit.Assert.assertNotNull(fileComparator96);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.io.File file4 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file8 = fileEntryIterator7.current;
        java.io.File file9 = fileEntryIterator7.poll();
        java.io.File file10 = fileEntryIterator7.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator7.stack;
        java.io.File file12 = fileEntryIterator7.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.io.File file15 = fileEntryIterator13.current;
        java.io.File file16 = fileEntryIterator13.current;
        fileEntryIterator13.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.manifestFile;
        java.io.File file21 = explodedArchive19.manifestFile;
        java.io.File file22 = null;
        java.io.File file23 = explodedArchive19.getManifestFile(file22);
        fileEntryIterator13.root = file23;
        fileEntryIterator7.root = file23;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean29 = fileEntryIterator28.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean31 = explodedArchive30.recursive;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.util.jar.Manifest manifest33 = null;
        explodedArchive30.manifest = manifest33;
        java.io.File file35 = explodedArchive30.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.io.File file39 = fileEntryIterator36.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        fileEntryIterator36.current = file44;
        explodedArchive30.root = file44;
        fileEntryIterator28.root = file44;
        explodedArchive27.root = file44;
        fileEntryIterator7.root = file44;
        explodedArchive0.manifestFile = file44;
        java.util.jar.Manifest manifest51 = null;
        explodedArchive0.manifest = manifest51;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator53 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
    }
}
