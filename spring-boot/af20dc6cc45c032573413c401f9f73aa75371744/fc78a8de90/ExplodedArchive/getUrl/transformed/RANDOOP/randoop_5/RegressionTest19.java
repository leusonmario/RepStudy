import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest19 {

    public static boolean debug = false;

    @Test
    public void test9501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9501");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        fileEntryIterator0.stack = fileItorQueue3;
        java.io.File file5 = fileEntryIterator0.poll();
        java.io.File file6 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        boolean boolean12 = explodedArchive7.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        fileEntryIterator13.recursive = true;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator23.thenComparing(fileComparator26);
        fileEntryIterator18.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator23.thenComparing(fileComparator31);
        fileEntryIterator13.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator13.root = file38;
        explodedArchive7.root = file38;
        explodedArchive7.recursive = false;
        java.util.jar.Manifest manifest43 = null;
        explodedArchive7.manifest = manifest43;
        java.lang.String str45 = explodedArchive7.toString();
        java.util.jar.Manifest manifest46 = null;
        explodedArchive7.manifest = manifest46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        boolean boolean53 = explodedArchive48.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        fileEntryIterator54.recursive = true;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator54.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        java.util.Comparator<java.io.File> fileComparator68 = fileComparator64.thenComparing(fileComparator67);
        fileEntryIterator59.entryComparator = fileComparator64;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator70.entryComparator;
        java.util.Comparator<java.io.File> fileComparator73 = fileComparator64.thenComparing(fileComparator72);
        fileEntryIterator54.entryComparator = fileComparator73;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file76 = explodedArchive75.manifestFile;
        java.io.File file77 = explodedArchive75.manifestFile;
        java.io.File file78 = null;
        java.io.File file79 = explodedArchive75.getManifestFile(file78);
        fileEntryIterator54.root = file79;
        explodedArchive48.root = file79;
        explodedArchive48.recursive = false;
        java.util.jar.Manifest manifest84 = null;
        explodedArchive48.manifest = manifest84;
        java.lang.String str86 = explodedArchive48.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter87 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList88 = explodedArchive48.getNestedArchives(entryFilter87);
        explodedArchive48.recursive = false;
        explodedArchive48.recursive = true;
        java.io.File file93 = explodedArchive48.root;
        explodedArchive7.manifestFile = file93;
        fileEntryIterator0.current = file93;
        java.io.File file96 = fileEntryIterator0.root;
        java.util.Comparator<java.io.File> fileComparator97 = fileEntryIterator0.entryComparator;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str45, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str86, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList88);
        org.junit.Assert.assertNotNull(file93);
        org.junit.Assert.assertEquals(file93.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file93.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file96);
        org.junit.Assert.assertNotNull(fileComparator97);
    }

    @Test
    public void test9502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9502");
        java.net.URL uRL1 = new java.net.URL("file://exploded archive");
        java.lang.String str2 = uRL1.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL(uRL1, "", uRLStreamHandler4);
        java.lang.String str6 = uRL1.getQuery();
        java.lang.String str7 = uRL1.toExternalForm();
        java.lang.String str8 = uRL1.getAuthority();
        java.lang.String str9 = uRL1.getHost();
        java.net.URLConnection uRLConnection10 = uRL1.openConnection();
        java.lang.String str11 = uRL1.getPath();
        org.junit.Assert.assertEquals(uRL1.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "file" + "'", str2, "file");
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file://exploded archive" + "'", str7, "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "exploded archive" + "'", str9, "exploded archive");
        org.junit.Assert.assertNotNull(uRLConnection10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test9503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9503");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file18 = fileEntry17.getFile();
        java.io.File file19 = fileEntry17.file;
        fileEntry17.name = "";
        java.lang.String str22 = fileEntry17.name;
        java.io.File file23 = fileEntry17.file;
        java.io.File file24 = fileEntry17.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file31 = fileEntry30.getFile();
        java.lang.String str32 = fileEntry30.name;
        java.io.File file33 = fileEntry30.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        boolean boolean36 = fileEntryIterator34.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        boolean boolean42 = explodedArchive37.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        fileEntryIterator43.recursive = true;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator53.thenComparing(fileComparator56);
        fileEntryIterator48.entryComparator = fileComparator53;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator53.thenComparing(fileComparator61);
        fileEntryIterator43.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        fileEntryIterator43.root = file68;
        explodedArchive37.root = file68;
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator34.listFiles(file68);
        fileEntry30.file = file68;
        explodedArchive25.manifestFile = file68;
        fileEntry17.file = file68;
        explodedArchive0.root = file68;
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter78 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList79 = explodedArchive0.getNestedArchives(entryFilter78);
        explodedArchive0.recursive = false;
        java.lang.String str82 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter83 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList84 = explodedArchive0.getNestedArchives(entryFilter83);
        java.net.URL uRL85 = explodedArchive0.getUrl();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor71);
        org.junit.Assert.assertNotNull(archiveList79);
// flaky:         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str82, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList84);
        org.junit.Assert.assertNotNull(uRL85);
// flaky:         org.junit.Assert.assertEquals(uRL85.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9504");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getRef();
        java.net.Proxy proxy8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection9 = uRL3.openConnection(proxy8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test9505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9505");
        java.net.URL uRL0 = null;
        java.net.URL uRL2 = new java.net.URL(uRL0, "file://exploded archive");
        java.lang.String str3 = uRL2.getUserInfo();
        org.junit.Assert.assertEquals(uRL2.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test9506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9506");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "";
        java.io.File file5 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean7 = explodedArchive6.recursive;
        boolean boolean8 = explodedArchive6.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.io.File file12 = null;
        java.io.File file13 = explodedArchive9.getManifestFile(file12);
        explodedArchive6.root = file13;
        explodedArchive6.recursive = false;
        java.io.File file17 = explodedArchive6.root;
        fileEntry0.file = file17;
        java.io.File file19 = fileEntry0.getFile();
        java.io.File file20 = fileEntry0.file;
        java.lang.String str21 = fileEntry0.name;
        java.lang.String str22 = fileEntry0.name;
        java.lang.String str23 = fileEntry0.getName();
        java.io.File file24 = fileEntry0.file;
        boolean boolean25 = fileEntry0.isDirectory();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test9507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9507");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.lang.String str2 = fileEntry0.getName();
        java.io.File file3 = fileEntry0.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry4.name = "exploded archive";
        java.lang.String str7 = fileEntry4.getName();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        fileEntryIterator11.recursive = true;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        fileEntryIterator16.entryComparator = fileComparator21;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator21.thenComparing(fileComparator29);
        fileEntryIterator11.entryComparator = fileComparator30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        fileEntryIterator11.root = file36;
        explodedArchive8.manifestFile = file36;
        java.util.jar.Manifest manifest39 = explodedArchive8.manifest;
        java.util.jar.Manifest manifest40 = explodedArchive8.manifest;
        java.util.jar.Manifest manifest41 = explodedArchive8.getManifest();
        java.util.jar.Manifest manifest42 = explodedArchive8.getManifest();
        java.io.File file43 = explodedArchive8.root;
        java.io.File file44 = explodedArchive8.manifestFile;
        java.io.File file45 = explodedArchive8.manifestFile;
        fileEntry4.file = file45;
        fileEntry0.file = file45;
        java.io.File file48 = fileEntry0.getFile();
        java.io.File file49 = fileEntry0.getFile();
        fileEntry0.name = "file";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9508");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.lang.String str8 = explodedArchive0.toString();
        java.io.File file9 = explodedArchive0.root;
        java.util.jar.Manifest manifest10 = null;
        explodedArchive0.manifest = manifest10;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test9509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9509");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.util.jar.Manifest manifest38 = explodedArchive0.manifest;
        java.io.File file39 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9510");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        boolean boolean41 = explodedArchive39.recursive;
        java.io.File file42 = explodedArchive39.root;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive39.getManifestFile(file43);
        explodedArchive0.manifestFile = file43;
        java.io.File file46 = explodedArchive0.root;
        java.io.File file47 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file49 = fileEntry48.getFile();
        java.io.File file50 = fileEntry48.file;
        fileEntry48.name = "";
        java.io.File file53 = fileEntry48.file;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean55 = explodedArchive54.recursive;
        boolean boolean56 = explodedArchive54.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        explodedArchive54.root = file61;
        explodedArchive54.recursive = false;
        java.io.File file65 = explodedArchive54.root;
        fileEntry48.file = file65;
        java.io.File file67 = fileEntry48.getFile();
        explodedArchive0.root = file67;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest69 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9511");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URL uRL34 = null;
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler36);
        java.lang.String str38 = uRL37.getHost();
        java.lang.String str39 = uRL37.getAuthority();
        java.lang.String str40 = uRL37.getAuthority();
        java.lang.String str41 = uRL37.getFile();
        int int42 = uRL37.getPort();
        java.lang.String str43 = uRL37.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL37, "hi!");
        boolean boolean46 = uRL3.sameFile(uRL45);
        int int47 = uRL3.getDefaultPort();
        java.net.URL uRL48 = null;
        java.net.URLStreamHandler uRLStreamHandler50 = null;
        java.net.URL uRL51 = new java.net.URL(uRL48, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler50);
        java.lang.String str52 = uRL51.getHost();
        int int53 = uRL51.getPort();
        java.net.URLStreamHandler uRLStreamHandler55 = null;
        java.net.URL uRL56 = new java.net.URL(uRL51, "hi!", uRLStreamHandler55);
        java.net.URLConnection uRLConnection57 = uRL56.openConnection();
        boolean boolean58 = uRL3.sameFile(uRL56);
        java.lang.String str59 = uRL3.getRef();
        java.lang.String str60 = uRL3.getRef();
        java.net.URLStreamHandler uRLStreamHandler62 = null;
        java.net.URL uRL63 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler62);
        java.lang.String str64 = uRL3.toExternalForm();
        int int65 = uRL3.getPort();
        int int66 = uRL3.getDefaultPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str41, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals(uRL51.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals(uRL56.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(uRLConnection57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals(uRL63.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str64, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test9512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9512");
        java.net.URL uRL3 = new java.net.URL("file", "", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9513");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.io.File file44 = explodedArchive0.manifestFile;
        boolean boolean45 = explodedArchive0.recursive;
        boolean boolean46 = explodedArchive0.recursive;
        explodedArchive0.recursive = true;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test9514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9514");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.lang.String str2 = uRL1.getUserInfo();
        java.lang.String str3 = uRL1.getPath();
        java.lang.String str4 = uRL1.getPath();
        java.lang.Class<?> wildcardClass5 = uRL1.getClass();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str4, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test9515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9515");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URLStreamHandler uRLStreamHandler74 = null;
        java.net.URL uRL75 = new java.net.URL(uRL72, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler74);
        int int76 = uRL75.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream77 = uRL75.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test9516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9516");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getRef();
        java.net.URL uRL8 = null;
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getHost();
        java.lang.String str13 = uRL11.getAuthority();
        java.lang.String str14 = uRL11.getQuery();
        int int15 = uRL11.getDefaultPort();
        java.lang.String str16 = uRL11.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler18 = null;
        java.net.URL uRL19 = new java.net.URL(uRL11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler18);
        java.lang.String str20 = uRL19.getFile();
        boolean boolean21 = uRL3.sameFile(uRL19);
        java.net.URL uRL22 = null;
        java.net.URLStreamHandler uRLStreamHandler24 = null;
        java.net.URL uRL25 = new java.net.URL(uRL22, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler24);
        java.lang.String str26 = uRL25.getHost();
        java.net.URI uRI27 = uRL25.toURI();
        java.lang.String str28 = uRL25.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler30 = null;
        java.net.URL uRL31 = new java.net.URL(uRL25, "file", uRLStreamHandler30);
        java.net.URLStreamHandler uRLStreamHandler33 = null;
        java.net.URL uRL34 = new java.net.URL(uRL25, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler33);
        boolean boolean35 = uRL19.sameFile(uRL25);
        java.lang.String str36 = uRL19.toExternalForm();
        java.net.URL uRL37 = null;
        java.net.URLStreamHandler uRLStreamHandler39 = null;
        java.net.URL uRL40 = new java.net.URL(uRL37, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler39);
        java.lang.String str41 = uRL40.getHost();
        java.lang.String str42 = uRL40.getAuthority();
        java.lang.String str43 = uRL40.getHost();
        java.lang.String str44 = uRL40.getRef();
        java.lang.String str45 = uRL40.getQuery();
        java.lang.String str46 = uRL40.toExternalForm();
        int int47 = uRL40.getDefaultPort();
        boolean boolean48 = uRL19.sameFile(uRL40);
        java.lang.String str49 = uRL19.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL19.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str20, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(uRI27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str28, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL31.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL34.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str36, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL40.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str46, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str49, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9517");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.lang.String str4 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean6 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean8 = explodedArchive7.recursive;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.util.jar.Manifest manifest10 = null;
        explodedArchive7.manifest = manifest10;
        java.io.File file12 = explodedArchive7.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.io.File file16 = fileEntryIterator13.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.manifestFile;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.io.File file20 = null;
        java.io.File file21 = explodedArchive17.getManifestFile(file20);
        fileEntryIterator13.current = file21;
        explodedArchive7.root = file21;
        fileEntryIterator5.root = file21;
        java.io.File file25 = explodedArchive0.getManifestFile(file21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.io.File file28 = fileEntryIterator26.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.io.File file35 = fileEntryIterator33.current;
        java.io.File file36 = fileEntryIterator33.current;
        fileEntryIterator33.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str40 = fileEntry39.getName();
        fileEntry39.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean44 = explodedArchive43.recursive;
        boolean boolean45 = explodedArchive43.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        explodedArchive43.root = file50;
        fileEntry39.file = file50;
        fileEntryIterator33.root = file50;
        fileEntryIterator33.recursive = true;
        java.io.File file56 = fileEntryIterator33.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str58 = fileEntry57.getName();
        fileEntry57.name = "exploded archive";
        fileEntry57.name = "hi!";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.manifestFile;
        java.io.File file65 = explodedArchive63.manifestFile;
        java.lang.String str66 = explodedArchive63.toString();
        java.lang.String str67 = explodedArchive63.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean69 = fileEntryIterator68.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean71 = explodedArchive70.recursive;
        java.io.File file72 = explodedArchive70.manifestFile;
        java.util.jar.Manifest manifest73 = null;
        explodedArchive70.manifest = manifest73;
        java.io.File file75 = explodedArchive70.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator76 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue77 = fileEntryIterator76.stack;
        java.util.Comparator<java.io.File> fileComparator78 = fileEntryIterator76.entryComparator;
        java.io.File file79 = fileEntryIterator76.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file81 = explodedArchive80.manifestFile;
        java.io.File file82 = explodedArchive80.manifestFile;
        java.io.File file83 = null;
        java.io.File file84 = explodedArchive80.getManifestFile(file83);
        fileEntryIterator76.current = file84;
        explodedArchive70.root = file84;
        fileEntryIterator68.root = file84;
        java.io.File file88 = explodedArchive63.getManifestFile(file84);
        fileEntry57.file = file88;
        fileEntry57.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        java.io.File file92 = fileEntry57.file;
        java.io.File file93 = fileEntry57.file;
        fileEntryIterator33.current = file93;
        java.util.Iterator<java.io.File> fileItor95 = fileEntryIterator26.listFiles(file93);
        explodedArchive0.root = file93;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor97 = explodedArchive0.iterator();
        java.lang.String str98 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "exploded archive" + "'", str66, "exploded archive");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "exploded archive" + "'", str67, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(fileItorQueue77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file93);
        org.junit.Assert.assertEquals(file93.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file93.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor95);
        org.junit.Assert.assertNotNull(entryItor97);
// flaky:         org.junit.Assert.assertEquals("'" + str98 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF/META-INF/MANIFEST.MF" + "'", str98, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9518");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.io.File file3 = fileEntryIterator0.current;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator0.entryComparator;
        java.io.File file7 = fileEntryIterator0.root;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean11 = explodedArchive10.recursive;
        java.io.File file12 = explodedArchive10.root;
        boolean boolean13 = explodedArchive10.recursive;
        java.util.jar.Manifest manifest14 = null;
        explodedArchive10.manifest = manifest14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file17 = fileEntryIterator16.current;
        java.io.File file18 = fileEntryIterator16.poll();
        java.io.File file19 = fileEntryIterator16.poll();
        java.io.File file20 = fileEntryIterator16.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file22 = fileEntry21.getFile();
        java.io.File file23 = fileEntry21.file;
        java.io.File file24 = null;
        fileEntry21.file = file24;
        java.lang.String str26 = fileEntry21.getName();
        java.io.File file27 = fileEntry21.getFile();
        java.io.File file28 = fileEntry21.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        fileEntryIterator29.recursive = true;
        java.io.File file33 = fileEntryIterator29.poll();
        fileEntryIterator29.recursive = true;
        boolean boolean36 = fileEntryIterator29.recursive;
        boolean boolean37 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.io.File file40 = fileEntryIterator38.current;
        java.io.File file41 = fileEntryIterator38.current;
        fileEntryIterator38.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        fileEntryIterator38.root = file48;
        java.util.Iterator<java.io.File> fileItor50 = fileEntryIterator29.listFiles(file48);
        fileEntry21.file = file48;
        java.io.File file52 = fileEntry21.file;
        fileEntryIterator16.current = file52;
        java.io.File file54 = explodedArchive10.getManifestFile(file52);
        fileEntryIterator0.current = file54;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator0.entryComparator;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator56);
    }

    @Test
    public void test9519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9519");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator0.stack = fileItorQueue8;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        fileEntryIterator13.recursive = true;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator23.thenComparing(fileComparator26);
        fileEntryIterator18.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator23.thenComparing(fileComparator31);
        fileEntryIterator13.entryComparator = fileComparator32;
        fileEntryIterator13.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        java.util.Comparator<java.io.File> fileComparator45 = fileComparator41.thenComparing(fileComparator44);
        fileEntryIterator36.entryComparator = fileComparator41;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        java.util.Comparator<java.io.File> fileComparator50 = fileComparator41.thenComparing(fileComparator49);
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator49.reversed();
        fileEntryIterator13.entryComparator = fileComparator49;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        fileEntryIterator53.recursive = true;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator63.thenComparing(fileComparator66);
        fileEntryIterator58.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        java.util.Comparator<java.io.File> fileComparator72 = fileComparator63.thenComparing(fileComparator71);
        fileEntryIterator53.entryComparator = fileComparator72;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file75 = explodedArchive74.manifestFile;
        java.io.File file76 = explodedArchive74.manifestFile;
        java.io.File file77 = null;
        java.io.File file78 = explodedArchive74.getManifestFile(file77);
        fileEntryIterator53.root = file78;
        java.util.Iterator<java.io.File> fileItor80 = fileEntryIterator13.listFiles(file78);
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue81 = fileEntryIterator13.stack;
        fileEntryIterator0.stack = fileItorQueue81;
        fileEntryIterator0.recursive = false;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor80);
        org.junit.Assert.assertNotNull(fileItorQueue81);
    }

    @Test
    public void test9520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9520");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        int int9 = uRL3.getPort();
        java.lang.String str10 = uRL3.getQuery();
        java.lang.String str11 = uRL3.getUserInfo();
        int int12 = uRL3.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean15 = fileEntryIterator14.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean17 = explodedArchive16.recursive;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.util.jar.Manifest manifest19 = null;
        explodedArchive16.manifest = manifest19;
        java.io.File file21 = explodedArchive16.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.io.File file25 = fileEntryIterator22.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.manifestFile;
        java.io.File file28 = explodedArchive26.manifestFile;
        java.io.File file29 = null;
        java.io.File file30 = explodedArchive26.getManifestFile(file29);
        fileEntryIterator22.current = file30;
        explodedArchive16.root = file30;
        fileEntryIterator14.root = file30;
        explodedArchive13.root = file30;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator35 = explodedArchive13.spliterator();
        java.io.File file36 = explodedArchive13.root;
        java.util.jar.Manifest manifest37 = explodedArchive13.manifest;
        java.net.URL uRL38 = explodedArchive13.getUrl();
        java.lang.String str39 = uRL38.getPath();
        java.lang.String str40 = uRL38.getProtocol();
        boolean boolean41 = uRL3.equals((java.lang.Object) str40);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "file" + "'", str40, "file");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test9521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9521");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest25 = explodedArchive0.manifest;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor26 = explodedArchive0.iterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator27 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest28 = explodedArchive0.manifest;
        java.io.File file29 = explodedArchive0.manifestFile;
        java.net.URL uRL30 = explodedArchive0.getUrl();
        boolean boolean31 = explodedArchive0.recursive;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNotNull(entryItor26);
        org.junit.Assert.assertNotNull(entrySpliterator27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(uRL30);
// flaky:         org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test9522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9522");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URLConnection uRLConnection12 = uRL3.openConnection();
        java.net.URL uRL14 = new java.net.URL(uRL3, "file://filefile://exploded archive:0");
        java.lang.String str15 = uRL3.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(uRLConnection12);
        org.junit.Assert.assertEquals(uRL14.toString(), "file://filefile://exploded archive:0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str15, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9523");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.lang.String str2 = fileEntry0.name;
        fileEntry0.name = "hi!:10";
        java.lang.String str5 = fileEntry0.getName();
        java.io.File file6 = fileEntry0.file;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:10" + "'", str5, "hi!:10");
        org.junit.Assert.assertNull(file6);
    }

    @Test
    public void test9524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9524");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        boolean boolean8 = fileEntryIterator6.hasNext();
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator15.thenComparing(fileComparator18);
        fileEntryIterator10.entryComparator = fileComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator15.thenComparing((java.util.Comparator<java.io.File>) entryComparator21);
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean25 = fileEntryIterator24.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        java.io.File file28 = explodedArchive26.manifestFile;
        java.util.jar.Manifest manifest29 = null;
        explodedArchive26.manifest = manifest29;
        java.io.File file31 = explodedArchive26.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.io.File file35 = fileEntryIterator32.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.manifestFile;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.io.File file39 = null;
        java.io.File file40 = explodedArchive36.getManifestFile(file39);
        fileEntryIterator32.current = file40;
        explodedArchive26.root = file40;
        fileEntryIterator24.root = file40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        boolean boolean49 = explodedArchive44.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator60.thenComparing(fileComparator63);
        fileEntryIterator55.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator60.thenComparing(fileComparator68);
        fileEntryIterator50.entryComparator = fileComparator69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.io.File file74 = null;
        java.io.File file75 = explodedArchive71.getManifestFile(file74);
        fileEntryIterator50.root = file75;
        explodedArchive44.root = file75;
        int int78 = entryComparator21.compare(file40, file75);
        fileEntry0.file = file75;
        java.lang.String str80 = fileEntry0.getName();
        java.lang.String str81 = fileEntry0.getName();
        java.lang.String str82 = fileEntry0.name;
        java.io.File file83 = fileEntry0.getFile();
        java.lang.String str84 = fileEntry0.getName();
        java.io.File file85 = fileEntry0.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = new org.springframework.boot.loader.archive.ExplodedArchive(file85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9525");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator38 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest39 = null;
        explodedArchive0.manifest = manifest39;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor41 = explodedArchive0.iterator();
        java.net.URL uRL42 = explodedArchive0.getUrl();
        java.net.URL uRL43 = explodedArchive0.getUrl();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(entrySpliterator38);
        org.junit.Assert.assertNotNull(entryItor41);
        org.junit.Assert.assertNotNull(uRL42);
// flaky:         org.junit.Assert.assertEquals(uRL42.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL43);
// flaky:         org.junit.Assert.assertEquals(uRL43.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9526");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.lang.String str44 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator45 = explodedArchive0.spliterator();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive0.getNestedArchives(entryFilter46);
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest50 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive0.getNestedArchives(entryFilter51);
        java.lang.String str53 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator54 = explodedArchive0.spliterator();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str44, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertNotNull(archiveList52);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str53, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator54);
    }

    @Test
    public void test9527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9527");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        java.net.URLConnection uRLConnection15 = uRL11.openConnection();
        java.net.URL uRL17 = new java.net.URL(uRL11, "file://exploded archive");
        java.lang.String str18 = uRL17.getPath();
        java.net.URL uRL20 = new java.net.URL(uRL17, "exploded archive");
        java.lang.String str21 = uRL20.getRef();
        java.lang.String str22 = uRL20.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertNotNull(uRLConnection15);
        org.junit.Assert.assertEquals(uRL17.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals(uRL20.toString(), "file://exploded archive/exploded archive");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/exploded archive" + "'", str22, "/exploded archive");
    }

    @Test
    public void test9528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9528");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        java.lang.String str7 = uRL3.getUserInfo();
        java.lang.String str8 = uRL3.getFile();
        java.lang.String str9 = uRL3.getQuery();
        java.lang.String str10 = uRL3.getProtocol();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file" + "'", str10, "file");
    }

    @Test
    public void test9529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9529");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive:0", "file://exploded archive:0/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", (int) ' ', "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test9530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9530");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.manifestFile;
        java.lang.String str4 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.manifestFile;
        java.io.File file7 = explodedArchive5.manifestFile;
        java.io.File file8 = null;
        java.io.File file9 = explodedArchive5.getManifestFile(file8);
        boolean boolean10 = explodedArchive5.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        fileEntryIterator11.recursive = true;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        fileEntryIterator16.entryComparator = fileComparator21;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator21.thenComparing(fileComparator29);
        fileEntryIterator11.entryComparator = fileComparator30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        fileEntryIterator11.root = file36;
        explodedArchive5.root = file36;
        explodedArchive5.recursive = false;
        java.util.jar.Manifest manifest41 = null;
        explodedArchive5.manifest = manifest41;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file44 = fileEntryIterator43.current;
        java.io.File file45 = fileEntryIterator43.poll();
        java.io.File file46 = fileEntryIterator43.poll();
        java.io.File file47 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.io.File file50 = fileEntryIterator48.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        fileEntryIterator48.root = file54;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        java.util.Iterator<java.io.File> fileItor62 = fileEntryIterator48.listFiles(file61);
        fileEntryIterator43.root = file61;
        explodedArchive5.root = file61;
        explodedArchive5.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean68 = explodedArchive67.recursive;
        boolean boolean69 = explodedArchive67.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file71 = explodedArchive70.manifestFile;
        java.io.File file72 = explodedArchive70.manifestFile;
        java.io.File file73 = null;
        java.io.File file74 = explodedArchive70.getManifestFile(file73);
        explodedArchive67.root = file74;
        explodedArchive67.recursive = false;
        java.io.File file78 = explodedArchive67.root;
        java.io.File file79 = explodedArchive5.getManifestFile(file78);
        explodedArchive0.root = file78;
        java.util.jar.Manifest manifest81 = explodedArchive0.manifest;
        java.lang.String str82 = explodedArchive0.toString();
        java.io.File file83 = explodedArchive0.root;
        java.io.File file84 = explodedArchive0.manifestFile;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest81);
// flaky:         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str82, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file84);
    }

    @Test
    public void test9531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9531");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = null;
        fileEntryIterator6.current = file8;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean11 = explodedArchive10.recursive;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.util.jar.Manifest manifest13 = null;
        explodedArchive10.manifest = manifest13;
        java.io.File file15 = explodedArchive10.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.io.File file19 = fileEntryIterator16.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        fileEntryIterator16.current = file24;
        explodedArchive10.root = file24;
        fileEntryIterator6.root = file24;
        fileEntry0.file = file24;
        java.io.File file29 = fileEntry0.getFile();
        java.io.File file30 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file32 = fileEntryIterator31.current;
        java.io.File file33 = fileEntryIterator31.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file35 = fileEntryIterator34.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        java.util.Comparator<java.io.File> fileComparator45 = fileComparator41.thenComparing(fileComparator44);
        fileEntryIterator36.entryComparator = fileComparator41;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        java.util.Comparator<java.io.File> fileComparator50 = fileComparator41.thenComparing(fileComparator49);
        fileEntryIterator34.entryComparator = fileComparator50;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator34.stack;
        fileEntryIterator31.stack = fileItorQueue52;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file55 = fileEntryIterator54.current;
        java.io.File file56 = fileEntryIterator54.poll();
        java.io.File file57 = fileEntryIterator54.poll();
        java.io.File file58 = fileEntryIterator54.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.io.File file61 = fileEntryIterator59.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        fileEntryIterator59.root = file65;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.manifestFile;
        java.io.File file70 = explodedArchive68.manifestFile;
        java.io.File file71 = null;
        java.io.File file72 = explodedArchive68.getManifestFile(file71);
        java.util.Iterator<java.io.File> fileItor73 = fileEntryIterator59.listFiles(file72);
        fileEntryIterator54.root = file72;
        java.util.Iterator<java.io.File> fileItor75 = fileEntryIterator31.listFiles(file72);
        fileEntry0.file = file72;
        fileEntry0.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file";
        java.io.File file79 = fileEntry0.getFile();
        java.io.File file80 = fileEntry0.file;
        java.lang.String str81 = fileEntry0.name;
        java.lang.String str82 = fileEntry0.getName();
        java.io.File file83 = fileEntry0.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor73);
        org.junit.Assert.assertNotNull(fileItor75);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str81, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str82, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9532");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = fileEntry0.file;
        java.io.File file4 = fileEntry0.file;
        java.lang.String str5 = fileEntry0.name;
        java.io.File file6 = fileEntry0.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        boolean boolean12 = explodedArchive7.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        fileEntryIterator13.recursive = true;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator23.thenComparing(fileComparator26);
        fileEntryIterator18.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator23.thenComparing(fileComparator31);
        fileEntryIterator13.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator13.root = file38;
        explodedArchive7.root = file38;
        explodedArchive7.recursive = false;
        java.util.jar.Manifest manifest43 = null;
        explodedArchive7.manifest = manifest43;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file46 = fileEntryIterator45.current;
        java.io.File file47 = fileEntryIterator45.poll();
        java.io.File file48 = fileEntryIterator45.poll();
        java.io.File file49 = fileEntryIterator45.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.io.File file52 = fileEntryIterator50.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file54 = explodedArchive53.manifestFile;
        java.io.File file55 = explodedArchive53.manifestFile;
        java.io.File file56 = null;
        java.io.File file57 = explodedArchive53.getManifestFile(file56);
        fileEntryIterator50.root = file56;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        java.util.Iterator<java.io.File> fileItor64 = fileEntryIterator50.listFiles(file63);
        fileEntryIterator45.root = file63;
        explodedArchive7.root = file63;
        java.io.File file67 = explodedArchive7.root;
        fileEntry0.file = file67;
        java.lang.String str69 = fileEntry0.name;
        fileEntry0.name = "file://exploded archive";
        java.io.File file72 = fileEntry0.file;
        boolean boolean73 = fileEntry0.isDirectory();
        java.io.File file74 = fileEntry0.file;
        java.io.File file75 = fileEntry0.getFile();
        java.io.File file76 = fileEntry0.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor64);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9533");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLConnection uRLConnection9 = uRL3.openConnection();
        java.net.URI uRI10 = uRL3.toURI();
        java.lang.String str11 = uRL3.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(uRLConnection9);
        org.junit.Assert.assertNotNull(uRI10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9534");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.io.File file25 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest26 = null;
        explodedArchive0.manifest = manifest26;
        java.io.File file28 = explodedArchive0.root;
        java.util.jar.Manifest manifest29 = explodedArchive0.manifest;
        java.lang.String str30 = explodedArchive0.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest29);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str30, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9535");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive0.getManifestFile(file6);
        java.lang.String str8 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
    }

    @Test
    public void test9536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9536");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive0.manifest = manifest31;
        boolean boolean33 = explodedArchive0.recursive;
        java.io.File file34 = explodedArchive0.root;
        java.lang.String str35 = explodedArchive0.toString();
        java.io.File file36 = explodedArchive0.manifestFile;
        java.io.File file37 = explodedArchive0.root;
        java.util.jar.Manifest manifest38 = explodedArchive0.getManifest();
        java.io.File file39 = explodedArchive0.root;
        java.lang.String str40 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "exploded archive" + "'", str35, "exploded archive");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(manifest38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "exploded archive" + "'", str40, "exploded archive");
    }

    @Test
    public void test9537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9537");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.lang.String str73 = uRL69.getUserInfo();
        java.net.URLConnection uRLConnection74 = uRL69.openConnection();
        int int75 = uRL69.getDefaultPort();
        int int76 = uRL69.getDefaultPort();
        java.net.URL uRL78 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        java.lang.String str79 = uRL69.getPath();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(uRLConnection74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
// flaky:         org.junit.Assert.assertEquals("'" + str79 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str79, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9538");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file7;
        explodedArchive0.recursive = false;
        java.io.File file11 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.net.URL uRL14 = explodedArchive0.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.manifestFile;
        java.io.File file17 = explodedArchive15.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        fileEntryIterator18.root = file43;
        explodedArchive15.manifestFile = file43;
        java.util.jar.Manifest manifest46 = explodedArchive15.manifest;
        boolean boolean47 = explodedArchive15.recursive;
        java.util.jar.Manifest manifest48 = explodedArchive15.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file50 = fileEntryIterator49.current;
        java.io.File file51 = fileEntryIterator49.poll();
        java.io.File file52 = fileEntryIterator49.poll();
        java.io.File file53 = fileEntryIterator49.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.io.File file56 = fileEntryIterator54.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        fileEntryIterator54.root = file60;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.manifestFile;
        java.io.File file65 = explodedArchive63.manifestFile;
        java.io.File file66 = null;
        java.io.File file67 = explodedArchive63.getManifestFile(file66);
        java.util.Iterator<java.io.File> fileItor68 = fileEntryIterator54.listFiles(file67);
        fileEntryIterator49.root = file67;
        explodedArchive15.manifestFile = file67;
        explodedArchive0.manifestFile = file67;
        boolean boolean72 = explodedArchive0.recursive;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor73 = explodedArchive0.iterator();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL14);
// flaky:         org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(entryItor73);
    }

    @Test
    public void test9539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9539");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getPath();
        java.lang.String str10 = uRL3.toExternalForm();
        java.net.URL uRL12 = new java.net.URL(uRL3, "file://exploded archive:0");
        java.lang.String str13 = uRL3.toExternalForm();
        java.lang.Class<?> wildcardClass14 = uRL3.getClass();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL12.toString(), "file://exploded archive:0");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test9540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9540");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URL uRL10 = new java.net.URL(uRL3, "");
        java.lang.String str11 = uRL3.getUserInfo();
        java.lang.String str12 = uRL3.toExternalForm();
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:100");
        java.net.URI uRI15 = uRL3.toURI();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/100");
        org.junit.Assert.assertNotNull(uRI15);
    }

    @Test
    public void test9541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9541");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        fileEntryIterator0.root = file6;
        boolean boolean9 = fileEntryIterator0.recursive;
        java.io.File file10 = fileEntryIterator0.current;
        java.io.File file11 = fileEntryIterator0.poll();
        boolean boolean12 = fileEntryIterator0.recursive;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test9542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9542");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        java.lang.String str7 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean10 = fileEntryIterator9.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean12 = explodedArchive11.recursive;
        java.io.File file13 = explodedArchive11.manifestFile;
        java.util.jar.Manifest manifest14 = null;
        explodedArchive11.manifest = manifest14;
        java.io.File file16 = explodedArchive11.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.io.File file20 = fileEntryIterator17.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.manifestFile;
        java.io.File file23 = explodedArchive21.manifestFile;
        java.io.File file24 = null;
        java.io.File file25 = explodedArchive21.getManifestFile(file24);
        fileEntryIterator17.current = file25;
        explodedArchive11.root = file25;
        fileEntryIterator9.root = file25;
        explodedArchive8.root = file25;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator30 = explodedArchive8.spliterator();
        java.io.File file31 = explodedArchive8.root;
        java.util.jar.Manifest manifest32 = explodedArchive8.manifest;
        java.io.File file33 = explodedArchive8.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file35 = fileEntryIterator34.current;
        java.io.File file36 = null;
        fileEntryIterator34.current = file36;
        java.io.File file38 = fileEntryIterator34.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file40 = fileEntry39.getFile();
        java.lang.String str41 = fileEntry39.name;
        java.io.File file42 = fileEntry39.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        boolean boolean45 = fileEntryIterator43.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        boolean boolean51 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        fileEntryIterator52.recursive = true;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator52.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        fileEntryIterator52.root = file77;
        explodedArchive46.root = file77;
        java.util.Iterator<java.io.File> fileItor80 = fileEntryIterator43.listFiles(file77);
        fileEntry39.file = file77;
        fileEntryIterator34.current = file77;
        explodedArchive8.root = file77;
        explodedArchive0.manifestFile = file77;
        java.util.jar.Manifest manifest85 = null;
        explodedArchive0.manifest = manifest85;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor80);
    }

    @Test
    public void test9543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9543");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.lang.String str34 = uRL30.getFile();
        java.net.URL uRL36 = new java.net.URL(uRL30, "file");
        java.lang.String str37 = uRL30.getUserInfo();
        java.lang.String str38 = uRL30.getQuery();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL36.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test9544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9544");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        java.util.jar.Manifest manifest17 = explodedArchive0.manifest;
        java.lang.String str18 = explodedArchive0.toString();
        java.io.File file19 = explodedArchive0.manifestFile;
        boolean boolean20 = explodedArchive0.recursive;
        java.lang.Class<?> wildcardClass21 = explodedArchive0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str18, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test9545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9545");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file://exploded archive:0", "file://hi!:100hi!", (-21), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive:0", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: Invalid port number :-21");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test9546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9546");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "", uRLStreamHandler13);
        int int15 = uRL14.getDefaultPort();
        java.net.URL uRL17 = new java.net.URL(uRL14, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        java.lang.String str18 = uRL14.getAuthority();
        java.net.URL uRL20 = new java.net.URL(uRL14, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test9547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9547");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        boolean boolean3 = fileEntryIterator0.recursive;
        java.io.File file4 = fileEntryIterator0.root;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file8 = fileEntryIterator0.root;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = null;
        fileEntryIterator0.stack = fileItorQueue9;
        boolean boolean11 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        boolean boolean14 = fileEntryIterator12.hasNext();
        boolean boolean15 = fileEntryIterator12.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        boolean boolean18 = fileEntryIterator16.hasNext();
        boolean boolean19 = fileEntryIterator16.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator25.thenComparing(fileComparator28);
        fileEntryIterator20.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator25.thenComparing(fileComparator33);
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator33.reversed();
        fileEntryIterator16.entryComparator = fileComparator33;
        java.io.File file37 = fileEntryIterator16.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        fileEntryIterator38.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        fileEntryIterator61.recursive = true;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator61.entryComparator;
        fileEntryIterator61.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        fileEntryIterator61.stack = fileItorQueue69;
        fileEntryIterator38.stack = fileItorQueue69;
        fileEntryIterator16.stack = fileItorQueue69;
        fileEntryIterator12.stack = fileItorQueue69;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator12.stack;
        java.io.File file75 = fileEntryIterator12.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry76 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry76.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.io.File file81 = fileEntryIterator79.current;
        boolean boolean82 = fileEntryIterator79.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue83 = fileEntryIterator79.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean85 = explodedArchive84.recursive;
        boolean boolean86 = explodedArchive84.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file88 = explodedArchive87.manifestFile;
        java.io.File file89 = explodedArchive87.manifestFile;
        java.io.File file90 = null;
        java.io.File file91 = explodedArchive87.getManifestFile(file90);
        explodedArchive84.root = file91;
        fileEntryIterator79.root = file91;
        fileEntry76.file = file91;
        boolean boolean95 = fileEntry76.isDirectory();
        java.io.File file96 = fileEntry76.getFile();
        fileEntryIterator12.current = file96;
        fileEntryIterator0.current = file96;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(fileItorQueue83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(file96);
        org.junit.Assert.assertEquals(file96.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file96.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9548");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str73 = uRL72.getFile();
        java.lang.String str74 = uRL72.getFile();
        java.lang.String str75 = uRL72.getPath();
        int int76 = uRL72.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler78 = null;
        java.net.URL uRL79 = new java.net.URL(uRL72, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler78);
        java.lang.String str80 = uRL72.getRef();
        int int81 = uRL72.getPort();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str73, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str74, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str75, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertEquals(uRL79.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test9549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9549");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.net.URL uRL25 = explodedArchive0.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry26.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.io.File file31 = fileEntryIterator29.current;
        boolean boolean32 = fileEntryIterator29.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator29.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean35 = explodedArchive34.recursive;
        boolean boolean36 = explodedArchive34.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        explodedArchive34.root = file41;
        fileEntryIterator29.root = file41;
        fileEntry26.file = file41;
        java.lang.String str45 = fileEntry26.name;
        java.io.File file46 = fileEntry26.getFile();
        explodedArchive0.root = file46;
        java.io.File file48 = explodedArchive0.manifestFile;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor49 = explodedArchive0.iterator();
        java.util.jar.Manifest manifest50 = explodedArchive0.manifest;
        boolean boolean51 = explodedArchive0.recursive;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNotNull(uRL25);
// flaky:         org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "exploded archive" + "'", str45, "exploded archive");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(entryItor49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test9550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9550");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        boolean boolean41 = explodedArchive0.recursive;
        java.io.File file42 = null;
        explodedArchive0.manifestFile = file42;
        java.io.File file44 = explodedArchive0.root;
        java.util.jar.Manifest manifest45 = null;
        explodedArchive0.manifest = manifest45;
        java.util.jar.Manifest manifest47 = explodedArchive0.manifest;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive0.getManifestFile(file48);
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest52 = null;
        explodedArchive0.manifest = manifest52;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9551");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.lang.String str71 = uRL69.getHost();
        java.net.URI uRI72 = uRL69.toURI();
        java.lang.String str73 = uRL69.getPath();
        java.net.URL uRL75 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        int int76 = uRL69.getPort();
        java.lang.String str77 = uRL69.getUserInfo();
        java.net.URL uRL79 = new java.net.URL(uRL69, "exploded archive");
        java.lang.String str80 = uRL79.getQuery();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(uRI72);
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str73, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNull(str77);
// flaky:         org.junit.Assert.assertEquals(uRL79.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str80);
    }

    @Test
    public void test9552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9552");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        java.util.Comparator<java.io.File> fileComparator39 = entryComparator15.thenComparing(fileComparator37);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean46 = fileEntryIterator45.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean48 = explodedArchive47.recursive;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.util.jar.Manifest manifest50 = null;
        explodedArchive47.manifest = manifest50;
        java.io.File file52 = explodedArchive47.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.io.File file56 = fileEntryIterator53.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        fileEntryIterator53.current = file61;
        explodedArchive47.root = file61;
        fileEntryIterator45.root = file61;
        int int65 = entryComparator15.compare(file44, file61);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file67 = fileEntryIterator66.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.util.Comparator<java.io.File> fileComparator73 = fileEntryIterator71.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator73.thenComparing(fileComparator76);
        fileEntryIterator68.entryComparator = fileComparator73;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.util.Comparator<java.io.File> fileComparator81 = fileEntryIterator79.entryComparator;
        java.util.Comparator<java.io.File> fileComparator82 = fileComparator73.thenComparing(fileComparator81);
        fileEntryIterator66.entryComparator = fileComparator82;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue84 = fileEntryIterator66.stack;
        java.io.File file85 = fileEntryIterator66.current;
        java.util.Comparator<java.io.File> fileComparator86 = fileEntryIterator66.entryComparator;
        java.util.Comparator<java.io.File> fileComparator87 = entryComparator15.thenComparing(fileComparator86);
        java.util.Comparator<java.io.File> fileComparator88 = fileComparator87.reversed();
        java.util.Comparator<java.io.File> fileComparator89 = fileComparator88.reversed();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNotNull(fileItorQueue84);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNotNull(fileComparator86);
        org.junit.Assert.assertNotNull(fileComparator87);
        org.junit.Assert.assertNotNull(fileComparator88);
        org.junit.Assert.assertNotNull(fileComparator89);
    }

    @Test
    public void test9553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9553");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.net.URL uRL38 = explodedArchive0.getUrl();
        int int39 = uRL38.getDefaultPort();
        java.net.URI uRI40 = uRL38.toURI();
        java.net.URL uRL41 = null;
        java.net.URLStreamHandler uRLStreamHandler43 = null;
        java.net.URL uRL44 = new java.net.URL(uRL41, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler43);
        java.lang.String str45 = uRL44.getHost();
        int int46 = uRL44.getPort();
        java.net.URL uRL47 = null;
        java.net.URLStreamHandler uRLStreamHandler49 = null;
        java.net.URL uRL50 = new java.net.URL(uRL47, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler49);
        java.lang.String str51 = uRL50.getHost();
        int int52 = uRL50.getPort();
        java.net.URL uRL53 = null;
        java.net.URLStreamHandler uRLStreamHandler55 = null;
        java.net.URL uRL56 = new java.net.URL(uRL53, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler55);
        java.lang.String str57 = uRL56.getHost();
        java.lang.String str58 = uRL56.getAuthority();
        java.lang.String str59 = uRL56.getQuery();
        int int60 = uRL56.getDefaultPort();
        boolean boolean61 = uRL50.sameFile(uRL56);
        boolean boolean62 = uRL44.sameFile(uRL50);
        java.net.URI uRI63 = uRL44.toURI();
        java.lang.String str64 = uRL44.getAuthority();
        int int65 = uRL44.getPort();
        boolean boolean66 = uRL38.sameFile(uRL44);
        java.net.URLConnection uRLConnection67 = uRL38.openConnection();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(uRI40);
        org.junit.Assert.assertEquals(uRL44.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals(uRL50.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals(uRL56.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(uRI63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(uRLConnection67);
    }

    @Test
    public void test9554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9554");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getPath();
        int int9 = uRL3.getDefaultPort();
        int int10 = uRL3.getDefaultPort();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getProtocol();
        java.lang.String str16 = uRL14.getUserInfo();
        java.net.URL uRL17 = null;
        java.net.URLStreamHandler uRLStreamHandler19 = null;
        java.net.URL uRL20 = new java.net.URL(uRL17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler19);
        java.lang.String str21 = uRL20.getHost();
        java.lang.String str22 = uRL20.getAuthority();
        java.lang.String str23 = uRL20.getQuery();
        int int24 = uRL20.getDefaultPort();
        java.lang.String str25 = uRL20.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler27 = null;
        java.net.URL uRL28 = new java.net.URL(uRL20, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler27);
        boolean boolean29 = uRL14.sameFile(uRL28);
        java.lang.String str30 = uRL14.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL14, "hi!", uRLStreamHandler32);
        java.lang.String str34 = uRL14.getUserInfo();
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL14, "file://exploded archive:0", uRLStreamHandler36);
        java.net.URLStreamHandler uRLStreamHandler39 = null;
        java.net.URL uRL40 = new java.net.URL(uRL14, "exploded archive", uRLStreamHandler39);
        boolean boolean41 = uRL3.equals((java.lang.Object) uRL14);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "file" + "'", str15, "file");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals(uRL28.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "file" + "'", str30, "file");
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals(uRL37.toString(), "file://exploded archive:0");
        org.junit.Assert.assertEquals(uRL40.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test9555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9555");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.util.Comparator<java.io.File> fileComparator12 = fileComparator8.thenComparing(fileComparator11);
        fileEntryIterator3.entryComparator = fileComparator8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator15 = fileComparator8.thenComparing((java.util.Comparator<java.io.File>) entryComparator14);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator18.thenComparing(fileComparator24);
        java.util.Comparator<java.io.File> fileComparator27 = entryComparator14.thenComparing(fileComparator26);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file29 = fileEntryIterator28.current;
        java.io.File file30 = null;
        fileEntryIterator28.current = file30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean33 = explodedArchive32.recursive;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.util.jar.Manifest manifest35 = null;
        explodedArchive32.manifest = manifest35;
        java.io.File file37 = explodedArchive32.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.io.File file41 = fileEntryIterator38.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator38.current = file46;
        explodedArchive32.root = file46;
        fileEntryIterator28.root = file46;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        fileEntryIterator57.recursive = true;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator67.thenComparing(fileComparator70);
        fileEntryIterator62.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        java.util.Comparator<java.io.File> fileComparator76 = fileComparator67.thenComparing(fileComparator75);
        fileEntryIterator57.entryComparator = fileComparator76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file79 = explodedArchive78.manifestFile;
        java.io.File file80 = explodedArchive78.manifestFile;
        java.io.File file81 = null;
        java.io.File file82 = explodedArchive78.getManifestFile(file81);
        fileEntryIterator57.root = file82;
        explodedArchive54.manifestFile = file82;
        fileEntryIterator50.current = file82;
        int int86 = entryComparator14.compare(file46, file82);
        fileEntry0.file = file82;
        java.io.File file88 = fileEntry0.file;
        fileEntry0.name = "exploded archive";
        boolean boolean91 = fileEntry0.isDirectory();
        java.lang.String str92 = fileEntry0.name;
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "exploded archive" + "'", str92, "exploded archive");
    }

    @Test
    public void test9556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9556");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator39 = explodedArchive0.spliterator();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive0.getNestedArchives(entryFilter40);
        explodedArchive0.recursive = true;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor44 = explodedArchive0.iterator();
        java.util.jar.Manifest manifest45 = explodedArchive0.manifest;
        boolean boolean46 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive0.getNestedArchives(entryFilter47);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(entryItor44);
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(archiveList48);
    }

    @Test
    public void test9557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9557");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor44 = explodedArchive0.iterator();
        java.io.File file45 = explodedArchive0.manifestFile;
        java.net.URL uRL46 = explodedArchive0.getUrl();
        java.lang.String str47 = uRL46.getAuthority();
        java.lang.String str48 = uRL46.getProtocol();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(uRL46);
// flaky:         org.junit.Assert.assertEquals(uRL46.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "file" + "'", str48, "file");
    }

    @Test
    public void test9558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9558");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("filefile:", "/hi!:10", (-21), "file://exploded archive:0/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: Invalid port number :-21");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test9559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9559");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        fileEntryIterator5.root = file11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        java.util.Iterator<java.io.File> fileItor19 = fileEntryIterator5.listFiles(file18);
        fileEntryIterator0.root = file18;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        fileEntryIterator23.recursive = true;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator23.entryComparator;
        fileEntryIterator23.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        fileEntryIterator23.stack = fileItorQueue31;
        fileEntryIterator0.stack = fileItorQueue31;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator0.stack;
        java.io.File file35 = fileEntryIterator0.poll();
        boolean boolean36 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor19);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test9560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9560");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean3 = fileEntryIterator2.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        fileEntryIterator2.stack = fileItorQueue5;
        fileEntryIterator0.stack = fileItorQueue5;
        fileEntryIterator0.recursive = false;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue5);
    }

    @Test
    public void test9561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9561");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file7;
        java.lang.String str9 = explodedArchive0.toString();
        java.io.File file10 = explodedArchive0.root;
        java.util.jar.Manifest manifest11 = explodedArchive0.manifest;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest11);
    }

    @Test
    public void test9562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9562");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        boolean boolean7 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        boolean boolean13 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator14.root = file39;
        explodedArchive8.root = file39;
        java.util.Iterator<java.io.File> fileItor42 = fileEntryIterator5.listFiles(file39);
        fileEntry0.file = file39;
        java.io.File file44 = fileEntry0.getFile();
        java.io.File file45 = fileEntry0.file;
        boolean boolean46 = fileEntry0.isDirectory();
        java.io.File file47 = fileEntry0.file;
        fileEntry0.name = "";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9563");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/100");
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/100");
    }

    @Test
    public void test9564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9564");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file23 = fileEntryIterator22.current;
        java.io.File file24 = null;
        fileEntryIterator22.current = file24;
        java.io.File file26 = fileEntryIterator22.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file28 = fileEntry27.getFile();
        java.lang.String str29 = fileEntry27.name;
        java.io.File file30 = fileEntry27.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        boolean boolean33 = fileEntryIterator31.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        boolean boolean39 = explodedArchive34.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        fileEntryIterator40.recursive = true;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator40.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        java.util.Comparator<java.io.File> fileComparator54 = fileComparator50.thenComparing(fileComparator53);
        fileEntryIterator45.entryComparator = fileComparator50;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator50.thenComparing(fileComparator58);
        fileEntryIterator40.entryComparator = fileComparator59;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.manifestFile;
        java.io.File file63 = explodedArchive61.manifestFile;
        java.io.File file64 = null;
        java.io.File file65 = explodedArchive61.getManifestFile(file64);
        fileEntryIterator40.root = file65;
        explodedArchive34.root = file65;
        java.util.Iterator<java.io.File> fileItor68 = fileEntryIterator31.listFiles(file65);
        fileEntry27.file = file65;
        fileEntryIterator22.current = file65;
        explodedArchive0.manifestFile = file65;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator72 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest73 = explodedArchive0.manifest;
        java.io.File file74 = explodedArchive0.root;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor68);
        org.junit.Assert.assertNotNull(entrySpliterator72);
        org.junit.Assert.assertNull(manifest73);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9565");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        boolean boolean41 = explodedArchive39.recursive;
        java.io.File file42 = explodedArchive39.root;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive39.getManifestFile(file43);
        explodedArchive0.manifestFile = file43;
        java.io.File file46 = explodedArchive0.root;
        java.io.File file47 = explodedArchive0.manifestFile;
        java.net.URL uRL48 = explodedArchive0.getUrl();
        java.net.URI uRI49 = uRL48.toURI();
        java.lang.String str50 = uRL48.getPath();
        java.lang.String str51 = uRL48.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file53 = fileEntry52.getFile();
        java.lang.String str54 = fileEntry52.getName();
        java.lang.String str55 = fileEntry52.getName();
        fileEntry52.name = "";
        java.io.File file58 = fileEntry52.file;
        java.lang.String str59 = fileEntry52.getName();
        java.io.File file60 = fileEntry52.getFile();
        java.io.File file61 = fileEntry52.file;
        java.io.File file62 = fileEntry52.getFile();
        java.lang.String str63 = fileEntry52.getName();
        java.lang.String str64 = fileEntry52.getName();
        java.io.File file65 = fileEntry52.file;
        boolean boolean66 = uRL48.equals((java.lang.Object) file65);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(uRL48);
// flaky:         org.junit.Assert.assertEquals(uRL48.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI49);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str50, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str51, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test9566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9566");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        int int22 = uRL3.getDefaultPort();
        java.lang.String str23 = uRL3.getUserInfo();
        java.net.URL uRL24 = null;
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL24, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler26);
        java.lang.String str28 = uRL27.getHost();
        java.lang.String str29 = uRL27.getAuthority();
        java.lang.String str30 = uRL27.getFile();
        java.lang.String str31 = uRL27.getPath();
        java.net.URLConnection uRLConnection32 = uRL27.openConnection();
        java.lang.String str33 = uRL27.getQuery();
        boolean boolean34 = uRL3.sameFile(uRL27);
        java.net.URL uRL36 = new java.net.URL(uRL27, "exploded archive");
        java.lang.String str37 = uRL27.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str30, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals(uRL36.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str37, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9567");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getQuery();
        int int10 = uRL3.getDefaultPort();
        java.lang.String str11 = uRL3.getPath();
        java.lang.String str12 = uRL3.getAuthority();
        java.net.URLConnection uRLConnection13 = uRL3.openConnection();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(uRLConnection13);
    }

    @Test
    public void test9568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9568");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.lang.String str34 = explodedArchive0.toString();
        java.util.jar.Manifest manifest35 = explodedArchive0.manifest;
        java.io.File file36 = null;
        explodedArchive0.root = file36;
        java.io.File file38 = explodedArchive0.root;
        boolean boolean39 = explodedArchive0.recursive;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test9569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9569");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.lang.String str4 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean6 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean8 = explodedArchive7.recursive;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.util.jar.Manifest manifest10 = null;
        explodedArchive7.manifest = manifest10;
        java.io.File file12 = explodedArchive7.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.io.File file16 = fileEntryIterator13.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.manifestFile;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.io.File file20 = null;
        java.io.File file21 = explodedArchive17.getManifestFile(file20);
        fileEntryIterator13.current = file21;
        explodedArchive7.root = file21;
        fileEntryIterator5.root = file21;
        java.io.File file25 = explodedArchive0.getManifestFile(file21);
        java.util.jar.Manifest manifest26 = null;
        explodedArchive0.manifest = manifest26;
        explodedArchive0.recursive = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9570");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler18 = null;
        java.net.URL uRL19 = new java.net.URL(uRL14, "/hi!:10", uRLStreamHandler18);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL19.toString(), "file:/hi!:10");
    }

    @Test
    public void test9571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9571");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getPath();
        int int10 = uRL3.getPort();
        java.lang.Class[] classArray11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = uRL3.getContent(classArray11);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test9572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9572");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.util.jar.Manifest manifest38 = explodedArchive0.manifest;
        java.lang.String str39 = explodedArchive0.toString();
        java.io.File file40 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean42 = explodedArchive41.recursive;
        boolean boolean43 = explodedArchive41.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        explodedArchive41.root = file48;
        explodedArchive0.manifestFile = file48;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive0.getNestedArchives(entryFilter51);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive0.getNestedArchives(entryFilter53);
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor55 = explodedArchive0.iterator();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest38);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNotNull(entryItor55);
    }

    @Test
    public void test9573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9573");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        boolean boolean11 = explodedArchive6.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        fileEntryIterator12.recursive = true;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator22.thenComparing(fileComparator25);
        fileEntryIterator17.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator22.thenComparing(fileComparator30);
        fileEntryIterator12.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.manifestFile;
        java.io.File file35 = explodedArchive33.manifestFile;
        java.io.File file36 = null;
        java.io.File file37 = explodedArchive33.getManifestFile(file36);
        fileEntryIterator12.root = file37;
        explodedArchive6.root = file37;
        explodedArchive6.recursive = false;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive6.manifest = manifest42;
        java.lang.String str44 = explodedArchive6.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive6.getNestedArchives(entryFilter45);
        java.io.File file47 = explodedArchive6.root;
        explodedArchive0.root = file47;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file47, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str44, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9574");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.lang.String str71 = uRL69.getHost();
        java.lang.String str72 = uRL69.getProtocol();
        java.net.URI uRI73 = uRL69.toURI();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream74 = uRL69.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "file" + "'", str72, "file");
        org.junit.Assert.assertNotNull(uRI73);
    }

    @Test
    public void test9575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9575");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str75 = uRL69.getRef();
        int int76 = uRL69.getDefaultPort();
        java.lang.String str77 = uRL69.getProtocol();
        int int78 = uRL69.getPort();
        java.net.URLStreamHandler uRLStreamHandler80 = null;
        java.net.URL uRL81 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", uRLStreamHandler80);
        java.lang.String str82 = uRL69.getFile();
        java.lang.String str83 = uRL69.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator84 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file85 = fileEntryIterator84.current;
        boolean boolean86 = fileEntryIterator84.hasNext();
        fileEntryIterator84.recursive = true;
        boolean boolean89 = fileEntryIterator84.recursive;
        boolean boolean90 = uRL69.equals((java.lang.Object) fileEntryIterator84);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "file" + "'", str77, "file");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertEquals(uRL81.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
// flaky:         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str82, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str83, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test9576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9576");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.manifestFile;
        java.io.File file6 = explodedArchive4.manifestFile;
        java.io.File file7 = null;
        java.io.File file8 = explodedArchive4.getManifestFile(file7);
        fileEntryIterator0.current = file8;
        java.io.File file10 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9577");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!:10", "exploded archive", 0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!:10");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test9578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9578");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.io.File file18 = fileEntryIterator0.root;
        boolean boolean19 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        explodedArchive20.recursive = true;
        java.lang.String str24 = explodedArchive20.toString();
        boolean boolean25 = explodedArchive20.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = fileEntryIterator26.poll();
        java.io.File file29 = fileEntryIterator26.poll();
        java.io.File file30 = fileEntryIterator26.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.io.File file33 = fileEntryIterator31.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator31.root = file37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        java.util.Iterator<java.io.File> fileItor45 = fileEntryIterator31.listFiles(file44);
        fileEntryIterator26.root = file44;
        explodedArchive20.manifestFile = file44;
        fileEntryIterator0.root = file44;
        java.io.File file49 = fileEntryIterator0.poll();
        java.io.File file50 = fileEntryIterator0.current;
        boolean boolean51 = fileEntryIterator0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry52 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "exploded archive" + "'", str24, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor45);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test9579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9579");
        java.net.URL uRL1 = new java.net.URL("file://exploded archive");
        java.lang.String str2 = uRL1.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL(uRL1, "file", uRLStreamHandler4);
        java.lang.String str6 = uRL5.toString();
        org.junit.Assert.assertEquals(uRL1.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "file" + "'", str2, "file");
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive/file");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file://exploded archive/file" + "'", str6, "file://exploded archive/file");
    }

    @Test
    public void test9580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9580");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        fileEntryIterator0.stack = fileItorQueue3;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        fileEntryIterator6.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        fileEntryIterator6.stack = fileItorQueue14;
        boolean boolean16 = fileEntryIterator6.recursive;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator6.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator17.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.io.File file21 = fileEntryIterator19.current;
        java.io.File file22 = fileEntryIterator19.current;
        fileEntryIterator19.recursive = true;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator18.thenComparing(fileComparator25);
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator5.thenComparing(fileComparator26);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
    }

    @Test
    public void test9581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9581");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.io.File file25 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest26 = null;
        explodedArchive0.manifest = manifest26;
        java.net.URL uRL28 = explodedArchive0.getUrl();
        java.util.jar.Manifest manifest29 = null;
        explodedArchive0.manifest = manifest29;
        explodedArchive0.recursive = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(uRL28);
// flaky:         org.junit.Assert.assertEquals(uRL28.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9582");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        int int12 = uRL3.getPort();
        int int13 = uRL3.getPort();
        java.net.URL uRL15 = new java.net.URL(uRL3, "file:100");
        int int16 = uRL3.getDefaultPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/100");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test9583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9583");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "file", (int) (byte) 100, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
        java.lang.String str6 = uRL5.getQuery();
        java.lang.String str7 = uRL5.getFile();
        java.lang.String str8 = uRL5.getPath();
        java.lang.String[] strArray20 = new java.lang.String[] { "", "", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "file", "exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "file://hi!:100hi!", "hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet21;
        boolean boolean24 = uRL5.equals((java.lang.Object) strSet21);
        org.junit.Assert.assertEquals(uRL5.toString(), "file://file:100/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test9584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9584");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator0.stack;
        boolean boolean19 = fileEntryIterator0.recursive;
        java.io.File file20 = fileEntryIterator0.current;
        fileEntryIterator0.recursive = false;
        boolean boolean23 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file25 = fileEntryIterator24.current;
        java.io.File file26 = fileEntryIterator24.poll();
        java.io.File file27 = fileEntryIterator24.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator33.thenComparing(fileComparator36);
        fileEntryIterator28.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator33.thenComparing((java.util.Comparator<java.io.File>) entryComparator39);
        fileEntryIterator24.entryComparator = entryComparator39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file43 = fileEntryIterator42.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        java.util.Comparator<java.io.File> fileComparator53 = fileComparator49.thenComparing(fileComparator52);
        fileEntryIterator44.entryComparator = fileComparator49;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator49.thenComparing(fileComparator57);
        fileEntryIterator42.entryComparator = fileComparator58;
        java.io.File file60 = fileEntryIterator42.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        fileEntryIterator42.entryComparator = entryComparator61;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        java.util.Comparator<java.io.File> fileComparator75 = fileComparator71.thenComparing(fileComparator74);
        java.util.Comparator<java.io.File> fileComparator76 = fileComparator68.thenComparing(fileComparator74);
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator65.thenComparing(fileComparator74);
        java.util.Comparator<java.io.File> fileComparator78 = entryComparator61.thenComparing(fileComparator65);
        java.util.Comparator<java.io.File> fileComparator79 = entryComparator61.reversed();
        java.util.Comparator<java.io.File> fileComparator80 = entryComparator39.thenComparing((java.util.Comparator<java.io.File>) entryComparator61);
        java.util.Comparator<java.io.File> fileComparator81 = fileComparator80.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator82 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file83 = fileEntryIterator82.current;
        boolean boolean84 = fileEntryIterator82.hasNext();
        java.util.Comparator<java.io.File> fileComparator85 = fileEntryIterator82.entryComparator;
        java.util.Comparator<java.io.File> fileComparator86 = fileEntryIterator82.entryComparator;
        java.util.Comparator<java.io.File> fileComparator87 = fileComparator81.thenComparing(fileComparator86);
        fileEntryIterator0.entryComparator = fileComparator81;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry89 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(fileComparator85);
        org.junit.Assert.assertNotNull(fileComparator86);
        org.junit.Assert.assertNotNull(fileComparator87);
    }

    @Test
    public void test9585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9585");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = null;
        fileEntryIterator0.current = file2;
        java.io.File file4 = fileEntryIterator0.root;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator0.entryComparator;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
    }

    @Test
    public void test9586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9586");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean39 = fileEntryIterator38.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.lang.String str43 = explodedArchive40.toString();
        java.lang.String str44 = explodedArchive40.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean46 = fileEntryIterator45.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean48 = explodedArchive47.recursive;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.util.jar.Manifest manifest50 = null;
        explodedArchive47.manifest = manifest50;
        java.io.File file52 = explodedArchive47.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.io.File file56 = fileEntryIterator53.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        fileEntryIterator53.current = file61;
        explodedArchive47.root = file61;
        fileEntryIterator45.root = file61;
        java.io.File file65 = explodedArchive40.getManifestFile(file61);
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator38.listFiles(file65);
        java.io.File file67 = explodedArchive0.getManifestFile(file65);
        boolean boolean68 = explodedArchive0.recursive;
        boolean boolean69 = explodedArchive0.recursive;
        java.lang.String str70 = explodedArchive0.toString();
        java.lang.Class<?> wildcardClass71 = explodedArchive0.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "exploded archive" + "'", str43, "exploded archive");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "exploded archive" + "'", str44, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str70, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test9587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9587");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = fileEntry0.file;
        java.io.File file4 = fileEntry0.getFile();
        java.io.File file5 = fileEntry0.file;
        java.lang.String str6 = fileEntry0.getName();
        java.io.File file7 = fileEntry0.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test9588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9588");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.lang.String str8 = uRL3.getUserInfo();
        java.lang.String str9 = uRL3.getRef();
        java.lang.String str10 = uRL3.getPath();
        java.net.URI uRI11 = uRL3.toURI();
        java.net.URLConnection uRLConnection12 = uRL3.openConnection();
        java.net.URL uRL13 = null;
        java.net.URLStreamHandler uRLStreamHandler15 = null;
        java.net.URL uRL16 = new java.net.URL(uRL13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler15);
        java.lang.String str17 = uRL16.getHost();
        java.lang.String str18 = uRL16.getAuthority();
        java.lang.String str19 = uRL16.getAuthority();
        java.lang.String str20 = uRL16.getFile();
        int int21 = uRL16.getPort();
        java.lang.String str22 = uRL16.getRef();
        java.net.URL uRL24 = new java.net.URL(uRL16, "hi!");
        int int25 = uRL16.getPort();
        java.lang.String str26 = uRL16.getUserInfo();
        boolean boolean27 = uRL3.sameFile(uRL16);
        java.lang.String str28 = uRL3.getAuthority();
        java.net.Proxy proxy29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection30 = uRL3.openConnection(proxy29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI11);
        org.junit.Assert.assertNotNull(uRLConnection12);
        org.junit.Assert.assertEquals(uRL16.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str20, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test9589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9589");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file7;
        explodedArchive0.recursive = false;
        java.io.File file11 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.net.URL uRL14 = explodedArchive0.getUrl();
        java.lang.String str15 = uRL14.getAuthority();
        int int16 = uRL14.getDefaultPort();
        java.lang.String str17 = uRL14.getHost();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL14);
// flaky:         org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test9590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9590");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        fileEntryIterator0.root = file6;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.io.File file12 = null;
        java.io.File file13 = explodedArchive9.getManifestFile(file12);
        java.util.Iterator<java.io.File> fileItor14 = fileEntryIterator0.listFiles(file13);
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator0.stack;
        boolean boolean16 = fileEntryIterator0.recursive;
        boolean boolean17 = fileEntryIterator0.hasNext();
        java.io.File file18 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = false;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator0.stack;
        java.io.File file22 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor14);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNull(file22);
    }

    @Test
    public void test9591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9591");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file18 = fileEntry17.getFile();
        java.io.File file19 = fileEntry17.file;
        fileEntry17.name = "";
        java.lang.String str22 = fileEntry17.name;
        java.io.File file23 = fileEntry17.file;
        java.io.File file24 = fileEntry17.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file31 = fileEntry30.getFile();
        java.lang.String str32 = fileEntry30.name;
        java.io.File file33 = fileEntry30.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        boolean boolean36 = fileEntryIterator34.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        boolean boolean42 = explodedArchive37.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        fileEntryIterator43.recursive = true;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator53.thenComparing(fileComparator56);
        fileEntryIterator48.entryComparator = fileComparator53;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator53.thenComparing(fileComparator61);
        fileEntryIterator43.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        fileEntryIterator43.root = file68;
        explodedArchive37.root = file68;
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator34.listFiles(file68);
        fileEntry30.file = file68;
        explodedArchive25.manifestFile = file68;
        fileEntry17.file = file68;
        explodedArchive0.root = file68;
        explodedArchive0.recursive = false;
        boolean boolean78 = explodedArchive0.recursive;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor71);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test9592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9592");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.getName();
        fileEntry0.name = "exploded archive";
        fileEntry0.name = "hi!";
        java.lang.String str6 = fileEntry0.getName();
        java.lang.String str7 = fileEntry0.getName();
        fileEntry0.name = "file";
        java.lang.String str10 = fileEntry0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file" + "'", str10, "file");
    }

    @Test
    public void test9593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9593");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.lang.String str34 = explodedArchive0.toString();
        java.io.File file35 = explodedArchive0.manifestFile;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator36 = explodedArchive0.spliterator();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(entrySpliterator36);
    }

    @Test
    public void test9594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9594");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URLStreamHandler uRLStreamHandler74 = null;
        java.net.URL uRL75 = new java.net.URL(uRL72, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler74);
        java.lang.String str76 = uRL75.getUserInfo();
        java.lang.String str77 = uRL75.toExternalForm();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str77, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test9595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9595");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = fileEntry0.getFile();
        fileEntry0.name = "file://exploded archive:0";
        fileEntry0.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!";
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
    }

    @Test
    public void test9596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9596");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator0.entryComparator;
        boolean boolean7 = fileEntryIterator0.recursive;
        java.io.File file8 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test9597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9597");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        int int12 = uRL3.getPort();
        java.lang.String str13 = uRL3.getPath();
        java.net.URL uRL15 = new java.net.URL("file://exploded archive");
        java.lang.String str16 = uRL15.getProtocol();
        java.net.URL uRL17 = null;
        java.net.URLStreamHandler uRLStreamHandler19 = null;
        java.net.URL uRL20 = new java.net.URL(uRL17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler19);
        java.lang.String str21 = uRL20.getHost();
        java.lang.String str22 = uRL20.getAuthority();
        java.lang.String str23 = uRL20.getHost();
        int int24 = uRL20.getPort();
        java.lang.String str25 = uRL20.getPath();
        java.lang.String str26 = uRL20.getHost();
        java.net.URL uRL27 = null;
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL27, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getHost();
        java.net.URI uRI32 = uRL30.toURI();
        java.lang.String str33 = uRL30.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler35 = null;
        java.net.URL uRL36 = new java.net.URL(uRL30, "file", uRLStreamHandler35);
        java.net.URLStreamHandler uRLStreamHandler38 = null;
        java.net.URL uRL39 = new java.net.URL(uRL30, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler38);
        boolean boolean40 = uRL20.sameFile(uRL30);
        boolean boolean41 = uRL15.sameFile(uRL30);
        int int42 = uRL30.getPort();
        java.lang.String str43 = uRL30.getQuery();
        java.lang.String str44 = uRL30.getFile();
        java.net.URL uRL46 = new java.net.URL(uRL30, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive:0");
        boolean boolean47 = uRL3.sameFile(uRL30);
        java.net.Proxy proxy48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection49 = uRL3.openConnection(proxy48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str13, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL15.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "file" + "'", str16, "file");
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str25, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(uRI32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str33, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL36.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL39.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str44, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL46.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test9598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9598");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file://exploded archive", uRLStreamHandler2);
        java.net.URL uRL5 = new java.net.URL(uRL3, "hi!");
        java.lang.String str6 = uRL5.getAuthority();
        java.lang.String str7 = uRL5.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive/hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file://exploded archive/hi!" + "'", str7, "file://exploded archive/hi!");
    }

    @Test
    public void test9599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9599");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.io.File file4 = explodedArchive0.root;
        boolean boolean5 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.lang.String str8 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.lang.String str12 = explodedArchive9.toString();
        java.util.jar.Manifest manifest13 = explodedArchive9.manifest;
        java.io.File file14 = explodedArchive9.manifestFile;
        boolean boolean15 = explodedArchive9.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file17 = fileEntry16.getFile();
        java.io.File file18 = fileEntry16.file;
        java.io.File file19 = null;
        fileEntry16.file = file19;
        java.lang.String str21 = fileEntry16.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file23 = fileEntryIterator22.current;
        java.io.File file24 = null;
        fileEntryIterator22.current = file24;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        java.io.File file28 = explodedArchive26.manifestFile;
        java.util.jar.Manifest manifest29 = null;
        explodedArchive26.manifest = manifest29;
        java.io.File file31 = explodedArchive26.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.io.File file35 = fileEntryIterator32.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.manifestFile;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.io.File file39 = null;
        java.io.File file40 = explodedArchive36.getManifestFile(file39);
        fileEntryIterator32.current = file40;
        explodedArchive26.root = file40;
        fileEntryIterator22.root = file40;
        fileEntry16.file = file40;
        java.io.File file45 = fileEntry16.getFile();
        java.io.File file46 = fileEntry16.file;
        explodedArchive9.manifestFile = file46;
        java.io.File file48 = explodedArchive9.manifestFile;
        java.io.File file49 = explodedArchive0.getManifestFile(file48);
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive0.getNestedArchives(entryFilter52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "exploded archive" + "'", str12, "exploded archive");
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9600");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getQuery();
        java.lang.String str16 = uRL14.getUserInfo();
        java.net.URL uRL17 = null;
        java.net.URLStreamHandler uRLStreamHandler19 = null;
        java.net.URL uRL20 = new java.net.URL(uRL17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler19);
        java.lang.String str21 = uRL20.getHost();
        java.lang.String str22 = uRL20.getAuthority();
        java.lang.String str23 = uRL20.getHost();
        java.lang.String str24 = uRL20.getQuery();
        java.lang.String str25 = uRL20.getAuthority();
        java.lang.String str26 = uRL20.getFile();
        java.lang.String str27 = uRL20.getFile();
        java.lang.String str28 = uRL20.getProtocol();
        boolean boolean29 = uRL14.sameFile(uRL20);
        java.lang.String str30 = uRL14.toExternalForm();
        java.lang.String str31 = uRL14.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler33 = null;
        java.net.URL uRL34 = new java.net.URL(uRL14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF/META-INF/MANIFEST.MF", uRLStreamHandler33);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str26, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str27, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "file" + "'", str28, "file");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str30, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "file" + "'", str31, "file");
        org.junit.Assert.assertEquals(uRL34.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9601");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file3 = fileEntryIterator2.current;
        java.io.File file4 = fileEntryIterator2.poll();
        java.io.File file5 = fileEntryIterator2.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        java.util.Comparator<java.io.File> fileComparator15 = fileComparator11.thenComparing(fileComparator14);
        fileEntryIterator6.entryComparator = fileComparator11;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator11.thenComparing((java.util.Comparator<java.io.File>) entryComparator17);
        fileEntryIterator2.entryComparator = entryComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        fileEntryIterator20.recursive = true;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator30.thenComparing(fileComparator33);
        fileEntryIterator25.entryComparator = fileComparator30;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator30.thenComparing(fileComparator38);
        fileEntryIterator20.entryComparator = fileComparator39;
        java.util.Comparator<java.io.File> fileComparator41 = entryComparator17.thenComparing(fileComparator39);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean48 = fileEntryIterator47.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean50 = explodedArchive49.recursive;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.util.jar.Manifest manifest52 = null;
        explodedArchive49.manifest = manifest52;
        java.io.File file54 = explodedArchive49.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.io.File file58 = fileEntryIterator55.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator55.current = file63;
        explodedArchive49.root = file63;
        fileEntryIterator47.root = file63;
        int int67 = entryComparator17.compare(file46, file63);
        java.util.Iterator<java.io.File> fileItor68 = fileEntryIterator0.listFiles(file46);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file70 = fileEntryIterator69.current;
        java.io.File file71 = fileEntryIterator69.poll();
        java.io.File file72 = fileEntryIterator69.poll();
        java.io.File file73 = fileEntryIterator69.current;
        boolean boolean74 = fileEntryIterator69.hasNext();
        boolean boolean75 = fileEntryIterator69.hasNext();
        java.io.File file76 = fileEntryIterator69.current;
        boolean boolean77 = fileEntryIterator69.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator78.stack;
        java.io.File file80 = fileEntryIterator78.current;
        java.io.File file81 = fileEntryIterator78.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator82 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file83 = fileEntryIterator82.current;
        boolean boolean84 = fileEntryIterator82.hasNext();
        java.util.Comparator<java.io.File> fileComparator85 = fileEntryIterator82.entryComparator;
        java.util.Comparator<java.io.File> fileComparator86 = fileEntryIterator82.entryComparator;
        fileEntryIterator78.entryComparator = fileComparator86;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator88 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue89 = fileEntryIterator88.stack;
        fileEntryIterator78.stack = fileItorQueue89;
        fileEntryIterator69.stack = fileItorQueue89;
        fileEntryIterator0.stack = fileItorQueue89;
        java.io.File file93 = fileEntryIterator0.current;
        java.io.File file94 = fileEntryIterator0.root;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(fileItor68);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(fileComparator85);
        org.junit.Assert.assertNotNull(fileComparator86);
        org.junit.Assert.assertNotNull(fileItorQueue89);
        org.junit.Assert.assertNull(file93);
        org.junit.Assert.assertNull(file94);
    }

    @Test
    public void test9602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9602");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.lang.String str9 = explodedArchive6.toString();
        java.lang.String str10 = explodedArchive6.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean12 = fileEntryIterator11.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean14 = explodedArchive13.recursive;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.util.jar.Manifest manifest16 = null;
        explodedArchive13.manifest = manifest16;
        java.io.File file18 = explodedArchive13.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.io.File file22 = fileEntryIterator19.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.io.File file26 = null;
        java.io.File file27 = explodedArchive23.getManifestFile(file26);
        fileEntryIterator19.current = file27;
        explodedArchive13.root = file27;
        fileEntryIterator11.root = file27;
        java.io.File file31 = explodedArchive6.getManifestFile(file27);
        fileEntryIterator0.current = file31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        fileEntryIterator33.recursive = true;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator33.entryComparator;
        fileEntryIterator33.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.io.File file42 = explodedArchive40.root;
        java.io.File file43 = explodedArchive40.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file45 = fileEntryIterator44.current;
        java.io.File file46 = fileEntryIterator44.poll();
        java.io.File file47 = fileEntryIterator44.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator53.thenComparing(fileComparator56);
        fileEntryIterator48.entryComparator = fileComparator53;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator60 = fileComparator53.thenComparing((java.util.Comparator<java.io.File>) entryComparator59);
        fileEntryIterator44.entryComparator = entryComparator59;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        fileEntryIterator65.recursive = true;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator70.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator76 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue77 = fileEntryIterator76.stack;
        java.util.Comparator<java.io.File> fileComparator78 = fileEntryIterator76.entryComparator;
        java.util.Comparator<java.io.File> fileComparator79 = fileComparator75.thenComparing(fileComparator78);
        fileEntryIterator70.entryComparator = fileComparator75;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator81 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue82 = fileEntryIterator81.stack;
        java.util.Comparator<java.io.File> fileComparator83 = fileEntryIterator81.entryComparator;
        java.util.Comparator<java.io.File> fileComparator84 = fileComparator75.thenComparing(fileComparator83);
        fileEntryIterator65.entryComparator = fileComparator84;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file87 = explodedArchive86.manifestFile;
        java.io.File file88 = explodedArchive86.manifestFile;
        java.io.File file89 = null;
        java.io.File file90 = explodedArchive86.getManifestFile(file89);
        fileEntryIterator65.root = file90;
        explodedArchive62.manifestFile = file90;
        fileEntryIterator44.root = file90;
        explodedArchive40.root = file90;
        fileEntryIterator33.current = file90;
        java.util.Iterator<java.io.File> fileItor96 = fileEntryIterator0.listFiles(file90);
        java.util.Comparator<java.io.File> fileComparator97 = fileEntryIterator0.entryComparator;
        java.io.File file98 = fileEntryIterator0.root;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "exploded archive" + "'", str9, "exploded archive");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "exploded archive" + "'", str10, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "exploded archive" + "'", str41, "exploded archive");
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileItorQueue77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNotNull(fileItorQueue82);
        org.junit.Assert.assertNotNull(fileComparator83);
        org.junit.Assert.assertNotNull(fileComparator84);
        org.junit.Assert.assertNull(file87);
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file90.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor96);
        org.junit.Assert.assertNotNull(fileComparator97);
        org.junit.Assert.assertNull(file98);
    }

    @Test
    public void test9603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9603");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        fileEntryIterator4.recursive = true;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator14.thenComparing(fileComparator22);
        fileEntryIterator4.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file26 = fileEntryIterator25.current;
        java.io.File file27 = fileEntryIterator25.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file29 = fileEntryIterator28.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator35.thenComparing(fileComparator38);
        fileEntryIterator30.entryComparator = fileComparator35;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator35.thenComparing(fileComparator43);
        fileEntryIterator28.entryComparator = fileComparator44;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator28.stack;
        fileEntryIterator25.stack = fileItorQueue46;
        fileEntryIterator4.stack = fileItorQueue46;
        fileEntryIterator0.stack = fileItorQueue46;
        java.io.File file50 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.io.File file54 = fileEntryIterator52.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        fileEntryIterator52.entryComparator = fileComparator57;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator52.stack;
        fileEntryIterator0.stack = fileItorQueue59;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
    }

    @Test
    public void test9604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9604");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator0.stack;
        java.io.File file7 = fileEntryIterator0.current;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator0.entryComparator;
        java.util.Comparator<java.io.File> fileComparator9 = fileComparator8.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator15.thenComparing(fileComparator18);
        fileEntryIterator10.entryComparator = fileComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator15.thenComparing(fileComparator23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        fileEntryIterator25.recursive = true;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator15.thenComparing(fileComparator29);
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator8.thenComparing(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
    }

    @Test
    public void test9605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9605");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = false;
        boolean boolean4 = explodedArchive0.recursive;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test9606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9606");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.io.File file5 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        fileEntryIterator3.root = file9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        java.util.Iterator<java.io.File> fileItor17 = fileEntryIterator3.listFiles(file16);
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator3.stack;
        fileEntryIterator0.stack = fileItorQueue18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        java.io.File file25 = explodedArchive20.manifestFile;
        java.io.File file26 = explodedArchive20.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator32.thenComparing(fileComparator35);
        fileEntryIterator27.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean39 = fileEntryIterator38.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean41 = explodedArchive40.recursive;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.util.jar.Manifest manifest43 = null;
        explodedArchive40.manifest = manifest43;
        java.io.File file45 = explodedArchive40.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        java.io.File file49 = fileEntryIterator46.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        fileEntryIterator46.current = file54;
        explodedArchive40.root = file54;
        fileEntryIterator38.root = file54;
        fileEntryIterator27.root = file54;
        java.io.File file59 = explodedArchive20.getManifestFile(file54);
        java.util.Iterator<java.io.File> fileItor60 = fileEntryIterator0.listFiles(file59);
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor17);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor60);
    }

    @Test
    public void test9607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9607");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        boolean boolean22 = uRL11.sameFile(uRL21);
        java.net.URL uRL23 = null;
        java.net.URLStreamHandler uRLStreamHandler25 = null;
        java.net.URL uRL26 = new java.net.URL(uRL23, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler25);
        java.lang.String str27 = uRL26.getHost();
        java.lang.String str28 = uRL26.getAuthority();
        java.lang.String str29 = uRL26.getHost();
        java.lang.String str30 = uRL26.getQuery();
        java.lang.String str31 = uRL26.getAuthority();
        java.lang.String str32 = uRL26.getFile();
        java.lang.String str33 = uRL26.getFile();
        java.lang.String str34 = uRL26.getProtocol();
        java.lang.String str35 = uRL26.getRef();
        java.lang.String str36 = uRL26.toExternalForm();
        java.net.URLConnection uRLConnection37 = uRL26.openConnection();
        java.lang.String str38 = uRL26.getProtocol();
        boolean boolean39 = uRL21.sameFile(uRL26);
        java.net.URL uRL41 = new java.net.URL(uRL21, "hi!:10");
        java.lang.String str42 = uRL21.getRef();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals(uRL26.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str32, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str33, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file" + "'", str34, "file");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str36, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file" + "'", str38, "file");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals(uRL41.toString(), "file://exploded archive:0/hi!:10");
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test9608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9608");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str75 = uRL69.getRef();
        int int76 = uRL69.getDefaultPort();
        java.lang.String str77 = uRL69.getPath();
        java.net.URLConnection uRLConnection78 = uRL69.openConnection();
        int int79 = uRL69.getPort();
        java.lang.String str80 = uRL69.toExternalForm();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str77, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str80, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9609");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str75 = uRL69.getRef();
        java.lang.String str76 = uRL69.getFile();
        java.lang.String str77 = uRL69.getHost();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str75);
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str76, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
    }

    @Test
    public void test9610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9610");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        fileEntryIterator5.root = file11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        java.util.Iterator<java.io.File> fileItor19 = fileEntryIterator5.listFiles(file18);
        fileEntryIterator0.root = file18;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        fileEntryIterator23.recursive = true;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator23.entryComparator;
        fileEntryIterator23.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        fileEntryIterator23.stack = fileItorQueue31;
        fileEntryIterator0.stack = fileItorQueue31;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator0.stack;
        java.io.File file35 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator0.stack;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor19);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(fileItorQueue36);
    }

    @Test
    public void test9611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9611");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file7;
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        boolean boolean13 = fileEntryIterator11.hasNext();
        boolean boolean14 = fileEntryIterator11.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator20.thenComparing(fileComparator28);
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator28.reversed();
        fileEntryIterator11.entryComparator = fileComparator28;
        boolean boolean32 = fileEntryIterator11.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file34 = fileEntryIterator33.current;
        java.io.File file35 = fileEntryIterator33.poll();
        java.io.File file36 = fileEntryIterator33.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator42.thenComparing(fileComparator45);
        fileEntryIterator37.entryComparator = fileComparator42;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator49 = fileComparator42.thenComparing((java.util.Comparator<java.io.File>) entryComparator48);
        fileEntryIterator33.entryComparator = entryComparator48;
        java.io.File file51 = fileEntryIterator33.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean54 = fileEntryIterator53.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean56 = explodedArchive55.recursive;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.util.jar.Manifest manifest58 = null;
        explodedArchive55.manifest = manifest58;
        java.io.File file60 = explodedArchive55.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.io.File file64 = fileEntryIterator61.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator61.current = file69;
        explodedArchive55.root = file69;
        fileEntryIterator53.root = file69;
        explodedArchive52.root = file69;
        fileEntryIterator33.current = file69;
        fileEntryIterator11.root = file69;
        explodedArchive0.manifestFile = file69;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9612");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getFile();
        java.lang.String str10 = uRL3.getFile();
        java.lang.String str11 = uRL3.getProtocol();
        java.lang.String str12 = uRL3.getProtocol();
        java.lang.String str13 = uRL3.getUserInfo();
        java.net.URL uRL15 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str16 = uRL3.getAuthority();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file" + "'", str11, "file");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file" + "'", str12, "file");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test9613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9613");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getFile();
        java.lang.String str10 = uRL3.getFile();
        java.lang.String str11 = uRL3.getProtocol();
        java.lang.String str12 = uRL3.getProtocol();
        java.lang.String str13 = uRL3.getUserInfo();
        java.net.URL uRL15 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str16 = uRL3.getPath();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file" + "'", str11, "file");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file" + "'", str12, "file");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str16, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9614");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getFile();
        java.lang.String str7 = uRL3.getPath();
        java.net.URLConnection uRLConnection8 = uRL3.openConnection();
        java.net.URL uRL10 = new java.net.URL(uRL3, "exploded archive");
        int int11 = uRL10.getDefaultPort();
        java.net.URL uRL13 = new java.net.URL(uRL10, "file://exploded archive/file");
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection8);
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL13.toString(), "file://exploded archive/file");
    }

    @Test
    public void test9615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9615");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator0.stack;
        java.io.File file7 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        boolean boolean10 = fileEntryIterator8.hasNext();
        boolean boolean11 = fileEntryIterator8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator17.thenComparing(fileComparator25);
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator25.reversed();
        fileEntryIterator8.entryComparator = fileComparator25;
        boolean boolean29 = fileEntryIterator8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file31 = fileEntryIterator30.current;
        java.io.File file32 = fileEntryIterator30.poll();
        java.io.File file33 = fileEntryIterator30.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.util.Comparator<java.io.File> fileComparator43 = fileComparator39.thenComparing(fileComparator42);
        fileEntryIterator34.entryComparator = fileComparator39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator39.thenComparing((java.util.Comparator<java.io.File>) entryComparator45);
        fileEntryIterator30.entryComparator = entryComparator45;
        java.io.File file48 = fileEntryIterator30.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean51 = fileEntryIterator50.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean53 = explodedArchive52.recursive;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.util.jar.Manifest manifest55 = null;
        explodedArchive52.manifest = manifest55;
        java.io.File file57 = explodedArchive52.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.io.File file61 = fileEntryIterator58.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        fileEntryIterator58.current = file66;
        explodedArchive52.root = file66;
        fileEntryIterator50.root = file66;
        explodedArchive49.root = file66;
        fileEntryIterator30.current = file66;
        fileEntryIterator8.root = file66;
        fileEntryIterator0.current = file66;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator0.stack;
        java.io.File file75 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNull(file75);
    }

    @Test
    public void test9616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9616");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = null;
        explodedArchive0.manifestFile = file2;
        java.io.File file4 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        explodedArchive0.recursive = false;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file4);
    }

    @Test
    public void test9617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9617");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getQuery();
        java.lang.String str16 = uRL14.getUserInfo();
        java.net.URL uRL17 = null;
        java.net.URLStreamHandler uRLStreamHandler19 = null;
        java.net.URL uRL20 = new java.net.URL(uRL17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler19);
        java.lang.String str21 = uRL20.getHost();
        java.lang.String str22 = uRL20.getAuthority();
        java.lang.String str23 = uRL20.getHost();
        java.lang.String str24 = uRL20.getQuery();
        java.lang.String str25 = uRL20.getAuthority();
        java.lang.String str26 = uRL20.getFile();
        java.lang.String str27 = uRL20.getFile();
        java.lang.String str28 = uRL20.getProtocol();
        boolean boolean29 = uRL14.sameFile(uRL20);
        java.lang.String str30 = uRL14.getPath();
        java.lang.String str31 = uRL14.getAuthority();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str26, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str27, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "file" + "'", str28, "file");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str30, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test9618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9618");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URL uRL8 = new java.net.URL(uRL3, "file://exploded archive");
        java.lang.String str9 = uRL8.getHost();
        java.lang.String str10 = uRL8.getFile();
        java.lang.String str11 = uRL8.getAuthority();
        java.lang.String str12 = uRL8.getProtocol();
        java.lang.String str13 = uRL8.getPath();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL8.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "exploded archive" + "'", str9, "exploded archive");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "exploded archive" + "'", str11, "exploded archive");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file" + "'", str12, "file");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test9619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9619");
        java.net.URL uRL4 = new java.net.URL("file", "hi!", (int) (short) 10, "");
        java.lang.String str5 = uRL4.getUserInfo();
        int int6 = uRL4.getPort();
        java.lang.String str7 = uRL4.toExternalForm();
        org.junit.Assert.assertEquals(uRL4.toString(), "file://hi!:10");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file://hi!:10" + "'", str7, "file://hi!:10");
    }

    @Test
    public void test9620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9620");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file3 = fileEntryIterator2.current;
        java.io.File file4 = fileEntryIterator2.poll();
        java.io.File file5 = fileEntryIterator2.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        java.util.Comparator<java.io.File> fileComparator15 = fileComparator11.thenComparing(fileComparator14);
        fileEntryIterator6.entryComparator = fileComparator11;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator11.thenComparing((java.util.Comparator<java.io.File>) entryComparator17);
        fileEntryIterator2.entryComparator = entryComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        fileEntryIterator20.recursive = true;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator30.thenComparing(fileComparator33);
        fileEntryIterator25.entryComparator = fileComparator30;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator30.thenComparing(fileComparator38);
        fileEntryIterator20.entryComparator = fileComparator39;
        java.util.Comparator<java.io.File> fileComparator41 = entryComparator17.thenComparing(fileComparator39);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean48 = fileEntryIterator47.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean50 = explodedArchive49.recursive;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.util.jar.Manifest manifest52 = null;
        explodedArchive49.manifest = manifest52;
        java.io.File file54 = explodedArchive49.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.io.File file58 = fileEntryIterator55.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator55.current = file63;
        explodedArchive49.root = file63;
        fileEntryIterator47.root = file63;
        int int67 = entryComparator17.compare(file46, file63);
        java.util.Iterator<java.io.File> fileItor68 = fileEntryIterator0.listFiles(file46);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file70 = fileEntryIterator69.current;
        java.io.File file71 = fileEntryIterator69.poll();
        java.io.File file72 = fileEntryIterator69.poll();
        java.io.File file73 = fileEntryIterator69.current;
        boolean boolean74 = fileEntryIterator69.hasNext();
        boolean boolean75 = fileEntryIterator69.hasNext();
        java.io.File file76 = fileEntryIterator69.current;
        boolean boolean77 = fileEntryIterator69.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator78.stack;
        java.io.File file80 = fileEntryIterator78.current;
        java.io.File file81 = fileEntryIterator78.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator82 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file83 = fileEntryIterator82.current;
        boolean boolean84 = fileEntryIterator82.hasNext();
        java.util.Comparator<java.io.File> fileComparator85 = fileEntryIterator82.entryComparator;
        java.util.Comparator<java.io.File> fileComparator86 = fileEntryIterator82.entryComparator;
        fileEntryIterator78.entryComparator = fileComparator86;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator88 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue89 = fileEntryIterator88.stack;
        fileEntryIterator78.stack = fileItorQueue89;
        fileEntryIterator69.stack = fileItorQueue89;
        fileEntryIterator0.stack = fileItorQueue89;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry93 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(fileItor68);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(fileComparator85);
        org.junit.Assert.assertNotNull(fileComparator86);
        org.junit.Assert.assertNotNull(fileItorQueue89);
    }

    @Test
    public void test9621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9621");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.io.File file69 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter72 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList73 = explodedArchive0.getNestedArchives(entryFilter72);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList73);
    }

    @Test
    public void test9622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9622");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.getName();
        java.lang.String str3 = fileEntry0.getName();
        fileEntry0.name = "";
        java.io.File file6 = fileEntry0.file;
        java.lang.String str7 = fileEntry0.name;
        java.lang.String str8 = fileEntry0.getName();
        java.lang.String str9 = fileEntry0.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test9623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9623");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.lang.String str4 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean6 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean8 = explodedArchive7.recursive;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.util.jar.Manifest manifest10 = null;
        explodedArchive7.manifest = manifest10;
        java.io.File file12 = explodedArchive7.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.io.File file16 = fileEntryIterator13.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.manifestFile;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.io.File file20 = null;
        java.io.File file21 = explodedArchive17.getManifestFile(file20);
        fileEntryIterator13.current = file21;
        explodedArchive7.root = file21;
        fileEntryIterator5.root = file21;
        java.io.File file25 = explodedArchive0.getManifestFile(file21);
        java.io.File file26 = explodedArchive0.root;
        boolean boolean27 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest28 = null;
        explodedArchive0.manifest = manifest28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        fileEntryIterator33.recursive = true;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator44.entryComparator;
        java.util.Comparator<java.io.File> fileComparator47 = fileComparator43.thenComparing(fileComparator46);
        fileEntryIterator38.entryComparator = fileComparator43;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator43.thenComparing(fileComparator51);
        fileEntryIterator33.entryComparator = fileComparator52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        java.io.File file57 = null;
        java.io.File file58 = explodedArchive54.getManifestFile(file57);
        fileEntryIterator33.root = file58;
        explodedArchive30.manifestFile = file58;
        explodedArchive0.root = file58;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9624");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        boolean boolean7 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        boolean boolean13 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator14.root = file39;
        explodedArchive8.root = file39;
        java.util.Iterator<java.io.File> fileItor42 = fileEntryIterator5.listFiles(file39);
        fileEntry0.file = file39;
        java.io.File file44 = fileEntry0.getFile();
        boolean boolean45 = fileEntry0.isDirectory();
        java.io.File file46 = fileEntry0.file;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9625");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator22.thenComparing(fileComparator25);
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator19.thenComparing(fileComparator25);
        java.util.Comparator<java.io.File> fileComparator28 = entryComparator15.thenComparing(fileComparator27);
        java.util.Comparator<java.io.File> fileComparator29 = entryComparator15.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        fileEntryIterator30.recursive = true;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator40.thenComparing(fileComparator43);
        fileEntryIterator35.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        java.util.Comparator<java.io.File> fileComparator49 = fileComparator40.thenComparing(fileComparator48);
        fileEntryIterator30.entryComparator = fileComparator49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        fileEntryIterator30.root = file55;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = entryComparator15.thenComparing(fileComparator57);
        fileEntryIterator0.entryComparator = entryComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean61 = explodedArchive60.recursive;
        java.io.File file62 = explodedArchive60.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file64 = fileEntryIterator63.current;
        java.io.File file65 = fileEntryIterator63.poll();
        java.io.File file66 = fileEntryIterator63.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator63.stack;
        java.io.File file68 = fileEntryIterator63.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.io.File file71 = fileEntryIterator69.current;
        java.io.File file72 = fileEntryIterator69.current;
        fileEntryIterator69.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file76 = explodedArchive75.manifestFile;
        java.io.File file77 = explodedArchive75.manifestFile;
        java.io.File file78 = null;
        java.io.File file79 = explodedArchive75.getManifestFile(file78);
        fileEntryIterator69.root = file79;
        fileEntryIterator63.root = file79;
        java.io.File file82 = explodedArchive60.getManifestFile(file79);
        java.util.Iterator<java.io.File> fileItor83 = fileEntryIterator0.listFiles(file82);
        fileEntryIterator0.recursive = true;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor83);
    }

    @Test
    public void test9626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9626");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getProtocol();
        java.lang.String str11 = uRL9.getFile();
        java.lang.String str12 = uRL9.getQuery();
        java.lang.String str13 = uRL9.getRef();
        java.lang.String str14 = uRL9.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file" + "'", str10, "file");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test9627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9627");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getQuery();
        java.lang.String str16 = uRL14.getUserInfo();
        java.net.URL uRL17 = null;
        java.net.URLStreamHandler uRLStreamHandler19 = null;
        java.net.URL uRL20 = new java.net.URL(uRL17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler19);
        java.lang.String str21 = uRL20.getHost();
        java.lang.String str22 = uRL20.getAuthority();
        java.lang.String str23 = uRL20.getHost();
        java.lang.String str24 = uRL20.getQuery();
        java.lang.String str25 = uRL20.getAuthority();
        java.lang.String str26 = uRL20.getFile();
        java.lang.String str27 = uRL20.getFile();
        java.lang.String str28 = uRL20.getProtocol();
        boolean boolean29 = uRL14.sameFile(uRL20);
        java.lang.String str30 = uRL14.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL14, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler32);
        java.lang.String str34 = uRL14.getPath();
        java.lang.String str35 = uRL14.getProtocol();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str26, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str27, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "file" + "'", str28, "file");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "file" + "'", str30, "file");
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "file" + "'", str35, "file");
    }

    @Test
    public void test9628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9628");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URLConnection uRLConnection73 = uRL72.openConnection();
        java.lang.String str74 = uRL72.getHost();
        java.lang.String str75 = uRL72.getUserInfo();
        int int76 = uRL72.getPort();
        int int77 = uRL72.getPort();
        java.lang.String str78 = uRL72.getHost();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
    }

    @Test
    public void test9629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9629");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.name;
        java.io.File file6 = fileEntry0.getFile();
        java.io.File file7 = fileEntry0.file;
        java.io.File file8 = fileEntry0.file;
        java.lang.String str9 = fileEntry0.name;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file11 = fileEntry10.getFile();
        java.lang.String str12 = fileEntry10.getName();
        java.lang.String str13 = fileEntry10.getName();
        fileEntry10.name = "";
        java.io.File file16 = fileEntry10.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        boolean boolean19 = fileEntryIterator17.hasNext();
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator17.entryComparator;
        fileEntryIterator17.recursive = true;
        java.io.File file23 = fileEntryIterator17.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry24.name = "exploded archive";
        java.lang.String str27 = fileEntry24.getName();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.manifestFile;
        java.io.File file30 = explodedArchive28.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        fileEntryIterator31.recursive = true;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        java.util.Comparator<java.io.File> fileComparator45 = fileComparator41.thenComparing(fileComparator44);
        fileEntryIterator36.entryComparator = fileComparator41;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        java.util.Comparator<java.io.File> fileComparator50 = fileComparator41.thenComparing(fileComparator49);
        fileEntryIterator31.entryComparator = fileComparator50;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        fileEntryIterator31.root = file56;
        explodedArchive28.manifestFile = file56;
        java.util.jar.Manifest manifest59 = explodedArchive28.manifest;
        java.util.jar.Manifest manifest60 = explodedArchive28.manifest;
        java.util.jar.Manifest manifest61 = explodedArchive28.getManifest();
        java.util.jar.Manifest manifest62 = explodedArchive28.getManifest();
        java.io.File file63 = explodedArchive28.root;
        java.io.File file64 = explodedArchive28.manifestFile;
        java.io.File file65 = explodedArchive28.manifestFile;
        fileEntry24.file = file65;
        fileEntryIterator17.root = file65;
        fileEntry10.file = file65;
        fileEntry0.file = file65;
        java.io.File file70 = fileEntry0.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "exploded archive" + "'", str27, "exploded archive");
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertNull(manifest60);
        org.junit.Assert.assertNull(manifest61);
        org.junit.Assert.assertNull(manifest62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9630");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getHost();
        java.lang.String str10 = uRL3.getAuthority();
        java.net.URL uRL12 = new java.net.URL(uRL3, "hi!");
        java.lang.String str13 = uRL3.getUserInfo();
        int int14 = uRL3.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.manifestFile;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.io.File file18 = null;
        java.io.File file19 = explodedArchive15.getManifestFile(file18);
        boolean boolean20 = explodedArchive15.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        fileEntryIterator21.recursive = true;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator21.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator21.root = file46;
        explodedArchive15.root = file46;
        explodedArchive15.recursive = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive15.getNestedArchives(entryFilter51);
        java.net.URL uRL53 = explodedArchive15.getUrl();
        java.lang.String str54 = uRL53.toExternalForm();
        java.lang.String str55 = uRL53.getPath();
        java.net.URLStreamHandler uRLStreamHandler57 = null;
        java.net.URL uRL58 = new java.net.URL(uRL53, "hi!", uRLStreamHandler57);
        boolean boolean59 = uRL3.sameFile(uRL58);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream60 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertNotNull(uRL53);
// flaky:         org.junit.Assert.assertEquals(uRL53.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str54, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str55, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals(uRL58.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test9631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9631");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file18 = fileEntry17.getFile();
        java.io.File file19 = fileEntry17.file;
        fileEntry17.name = "";
        java.lang.String str22 = fileEntry17.name;
        java.io.File file23 = fileEntry17.file;
        java.io.File file24 = fileEntry17.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file31 = fileEntry30.getFile();
        java.lang.String str32 = fileEntry30.name;
        java.io.File file33 = fileEntry30.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        boolean boolean36 = fileEntryIterator34.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        boolean boolean42 = explodedArchive37.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        fileEntryIterator43.recursive = true;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator53.thenComparing(fileComparator56);
        fileEntryIterator48.entryComparator = fileComparator53;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator53.thenComparing(fileComparator61);
        fileEntryIterator43.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        fileEntryIterator43.root = file68;
        explodedArchive37.root = file68;
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator34.listFiles(file68);
        fileEntry30.file = file68;
        explodedArchive25.manifestFile = file68;
        fileEntry17.file = file68;
        explodedArchive0.root = file68;
        explodedArchive0.recursive = false;
        explodedArchive0.recursive = true;
        java.net.URL uRL80 = explodedArchive0.getUrl();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter81 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList82 = explodedArchive0.getNestedArchives(entryFilter81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest83 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor71);
        org.junit.Assert.assertNotNull(uRL80);
// flaky:         org.junit.Assert.assertEquals(uRL80.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList82);
    }

    @Test
    public void test9632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9632");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.root;
        java.io.File file4 = explodedArchive0.root;
        explodedArchive0.recursive = false;
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive0.getManifestFile(file10);
        boolean boolean12 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive0.getNestedArchives(entryFilter13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test9633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9633");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.lang.String str3 = fileEntry0.getName();
        java.lang.String str4 = fileEntry0.getName();
        java.lang.String str5 = fileEntry0.name;
        fileEntry0.name = "hi!";
        java.io.File file8 = fileEntry0.file;
        fileEntry0.name = "";
        java.lang.String str11 = fileEntry0.name;
        java.lang.String str12 = fileEntry0.name;
        java.io.File file13 = null;
        fileEntry0.file = file13;
        java.io.File file15 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file17 = fileEntryIterator16.current;
        java.io.File file18 = null;
        fileEntryIterator16.current = file18;
        java.io.File file20 = fileEntryIterator16.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.manifestFile;
        java.io.File file23 = explodedArchive21.manifestFile;
        java.io.File file24 = null;
        java.io.File file25 = explodedArchive21.getManifestFile(file24);
        boolean boolean26 = explodedArchive21.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        fileEntryIterator27.recursive = true;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator37.thenComparing(fileComparator40);
        fileEntryIterator32.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator37.thenComparing(fileComparator45);
        fileEntryIterator27.entryComparator = fileComparator46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        fileEntryIterator27.root = file52;
        explodedArchive21.root = file52;
        explodedArchive21.recursive = false;
        java.util.jar.Manifest manifest57 = null;
        explodedArchive21.manifest = manifest57;
        java.lang.String str59 = explodedArchive21.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean61 = explodedArchive60.recursive;
        boolean boolean62 = explodedArchive60.recursive;
        java.io.File file63 = explodedArchive60.root;
        java.io.File file64 = null;
        java.io.File file65 = explodedArchive60.getManifestFile(file64);
        explodedArchive21.manifestFile = file64;
        java.io.File file67 = explodedArchive21.root;
        java.util.Iterator<java.io.File> fileItor68 = fileEntryIterator16.listFiles(file67);
        fileEntry0.file = file67;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str59, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor68);
    }

    @Test
    public void test9634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9634");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.manifestFile;
        java.io.File file4 = explodedArchive2.manifestFile;
        java.lang.String str5 = explodedArchive2.toString();
        java.lang.String str6 = explodedArchive2.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean8 = fileEntryIterator7.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean10 = explodedArchive9.recursive;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive9.manifest = manifest12;
        java.io.File file14 = explodedArchive9.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.io.File file18 = fileEntryIterator15.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.manifestFile;
        java.io.File file21 = explodedArchive19.manifestFile;
        java.io.File file22 = null;
        java.io.File file23 = explodedArchive19.getManifestFile(file22);
        fileEntryIterator15.current = file23;
        explodedArchive9.root = file23;
        fileEntryIterator7.root = file23;
        java.io.File file27 = explodedArchive2.getManifestFile(file23);
        java.util.Iterator<java.io.File> fileItor28 = fileEntryIterator0.listFiles(file27);
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry30.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.io.File file35 = fileEntryIterator33.current;
        boolean boolean36 = fileEntryIterator33.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator33.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean39 = explodedArchive38.recursive;
        boolean boolean40 = explodedArchive38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file42 = explodedArchive41.manifestFile;
        java.io.File file43 = explodedArchive41.manifestFile;
        java.io.File file44 = null;
        java.io.File file45 = explodedArchive41.getManifestFile(file44);
        explodedArchive38.root = file45;
        fileEntryIterator33.root = file45;
        fileEntry30.file = file45;
        java.io.File file49 = fileEntry30.getFile();
        java.lang.String str50 = fileEntry30.name;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean52 = explodedArchive51.recursive;
        java.lang.String str53 = explodedArchive51.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean56 = fileEntryIterator55.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean58 = explodedArchive57.recursive;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.util.jar.Manifest manifest60 = null;
        explodedArchive57.manifest = manifest60;
        java.io.File file62 = explodedArchive57.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.io.File file66 = fileEntryIterator63.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file68 = explodedArchive67.manifestFile;
        java.io.File file69 = explodedArchive67.manifestFile;
        java.io.File file70 = null;
        java.io.File file71 = explodedArchive67.getManifestFile(file70);
        fileEntryIterator63.current = file71;
        explodedArchive57.root = file71;
        fileEntryIterator55.root = file71;
        explodedArchive54.root = file71;
        java.io.File file76 = explodedArchive54.root;
        explodedArchive51.manifestFile = file76;
        java.io.File file78 = explodedArchive51.manifestFile;
        fileEntry30.file = file78;
        java.util.Iterator<java.io.File> fileItor80 = fileEntryIterator0.listFiles(file78);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator81 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean82 = fileEntryIterator81.recursive;
        boolean boolean83 = fileEntryIterator81.recursive;
        boolean boolean84 = fileEntryIterator81.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator85 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file86 = fileEntryIterator85.current;
        boolean boolean87 = fileEntryIterator85.hasNext();
        java.util.Comparator<java.io.File> fileComparator88 = fileEntryIterator85.entryComparator;
        java.util.Comparator<java.io.File> fileComparator89 = fileComparator88.reversed();
        fileEntryIterator81.entryComparator = fileComparator88;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue91 = fileEntryIterator81.stack;
        fileEntryIterator0.stack = fileItorQueue91;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "exploded archive" + "'", str5, "exploded archive");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "exploded archive" + "'", str50, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "exploded archive" + "'", str53, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(fileComparator88);
        org.junit.Assert.assertNotNull(fileComparator89);
        org.junit.Assert.assertNotNull(fileItorQueue91);
    }

    @Test
    public void test9635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9635");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        fileEntryIterator0.root = file6;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.io.File file12 = null;
        java.io.File file13 = explodedArchive9.getManifestFile(file12);
        java.util.Iterator<java.io.File> fileItor14 = fileEntryIterator0.listFiles(file13);
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator0.stack;
        boolean boolean16 = fileEntryIterator0.recursive;
        boolean boolean17 = fileEntryIterator0.hasNext();
        java.io.File file18 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = false;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator0.stack;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator0.stack;
        java.io.File file23 = fileEntryIterator0.current;
        java.io.File file24 = fileEntryIterator0.poll();
        java.lang.Class<?> wildcardClass25 = fileEntryIterator0.getClass();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor14);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test9636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9636");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", (int) (byte) -1, "", uRLStreamHandler4);
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        java.lang.String str18 = uRL17.toExternalForm();
        java.lang.String str19 = uRL17.getUserInfo();
        java.lang.String str20 = uRL17.getProtocol();
        java.net.URLConnection uRLConnection21 = uRL17.openConnection();
        java.net.URL uRL23 = new java.net.URL(uRL17, "file://exploded archive");
        java.lang.String str24 = uRL17.getRef();
        java.lang.String str25 = uRL17.getFile();
        java.lang.String str26 = uRL17.getRef();
        boolean boolean27 = uRL5.sameFile(uRL17);
        java.lang.String str28 = uRL5.getProtocol();
        java.lang.String str29 = uRL5.getQuery();
        java.net.URL uRL31 = new java.net.URL(uRL5, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/100");
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str18, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "file" + "'", str20, "file");
        org.junit.Assert.assertNotNull(uRLConnection21);
        org.junit.Assert.assertEquals(uRL23.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str25, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "file" + "'", str28, "file");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals(uRL31.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/100");
    }

    @Test
    public void test9637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9637");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        fileEntryIterator0.root = file10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file14 = fileEntryIterator13.current;
        java.io.File file15 = null;
        fileEntryIterator13.current = file15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean18 = explodedArchive17.recursive;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.util.jar.Manifest manifest20 = null;
        explodedArchive17.manifest = manifest20;
        java.io.File file22 = explodedArchive17.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.io.File file26 = fileEntryIterator23.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator23.current = file31;
        explodedArchive17.root = file31;
        fileEntryIterator13.root = file31;
        fileEntryIterator0.current = file31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file37 = fileEntryIterator36.current;
        java.io.File file38 = fileEntryIterator36.poll();
        java.io.File file39 = fileEntryIterator36.poll();
        java.io.File file40 = fileEntryIterator36.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.io.File file43 = fileEntryIterator41.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        fileEntryIterator41.root = file47;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        java.util.Iterator<java.io.File> fileItor55 = fileEntryIterator41.listFiles(file54);
        fileEntryIterator36.root = file54;
        fileEntryIterator0.current = file54;
        java.io.File file58 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.io.File file61 = fileEntryIterator59.current;
        boolean boolean62 = fileEntryIterator59.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator59.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean65 = explodedArchive64.recursive;
        boolean boolean66 = explodedArchive64.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file68 = explodedArchive67.manifestFile;
        java.io.File file69 = explodedArchive67.manifestFile;
        java.io.File file70 = null;
        java.io.File file71 = explodedArchive67.getManifestFile(file70);
        explodedArchive64.root = file71;
        fileEntryIterator59.root = file71;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        java.util.Comparator<java.io.File> fileComparator79 = fileEntryIterator77.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator80 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue81 = fileEntryIterator80.stack;
        java.util.Comparator<java.io.File> fileComparator82 = fileEntryIterator80.entryComparator;
        java.util.Comparator<java.io.File> fileComparator83 = fileComparator79.thenComparing(fileComparator82);
        fileEntryIterator74.entryComparator = fileComparator79;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator85 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue86 = fileEntryIterator85.stack;
        java.util.Comparator<java.io.File> fileComparator87 = fileEntryIterator85.entryComparator;
        java.util.Comparator<java.io.File> fileComparator88 = fileComparator79.thenComparing(fileComparator87);
        fileEntryIterator59.entryComparator = fileComparator88;
        fileEntryIterator0.entryComparator = fileComparator88;
        java.io.File file91 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor55);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNotNull(fileItorQueue81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNotNull(fileComparator83);
        org.junit.Assert.assertNotNull(fileItorQueue86);
        org.junit.Assert.assertNotNull(fileComparator87);
        org.junit.Assert.assertNotNull(fileComparator88);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9638");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        java.lang.String str12 = uRL11.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test9639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9639");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.net.URL uRL8 = null;
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getHost();
        java.net.URI uRI13 = uRL11.toURI();
        java.lang.String str14 = uRL11.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL11, "file", uRLStreamHandler16);
        java.lang.String str18 = uRL11.getFile();
        int int19 = uRL11.getPort();
        java.lang.String str20 = uRL11.toExternalForm();
        boolean boolean21 = uRL3.sameFile(uRL11);
        java.net.URLStreamHandler uRLStreamHandler23 = null;
        java.net.URL uRL24 = new java.net.URL(uRL3, "exploded archive", uRLStreamHandler23);
        java.lang.String str25 = uRL24.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(uRI13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str18, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str20, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str25, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
    }

    @Test
    public void test9640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9640");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        fileEntryIterator5.root = file11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        java.util.Iterator<java.io.File> fileItor19 = fileEntryIterator5.listFiles(file18);
        fileEntryIterator0.root = file18;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator25.thenComparing(fileComparator31);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.util.Comparator<java.io.File> fileComparator43 = fileComparator39.thenComparing(fileComparator42);
        fileEntryIterator34.entryComparator = fileComparator39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator39.thenComparing((java.util.Comparator<java.io.File>) entryComparator45);
        java.util.Comparator<java.io.File> fileComparator47 = fileComparator33.thenComparing((java.util.Comparator<java.io.File>) entryComparator45);
        fileEntryIterator0.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file50 = fileEntryIterator49.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        java.util.Comparator<java.io.File> fileComparator60 = fileComparator56.thenComparing(fileComparator59);
        fileEntryIterator51.entryComparator = fileComparator56;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        java.util.Comparator<java.io.File> fileComparator65 = fileComparator56.thenComparing(fileComparator64);
        fileEntryIterator49.entryComparator = fileComparator65;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator33.thenComparing(fileComparator65);
        java.util.Comparator<java.io.File> fileComparator68 = fileComparator67.reversed();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor19);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileComparator68);
    }

    @Test
    public void test9641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9641");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        boolean boolean6 = fileEntryIterator4.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        boolean boolean12 = explodedArchive7.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        fileEntryIterator13.recursive = true;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator23.thenComparing(fileComparator26);
        fileEntryIterator18.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator23.thenComparing(fileComparator31);
        fileEntryIterator13.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator13.root = file38;
        explodedArchive7.root = file38;
        java.util.Iterator<java.io.File> fileItor41 = fileEntryIterator4.listFiles(file38);
        fileEntry0.file = file38;
        fileEntry0.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        java.io.File file45 = fileEntry0.file;
        java.io.File file46 = fileEntry0.getFile();
        java.lang.String str47 = fileEntry0.name;
        java.lang.String str48 = fileEntry0.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor41);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str47, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str48, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9642");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getRef();
        java.net.URL uRL8 = null;
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getHost();
        java.lang.String str13 = uRL11.getAuthority();
        java.lang.String str14 = uRL11.getQuery();
        int int15 = uRL11.getDefaultPort();
        java.lang.String str16 = uRL11.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler18 = null;
        java.net.URL uRL19 = new java.net.URL(uRL11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler18);
        java.lang.String str20 = uRL19.getFile();
        boolean boolean21 = uRL3.sameFile(uRL19);
        java.lang.String str22 = uRL19.getProtocol();
        java.net.URI uRI23 = uRL19.toURI();
        java.lang.String str24 = uRL19.getHost();
        java.lang.String str25 = uRL19.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL19.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str20, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "file" + "'", str22, "file");
        org.junit.Assert.assertNotNull(uRI23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str25, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9643");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        boolean boolean5 = fileEntryIterator0.hasNext();
        boolean boolean6 = fileEntryIterator0.hasNext();
        java.io.File file7 = fileEntryIterator0.current;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.manifestFile;
        java.io.File file13 = explodedArchive11.manifestFile;
        java.io.File file14 = null;
        java.io.File file15 = explodedArchive11.getManifestFile(file14);
        boolean boolean16 = explodedArchive11.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        fileEntryIterator17.recursive = true;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator27.thenComparing(fileComparator30);
        fileEntryIterator22.entryComparator = fileComparator27;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator27.thenComparing(fileComparator35);
        fileEntryIterator17.entryComparator = fileComparator36;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator17.root = file42;
        explodedArchive11.root = file42;
        explodedArchive11.recursive = false;
        java.util.jar.Manifest manifest47 = null;
        explodedArchive11.manifest = manifest47;
        java.lang.String str49 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive11.getNestedArchives(entryFilter50);
        boolean boolean52 = explodedArchive11.recursive;
        java.io.File file53 = null;
        explodedArchive11.manifestFile = file53;
        java.io.File file55 = explodedArchive11.root;
        fileEntryIterator0.root = file55;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file15.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str49, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9644");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        java.io.File file6 = null;
        explodedArchive0.root = file6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        java.io.File file10 = explodedArchive0.root;
        boolean boolean11 = explodedArchive0.recursive;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test9645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9645");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        boolean boolean7 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        boolean boolean13 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator14.root = file39;
        explodedArchive8.root = file39;
        java.util.Iterator<java.io.File> fileItor42 = fileEntryIterator5.listFiles(file39);
        fileEntry0.file = file39;
        fileEntry0.name = "";
        boolean boolean46 = fileEntry0.isDirectory();
        java.lang.String str47 = fileEntry0.name;
        java.lang.String str48 = fileEntry0.name;
        java.io.File file49 = fileEntry0.file;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9646");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.io.File file18 = fileEntryIterator0.root;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        boolean boolean22 = fileEntryIterator20.hasNext();
        boolean boolean23 = fileEntryIterator20.recursive;
        java.io.File file24 = fileEntryIterator20.root;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator20.stack;
        fileEntryIterator0.stack = fileItorQueue25;
        boolean boolean27 = fileEntryIterator0.recursive;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator38.thenComparing(fileComparator41);
        fileEntryIterator33.entryComparator = fileComparator38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator45 = fileComparator38.thenComparing((java.util.Comparator<java.io.File>) entryComparator44);
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator32.thenComparing((java.util.Comparator<java.io.File>) entryComparator44);
        fileEntryIterator0.entryComparator = entryComparator44;
        fileEntryIterator0.recursive = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator46);
    }

    @Test
    public void test9647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9647");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str75 = uRL69.getRef();
        java.lang.String str76 = uRL69.getFile();
        java.net.URL uRL78 = new java.net.URL(uRL69, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        java.net.URLStreamHandler uRLStreamHandler80 = null;
        java.net.URL uRL81 = new java.net.URL(uRL78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", uRLStreamHandler80);
        java.lang.String str82 = uRL78.getPath();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj83 = uRL78.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str75);
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str76, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals(uRL81.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str82, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
    }

    @Test
    public void test9648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9648");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator0.stack;
        java.io.File file7 = fileEntryIterator0.current;
        java.io.File file8 = null;
        fileEntryIterator0.root = file8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.io.File file12 = fileEntryIterator10.current;
        boolean boolean13 = fileEntryIterator10.hasNext();
        fileEntryIterator10.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.manifestFile;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.lang.String str19 = explodedArchive16.toString();
        java.lang.String str20 = explodedArchive16.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean22 = fileEntryIterator21.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean24 = explodedArchive23.recursive;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.util.jar.Manifest manifest26 = null;
        explodedArchive23.manifest = manifest26;
        java.io.File file28 = explodedArchive23.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.io.File file32 = fileEntryIterator29.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.manifestFile;
        java.io.File file35 = explodedArchive33.manifestFile;
        java.io.File file36 = null;
        java.io.File file37 = explodedArchive33.getManifestFile(file36);
        fileEntryIterator29.current = file37;
        explodedArchive23.root = file37;
        fileEntryIterator21.root = file37;
        java.io.File file41 = explodedArchive16.getManifestFile(file37);
        fileEntryIterator10.current = file41;
        java.io.File file43 = fileEntryIterator10.current;
        fileEntryIterator0.current = file43;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator0.stack;
        java.io.File file46 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "exploded archive" + "'", str19, "exploded archive");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "exploded archive" + "'", str20, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9649");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.io.File file5 = fileEntry0.file;
        java.lang.String str6 = fileEntry0.getName();
        java.lang.String str7 = fileEntry0.getName();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = fileEntry0.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test9650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9650");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        int int22 = uRL3.getDefaultPort();
        java.lang.String str23 = uRL3.getUserInfo();
        java.lang.String str24 = uRL3.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str24, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9651");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest32 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest33 = explodedArchive0.getManifest();
        boolean boolean34 = explodedArchive0.recursive;
        java.lang.String str35 = explodedArchive0.toString();
        explodedArchive0.recursive = true;
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest40 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "exploded archive" + "'", str35, "exploded archive");
        org.junit.Assert.assertNull(manifest40);
    }

    @Test
    public void test9652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9652");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file7;
        explodedArchive0.recursive = false;
        java.io.File file11 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.net.URL uRL14 = explodedArchive0.getUrl();
        java.lang.String str15 = uRL14.getAuthority();
        int int16 = uRL14.getDefaultPort();
        java.net.URLConnection uRLConnection17 = uRL14.openConnection();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL14);
// flaky:         org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(uRLConnection17);
    }

    @Test
    public void test9653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9653");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str73 = uRL72.getFile();
        java.lang.String str74 = uRL72.getUserInfo();
        java.lang.String str75 = uRL72.getPath();
        java.lang.String str76 = uRL72.getAuthority();
        int int77 = uRL72.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean79 = explodedArchive78.recursive;
        boolean boolean80 = explodedArchive78.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file82 = explodedArchive81.manifestFile;
        java.io.File file83 = explodedArchive81.manifestFile;
        java.io.File file84 = null;
        java.io.File file85 = explodedArchive81.getManifestFile(file84);
        explodedArchive78.root = file85;
        explodedArchive78.recursive = false;
        java.io.File file89 = explodedArchive78.root;
        java.net.URL uRL90 = explodedArchive78.getUrl();
        boolean boolean91 = uRL72.sameFile(uRL90);
        java.net.URI uRI92 = uRL72.toURI();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str73, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str75, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL90);
// flaky:         org.junit.Assert.assertEquals(uRL90.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(uRI92);
    }

    @Test
    public void test9654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9654");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.getName();
        java.io.File file6 = fileEntry0.getFile();
        java.io.File file7 = fileEntry0.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        fileEntryIterator8.recursive = true;
        java.io.File file12 = fileEntryIterator8.poll();
        fileEntryIterator8.recursive = true;
        boolean boolean15 = fileEntryIterator8.recursive;
        boolean boolean16 = fileEntryIterator8.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.io.File file19 = fileEntryIterator17.current;
        java.io.File file20 = fileEntryIterator17.current;
        fileEntryIterator17.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.io.File file26 = null;
        java.io.File file27 = explodedArchive23.getManifestFile(file26);
        fileEntryIterator17.root = file27;
        java.util.Iterator<java.io.File> fileItor29 = fileEntryIterator8.listFiles(file27);
        fileEntry0.file = file27;
        java.io.File file31 = fileEntry0.file;
        boolean boolean32 = fileEntry0.isDirectory();
        java.lang.String str33 = fileEntry0.name;
        java.io.File file34 = fileEntry0.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9655");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator0.stack = fileItorQueue8;
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file13 = fileEntryIterator12.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator12.entryComparator = fileComparator28;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator12.stack;
        boolean boolean31 = fileEntryIterator12.recursive;
        java.io.File file32 = fileEntryIterator12.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.io.File file35 = fileEntryIterator33.current;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator33.stack;
        fileEntryIterator12.stack = fileItorQueue36;
        fileEntryIterator0.stack = fileItorQueue36;
        fileEntryIterator0.recursive = false;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator0.stack;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileItorQueue41);
    }

    @Test
    public void test9656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9656");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        boolean boolean22 = uRL11.sameFile(uRL21);
        java.lang.String str23 = uRL11.getProtocol();
        java.net.URL uRL24 = null;
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL24, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler26);
        java.lang.String str28 = uRL27.getHost();
        int int29 = uRL27.getPort();
        java.net.URL uRL30 = null;
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL30, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler32);
        java.lang.String str34 = uRL33.getHost();
        java.lang.String str35 = uRL33.getAuthority();
        java.lang.String str36 = uRL33.getQuery();
        int int37 = uRL33.getDefaultPort();
        boolean boolean38 = uRL27.sameFile(uRL33);
        java.lang.String str39 = uRL33.getFile();
        boolean boolean40 = uRL11.sameFile(uRL33);
        java.net.URL uRL41 = null;
        java.net.URLStreamHandler uRLStreamHandler43 = null;
        java.net.URL uRL44 = new java.net.URL(uRL41, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler43);
        java.lang.String str45 = uRL44.getHost();
        int int46 = uRL44.getPort();
        java.net.URI uRI47 = uRL44.toURI();
        boolean boolean48 = uRL11.sameFile(uRL44);
        java.lang.String str49 = uRL11.getUserInfo();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file" + "'", str23, "file");
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals(uRL44.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(uRI47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test9657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9657");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        java.util.Comparator<java.io.File> fileComparator38 = fileComparator36.reversed();
        fileEntryIterator0.entryComparator = fileComparator36;
        java.io.File file40 = fileEntryIterator0.root;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator0.entryComparator;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator0.stack;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue42);
    }

    @Test
    public void test9658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9658");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator0.stack;
        boolean boolean4 = fileEntryIterator0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test9659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9659");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.io.File file10 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator11.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        java.util.Iterator<java.io.File> fileItor25 = fileEntryIterator11.listFiles(file24);
        fileEntryIterator6.root = file24;
        explodedArchive0.manifestFile = file24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        boolean boolean30 = fileEntryIterator28.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.manifestFile;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.io.File file34 = null;
        java.io.File file35 = explodedArchive31.getManifestFile(file34);
        boolean boolean36 = explodedArchive31.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        fileEntryIterator37.recursive = true;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator47.thenComparing(fileComparator50);
        fileEntryIterator42.entryComparator = fileComparator47;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator47.thenComparing(fileComparator55);
        fileEntryIterator37.entryComparator = fileComparator56;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.manifestFile;
        java.io.File file60 = explodedArchive58.manifestFile;
        java.io.File file61 = null;
        java.io.File file62 = explodedArchive58.getManifestFile(file61);
        fileEntryIterator37.root = file62;
        explodedArchive31.root = file62;
        java.util.Iterator<java.io.File> fileItor65 = fileEntryIterator28.listFiles(file62);
        java.io.File file66 = explodedArchive0.getManifestFile(file62);
        java.lang.String str67 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean70 = fileEntryIterator69.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean72 = explodedArchive71.recursive;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.util.jar.Manifest manifest74 = null;
        explodedArchive71.manifest = manifest74;
        java.io.File file76 = explodedArchive71.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        java.util.Comparator<java.io.File> fileComparator79 = fileEntryIterator77.entryComparator;
        java.io.File file80 = fileEntryIterator77.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file82 = explodedArchive81.manifestFile;
        java.io.File file83 = explodedArchive81.manifestFile;
        java.io.File file84 = null;
        java.io.File file85 = explodedArchive81.getManifestFile(file84);
        fileEntryIterator77.current = file85;
        explodedArchive71.root = file85;
        fileEntryIterator69.root = file85;
        explodedArchive68.root = file85;
        java.io.File file90 = explodedArchive0.getManifestFile(file85);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor25);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor65);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "exploded archive" + "'", str67, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file90.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9660");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        boolean boolean6 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator12.thenComparing(fileComparator15);
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator9.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator15;
        java.io.File file19 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = false;
        boolean boolean22 = fileEntryIterator0.recursive;
        boolean boolean23 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test9661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9661");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        explodedArchive0.recursive = true;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
    }

    @Test
    public void test9662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9662");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        boolean boolean41 = explodedArchive39.recursive;
        java.io.File file42 = explodedArchive39.root;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive39.getManifestFile(file43);
        explodedArchive0.manifestFile = file43;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive0.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        fileEntryIterator48.recursive = true;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator58.thenComparing(fileComparator61);
        fileEntryIterator53.entryComparator = fileComparator58;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator58.thenComparing(fileComparator66);
        fileEntryIterator48.entryComparator = fileComparator67;
        fileEntryIterator48.recursive = true;
        fileEntryIterator48.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator48.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean75 = explodedArchive74.recursive;
        boolean boolean76 = explodedArchive74.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file78 = explodedArchive77.manifestFile;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.io.File file80 = null;
        java.io.File file81 = explodedArchive77.getManifestFile(file80);
        explodedArchive74.root = file81;
        fileEntryIterator48.root = file81;
        java.io.File file84 = explodedArchive0.getManifestFile(file81);
        boolean boolean85 = explodedArchive0.recursive;
        java.net.URL uRL86 = explodedArchive0.getUrl();
        java.lang.Class<?> wildcardClass87 = explodedArchive0.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(uRL86);
// flaky:         org.junit.Assert.assertEquals(uRL86.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test9663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9663");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.io.File file37 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive0.getNestedArchives(entryFilter38);
        explodedArchive0.recursive = true;
        java.net.URL uRL42 = explodedArchive0.getUrl();
        explodedArchive0.recursive = true;
        java.io.File file45 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(uRL42);
// flaky:         org.junit.Assert.assertEquals(uRL42.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9664");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str73 = uRL72.getFile();
        java.lang.String str74 = uRL72.getQuery();
        java.lang.String str75 = uRL72.getHost();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str73, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
    }

    @Test
    public void test9665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9665");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler2);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test9666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9666");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.lang.String str3 = fileEntry0.getName();
        java.lang.String str4 = fileEntry0.getName();
        java.lang.String str5 = fileEntry0.name;
        java.lang.String str6 = fileEntry0.getName();
        java.io.File file7 = fileEntry0.getFile();
        java.io.File file8 = fileEntry0.getFile();
        java.lang.String str9 = fileEntry0.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test9667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9667");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator0.stack;
        boolean boolean4 = fileEntryIterator0.recursive;
        fileEntryIterator0.recursive = false;
        boolean boolean7 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator8.current = file13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.io.File file18 = fileEntryIterator16.current;
        java.util.ArrayDeque<java.util.Iterator<java.io.File>> fileItorQueue19 = new java.util.ArrayDeque<java.util.Iterator<java.io.File>>();
        fileEntryIterator16.stack = fileItorQueue19;
        boolean boolean21 = fileEntryIterator16.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator16.stack;
        fileEntryIterator8.stack = fileItorQueue22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.lang.String str27 = explodedArchive24.toString();
        java.lang.String str28 = explodedArchive24.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean30 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean32 = explodedArchive31.recursive;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.util.jar.Manifest manifest34 = null;
        explodedArchive31.manifest = manifest34;
        java.io.File file36 = explodedArchive31.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.io.File file40 = fileEntryIterator37.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file42 = explodedArchive41.manifestFile;
        java.io.File file43 = explodedArchive41.manifestFile;
        java.io.File file44 = null;
        java.io.File file45 = explodedArchive41.getManifestFile(file44);
        fileEntryIterator37.current = file45;
        explodedArchive31.root = file45;
        fileEntryIterator29.root = file45;
        java.io.File file49 = explodedArchive24.getManifestFile(file45);
        java.util.Iterator<java.io.File> fileItor50 = fileEntryIterator8.listFiles(file49);
        java.util.Iterator<java.io.File> fileItor51 = fileEntryIterator0.listFiles(file49);
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry53.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.io.File file58 = fileEntryIterator56.current;
        boolean boolean59 = fileEntryIterator56.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator56.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean62 = explodedArchive61.recursive;
        boolean boolean63 = explodedArchive61.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        explodedArchive61.root = file68;
        fileEntryIterator56.root = file68;
        fileEntry53.file = file68;
        java.util.Iterator<java.io.File> fileItor72 = fileEntryIterator0.listFiles(file68);
        fileEntryIterator0.recursive = false;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "exploded archive" + "'", str27, "exploded archive");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "exploded archive" + "'", str28, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor50);
        org.junit.Assert.assertNotNull(fileItor51);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor72);
    }

    @Test
    public void test9668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9668");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        fileEntry0.name = "file";
        java.io.File file7 = fileEntry0.file;
        java.lang.String str8 = fileEntry0.getName();
        java.io.File file9 = fileEntry0.getFile();
        java.io.File file10 = fileEntry0.getFile();
        java.io.File file11 = fileEntry0.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file" + "'", str8, "file");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test9669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9669");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.lang.String str19 = uRL3.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL3, "hi!", uRLStreamHandler21);
        java.lang.String str23 = uRL3.getUserInfo();
        java.net.URLStreamHandler uRLStreamHandler25 = null;
        java.net.URL uRL26 = new java.net.URL(uRL3, "file://exploded archive", uRLStreamHandler25);
        java.lang.String str27 = uRL3.getAuthority();
        java.lang.String str28 = uRL3.getQuery();
        java.net.URL uRL29 = null;
        java.net.URLStreamHandler uRLStreamHandler31 = null;
        java.net.URL uRL32 = new java.net.URL(uRL29, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler31);
        java.lang.String str33 = uRL32.getHost();
        java.lang.String str34 = uRL32.getAuthority();
        java.lang.String str35 = uRL32.getHost();
        java.lang.String str36 = uRL32.getQuery();
        java.lang.String str37 = uRL32.getPath();
        java.lang.String str38 = uRL32.getQuery();
        java.net.URL uRL40 = new java.net.URL(uRL32, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URLConnection uRLConnection41 = uRL40.openConnection();
        java.lang.String str42 = uRL40.getHost();
        java.net.URLStreamHandler uRLStreamHandler44 = null;
        java.net.URL uRL45 = new java.net.URL(uRL40, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler44);
        java.lang.String str46 = uRL45.getAuthority();
        java.lang.String str47 = uRL45.getQuery();
        java.lang.String str48 = uRL45.getRef();
        boolean boolean49 = uRL3.equals((java.lang.Object) uRL45);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "file" + "'", str19, "file");
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals(uRL26.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals(uRL32.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str37, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals(uRL40.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test9670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9670");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = null;
        fileEntryIterator0.current = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean5 = explodedArchive4.recursive;
        java.io.File file6 = explodedArchive4.manifestFile;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive4.manifest = manifest7;
        java.io.File file9 = explodedArchive4.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.io.File file13 = fileEntryIterator10.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator10.current = file18;
        explodedArchive4.root = file18;
        fileEntryIterator0.root = file18;
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file25 = fileEntryIterator24.current;
        boolean boolean26 = fileEntryIterator24.hasNext();
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file29 = fileEntryIterator28.current;
        java.io.File file30 = null;
        fileEntryIterator28.current = file30;
        java.io.File file32 = fileEntryIterator28.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file34 = fileEntry33.getFile();
        java.lang.String str35 = fileEntry33.name;
        java.io.File file36 = fileEntry33.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        boolean boolean39 = fileEntryIterator37.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        boolean boolean45 = explodedArchive40.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        fileEntryIterator46.recursive = true;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        java.util.Comparator<java.io.File> fileComparator60 = fileComparator56.thenComparing(fileComparator59);
        fileEntryIterator51.entryComparator = fileComparator56;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        java.util.Comparator<java.io.File> fileComparator65 = fileComparator56.thenComparing(fileComparator64);
        fileEntryIterator46.entryComparator = fileComparator65;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file68 = explodedArchive67.manifestFile;
        java.io.File file69 = explodedArchive67.manifestFile;
        java.io.File file70 = null;
        java.io.File file71 = explodedArchive67.getManifestFile(file70);
        fileEntryIterator46.root = file71;
        explodedArchive40.root = file71;
        java.util.Iterator<java.io.File> fileItor74 = fileEntryIterator37.listFiles(file71);
        fileEntry33.file = file71;
        fileEntryIterator28.current = file71;
        java.util.Iterator<java.io.File> fileItor77 = fileEntryIterator24.listFiles(file71);
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator24.stack;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator24.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator80 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue81 = fileEntryIterator80.stack;
        boolean boolean82 = fileEntryIterator80.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator83 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean84 = fileEntryIterator83.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator85 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue86 = fileEntryIterator85.stack;
        fileEntryIterator83.stack = fileItorQueue86;
        fileEntryIterator80.stack = fileItorQueue86;
        fileEntryIterator24.stack = fileItorQueue86;
        fileEntryIterator0.stack = fileItorQueue86;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor74);
        org.junit.Assert.assertNotNull(fileItor77);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNotNull(fileItorQueue81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(fileItorQueue86);
    }

    @Test
    public void test9671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9671");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive0.getNestedArchives(entryFilter42);
        explodedArchive0.recursive = false;
        boolean boolean46 = explodedArchive0.recursive;
        java.io.File file47 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9672");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator0.stack;
        java.io.File file7 = fileEntryIterator0.current;
        java.io.File file8 = null;
        fileEntryIterator0.root = file8;
        java.io.File file10 = fileEntryIterator0.root;
        java.io.File file11 = fileEntryIterator0.current;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.io.File file16 = fileEntryIterator14.current;
        java.io.File file17 = fileEntryIterator14.current;
        fileEntryIterator14.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        fileEntryIterator14.root = file24;
        boolean boolean26 = fileEntryIterator14.hasNext();
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file29 = fileEntryIterator28.current;
        boolean boolean30 = fileEntryIterator28.recursive;
        fileEntryIterator28.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator33.current = file38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        fileEntryIterator33.entryComparator = fileComparator43;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        java.util.Comparator<java.io.File> fileComparator54 = fileComparator50.thenComparing(fileComparator53);
        fileEntryIterator45.entryComparator = fileComparator50;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator50.thenComparing((java.util.Comparator<java.io.File>) entryComparator56);
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator43.thenComparing(fileComparator50);
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator58.reversed();
        fileEntryIterator28.entryComparator = fileComparator59;
        java.util.Comparator<java.io.File> fileComparator61 = fileComparator59.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.io.File file64 = fileEntryIterator62.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        fileEntryIterator62.entryComparator = fileComparator67;
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator67.reversed();
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator61.thenComparing(fileComparator69);
        fileEntryIterator14.entryComparator = fileComparator61;
        fileEntryIterator0.entryComparator = fileComparator61;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
    }

    @Test
    public void test9673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9673");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        fileEntryIterator0.root = file6;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.io.File file12 = null;
        java.io.File file13 = explodedArchive9.getManifestFile(file12);
        java.util.Iterator<java.io.File> fileItor14 = fileEntryIterator0.listFiles(file13);
        boolean boolean15 = fileEntryIterator0.hasNext();
        boolean boolean16 = fileEntryIterator0.hasNext();
        java.io.File file17 = fileEntryIterator0.poll();
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator0.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator18.reversed();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
    }

    @Test
    public void test9674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9674");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator5.stack;
        fileEntryIterator0.stack = fileItorQueue8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file11 = fileEntry10.getFile();
        java.lang.String str12 = fileEntry10.name;
        java.io.File file13 = null;
        fileEntry10.file = file13;
        java.io.File file15 = fileEntry10.file;
        java.lang.String str16 = fileEntry10.name;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.io.File file19 = fileEntryIterator17.current;
        java.io.File file20 = fileEntryIterator17.current;
        fileEntryIterator17.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.io.File file26 = null;
        java.io.File file27 = explodedArchive23.getManifestFile(file26);
        fileEntryIterator17.root = file27;
        fileEntry10.file = file27;
        java.lang.String str30 = fileEntry10.name;
        java.io.File file31 = fileEntry10.getFile();
        fileEntryIterator0.root = file31;
        java.io.File file33 = fileEntryIterator0.poll();
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file33);
    }

    @Test
    public void test9675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9675");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str73 = uRL72.getUserInfo();
        int int74 = uRL72.getDefaultPort();
        java.lang.String str75 = uRL72.getAuthority();
        java.lang.String str76 = uRL72.getAuthority();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
    }

    @Test
    public void test9676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9676");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URL uRL34 = null;
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler36);
        java.lang.String str38 = uRL37.getHost();
        java.lang.String str39 = uRL37.getAuthority();
        java.lang.String str40 = uRL37.getAuthority();
        java.lang.String str41 = uRL37.getFile();
        int int42 = uRL37.getPort();
        java.lang.String str43 = uRL37.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL37, "hi!");
        boolean boolean46 = uRL3.sameFile(uRL45);
        int int47 = uRL3.getDefaultPort();
        java.net.URL uRL48 = null;
        java.net.URLStreamHandler uRLStreamHandler50 = null;
        java.net.URL uRL51 = new java.net.URL(uRL48, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler50);
        java.lang.String str52 = uRL51.getHost();
        int int53 = uRL51.getPort();
        java.net.URLStreamHandler uRLStreamHandler55 = null;
        java.net.URL uRL56 = new java.net.URL(uRL51, "hi!", uRLStreamHandler55);
        java.net.URLConnection uRLConnection57 = uRL56.openConnection();
        boolean boolean58 = uRL3.sameFile(uRL56);
        java.lang.String str59 = uRL3.getRef();
        java.net.URL uRL61 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.lang.String str62 = uRL61.getQuery();
        java.lang.String str63 = uRL61.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str41, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals(uRL51.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals(uRL56.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(uRLConnection57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals(uRL61.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str63, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test9677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9677");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        java.io.File file7 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file9 = fileEntryIterator8.current;
        java.io.File file10 = fileEntryIterator8.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file12 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator18.thenComparing(fileComparator21);
        fileEntryIterator13.entryComparator = fileComparator18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator18.thenComparing(fileComparator26);
        fileEntryIterator11.entryComparator = fileComparator27;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator11.stack;
        fileEntryIterator8.stack = fileItorQueue29;
        boolean boolean31 = fileEntryIterator8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        fileEntryIterator32.recursive = true;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator42.thenComparing(fileComparator45);
        fileEntryIterator37.entryComparator = fileComparator42;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator42.thenComparing(fileComparator50);
        fileEntryIterator32.entryComparator = fileComparator51;
        fileEntryIterator32.recursive = true;
        fileEntryIterator32.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator32.stack;
        boolean boolean58 = fileEntryIterator32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.io.File file61 = fileEntryIterator59.current;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator59.stack;
        fileEntryIterator32.stack = fileItorQueue62;
        fileEntryIterator8.stack = fileItorQueue62;
        fileEntryIterator0.stack = fileItorQueue62;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = null;
        fileEntryIterator0.stack = fileItorQueue68;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(fileItorQueue62);
    }

    @Test
    public void test9678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9678");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.io.File file3 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        fileEntryIterator4.recursive = true;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator14.thenComparing(fileComparator22);
        fileEntryIterator4.entryComparator = fileComparator23;
        fileEntryIterator4.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator32.thenComparing(fileComparator35);
        fileEntryIterator27.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator32.thenComparing(fileComparator40);
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator40.reversed();
        fileEntryIterator4.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        fileEntryIterator44.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator54.thenComparing(fileComparator57);
        fileEntryIterator49.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator54.thenComparing(fileComparator62);
        fileEntryIterator44.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator44.root = file69;
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator4.listFiles(file69);
        java.io.File file72 = fileEntryIterator4.root;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator4.stack;
        fileEntryIterator0.stack = fileItorQueue73;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(fileItorQueue73);
    }

    @Test
    public void test9679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9679");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        boolean boolean5 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        boolean boolean8 = explodedArchive0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor9 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test9680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9680");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.io.File file4 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.io.File file7 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(manifest8);
    }

    @Test
    public void test9681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9681");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.net.URLStreamHandler uRLStreamHandler11 = null;
        java.net.URL uRL12 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler11);
        java.lang.String str13 = uRL12.getHost();
        java.lang.String str14 = uRL12.getUserInfo();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", uRLStreamHandler16);
        java.net.URL uRL19 = new java.net.URL(uRL12, "exploded archive");
        java.net.Proxy proxy20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection21 = uRL19.openConnection(proxy20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals(uRL19.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
    }

    @Test
    public void test9682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9682");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.manifestFile;
        java.io.File file6 = explodedArchive4.manifestFile;
        java.io.File file7 = null;
        java.io.File file8 = explodedArchive4.getManifestFile(file7);
        fileEntryIterator0.current = file8;
        boolean boolean10 = fileEntryIterator0.recursive;
        java.io.File file11 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.io.File file14 = fileEntryIterator12.current;
        java.util.ArrayDeque<java.util.Iterator<java.io.File>> fileItorQueue15 = new java.util.ArrayDeque<java.util.Iterator<java.io.File>>();
        fileEntryIterator12.stack = fileItorQueue15;
        boolean boolean17 = fileEntryIterator12.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator12.stack;
        fileEntryIterator0.stack = fileItorQueue18;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator0.stack;
        boolean boolean21 = fileEntryIterator0.recursive;
        boolean boolean22 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test9683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9683");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getQuery();
        java.lang.String str10 = uRL3.getQuery();
        java.lang.String str11 = uRL3.getPath();
        java.lang.String str12 = uRL3.getQuery();
        int int13 = uRL3.getDefaultPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test9684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9684");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("exploded archive", "file://exploded archive/file", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test9685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9685");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator38 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest39 = null;
        explodedArchive0.manifest = manifest39;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive0.getNestedArchives(entryFilter43);
        java.io.File file45 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        boolean boolean51 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        fileEntryIterator52.recursive = true;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator52.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        fileEntryIterator52.root = file77;
        explodedArchive46.root = file77;
        explodedArchive46.recursive = false;
        java.util.jar.Manifest manifest82 = null;
        explodedArchive46.manifest = manifest82;
        java.lang.String str84 = explodedArchive46.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter85 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList86 = explodedArchive46.getNestedArchives(entryFilter85);
        explodedArchive46.recursive = false;
        explodedArchive46.recursive = true;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor91 = explodedArchive46.iterator();
        explodedArchive46.recursive = true;
        java.lang.String str94 = explodedArchive46.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator95 = explodedArchive46.spliterator();
        java.io.File file96 = explodedArchive46.root;
        java.io.File file97 = explodedArchive0.getManifestFile(file96);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive99 = new org.springframework.boot.loader.archive.ExplodedArchive(file96, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(entrySpliterator38);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str84 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str84, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList86);
        org.junit.Assert.assertNotNull(entryItor91);
// flaky:         org.junit.Assert.assertEquals("'" + str94 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str94, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator95);
        org.junit.Assert.assertNotNull(file96);
        org.junit.Assert.assertEquals(file96.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file96.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file97);
        org.junit.Assert.assertEquals(file97.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file97.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9686");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        int int4 = uRL3.getPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test9687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9687");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file5 = fileEntryIterator4.current;
        java.io.File file6 = null;
        fileEntryIterator4.current = file6;
        java.io.File file8 = fileEntryIterator4.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file10 = fileEntry9.getFile();
        java.lang.String str11 = fileEntry9.name;
        java.io.File file12 = fileEntry9.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        boolean boolean15 = fileEntryIterator13.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.manifestFile;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.io.File file19 = null;
        java.io.File file20 = explodedArchive16.getManifestFile(file19);
        boolean boolean21 = explodedArchive16.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        fileEntryIterator22.recursive = true;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator32.thenComparing(fileComparator35);
        fileEntryIterator27.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator32.thenComparing(fileComparator40);
        fileEntryIterator22.entryComparator = fileComparator41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.manifestFile;
        java.io.File file45 = explodedArchive43.manifestFile;
        java.io.File file46 = null;
        java.io.File file47 = explodedArchive43.getManifestFile(file46);
        fileEntryIterator22.root = file47;
        explodedArchive16.root = file47;
        java.util.Iterator<java.io.File> fileItor50 = fileEntryIterator13.listFiles(file47);
        fileEntry9.file = file47;
        fileEntryIterator4.current = file47;
        java.util.Iterator<java.io.File> fileItor53 = fileEntryIterator0.listFiles(file47);
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator0.stack;
        java.io.File file55 = null;
        fileEntryIterator0.current = file55;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        fileEntryIterator57.recursive = true;
        java.io.File file61 = fileEntryIterator57.poll();
        fileEntryIterator57.recursive = true;
        boolean boolean64 = fileEntryIterator57.recursive;
        boolean boolean65 = fileEntryIterator57.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.io.File file68 = fileEntryIterator66.current;
        java.io.File file69 = fileEntryIterator66.current;
        fileEntryIterator66.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file73 = explodedArchive72.manifestFile;
        java.io.File file74 = explodedArchive72.manifestFile;
        java.io.File file75 = null;
        java.io.File file76 = explodedArchive72.getManifestFile(file75);
        fileEntryIterator66.root = file76;
        java.util.Iterator<java.io.File> fileItor78 = fileEntryIterator57.listFiles(file76);
        fileEntryIterator0.current = file76;
        java.io.File file80 = fileEntryIterator0.current;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor50);
        org.junit.Assert.assertNotNull(fileItor53);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor78);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9688");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLConnection uRLConnection9 = uRL3.openConnection();
        java.lang.String str10 = uRL3.toExternalForm();
        java.lang.String str11 = uRL3.getAuthority();
        int int12 = uRL3.getDefaultPort();
        java.lang.String str13 = uRL3.getRef();
        java.lang.String str14 = uRL3.getQuery();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(uRLConnection9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test9689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9689");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        boolean boolean41 = explodedArchive39.recursive;
        java.io.File file42 = explodedArchive39.root;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive39.getManifestFile(file43);
        explodedArchive0.manifestFile = file43;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive0.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        fileEntryIterator48.recursive = true;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator58.thenComparing(fileComparator61);
        fileEntryIterator53.entryComparator = fileComparator58;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator58.thenComparing(fileComparator66);
        fileEntryIterator48.entryComparator = fileComparator67;
        fileEntryIterator48.recursive = true;
        fileEntryIterator48.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator48.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean75 = explodedArchive74.recursive;
        boolean boolean76 = explodedArchive74.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file78 = explodedArchive77.manifestFile;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.io.File file80 = null;
        java.io.File file81 = explodedArchive77.getManifestFile(file80);
        explodedArchive74.root = file81;
        fileEntryIterator48.root = file81;
        java.io.File file84 = explodedArchive0.getManifestFile(file81);
        boolean boolean85 = explodedArchive0.recursive;
        java.lang.String str86 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator87 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest88 = null;
        explodedArchive0.manifest = manifest88;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str86, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator87);
    }

    @Test
    public void test9690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9690");
        java.lang.String[] strArray15 = new java.lang.String[] { "file://hi!hi!", "file://exploded archive:0/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "file://exploded archive:0", "file://exploded archive/exploded archive", "file://hi!hi!", "file://hi!:100hi!", "file://hi!hi!", "file://exploded archive", "file://exploded archive", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "file://exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet16;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet16;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet16;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet16;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet16;
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test9691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9691");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = true;
        java.io.File file6 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file8 = fileEntryIterator7.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator14.thenComparing(fileComparator22);
        fileEntryIterator7.entryComparator = fileComparator23;
        boolean boolean25 = fileEntryIterator7.hasNext();
        java.io.File file26 = fileEntryIterator7.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        fileEntryIterator30.recursive = true;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator40.thenComparing(fileComparator43);
        fileEntryIterator35.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        java.util.Comparator<java.io.File> fileComparator49 = fileComparator40.thenComparing(fileComparator48);
        fileEntryIterator30.entryComparator = fileComparator49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        fileEntryIterator30.root = file55;
        explodedArchive27.manifestFile = file55;
        java.util.jar.Manifest manifest58 = explodedArchive27.manifest;
        boolean boolean59 = explodedArchive27.recursive;
        java.util.jar.Manifest manifest60 = explodedArchive27.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file62 = fileEntryIterator61.current;
        java.io.File file63 = fileEntryIterator61.poll();
        java.io.File file64 = fileEntryIterator61.poll();
        java.io.File file65 = fileEntryIterator61.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.io.File file68 = fileEntryIterator66.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file70 = explodedArchive69.manifestFile;
        java.io.File file71 = explodedArchive69.manifestFile;
        java.io.File file72 = null;
        java.io.File file73 = explodedArchive69.getManifestFile(file72);
        fileEntryIterator66.root = file72;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file76 = explodedArchive75.manifestFile;
        java.io.File file77 = explodedArchive75.manifestFile;
        java.io.File file78 = null;
        java.io.File file79 = explodedArchive75.getManifestFile(file78);
        java.util.Iterator<java.io.File> fileItor80 = fileEntryIterator66.listFiles(file79);
        fileEntryIterator61.root = file79;
        explodedArchive27.manifestFile = file79;
        java.io.File file83 = explodedArchive27.manifestFile;
        fileEntryIterator7.current = file83;
        fileEntryIterator0.root = file83;
        boolean boolean86 = fileEntryIterator0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry87 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(manifest60);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor80);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test9692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9692");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.lang.String str4 = explodedArchive0.toString();
        java.lang.String str5 = explodedArchive0.toString();
        explodedArchive0.recursive = false;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "exploded archive" + "'", str5, "exploded archive");
    }

    @Test
    public void test9693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9693");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL8 = null;
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getHost();
        java.net.URI uRI13 = uRL11.toURI();
        java.lang.String str14 = uRL11.toExternalForm();
        boolean boolean15 = uRL3.sameFile(uRL11);
        java.net.URL uRL17 = new java.net.URL(uRL3, "");
        java.net.URLConnection uRLConnection18 = uRL17.openConnection();
        java.lang.String str19 = uRL17.getUserInfo();
        java.net.URL uRL21 = new java.net.URL(uRL17, "file://hi!hi!");
        java.net.URL uRL23 = new java.net.URL(uRL17, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        java.net.URL uRL28 = new java.net.URL("file", "", 100, "file://exploded archive:0");
        java.lang.Class<?> wildcardClass29 = uRL28.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive30.recursive = true;
        java.io.File file33 = explodedArchive30.manifestFile;
        java.util.jar.Manifest manifest34 = null;
        explodedArchive30.manifest = manifest34;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive30.manifest = manifest36;
        java.lang.Class<?> wildcardClass38 = explodedArchive30.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file40 = fileEntryIterator39.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        java.util.Comparator<java.io.File> fileComparator50 = fileComparator46.thenComparing(fileComparator49);
        fileEntryIterator41.entryComparator = fileComparator46;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        java.util.Comparator<java.io.File> fileComparator55 = fileComparator46.thenComparing(fileComparator54);
        fileEntryIterator39.entryComparator = fileComparator55;
        java.lang.Class<?> wildcardClass57 = fileComparator55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[] { wildcardClass29, wildcardClass38, wildcardClass57 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = uRL17.getContent(classArray58);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(uRI13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals(uRL21.toString(), "file://hi!hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL28.toString(), "file://:100file://exploded archive:0");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray58);
    }

    @Test
    public void test9694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9694");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.lang.String str34 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator35 = explodedArchive0.spliterator();
        java.io.File file36 = null;
        explodedArchive0.manifestFile = file36;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive0.getNestedArchives(entryFilter38);
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive0.manifest = manifest42;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator35);
        org.junit.Assert.assertNotNull(archiveList39);
    }

    @Test
    public void test9695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9695");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        boolean boolean38 = explodedArchive0.recursive;
        java.net.URL uRL39 = explodedArchive0.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file41 = fileEntry40.getFile();
        java.io.File file42 = fileEntry40.file;
        fileEntry40.name = "";
        java.io.File file45 = fileEntry40.file;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean47 = explodedArchive46.recursive;
        boolean boolean48 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        explodedArchive46.root = file53;
        explodedArchive46.recursive = false;
        java.io.File file57 = explodedArchive46.root;
        fileEntry40.file = file57;
        java.io.File file59 = explodedArchive0.getManifestFile(file57);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry60.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.io.File file65 = fileEntryIterator63.current;
        boolean boolean66 = fileEntryIterator63.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator63.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean69 = explodedArchive68.recursive;
        boolean boolean70 = explodedArchive68.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.io.File file74 = null;
        java.io.File file75 = explodedArchive71.getManifestFile(file74);
        explodedArchive68.root = file75;
        fileEntryIterator63.root = file75;
        fileEntry60.file = file75;
        java.io.File file79 = fileEntry60.getFile();
        java.lang.String str80 = fileEntry60.name;
        fileEntry60.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        java.lang.String str83 = fileEntry60.name;
        java.io.File file84 = fileEntry60.getFile();
        java.io.File file85 = explodedArchive0.getManifestFile(file84);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(uRL39);
// flaky:         org.junit.Assert.assertEquals(uRL39.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "exploded archive" + "'", str80, "exploded archive");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str83, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9696");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator9.thenComparing(fileComparator17);
        fileEntryIterator0.entryComparator = fileComparator18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        boolean boolean25 = explodedArchive20.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        fileEntryIterator26.recursive = true;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator36.thenComparing(fileComparator39);
        fileEntryIterator31.entryComparator = fileComparator36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        java.util.Comparator<java.io.File> fileComparator45 = fileComparator36.thenComparing(fileComparator44);
        fileEntryIterator26.entryComparator = fileComparator45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.manifestFile;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.io.File file50 = null;
        java.io.File file51 = explodedArchive47.getManifestFile(file50);
        fileEntryIterator26.root = file51;
        explodedArchive20.root = file51;
        explodedArchive20.recursive = false;
        java.util.jar.Manifest manifest56 = null;
        explodedArchive20.manifest = manifest56;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file59 = fileEntryIterator58.current;
        java.io.File file60 = fileEntryIterator58.poll();
        java.io.File file61 = fileEntryIterator58.poll();
        java.io.File file62 = fileEntryIterator58.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.io.File file65 = fileEntryIterator63.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.manifestFile;
        java.io.File file68 = explodedArchive66.manifestFile;
        java.io.File file69 = null;
        java.io.File file70 = explodedArchive66.getManifestFile(file69);
        fileEntryIterator63.root = file69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file73 = explodedArchive72.manifestFile;
        java.io.File file74 = explodedArchive72.manifestFile;
        java.io.File file75 = null;
        java.io.File file76 = explodedArchive72.getManifestFile(file75);
        java.util.Iterator<java.io.File> fileItor77 = fileEntryIterator63.listFiles(file76);
        fileEntryIterator58.root = file76;
        explodedArchive20.root = file76;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter80 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList81 = explodedArchive20.getNestedArchives(entryFilter80);
        java.net.URL uRL82 = explodedArchive20.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file84 = explodedArchive83.manifestFile;
        java.io.File file85 = explodedArchive83.manifestFile;
        java.io.File file86 = null;
        java.io.File file87 = explodedArchive83.getManifestFile(file86);
        explodedArchive20.manifestFile = file87;
        java.io.File file89 = explodedArchive20.root;
        java.io.File file90 = explodedArchive20.root;
        fileEntryIterator0.root = file90;
        boolean boolean92 = fileEntryIterator0.recursive;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor77);
        org.junit.Assert.assertNotNull(archiveList81);
        org.junit.Assert.assertNotNull(uRL82);
// flaky:         org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file90.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test9697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9697");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getHost();
        java.lang.String str10 = uRL3.getAuthority();
        java.net.URL uRL12 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/100");
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/100");
    }

    @Test
    public void test9698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9698");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URL uRL34 = null;
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler36);
        java.lang.String str38 = uRL37.getHost();
        java.lang.String str39 = uRL37.getAuthority();
        java.lang.String str40 = uRL37.getAuthority();
        java.lang.String str41 = uRL37.getFile();
        int int42 = uRL37.getPort();
        java.lang.String str43 = uRL37.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL37, "hi!");
        boolean boolean46 = uRL3.sameFile(uRL45);
        int int47 = uRL3.getDefaultPort();
        java.net.URL uRL48 = null;
        java.net.URLStreamHandler uRLStreamHandler50 = null;
        java.net.URL uRL51 = new java.net.URL(uRL48, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler50);
        java.lang.String str52 = uRL51.getHost();
        int int53 = uRL51.getPort();
        java.net.URLStreamHandler uRLStreamHandler55 = null;
        java.net.URL uRL56 = new java.net.URL(uRL51, "hi!", uRLStreamHandler55);
        java.net.URLConnection uRLConnection57 = uRL56.openConnection();
        boolean boolean58 = uRL3.sameFile(uRL56);
        java.lang.String str59 = uRL3.getRef();
        java.lang.String str60 = uRL3.getRef();
        java.lang.String str61 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str41, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals(uRL51.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals(uRL56.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(uRLConnection57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str61, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9699");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.io.File file22 = explodedArchive0.root;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor23 = explodedArchive0.iterator();
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor23);
        org.junit.Assert.assertNull(manifest24);
    }

    @Test
    public void test9700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9700");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.lang.String str3 = fileEntry0.getName();
        java.lang.String str4 = fileEntry0.getName();
        java.lang.String str5 = fileEntry0.name;
        java.io.File file6 = fileEntry0.getFile();
        java.lang.String str7 = fileEntry0.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test9701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9701");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.recursive;
        boolean boolean2 = fileEntryIterator0.recursive;
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean7 = fileEntryIterator6.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean9 = explodedArchive8.recursive;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive8.manifest = manifest11;
        java.io.File file13 = explodedArchive8.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.io.File file17 = fileEntryIterator14.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.io.File file21 = null;
        java.io.File file22 = explodedArchive18.getManifestFile(file21);
        fileEntryIterator14.current = file22;
        explodedArchive8.root = file22;
        fileEntryIterator6.root = file22;
        explodedArchive5.root = file22;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator27 = explodedArchive5.spliterator();
        java.io.File file28 = explodedArchive5.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str30 = fileEntry29.name;
        java.io.File file31 = fileEntry29.file;
        fileEntry29.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        boolean boolean36 = fileEntryIterator34.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        boolean boolean42 = explodedArchive37.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        fileEntryIterator43.recursive = true;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator53.thenComparing(fileComparator56);
        fileEntryIterator48.entryComparator = fileComparator53;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator53.thenComparing(fileComparator61);
        fileEntryIterator43.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        fileEntryIterator43.root = file68;
        explodedArchive37.root = file68;
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator34.listFiles(file68);
        fileEntry29.file = file68;
        explodedArchive5.root = file68;
        java.util.Iterator<java.io.File> fileItor74 = fileEntryIterator0.listFiles(file68);
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator76 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file77 = fileEntryIterator76.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator78.stack;
        java.util.Comparator<java.io.File> fileComparator80 = fileEntryIterator78.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator81 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue82 = fileEntryIterator81.stack;
        java.util.Comparator<java.io.File> fileComparator83 = fileEntryIterator81.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator84 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue85 = fileEntryIterator84.stack;
        java.util.Comparator<java.io.File> fileComparator86 = fileEntryIterator84.entryComparator;
        java.util.Comparator<java.io.File> fileComparator87 = fileComparator83.thenComparing(fileComparator86);
        fileEntryIterator78.entryComparator = fileComparator83;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator89 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue90 = fileEntryIterator89.stack;
        java.util.Comparator<java.io.File> fileComparator91 = fileEntryIterator89.entryComparator;
        java.util.Comparator<java.io.File> fileComparator92 = fileComparator83.thenComparing(fileComparator91);
        fileEntryIterator76.entryComparator = fileComparator92;
        java.util.Comparator<java.io.File> fileComparator94 = fileComparator75.thenComparing(fileComparator92);
        java.util.Comparator<java.io.File> fileComparator95 = fileComparator92.reversed();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor71);
        org.junit.Assert.assertNotNull(fileItor74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNotNull(fileItorQueue82);
        org.junit.Assert.assertNotNull(fileComparator83);
        org.junit.Assert.assertNotNull(fileItorQueue85);
        org.junit.Assert.assertNotNull(fileComparator86);
        org.junit.Assert.assertNotNull(fileComparator87);
        org.junit.Assert.assertNotNull(fileItorQueue90);
        org.junit.Assert.assertNotNull(fileComparator91);
        org.junit.Assert.assertNotNull(fileComparator92);
        org.junit.Assert.assertNotNull(fileComparator94);
        org.junit.Assert.assertNotNull(fileComparator95);
    }

    @Test
    public void test9702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9702");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.root;
        boolean boolean3 = fileEntryIterator0.hasNext();
        java.lang.Class<?> wildcardClass4 = fileEntryIterator0.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test9703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9703");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file://exploded archive:0/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "file://exploded archive:0/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", (int) (byte) 1, "file://exploded archive/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive:0/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test9704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9704");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getRef();
        java.net.URL uRL7 = null;
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL7, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler9);
        java.lang.String str11 = uRL10.getHost();
        java.lang.String str12 = uRL10.getAuthority();
        java.lang.String str13 = uRL10.getAuthority();
        java.lang.String str14 = uRL10.getFile();
        int int15 = uRL10.getPort();
        java.lang.String str16 = uRL10.getRef();
        java.net.URL uRL18 = new java.net.URL(uRL10, "hi!");
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL(uRL18, "", uRLStreamHandler20);
        boolean boolean22 = uRL3.sameFile(uRL18);
        int int23 = uRL18.getDefaultPort();
        int int24 = uRL18.getDefaultPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL18.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL21.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test9705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9705");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.lang.String str6 = uRL3.getProtocol();
        java.lang.String str7 = uRL3.getPath();
        java.lang.String str8 = uRL3.getRef();
        java.net.URL uRL10 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URI uRI11 = uRL3.toURI();
        java.net.URL uRL13 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        java.lang.String str14 = uRL3.getAuthority();
        java.lang.String str15 = uRL3.getProtocol();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file" + "'", str6, "file");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI11);
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "file" + "'", str15, "file");
    }

    @Test
    public void test9706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9706");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file23 = fileEntryIterator22.current;
        java.io.File file24 = null;
        fileEntryIterator22.current = file24;
        java.io.File file26 = fileEntryIterator22.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file28 = fileEntry27.getFile();
        java.lang.String str29 = fileEntry27.name;
        java.io.File file30 = fileEntry27.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        boolean boolean33 = fileEntryIterator31.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        boolean boolean39 = explodedArchive34.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        fileEntryIterator40.recursive = true;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator40.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        java.util.Comparator<java.io.File> fileComparator54 = fileComparator50.thenComparing(fileComparator53);
        fileEntryIterator45.entryComparator = fileComparator50;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator50.thenComparing(fileComparator58);
        fileEntryIterator40.entryComparator = fileComparator59;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.manifestFile;
        java.io.File file63 = explodedArchive61.manifestFile;
        java.io.File file64 = null;
        java.io.File file65 = explodedArchive61.getManifestFile(file64);
        fileEntryIterator40.root = file65;
        explodedArchive34.root = file65;
        java.util.Iterator<java.io.File> fileItor68 = fileEntryIterator31.listFiles(file65);
        fileEntry27.file = file65;
        fileEntryIterator22.current = file65;
        explodedArchive0.manifestFile = file65;
        java.net.URL uRL72 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler74 = null;
        java.net.URL uRL75 = new java.net.URL(uRL72, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", uRLStreamHandler74);
        java.lang.String str76 = uRL75.getQuery();
        java.net.URL uRL78 = new java.net.URL(uRL75, "file:100");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor68);
        org.junit.Assert.assertNotNull(uRL72);
// flaky:         org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/100");
    }

    @Test
    public void test9707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9707");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        java.net.URL uRL17 = explodedArchive0.getUrl();
        java.util.jar.Manifest manifest18 = null;
        explodedArchive0.manifest = manifest18;
        java.util.jar.Manifest manifest20 = null;
        explodedArchive0.manifest = manifest20;
        java.io.File file22 = explodedArchive0.root;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL17);
// flaky:         org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9708");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", (int) (short) -1, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test9709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9709");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        boolean boolean22 = uRL11.sameFile(uRL21);
        java.lang.String str23 = uRL21.getPath();
        java.net.URLStreamHandler uRLStreamHandler25 = null;
        java.net.URL uRL26 = new java.net.URL(uRL21, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler25);
        java.lang.String str27 = uRL21.getHost();
        java.lang.String str28 = uRL21.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler30 = null;
        java.net.URL uRL31 = new java.net.URL(uRL21, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/100", uRLStreamHandler30);
        java.lang.String str32 = uRL31.getQuery();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals(uRL26.toString(), "file://exploded archive:0/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "exploded archive" + "'", str27, "exploded archive");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "file://exploded archive:0" + "'", str28, "file://exploded archive:0");
        org.junit.Assert.assertEquals(uRL31.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/100");
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test9710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9710");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.util.Comparator<java.io.File> fileComparator9 = fileComparator5.thenComparing(fileComparator8);
        fileEntryIterator0.entryComparator = fileComparator5;
        boolean boolean11 = fileEntryIterator0.recursive;
        fileEntryIterator0.recursive = false;
        java.io.File file14 = null;
        fileEntryIterator0.root = file14;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator0.stack;
        java.io.File file17 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNull(file17);
    }

    @Test
    public void test9711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9711");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.root;
        java.io.File file4 = null;
        java.io.File file5 = explodedArchive0.getManifestFile(file4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        boolean boolean11 = explodedArchive6.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        fileEntryIterator12.recursive = true;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator22.thenComparing(fileComparator25);
        fileEntryIterator17.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator22.thenComparing(fileComparator30);
        fileEntryIterator12.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.manifestFile;
        java.io.File file35 = explodedArchive33.manifestFile;
        java.io.File file36 = null;
        java.io.File file37 = explodedArchive33.getManifestFile(file36);
        fileEntryIterator12.root = file37;
        explodedArchive6.root = file37;
        explodedArchive6.recursive = false;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive6.manifest = manifest42;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file45 = fileEntryIterator44.current;
        java.io.File file46 = fileEntryIterator44.poll();
        java.io.File file47 = fileEntryIterator44.poll();
        java.io.File file48 = fileEntryIterator44.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.io.File file51 = fileEntryIterator49.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        fileEntryIterator49.root = file55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.manifestFile;
        java.io.File file60 = explodedArchive58.manifestFile;
        java.io.File file61 = null;
        java.io.File file62 = explodedArchive58.getManifestFile(file61);
        java.util.Iterator<java.io.File> fileItor63 = fileEntryIterator49.listFiles(file62);
        fileEntryIterator44.root = file62;
        explodedArchive6.root = file62;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter66 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList67 = explodedArchive6.getNestedArchives(entryFilter66);
        java.net.URL uRL68 = explodedArchive6.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file70 = explodedArchive69.manifestFile;
        java.io.File file71 = explodedArchive69.manifestFile;
        java.io.File file72 = null;
        java.io.File file73 = explodedArchive69.getManifestFile(file72);
        explodedArchive6.manifestFile = file73;
        explodedArchive0.manifestFile = file73;
        java.io.File file76 = explodedArchive0.root;
        java.util.jar.Manifest manifest77 = null;
        explodedArchive0.manifest = manifest77;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator79 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor63);
        org.junit.Assert.assertNotNull(archiveList67);
        org.junit.Assert.assertNotNull(uRL68);
// flaky:         org.junit.Assert.assertEquals(uRL68.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file76);
    }

    @Test
    public void test9712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9712");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        java.net.URL uRL17 = explodedArchive0.getUrl();
        java.net.URL uRL18 = null;
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL(uRL18, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        java.net.URI uRI23 = uRL21.toURI();
        java.lang.String str24 = uRL21.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL21, "file", uRLStreamHandler26);
        int int28 = uRL27.getPort();
        java.net.URI uRI29 = uRL27.toURI();
        java.lang.String str30 = uRL27.getPath();
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL27, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler32);
        java.lang.String str34 = uRL27.toExternalForm();
        boolean boolean35 = uRL17.sameFile(uRL27);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL17);
// flaky:         org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL21.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(uRI23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str24, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(uRI29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str30, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test9713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9713");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getQuery();
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URLConnection uRLConnection12 = uRL3.openConnection();
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL3, "file://exploded archive:0/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler14);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection12);
        org.junit.Assert.assertEquals(uRL15.toString(), "file://exploded archive:0/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test9714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9714");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getFile();
        java.lang.String str10 = uRL3.getFile();
        java.lang.String str11 = uRL3.getProtocol();
        java.lang.String str12 = uRL3.getRef();
        java.lang.String str13 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection14 = uRL3.openConnection();
        java.lang.String str15 = uRL3.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file" + "'", str11, "file");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "file" + "'", str15, "file");
    }

    @Test
    public void test9715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9715");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getRef();
        java.lang.String str8 = uRL3.getQuery();
        java.lang.String str9 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9716");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        boolean boolean7 = fileEntryIterator5.hasNext();
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator14.thenComparing((java.util.Comparator<java.io.File>) entryComparator20);
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator8.thenComparing((java.util.Comparator<java.io.File>) entryComparator20);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean24 = fileEntryIterator23.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean26 = explodedArchive25.recursive;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.util.jar.Manifest manifest28 = null;
        explodedArchive25.manifest = manifest28;
        java.io.File file30 = explodedArchive25.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        java.io.File file34 = fileEntryIterator31.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator31.current = file39;
        explodedArchive25.root = file39;
        fileEntryIterator23.root = file39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.manifestFile;
        java.io.File file45 = explodedArchive43.manifestFile;
        java.io.File file46 = null;
        java.io.File file47 = explodedArchive43.getManifestFile(file46);
        boolean boolean48 = explodedArchive43.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        fileEntryIterator49.recursive = true;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator59.thenComparing(fileComparator62);
        fileEntryIterator54.entryComparator = fileComparator59;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        java.util.Comparator<java.io.File> fileComparator68 = fileComparator59.thenComparing(fileComparator67);
        fileEntryIterator49.entryComparator = fileComparator68;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file71 = explodedArchive70.manifestFile;
        java.io.File file72 = explodedArchive70.manifestFile;
        java.io.File file73 = null;
        java.io.File file74 = explodedArchive70.getManifestFile(file73);
        fileEntryIterator49.root = file74;
        explodedArchive43.root = file74;
        int int77 = entryComparator20.compare(file39, file74);
        fileEntry0.file = file39;
        java.io.File file79 = fileEntry0.file;
        java.io.File file80 = fileEntry0.getFile();
        java.lang.String str81 = fileEntry0.getName();
        java.io.File file82 = fileEntry0.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9717");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive0.getNestedArchives(entryFilter36);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        boolean boolean43 = explodedArchive38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        fileEntryIterator44.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator54.thenComparing(fileComparator57);
        fileEntryIterator49.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator54.thenComparing(fileComparator62);
        fileEntryIterator44.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator44.root = file69;
        explodedArchive38.root = file69;
        explodedArchive38.recursive = false;
        java.util.jar.Manifest manifest74 = null;
        explodedArchive38.manifest = manifest74;
        java.util.jar.Manifest manifest76 = explodedArchive38.manifest;
        java.lang.String str77 = explodedArchive38.toString();
        java.io.File file78 = explodedArchive38.root;
        explodedArchive0.manifestFile = file78;
        java.util.jar.Manifest manifest80 = null;
        explodedArchive0.manifest = manifest80;
        explodedArchive0.recursive = true;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest76);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str77, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9718");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive0.getNestedArchives(entryFilter42);
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor44 = explodedArchive0.iterator();
        java.io.File file45 = explodedArchive0.manifestFile;
        java.io.File file46 = explodedArchive0.root;
        explodedArchive0.recursive = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(entryItor44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9719");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getHost();
        java.lang.String str10 = uRL3.getAuthority();
        java.net.URL uRL12 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "exploded archive", uRLStreamHandler14);
        java.lang.String str16 = uRL12.getAuthority();
        java.lang.String str17 = uRL12.getUserInfo();
        java.lang.String str18 = uRL12.getQuery();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getProtocol();
        java.lang.String str24 = uRL22.getUserInfo();
        java.net.URL uRL25 = null;
        java.net.URLStreamHandler uRLStreamHandler27 = null;
        java.net.URL uRL28 = new java.net.URL(uRL25, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler27);
        java.lang.String str29 = uRL28.getHost();
        java.lang.String str30 = uRL28.getAuthority();
        java.lang.String str31 = uRL28.getQuery();
        int int32 = uRL28.getDefaultPort();
        java.lang.String str33 = uRL28.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler35 = null;
        java.net.URL uRL36 = new java.net.URL(uRL28, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler35);
        boolean boolean37 = uRL22.sameFile(uRL36);
        java.lang.String str38 = uRL22.getProtocol();
        java.net.URL uRL40 = new java.net.URL(uRL22, "file://exploded archive:0");
        java.lang.String str41 = uRL40.getRef();
        java.lang.String str42 = uRL40.getFile();
        int int43 = uRL40.getPort();
        boolean boolean44 = uRL12.sameFile(uRL40);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file" + "'", str23, "file");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals(uRL28.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals(uRL36.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file" + "'", str38, "file");
        org.junit.Assert.assertEquals(uRL40.toString(), "file://exploded archive:0");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test9720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9720");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.io.File file10 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator11.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        java.util.Iterator<java.io.File> fileItor25 = fileEntryIterator11.listFiles(file24);
        fileEntryIterator6.root = file24;
        explodedArchive0.manifestFile = file24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        boolean boolean30 = fileEntryIterator28.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.manifestFile;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.io.File file34 = null;
        java.io.File file35 = explodedArchive31.getManifestFile(file34);
        boolean boolean36 = explodedArchive31.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        fileEntryIterator37.recursive = true;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator47.thenComparing(fileComparator50);
        fileEntryIterator42.entryComparator = fileComparator47;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator47.thenComparing(fileComparator55);
        fileEntryIterator37.entryComparator = fileComparator56;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.manifestFile;
        java.io.File file60 = explodedArchive58.manifestFile;
        java.io.File file61 = null;
        java.io.File file62 = explodedArchive58.getManifestFile(file61);
        fileEntryIterator37.root = file62;
        explodedArchive31.root = file62;
        java.util.Iterator<java.io.File> fileItor65 = fileEntryIterator28.listFiles(file62);
        java.io.File file66 = explodedArchive0.getManifestFile(file62);
        java.lang.String str67 = explodedArchive0.toString();
        java.util.jar.Manifest manifest68 = null;
        explodedArchive0.manifest = manifest68;
        java.io.File file70 = null;
        explodedArchive0.manifestFile = file70;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor25);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor65);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "exploded archive" + "'", str67, "exploded archive");
    }

    @Test
    public void test9721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9721");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler4);
        java.lang.String str6 = uRL5.getPath();
        java.lang.String str7 = uRL5.getQuery();
        java.lang.String str8 = uRL5.getPath();
        java.lang.String str9 = uRL5.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL5, "");
        java.lang.String str12 = uRL11.getAuthority();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.Class<?> wildcardClass14 = uRL11.getClass();
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file://exploded archive:0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "exploded archive:0" + "'", str12, "exploded archive:0");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test9722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9722");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.io.File file5 = fileEntryIterator3.current;
        boolean boolean6 = fileEntryIterator3.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator3.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean9 = explodedArchive8.recursive;
        boolean boolean10 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.manifestFile;
        java.io.File file13 = explodedArchive11.manifestFile;
        java.io.File file14 = null;
        java.io.File file15 = explodedArchive11.getManifestFile(file14);
        explodedArchive8.root = file15;
        fileEntryIterator3.root = file15;
        fileEntry0.file = file15;
        java.io.File file19 = fileEntry0.getFile();
        java.lang.String str20 = fileEntry0.name;
        fileEntry0.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        java.lang.String str23 = fileEntry0.name;
        java.io.File file24 = fileEntry0.file;
        java.lang.String str25 = fileEntry0.name;
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file15.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "exploded archive" + "'", str20, "exploded archive");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str23, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str25, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9723");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean3 = fileEntryIterator2.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        fileEntryIterator2.stack = fileItorQueue5;
        fileEntryIterator0.stack = fileItorQueue5;
        java.io.File file8 = fileEntryIterator0.current;
        boolean boolean9 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test9724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9724");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        int int84 = uRL69.getPort();
        java.net.URI uRI85 = uRL69.toURI();
        java.lang.String str86 = uRL69.toExternalForm();
        java.net.URLConnection uRLConnection87 = uRL69.openConnection();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(uRI85);
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str86, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection87);
    }

    @Test
    public void test9725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9725");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test9726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9726");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator5;
        java.io.File file7 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        boolean boolean10 = fileEntryIterator8.hasNext();
        boolean boolean11 = fileEntryIterator8.recursive;
        java.io.File file12 = fileEntryIterator8.root;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator8.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        boolean boolean19 = fileEntryIterator17.hasNext();
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator26.thenComparing(fileComparator29);
        fileEntryIterator21.entryComparator = fileComparator26;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator26.thenComparing((java.util.Comparator<java.io.File>) entryComparator32);
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator20.thenComparing((java.util.Comparator<java.io.File>) entryComparator32);
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator20.reversed();
        fileEntryIterator14.entryComparator = fileComparator35;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator14.stack;
        fileEntryIterator8.stack = fileItorQueue37;
        fileEntryIterator0.stack = fileItorQueue37;
        java.io.File file40 = fileEntryIterator0.poll();
        java.io.File file41 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
    }

    @Test
    public void test9727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9727");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file7;
        explodedArchive0.recursive = false;
        java.io.File file11 = explodedArchive0.root;
        java.net.URL uRL12 = explodedArchive0.getUrl();
        java.lang.String str13 = explodedArchive0.toString();
        java.io.File file14 = explodedArchive0.root;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL12);
// flaky:         org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9728");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest37 = null;
        explodedArchive0.manifest = manifest37;
        java.io.File file39 = explodedArchive0.manifestFile;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor40 = explodedArchive0.iterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator41 = explodedArchive0.spliterator();
        java.lang.String str42 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest43 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(entryItor40);
        org.junit.Assert.assertNotNull(entrySpliterator41);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str42, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9729");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.manifestFile;
        java.io.File file4 = explodedArchive2.manifestFile;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive2.getManifestFile(file5);
        fileEntryIterator0.current = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator10;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator0.stack;
        boolean boolean13 = fileEntryIterator0.hasNext();
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<java.io.File> fileItor15 = fileEntryIterator0.listFiles(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test9730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9730");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF/META-INF/MANIFEST.MF", "/hi!:10", 52, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test9731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9731");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!", "", (int) (byte) 100, "file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test9732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9732");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file18 = fileEntryIterator17.current;
        boolean boolean19 = fileEntryIterator17.hasNext();
        fileEntryIterator17.recursive = true;
        boolean boolean22 = fileEntryIterator17.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        boolean boolean25 = explodedArchive23.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = null;
        fileEntryIterator26.current = file28;
        java.io.File file30 = fileEntryIterator26.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file32 = fileEntry31.getFile();
        java.lang.String str33 = fileEntry31.name;
        java.io.File file34 = fileEntry31.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        boolean boolean37 = fileEntryIterator35.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        boolean boolean43 = explodedArchive38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        fileEntryIterator44.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator54.thenComparing(fileComparator57);
        fileEntryIterator49.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator54.thenComparing(fileComparator62);
        fileEntryIterator44.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator44.root = file69;
        explodedArchive38.root = file69;
        java.util.Iterator<java.io.File> fileItor72 = fileEntryIterator35.listFiles(file69);
        fileEntry31.file = file69;
        fileEntryIterator26.current = file69;
        explodedArchive23.root = file69;
        java.util.Iterator<java.io.File> fileItor76 = fileEntryIterator17.listFiles(file69);
        explodedArchive0.root = file69;
        java.net.URL uRL78 = explodedArchive0.getUrl();
        java.net.URLConnection uRLConnection79 = uRL78.openConnection();
        java.net.URLStreamHandler uRLStreamHandler81 = null;
        java.net.URL uRL82 = new java.net.URL(uRL78, "file://exploded archive", uRLStreamHandler81);
        java.net.URLStreamHandler uRLStreamHandler84 = null;
        java.net.URL uRL85 = new java.net.URL(uRL82, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", uRLStreamHandler84);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream86 = uRL85.openStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: exploded archive");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "exploded archive" + "'", str24, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor72);
        org.junit.Assert.assertNotNull(fileItor76);
        org.junit.Assert.assertNotNull(uRL78);
// flaky:         org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection79);
        org.junit.Assert.assertEquals(uRL82.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals(uRL85.toString(), "file://exploded archive/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
    }

    @Test
    public void test9733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9733");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        fileEntryIterator0.root = file10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file14 = fileEntryIterator13.current;
        java.io.File file15 = null;
        fileEntryIterator13.current = file15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean18 = explodedArchive17.recursive;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.util.jar.Manifest manifest20 = null;
        explodedArchive17.manifest = manifest20;
        java.io.File file22 = explodedArchive17.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.io.File file26 = fileEntryIterator23.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator23.current = file31;
        explodedArchive17.root = file31;
        fileEntryIterator13.root = file31;
        fileEntryIterator0.current = file31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file37 = fileEntryIterator36.current;
        java.io.File file38 = fileEntryIterator36.poll();
        java.io.File file39 = fileEntryIterator36.poll();
        java.io.File file40 = fileEntryIterator36.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.io.File file43 = fileEntryIterator41.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        fileEntryIterator41.root = file47;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        java.util.Iterator<java.io.File> fileItor55 = fileEntryIterator41.listFiles(file54);
        fileEntryIterator36.root = file54;
        fileEntryIterator0.current = file54;
        java.io.File file58 = fileEntryIterator0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass59 = file58.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor55);
        org.junit.Assert.assertNull(file58);
    }

    @Test
    public void test9734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9734");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file", uRLStreamHandler13);
        java.lang.String str15 = uRL11.getUserInfo();
        java.net.URLConnection uRLConnection16 = uRL11.openConnection();
        int int17 = uRL11.getPort();
        java.net.URI uRI18 = uRL11.toURI();
        int int19 = uRL11.getPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(uRLConnection16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(uRI18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test9735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9735");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.io.File file5 = fileEntry0.getFile();
        java.lang.String str6 = fileEntry0.getName();
        java.io.File file7 = fileEntry0.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test9736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9736");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator0.stack = fileItorQueue8;
        java.io.File file10 = fileEntryIterator0.poll();
        boolean boolean11 = fileEntryIterator0.recursive;
        fileEntryIterator0.recursive = true;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test9737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9737");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getRef();
        java.lang.String str7 = uRL3.getHost();
        java.lang.String str8 = uRL3.getFile();
        int int9 = uRL3.getPort();
        java.lang.String str10 = uRL3.getUserInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test9738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9738");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.lang.String str73 = uRL69.getUserInfo();
        java.net.URLStreamHandler uRLStreamHandler75 = null;
        java.net.URL uRL76 = new java.net.URL(uRL69, "file", uRLStreamHandler75);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj77 = uRL76.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str73);
// flaky:         org.junit.Assert.assertEquals(uRL76.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test9739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9739");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.lang.String str44 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator45 = explodedArchive0.spliterator();
        java.lang.String str46 = explodedArchive0.toString();
        java.io.File file47 = explodedArchive0.root;
        java.util.jar.Manifest manifest48 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file50 = fileEntry49.getFile();
        java.io.File file51 = fileEntry49.file;
        fileEntry49.name = "";
        java.io.File file54 = fileEntry49.file;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean56 = explodedArchive55.recursive;
        boolean boolean57 = explodedArchive55.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.manifestFile;
        java.io.File file60 = explodedArchive58.manifestFile;
        java.io.File file61 = null;
        java.io.File file62 = explodedArchive58.getManifestFile(file61);
        explodedArchive55.root = file62;
        explodedArchive55.recursive = false;
        java.io.File file66 = explodedArchive55.root;
        fileEntry49.file = file66;
        java.io.File file68 = explodedArchive0.getManifestFile(file66);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter69 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList70 = explodedArchive0.getNestedArchives(entryFilter69);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str44, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator45);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str46, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList70);
    }

    @Test
    public void test9740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9740");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.net.URL uRL6 = new java.net.URL(uRL3, "file");
        java.net.URL uRL8 = new java.net.URL(uRL6, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        java.lang.String str9 = uRL6.getQuery();
        java.lang.String str10 = uRL6.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test9741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9741");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.lang.String str3 = fileEntry0.getName();
        java.lang.String str4 = fileEntry0.getName();
        java.lang.String str5 = fileEntry0.name;
        java.lang.String str6 = fileEntry0.getName();
        java.lang.String str7 = fileEntry0.name;
        java.io.File file8 = fileEntry0.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.io.File file12 = null;
        java.io.File file13 = explodedArchive9.getManifestFile(file12);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file15 = fileEntry14.getFile();
        java.lang.String str16 = fileEntry14.name;
        java.io.File file17 = fileEntry14.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        boolean boolean20 = fileEntryIterator18.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.manifestFile;
        java.io.File file23 = explodedArchive21.manifestFile;
        java.io.File file24 = null;
        java.io.File file25 = explodedArchive21.getManifestFile(file24);
        boolean boolean26 = explodedArchive21.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        fileEntryIterator27.recursive = true;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator37.thenComparing(fileComparator40);
        fileEntryIterator32.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator37.thenComparing(fileComparator45);
        fileEntryIterator27.entryComparator = fileComparator46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        fileEntryIterator27.root = file52;
        explodedArchive21.root = file52;
        java.util.Iterator<java.io.File> fileItor55 = fileEntryIterator18.listFiles(file52);
        fileEntry14.file = file52;
        explodedArchive9.manifestFile = file52;
        fileEntry0.file = file52;
        java.io.File file59 = fileEntry0.getFile();
        fileEntry0.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive";
        java.lang.String str62 = fileEntry0.getName();
        boolean boolean63 = fileEntry0.isDirectory();
        java.lang.String str64 = fileEntry0.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor55);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str62, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str64, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
    }

    @Test
    public void test9742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9742");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.lang.String str5 = uRL3.getFile();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL9 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.lang.String str10 = uRL9.getUserInfo();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getPath();
        java.lang.String str13 = uRL9.getProtocol();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL15.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str5, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str12, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file" + "'", str13, "file");
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test9743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9743");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getRef();
        java.lang.String str7 = uRL3.getFile();
        java.lang.String str8 = uRL3.getQuery();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test9744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9744");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        boolean boolean7 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        boolean boolean13 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator14.root = file39;
        explodedArchive8.root = file39;
        java.util.Iterator<java.io.File> fileItor42 = fileEntryIterator5.listFiles(file39);
        fileEntry0.file = file39;
        java.lang.String str44 = fileEntry0.name;
        boolean boolean45 = fileEntry0.isDirectory();
        boolean boolean46 = fileEntry0.isDirectory();
        java.lang.String str47 = fileEntry0.name;
        java.lang.String str48 = fileEntry0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "exploded archive" + "'", str44, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "exploded archive" + "'", str47, "exploded archive");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "exploded archive" + "'", str48, "exploded archive");
    }

    @Test
    public void test9745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9745");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.getName();
        fileEntry0.name = "exploded archive";
        fileEntry0.name = "hi!";
        java.lang.String str6 = fileEntry0.getName();
        java.lang.String str7 = fileEntry0.getName();
        fileEntry0.name = "file://exploded archive/file";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test9746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9746");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL8 = null;
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getHost();
        java.net.URI uRI13 = uRL11.toURI();
        java.lang.String str14 = uRL11.toExternalForm();
        boolean boolean15 = uRL3.sameFile(uRL11);
        java.lang.String str16 = uRL11.toExternalForm();
        java.lang.String str17 = uRL11.getPath();
        int int18 = uRL11.getPort();
        java.lang.String str19 = uRL11.getHost();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL21 = new java.net.URL(uRL11, "file://[file:100]file:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: Invalid host: [file:100]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(uRI13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str17, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test9747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9747");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.io.File file3 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file5 = fileEntryIterator4.current;
        boolean boolean6 = fileEntryIterator4.hasNext();
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator4.entryComparator;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator4.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        fileEntryIterator0.stack = fileItorQueue11;
        java.io.File file13 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator0.stack;
        java.io.File file15 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test9748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9748");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator0.entryComparator;
        java.util.Comparator<java.io.File> fileComparator6 = fileComparator5.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator12.thenComparing(fileComparator15);
        fileEntryIterator7.entryComparator = fileComparator12;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator12.thenComparing(fileComparator20);
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator5.thenComparing(fileComparator20);
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator22.reversed();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator22.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file26 = fileEntryIterator25.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator32.thenComparing(fileComparator35);
        fileEntryIterator27.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator32.thenComparing(fileComparator40);
        fileEntryIterator25.entryComparator = fileComparator41;
        java.io.File file43 = fileEntryIterator25.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        fileEntryIterator25.entryComparator = entryComparator44;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator54.thenComparing(fileComparator57);
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator51.thenComparing(fileComparator57);
        java.util.Comparator<java.io.File> fileComparator60 = fileComparator48.thenComparing(fileComparator57);
        java.util.Comparator<java.io.File> fileComparator61 = entryComparator44.thenComparing(fileComparator48);
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator48.reversed();
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator24.thenComparing(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
    }

    @Test
    public void test9749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9749");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        java.lang.String str22 = uRL9.toExternalForm();
        java.net.URL uRL24 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str25 = uRL24.getPath();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream26 = uRL24.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str22, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str25, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9750");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        fileEntryIterator0.root = file6;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.io.File file12 = null;
        java.io.File file13 = explodedArchive9.getManifestFile(file12);
        java.util.Iterator<java.io.File> fileItor14 = fileEntryIterator0.listFiles(file13);
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator0.stack;
        boolean boolean16 = fileEntryIterator0.recursive;
        boolean boolean17 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator0.entryComparator;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor14);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fileComparator18);
    }

    @Test
    public void test9751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9751");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.lang.String str34 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator35 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.net.URL uRL37 = explodedArchive0.getUrl();
        java.lang.String str38 = uRL37.getQuery();
        java.lang.String str39 = uRL37.getRef();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(uRL37);
// flaky:         org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test9752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9752");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        fileEntryIterator0.root = file6;
        boolean boolean9 = fileEntryIterator0.recursive;
        fileEntryIterator0.recursive = false;
        boolean boolean12 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test9753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9753");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        boolean boolean8 = fileEntryIterator6.hasNext();
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator15.thenComparing(fileComparator18);
        fileEntryIterator10.entryComparator = fileComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator15.thenComparing((java.util.Comparator<java.io.File>) entryComparator21);
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean25 = fileEntryIterator24.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        java.io.File file28 = explodedArchive26.manifestFile;
        java.util.jar.Manifest manifest29 = null;
        explodedArchive26.manifest = manifest29;
        java.io.File file31 = explodedArchive26.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.io.File file35 = fileEntryIterator32.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.manifestFile;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.io.File file39 = null;
        java.io.File file40 = explodedArchive36.getManifestFile(file39);
        fileEntryIterator32.current = file40;
        explodedArchive26.root = file40;
        fileEntryIterator24.root = file40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        boolean boolean49 = explodedArchive44.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator60.thenComparing(fileComparator63);
        fileEntryIterator55.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator60.thenComparing(fileComparator68);
        fileEntryIterator50.entryComparator = fileComparator69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.io.File file74 = null;
        java.io.File file75 = explodedArchive71.getManifestFile(file74);
        fileEntryIterator50.root = file75;
        explodedArchive44.root = file75;
        int int78 = entryComparator21.compare(file40, file75);
        fileEntry0.file = file75;
        java.lang.String str80 = fileEntry0.getName();
        java.io.File file81 = fileEntry0.getFile();
        java.io.File file82 = fileEntry0.getFile();
        boolean boolean83 = fileEntry0.isDirectory();
        boolean boolean84 = fileEntry0.isDirectory();
        java.io.File file85 = fileEntry0.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive(file85, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9754");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getRef();
        int int7 = uRL3.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL3, "", uRLStreamHandler9);
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.net.URI uRI16 = uRL14.toURI();
        java.lang.String str17 = uRL14.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler19 = null;
        java.net.URL uRL20 = new java.net.URL(uRL14, "file", uRLStreamHandler19);
        java.lang.String str21 = uRL14.getFile();
        java.net.URL uRL22 = null;
        java.net.URLStreamHandler uRLStreamHandler24 = null;
        java.net.URL uRL25 = new java.net.URL(uRL22, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler24);
        java.lang.String str26 = uRL25.getHost();
        java.lang.String str27 = uRL25.getAuthority();
        java.lang.String str28 = uRL25.getAuthority();
        java.lang.String str29 = uRL25.getRef();
        java.net.URL uRL30 = null;
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL30, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler32);
        java.lang.String str34 = uRL33.getHost();
        java.lang.String str35 = uRL33.getAuthority();
        java.lang.String str36 = uRL33.getQuery();
        int int37 = uRL33.getDefaultPort();
        java.lang.String str38 = uRL33.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler40 = null;
        java.net.URL uRL41 = new java.net.URL(uRL33, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler40);
        java.lang.String str42 = uRL41.getFile();
        boolean boolean43 = uRL25.sameFile(uRL41);
        boolean boolean44 = uRL14.sameFile(uRL41);
        java.net.URL uRL45 = null;
        java.net.URLStreamHandler uRLStreamHandler47 = null;
        java.net.URL uRL48 = new java.net.URL(uRL45, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler47);
        java.lang.String str49 = uRL48.getHost();
        java.lang.String str50 = uRL48.getAuthority();
        java.lang.String str51 = uRL48.getAuthority();
        java.lang.String str52 = uRL48.getFile();
        int int53 = uRL48.getPort();
        java.lang.String str54 = uRL48.getRef();
        java.net.URL uRL56 = new java.net.URL(uRL48, "hi!");
        boolean boolean57 = uRL14.sameFile(uRL56);
        int int58 = uRL14.getDefaultPort();
        boolean boolean59 = uRL10.sameFile(uRL14);
        java.lang.String str60 = uRL10.getQuery();
        java.lang.String str61 = uRL10.getPath();
        int int62 = uRL10.getPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(uRI16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str21, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals(uRL41.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str42, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals(uRL48.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str52, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals(uRL56.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str61, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test9755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9755");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        int int10 = uRL9.getPort();
        java.net.URI uRI11 = uRL9.toURI();
        java.lang.String str12 = uRL9.getPath();
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL9, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getRef();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uRI11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str12, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test9756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9756");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.net.URL uRL6 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "/exploded archive", uRLStreamHandler8);
        java.net.URL uRL10 = null;
        java.net.URLStreamHandler uRLStreamHandler12 = null;
        java.net.URL uRL13 = new java.net.URL(uRL10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler12);
        java.lang.String str14 = uRL13.getHost();
        java.lang.String str15 = uRL13.getAuthority();
        java.lang.String str16 = uRL13.getQuery();
        int int17 = uRL13.getDefaultPort();
        java.lang.String str18 = uRL13.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL(uRL13, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler20);
        java.net.URL uRL23 = new java.net.URL(uRL13, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URLStreamHandler uRLStreamHandler25 = null;
        java.net.URL uRL26 = new java.net.URL(uRL13, "file://exploded archive:0", uRLStreamHandler25);
        java.net.URL uRL28 = new java.net.URL(uRL26, "file://exploded archive/exploded archive");
        boolean boolean29 = uRL9.sameFile(uRL26);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/exploded archive");
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL21.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL23.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL26.toString(), "file://exploded archive:0");
        org.junit.Assert.assertEquals(uRL28.toString(), "file://exploded archive/exploded archive");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test9757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9757");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getRef();
        java.net.URL uRL7 = null;
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL7, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler9);
        java.lang.String str11 = uRL10.getHost();
        java.lang.String str12 = uRL10.getAuthority();
        java.lang.String str13 = uRL10.getAuthority();
        java.lang.String str14 = uRL10.getFile();
        int int15 = uRL10.getPort();
        java.lang.String str16 = uRL10.getRef();
        java.net.URL uRL18 = new java.net.URL(uRL10, "hi!");
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL(uRL18, "", uRLStreamHandler20);
        boolean boolean22 = uRL3.sameFile(uRL18);
        java.lang.String str23 = uRL18.getQuery();
        java.lang.String str24 = uRL18.getQuery();
        java.lang.String str25 = uRL18.getPath();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL18.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL21.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str25, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test9758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9758");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = fileEntry0.file;
        java.io.File file4 = fileEntry0.file;
        java.lang.String str5 = fileEntry0.name;
        java.io.File file6 = fileEntry0.getFile();
        java.io.File file7 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.io.File file10 = fileEntryIterator8.current;
        boolean boolean11 = fileEntryIterator8.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator8.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean14 = explodedArchive13.recursive;
        boolean boolean15 = explodedArchive13.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.manifestFile;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.io.File file19 = null;
        java.io.File file20 = explodedArchive16.getManifestFile(file19);
        explodedArchive13.root = file20;
        fileEntryIterator8.root = file20;
        java.io.File file23 = fileEntryIterator8.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file25 = fileEntry24.getFile();
        java.io.File file26 = fileEntry24.file;
        java.io.File file27 = null;
        fileEntry24.file = file27;
        java.lang.String str29 = fileEntry24.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file31 = fileEntryIterator30.current;
        java.io.File file32 = null;
        fileEntryIterator30.current = file32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean35 = explodedArchive34.recursive;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.util.jar.Manifest manifest37 = null;
        explodedArchive34.manifest = manifest37;
        java.io.File file39 = explodedArchive34.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.io.File file43 = fileEntryIterator40.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        fileEntryIterator40.current = file48;
        explodedArchive34.root = file48;
        fileEntryIterator30.root = file48;
        fileEntry24.file = file48;
        fileEntryIterator8.current = file48;
        fileEntry0.file = file48;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9759");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.lang.String str73 = uRL69.getUserInfo();
        java.net.URLConnection uRLConnection74 = uRL69.openConnection();
        int int75 = uRL69.getDefaultPort();
        java.lang.String str76 = uRL69.getUserInfo();
        java.net.URLStreamHandler uRLStreamHandler78 = null;
        java.net.URL uRL79 = new java.net.URL(uRL69, "", uRLStreamHandler78);
        java.lang.String str80 = uRL69.getPath();
        int int81 = uRL69.getDefaultPort();
        java.net.URI uRI82 = uRL69.toURI();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(uRLConnection74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(str76);
// flaky:         org.junit.Assert.assertEquals(uRL79.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str80, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(uRI82);
    }

    @Test
    public void test9760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9760");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        explodedArchive0.recursive = false;
        explodedArchive0.recursive = true;
        java.io.File file45 = explodedArchive0.root;
        java.util.jar.Manifest manifest46 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest47 = null;
        explodedArchive0.manifest = manifest47;
        java.io.File file49 = explodedArchive0.manifestFile;
        java.net.URL uRL50 = explodedArchive0.getUrl();
        java.lang.Object obj51 = null;
        boolean boolean52 = uRL50.equals(obj51);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(uRL50);
// flaky:         org.junit.Assert.assertEquals(uRL50.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test9761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9761");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        java.util.jar.Manifest manifest39 = null;
        explodedArchive0.manifest = manifest39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean42 = fileEntryIterator41.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean44 = explodedArchive43.recursive;
        java.io.File file45 = explodedArchive43.manifestFile;
        java.util.jar.Manifest manifest46 = null;
        explodedArchive43.manifest = manifest46;
        java.io.File file48 = explodedArchive43.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.io.File file52 = fileEntryIterator49.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file54 = explodedArchive53.manifestFile;
        java.io.File file55 = explodedArchive53.manifestFile;
        java.io.File file56 = null;
        java.io.File file57 = explodedArchive53.getManifestFile(file56);
        fileEntryIterator49.current = file57;
        explodedArchive43.root = file57;
        fileEntryIterator41.root = file57;
        explodedArchive0.manifestFile = file57;
        java.io.File file62 = explodedArchive0.root;
        java.util.jar.Manifest manifest63 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest63);
    }

    @Test
    public void test9762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9762");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URL uRL34 = null;
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler36);
        java.lang.String str38 = uRL37.getHost();
        java.lang.String str39 = uRL37.getAuthority();
        java.lang.String str40 = uRL37.getAuthority();
        java.lang.String str41 = uRL37.getFile();
        int int42 = uRL37.getPort();
        java.lang.String str43 = uRL37.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL37, "hi!");
        boolean boolean46 = uRL3.sameFile(uRL45);
        int int47 = uRL3.getDefaultPort();
        java.net.URL uRL48 = null;
        java.net.URLStreamHandler uRLStreamHandler50 = null;
        java.net.URL uRL51 = new java.net.URL(uRL48, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler50);
        java.lang.String str52 = uRL51.getHost();
        int int53 = uRL51.getPort();
        java.net.URLStreamHandler uRLStreamHandler55 = null;
        java.net.URL uRL56 = new java.net.URL(uRL51, "hi!", uRLStreamHandler55);
        java.net.URLConnection uRLConnection57 = uRL56.openConnection();
        boolean boolean58 = uRL3.sameFile(uRL56);
        java.lang.String str59 = uRL3.getRef();
        java.lang.String str60 = uRL3.getQuery();
        java.net.URL uRL61 = null;
        java.net.URLStreamHandler uRLStreamHandler63 = null;
        java.net.URL uRL64 = new java.net.URL(uRL61, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler63);
        java.lang.String str65 = uRL64.getHost();
        java.lang.String str66 = uRL64.getAuthority();
        java.lang.String str67 = uRL64.getHost();
        int int68 = uRL64.getPort();
        java.lang.String str69 = uRL64.getPath();
        java.lang.String str70 = uRL64.getHost();
        java.lang.String str71 = uRL64.getAuthority();
        java.net.URL uRL73 = new java.net.URL(uRL64, "hi!");
        java.net.URLStreamHandler uRLStreamHandler75 = null;
        java.net.URL uRL76 = new java.net.URL(uRL73, "exploded archive", uRLStreamHandler75);
        java.lang.String str77 = uRL73.getProtocol();
        java.lang.String str78 = uRL73.getRef();
        boolean boolean79 = uRL3.sameFile(uRL73);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str41, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals(uRL51.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals(uRL56.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(uRLConnection57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals(uRL64.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str69, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals(uRL73.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL76.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "file" + "'", str77, "file");
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test9763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9763");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.lang.String str71 = uRL69.getHost();
        java.net.URI uRI72 = uRL69.toURI();
        java.lang.String str73 = uRL69.getQuery();
        java.lang.String str74 = uRL69.getPath();
        java.net.URL uRL75 = null;
        java.net.URLStreamHandler uRLStreamHandler77 = null;
        java.net.URL uRL78 = new java.net.URL(uRL75, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler77);
        java.lang.String str79 = uRL78.getProtocol();
        java.net.URL uRL81 = new java.net.URL(uRL78, "file");
        java.lang.String str82 = uRL78.getFile();
        java.net.URL uRL84 = new java.net.URL(uRL78, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        boolean boolean85 = uRL69.sameFile(uRL78);
        java.lang.String str86 = uRL78.getProtocol();
        java.lang.String str87 = uRL78.getHost();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(uRI72);
        org.junit.Assert.assertNull(str73);
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str74, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "file" + "'", str79, "file");
        org.junit.Assert.assertEquals(uRL81.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str82, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL84.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "file" + "'", str86, "file");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
    }

    @Test
    public void test9764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9764");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "";
        java.io.File file5 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean7 = explodedArchive6.recursive;
        boolean boolean8 = explodedArchive6.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.io.File file12 = null;
        java.io.File file13 = explodedArchive9.getManifestFile(file12);
        explodedArchive6.root = file13;
        explodedArchive6.recursive = false;
        java.io.File file17 = explodedArchive6.root;
        fileEntry0.file = file17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean20 = explodedArchive19.recursive;
        boolean boolean21 = explodedArchive19.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.manifestFile;
        java.io.File file24 = explodedArchive22.manifestFile;
        java.io.File file25 = null;
        java.io.File file26 = explodedArchive22.getManifestFile(file25);
        explodedArchive19.root = file26;
        fileEntry0.file = file26;
        java.io.File file29 = fileEntry0.file;
        java.lang.String str30 = fileEntry0.getName();
        boolean boolean31 = fileEntry0.isDirectory();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test9765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9765");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        boolean boolean6 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator12.thenComparing(fileComparator15);
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator9.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        boolean boolean21 = fileEntryIterator19.hasNext();
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator28.thenComparing((java.util.Comparator<java.io.File>) entryComparator34);
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator22.thenComparing((java.util.Comparator<java.io.File>) entryComparator34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean38 = fileEntryIterator37.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive39.manifest = manifest42;
        java.io.File file44 = explodedArchive39.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        java.io.File file48 = fileEntryIterator45.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        fileEntryIterator45.current = file53;
        explodedArchive39.root = file53;
        fileEntryIterator37.root = file53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        boolean boolean62 = explodedArchive57.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        fileEntryIterator63.recursive = true;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.util.Comparator<java.io.File> fileComparator73 = fileEntryIterator71.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator73.thenComparing(fileComparator76);
        fileEntryIterator68.entryComparator = fileComparator73;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.util.Comparator<java.io.File> fileComparator81 = fileEntryIterator79.entryComparator;
        java.util.Comparator<java.io.File> fileComparator82 = fileComparator73.thenComparing(fileComparator81);
        fileEntryIterator63.entryComparator = fileComparator82;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file85 = explodedArchive84.manifestFile;
        java.io.File file86 = explodedArchive84.manifestFile;
        java.io.File file87 = null;
        java.io.File file88 = explodedArchive84.getManifestFile(file87);
        fileEntryIterator63.root = file88;
        explodedArchive57.root = file88;
        int int91 = entryComparator34.compare(file53, file88);
        fileEntryIterator0.entryComparator = entryComparator34;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue93 = fileEntryIterator0.stack;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue94 = fileEntryIterator0.stack;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(fileItorQueue93);
        org.junit.Assert.assertNotNull(fileItorQueue94);
    }

    @Test
    public void test9766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9766");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "", uRLStreamHandler13);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean17 = fileEntryIterator16.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean19 = explodedArchive18.recursive;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.util.jar.Manifest manifest21 = null;
        explodedArchive18.manifest = manifest21;
        java.io.File file23 = explodedArchive18.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.io.File file27 = fileEntryIterator24.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.manifestFile;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.io.File file31 = null;
        java.io.File file32 = explodedArchive28.getManifestFile(file31);
        fileEntryIterator24.current = file32;
        explodedArchive18.root = file32;
        fileEntryIterator16.root = file32;
        explodedArchive15.root = file32;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive15.spliterator();
        java.io.File file38 = explodedArchive15.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str40 = fileEntry39.name;
        java.io.File file41 = fileEntry39.file;
        fileEntry39.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        boolean boolean46 = fileEntryIterator44.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.manifestFile;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.io.File file50 = null;
        java.io.File file51 = explodedArchive47.getManifestFile(file50);
        boolean boolean52 = explodedArchive47.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        fileEntryIterator53.recursive = true;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator63.thenComparing(fileComparator66);
        fileEntryIterator58.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        java.util.Comparator<java.io.File> fileComparator72 = fileComparator63.thenComparing(fileComparator71);
        fileEntryIterator53.entryComparator = fileComparator72;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file75 = explodedArchive74.manifestFile;
        java.io.File file76 = explodedArchive74.manifestFile;
        java.io.File file77 = null;
        java.io.File file78 = explodedArchive74.getManifestFile(file77);
        fileEntryIterator53.root = file78;
        explodedArchive47.root = file78;
        java.util.Iterator<java.io.File> fileItor81 = fileEntryIterator44.listFiles(file78);
        fileEntry39.file = file78;
        explodedArchive15.root = file78;
        java.net.URL uRL84 = explodedArchive15.getUrl();
        java.lang.String str85 = uRL84.getUserInfo();
        java.lang.String str86 = uRL84.getHost();
        java.net.URL uRL88 = new java.net.URL(uRL84, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        boolean boolean89 = uRL11.sameFile(uRL84);
        java.lang.String str90 = uRL11.getRef();
        int int91 = uRL11.getDefaultPort();
        java.lang.String str92 = uRL11.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor81);
        org.junit.Assert.assertNotNull(uRL84);
// flaky:         org.junit.Assert.assertEquals(uRL84.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertEquals(uRL88.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str92, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test9767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9767");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        boolean boolean32 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest33 = explodedArchive0.getManifest();
        java.lang.String str34 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "exploded archive" + "'", str34, "exploded archive");
    }

    @Test
    public void test9768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9768");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        java.util.Comparator<java.io.File> fileComparator39 = entryComparator15.thenComparing(fileComparator37);
        java.util.Comparator<java.io.File> fileComparator40 = entryComparator15.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        fileEntryIterator41.recursive = true;
        java.io.File file45 = fileEntryIterator41.poll();
        fileEntryIterator41.recursive = true;
        boolean boolean48 = fileEntryIterator41.recursive;
        java.io.File file49 = fileEntryIterator41.root;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator51 = entryComparator15.thenComparing(fileComparator50);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
    }

    @Test
    public void test9769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9769");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest38 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
    }

    @Test
    public void test9770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9770");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URL uRL13 = new java.net.URL(uRL3, "file://exploded archive");
        java.lang.String str14 = uRL13.getProtocol();
        java.lang.String str15 = uRL13.getHost();
        java.lang.String str16 = uRL13.getFile();
        java.net.URL uRL18 = new java.net.URL(uRL13, "exploded archive");
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getAuthority();
        java.lang.String str26 = uRL22.getFile();
        int int27 = uRL22.getPort();
        java.lang.String str28 = uRL22.getRef();
        java.net.URL uRL30 = new java.net.URL(uRL22, "hi!");
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL30, "", uRLStreamHandler32);
        java.net.URL uRL35 = new java.net.URL(uRL33, "hi!");
        boolean boolean36 = uRL18.sameFile(uRL35);
        java.lang.String str37 = uRL18.getUserInfo();
        int int38 = uRL18.getDefaultPort();
        int int39 = uRL18.getDefaultPort();
        java.net.URLConnection uRLConnection40 = uRL18.openConnection();
        java.lang.String str41 = uRL18.getAuthority();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL13.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "exploded archive" + "'", str15, "exploded archive");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals(uRL18.toString(), "file://exploded archive/exploded archive");
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str26, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(uRLConnection40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "exploded archive" + "'", str41, "exploded archive");
    }

    @Test
    public void test9771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9771");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        explodedArchive0.root = file56;
        boolean boolean60 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest61 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator62 = explodedArchive0.spliterator();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(manifest61);
        org.junit.Assert.assertNotNull(entrySpliterator62);
    }

    @Test
    public void test9772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9772");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.util.Comparator<java.io.File> fileComparator9 = fileComparator5.thenComparing(fileComparator8);
        fileEntryIterator0.entryComparator = fileComparator5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file12 = fileEntryIterator11.current;
        java.io.File file13 = fileEntryIterator11.poll();
        java.io.File file14 = fileEntryIterator11.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator11.stack;
        java.io.File file16 = fileEntryIterator11.current;
        boolean boolean17 = fileEntryIterator11.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator23.thenComparing(fileComparator26);
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator20.thenComparing(fileComparator26);
        fileEntryIterator11.entryComparator = fileComparator26;
        java.io.File file30 = fileEntryIterator11.poll();
        java.io.File file31 = fileEntryIterator11.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.io.File file34 = fileEntryIterator32.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        fileEntryIterator32.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        fileEntryIterator32.root = file42;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file46 = fileEntryIterator45.current;
        java.io.File file47 = null;
        fileEntryIterator45.current = file47;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean50 = explodedArchive49.recursive;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.util.jar.Manifest manifest52 = null;
        explodedArchive49.manifest = manifest52;
        java.io.File file54 = explodedArchive49.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.io.File file58 = fileEntryIterator55.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator55.current = file63;
        explodedArchive49.root = file63;
        fileEntryIterator45.root = file63;
        fileEntryIterator32.current = file63;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator32.stack;
        fileEntryIterator11.stack = fileItorQueue68;
        fileEntryIterator0.stack = fileItorQueue68;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue68);
    }

    @Test
    public void test9773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9773");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        boolean boolean7 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        boolean boolean13 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator14.root = file39;
        explodedArchive8.root = file39;
        java.util.Iterator<java.io.File> fileItor42 = fileEntryIterator5.listFiles(file39);
        fileEntry0.file = file39;
        java.io.File file44 = fileEntry0.getFile();
        boolean boolean45 = fileEntry0.isDirectory();
        java.lang.String str46 = fileEntry0.getName();
        java.io.File file47 = fileEntry0.file;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "exploded archive" + "'", str46, "exploded archive");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9774");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file22 = fileEntryIterator21.current;
        java.io.File file23 = fileEntryIterator21.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file25 = fileEntryIterator24.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator24.entryComparator = fileComparator40;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator24.stack;
        fileEntryIterator21.stack = fileItorQueue42;
        fileEntryIterator0.stack = fileItorQueue42;
        boolean boolean45 = fileEntryIterator0.recursive;
        java.io.File file46 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.manifestFile;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.io.File file50 = null;
        java.io.File file51 = explodedArchive47.getManifestFile(file50);
        fileEntryIterator0.root = file51;
        boolean boolean53 = fileEntryIterator0.recursive;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test9775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9775");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        java.io.File file2 = fileEntryIterator0.root;
        boolean boolean3 = fileEntryIterator0.recursive;
        java.io.File file4 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        boolean boolean8 = fileEntryIterator5.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator5.stack;
        fileEntryIterator5.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        fileEntryIterator12.recursive = true;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator22.thenComparing(fileComparator25);
        fileEntryIterator17.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator22.thenComparing(fileComparator30);
        fileEntryIterator12.entryComparator = fileComparator31;
        fileEntryIterator12.recursive = true;
        fileEntryIterator12.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator12.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean39 = explodedArchive38.recursive;
        boolean boolean40 = explodedArchive38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file42 = explodedArchive41.manifestFile;
        java.io.File file43 = explodedArchive41.manifestFile;
        java.io.File file44 = null;
        java.io.File file45 = explodedArchive41.getManifestFile(file44);
        explodedArchive38.root = file45;
        fileEntryIterator12.root = file45;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean50 = fileEntryIterator49.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean52 = explodedArchive51.recursive;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.util.jar.Manifest manifest54 = null;
        explodedArchive51.manifest = manifest54;
        java.io.File file56 = explodedArchive51.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        java.io.File file60 = fileEntryIterator57.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.manifestFile;
        java.io.File file63 = explodedArchive61.manifestFile;
        java.io.File file64 = null;
        java.io.File file65 = explodedArchive61.getManifestFile(file64);
        fileEntryIterator57.current = file65;
        explodedArchive51.root = file65;
        fileEntryIterator49.root = file65;
        fileEntryIterator12.root = file65;
        java.util.Iterator<java.io.File> fileItor70 = fileEntryIterator5.listFiles(file65);
        fileEntryIterator0.root = file65;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator0.entryComparator;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor70);
        org.junit.Assert.assertNotNull(fileComparator72);
    }

    @Test
    public void test9776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9776");
        java.net.URL uRL1 = new java.net.URL("file://exploded archive");
        java.net.URL uRL2 = null;
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL(uRL2, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
        java.lang.String str6 = uRL5.getHost();
        java.lang.String str7 = uRL5.getAuthority();
        java.lang.String str8 = uRL5.getQuery();
        int int9 = uRL5.getDefaultPort();
        java.lang.String str10 = uRL5.getAuthority();
        java.net.URLConnection uRLConnection11 = uRL5.openConnection();
        java.lang.String str12 = uRL5.toExternalForm();
        java.lang.String str13 = uRL5.getAuthority();
        boolean boolean14 = uRL1.sameFile(uRL5);
        java.lang.String str15 = uRL5.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream16 = uRL5.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals(uRL5.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(uRLConnection11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str15, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9777");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.io.File file5 = fileEntry0.file;
        java.lang.String str6 = fileEntry0.name;
        java.lang.String str7 = fileEntry0.name;
        java.io.File file8 = fileEntry0.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test9778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9778");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.net.URL uRL6 = new java.net.URL(uRL3, "file");
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL9 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        int int10 = uRL9.getPort();
        java.net.URLConnection uRLConnection11 = uRL9.openConnection();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uRLConnection11);
    }

    @Test
    public void test9779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9779");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getHost();
        java.lang.String str6 = uRL3.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9780");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF/META-INF/MANIFEST.MF", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test9781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9781");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive0.manifest = manifest31;
        boolean boolean33 = explodedArchive0.recursive;
        java.io.File file34 = explodedArchive0.root;
        java.lang.String str35 = explodedArchive0.toString();
        java.io.File file36 = explodedArchive0.manifestFile;
        java.io.File file37 = explodedArchive0.manifestFile;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "exploded archive" + "'", str35, "exploded archive");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9782");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.net.URI uRI19 = uRL3.toURI();
        java.net.URL uRL20 = null;
        java.net.URLStreamHandler uRLStreamHandler22 = null;
        java.net.URL uRL23 = new java.net.URL(uRL20, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler22);
        java.lang.String str24 = uRL23.getHost();
        java.lang.String str25 = uRL23.getAuthority();
        java.lang.String str26 = uRL23.getAuthority();
        java.lang.String str27 = uRL23.getFile();
        java.net.URL uRL28 = null;
        java.net.URLStreamHandler uRLStreamHandler30 = null;
        java.net.URL uRL31 = new java.net.URL(uRL28, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler30);
        java.lang.String str32 = uRL31.getHost();
        java.net.URI uRI33 = uRL31.toURI();
        java.lang.String str34 = uRL31.toExternalForm();
        boolean boolean35 = uRL23.sameFile(uRL31);
        java.lang.String str36 = uRL31.getHost();
        java.net.URL uRL38 = new java.net.URL(uRL31, "");
        boolean boolean39 = uRL3.sameFile(uRL31);
        java.lang.String str40 = uRL3.getPath();
        java.net.URLStreamHandler uRLStreamHandler42 = null;
        java.net.URL uRL43 = new java.net.URL(uRL3, "", uRLStreamHandler42);
        java.net.URL uRL45 = new java.net.URL(uRL3, "");
        java.lang.String str46 = uRL45.getQuery();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(uRI19);
        org.junit.Assert.assertEquals(uRL23.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str27, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL31.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(uRI33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str40, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL43.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test9783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9783");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.lang.String str2 = fileEntry0.getName();
        java.io.File file3 = fileEntry0.file;
        fileEntry0.name = "";
        java.lang.String str6 = fileEntry0.name;
        java.io.File file7 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive8.manifest = manifest11;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file14 = fileEntry13.getFile();
        java.io.File file15 = fileEntry13.file;
        fileEntry13.name = "";
        java.lang.String str18 = fileEntry13.name;
        java.io.File file19 = fileEntry13.file;
        java.io.File file20 = fileEntry13.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.manifestFile;
        java.io.File file23 = explodedArchive21.manifestFile;
        java.io.File file24 = null;
        java.io.File file25 = explodedArchive21.getManifestFile(file24);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file27 = fileEntry26.getFile();
        java.lang.String str28 = fileEntry26.name;
        java.io.File file29 = fileEntry26.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        boolean boolean32 = fileEntryIterator30.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.manifestFile;
        java.io.File file35 = explodedArchive33.manifestFile;
        java.io.File file36 = null;
        java.io.File file37 = explodedArchive33.getManifestFile(file36);
        boolean boolean38 = explodedArchive33.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        fileEntryIterator39.recursive = true;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator39.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        java.util.Comparator<java.io.File> fileComparator53 = fileComparator49.thenComparing(fileComparator52);
        fileEntryIterator44.entryComparator = fileComparator49;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator49.thenComparing(fileComparator57);
        fileEntryIterator39.entryComparator = fileComparator58;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file61 = explodedArchive60.manifestFile;
        java.io.File file62 = explodedArchive60.manifestFile;
        java.io.File file63 = null;
        java.io.File file64 = explodedArchive60.getManifestFile(file63);
        fileEntryIterator39.root = file64;
        explodedArchive33.root = file64;
        java.util.Iterator<java.io.File> fileItor67 = fileEntryIterator30.listFiles(file64);
        fileEntry26.file = file64;
        explodedArchive21.manifestFile = file64;
        fileEntry13.file = file64;
        java.io.File file71 = fileEntry13.getFile();
        explodedArchive8.root = file71;
        fileEntry0.file = file71;
        fileEntry0.name = "file://exploded archive:0";
        boolean boolean76 = fileEntry0.isDirectory();
        java.lang.String str77 = fileEntry0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor67);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "file://exploded archive:0" + "'", str77, "file://exploded archive:0");
    }

    @Test
    public void test9784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9784");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        int int9 = uRL3.getPort();
        java.lang.String str10 = uRL3.getFile();
        int int11 = uRL3.getDefaultPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        java.lang.String str20 = uRL15.getAuthority();
        java.net.URLConnection uRLConnection21 = uRL15.openConnection();
        java.net.URLStreamHandler uRLStreamHandler23 = null;
        java.net.URL uRL24 = new java.net.URL(uRL15, "file://exploded archive:0", uRLStreamHandler23);
        java.lang.String str25 = uRL24.getRef();
        java.lang.String str26 = uRL24.getProtocol();
        boolean boolean27 = uRL3.sameFile(uRL24);
        java.net.Proxy proxy28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection29 = uRL24.openConnection(proxy28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(uRLConnection21);
        org.junit.Assert.assertEquals(uRL24.toString(), "file://exploded archive:0");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "file" + "'", str26, "file");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test9785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9785");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.manifestFile;
        java.io.File file4 = explodedArchive2.manifestFile;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive2.getManifestFile(file5);
        fileEntryIterator0.current = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator10.thenComparing(fileComparator17);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator28.reversed();
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator17.thenComparing(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
    }

    @Test
    public void test9786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9786");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        java.util.jar.Manifest manifest17 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest18 = explodedArchive0.manifest;
        java.io.File file19 = explodedArchive0.root;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9787");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        fileEntryIterator0.stack = fileItorQueue3;
        java.io.File file5 = fileEntryIterator0.poll();
        java.io.File file6 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = false;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
    }

    @Test
    public void test9788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9788");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        boolean boolean7 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        boolean boolean13 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator14.root = file39;
        explodedArchive8.root = file39;
        java.util.Iterator<java.io.File> fileItor42 = fileEntryIterator5.listFiles(file39);
        fileEntry0.file = file39;
        boolean boolean44 = fileEntry0.isDirectory();
        java.lang.String str45 = fileEntry0.getName();
        fileEntry0.name = "";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "exploded archive" + "'", str45, "exploded archive");
    }

    @Test
    public void test9789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9789");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        boolean boolean41 = explodedArchive39.recursive;
        java.io.File file42 = explodedArchive39.root;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive39.getManifestFile(file43);
        explodedArchive0.manifestFile = file43;
        java.io.File file46 = explodedArchive0.root;
        java.io.File file47 = explodedArchive0.manifestFile;
        java.net.URL uRL48 = explodedArchive0.getUrl();
        java.net.URI uRI49 = uRL48.toURI();
        java.lang.String str50 = uRL48.getPath();
        java.lang.String str51 = uRL48.toExternalForm();
        java.lang.String str52 = uRL48.getRef();
        java.lang.String str53 = uRL48.getPath();
        java.lang.String str54 = uRL48.getUserInfo();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(uRL48);
// flaky:         org.junit.Assert.assertEquals(uRL48.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI49);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str50, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str51, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str52);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str53, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test9790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9790");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.manifestFile;
        java.lang.String str4 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.manifestFile;
        java.io.File file7 = explodedArchive5.manifestFile;
        java.io.File file8 = null;
        java.io.File file9 = explodedArchive5.getManifestFile(file8);
        java.io.File file10 = explodedArchive5.manifestFile;
        java.io.File file11 = explodedArchive5.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean24 = fileEntryIterator23.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean26 = explodedArchive25.recursive;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.util.jar.Manifest manifest28 = null;
        explodedArchive25.manifest = manifest28;
        java.io.File file30 = explodedArchive25.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        java.io.File file34 = fileEntryIterator31.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator31.current = file39;
        explodedArchive25.root = file39;
        fileEntryIterator23.root = file39;
        fileEntryIterator12.root = file39;
        java.io.File file44 = explodedArchive5.getManifestFile(file39);
        explodedArchive0.manifestFile = file39;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test9791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9791");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getProtocol();
        java.net.URI uRI8 = uRL3.toURI();
        java.lang.String str9 = uRL3.getAuthority();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file" + "'", str7, "file");
        org.junit.Assert.assertNotNull(uRI8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test9792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9792");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.net.URL uRL38 = explodedArchive0.getUrl();
        java.util.jar.Manifest manifest39 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest40 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive0.getNestedArchives(entryFilter41);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive0.getNestedArchives(entryFilter43);
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest47 = null;
        explodedArchive0.manifest = manifest47;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(archiveList44);
    }

    @Test
    public void test9793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9793");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.net.URL uRL9 = new java.net.URL(uRL3, "exploded archive");
        java.lang.String str10 = uRL3.getAuthority();
        java.lang.String str11 = uRL3.toExternalForm();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        java.lang.String str20 = uRL15.getAuthority();
        java.net.URL uRL22 = new java.net.URL(uRL15, "");
        boolean boolean23 = uRL3.sameFile(uRL22);
        java.lang.String str24 = uRL3.getAuthority();
        java.lang.String str25 = uRL3.getUserInfo();
        java.net.URI uRI26 = uRL3.toURI();
        java.net.URLConnection uRLConnection27 = uRL3.openConnection();
        java.lang.String str28 = uRL3.getPath();
        java.net.URI uRI29 = uRL3.toURI();
        java.net.URLStreamHandler uRLStreamHandler31 = null;
        java.net.URL uRL32 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", uRLStreamHandler31);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(uRI26);
        org.junit.Assert.assertNotNull(uRLConnection27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str28, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI29);
        org.junit.Assert.assertEquals(uRL32.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
    }

    @Test
    public void test9794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9794");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file://hi!hi!", "hi!:10", "file://exploded archive/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://hi!hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test9795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9795");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        boolean boolean6 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator12.thenComparing(fileComparator15);
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator9.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator15;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator0.stack;
        java.io.File file20 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        fileEntryIterator21.recursive = true;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator21.entryComparator;
        fileEntryIterator21.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.io.File file30 = fileEntryIterator28.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        fileEntryIterator28.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator28.root = file38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file42 = fileEntryIterator41.current;
        java.io.File file43 = null;
        fileEntryIterator41.current = file43;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean46 = explodedArchive45.recursive;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.util.jar.Manifest manifest48 = null;
        explodedArchive45.manifest = manifest48;
        java.io.File file50 = explodedArchive45.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        java.io.File file54 = fileEntryIterator51.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.manifestFile;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.io.File file58 = null;
        java.io.File file59 = explodedArchive55.getManifestFile(file58);
        fileEntryIterator51.current = file59;
        explodedArchive45.root = file59;
        fileEntryIterator41.root = file59;
        fileEntryIterator28.current = file59;
        java.util.Iterator<java.io.File> fileItor64 = fileEntryIterator21.listFiles(file59);
        fileEntryIterator0.current = file59;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor64);
    }

    @Test
    public void test9796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9796");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file3 = fileEntry2.getFile();
        java.io.File file4 = fileEntry2.file;
        java.io.File file5 = null;
        fileEntry2.file = file5;
        java.lang.String str7 = fileEntry2.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        boolean boolean10 = fileEntryIterator8.hasNext();
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator11.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean27 = fileEntryIterator26.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean29 = explodedArchive28.recursive;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive28.manifest = manifest31;
        java.io.File file33 = explodedArchive28.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.io.File file37 = fileEntryIterator34.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator34.current = file42;
        explodedArchive28.root = file42;
        fileEntryIterator26.root = file42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        boolean boolean51 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        fileEntryIterator52.recursive = true;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator52.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        fileEntryIterator52.root = file77;
        explodedArchive46.root = file77;
        int int80 = entryComparator23.compare(file42, file77);
        fileEntry2.file = file77;
        explodedArchive0.manifestFile = file77;
        java.util.jar.Manifest manifest83 = null;
        explodedArchive0.manifest = manifest83;
        java.io.File file85 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest86 = explodedArchive0.manifest;
        java.io.File file87 = explodedArchive0.root;
        java.util.jar.Manifest manifest88 = explodedArchive0.manifest;
        explodedArchive0.recursive = false;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator91 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest86);
        org.junit.Assert.assertNull(file87);
        org.junit.Assert.assertNull(manifest88);
    }

    @Test
    public void test9797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9797");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.io.File file18 = fileEntryIterator0.root;
        boolean boolean19 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        explodedArchive20.recursive = true;
        java.lang.String str24 = explodedArchive20.toString();
        boolean boolean25 = explodedArchive20.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = fileEntryIterator26.poll();
        java.io.File file29 = fileEntryIterator26.poll();
        java.io.File file30 = fileEntryIterator26.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.io.File file33 = fileEntryIterator31.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator31.root = file37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        java.util.Iterator<java.io.File> fileItor45 = fileEntryIterator31.listFiles(file44);
        fileEntryIterator26.root = file44;
        explodedArchive20.manifestFile = file44;
        fileEntryIterator0.root = file44;
        java.io.File file49 = fileEntryIterator0.poll();
        java.io.File file50 = fileEntryIterator0.current;
        fileEntryIterator0.recursive = false;
        java.io.File file53 = fileEntryIterator0.poll();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "exploded archive" + "'", str24, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor45);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file53);
    }

    @Test
    public void test9798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9798");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "", uRLStreamHandler13);
        java.lang.String str15 = uRL11.getUserInfo();
        java.lang.String str16 = uRL11.toExternalForm();
        java.lang.String str17 = uRL11.getQuery();
        java.net.URLStreamHandler uRLStreamHandler19 = null;
        java.net.URL uRL20 = new java.net.URL(uRL11, "file://filefile://exploded archive:0", uRLStreamHandler19);
        java.lang.String str21 = uRL11.getHost();
        int int22 = uRL11.getPort();
        java.lang.String str23 = uRL11.getAuthority();
        java.lang.String str24 = uRL11.getQuery();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals(uRL20.toString(), "file://filefile://exploded archive:0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test9799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9799");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.net.URI uRI19 = uRL3.toURI();
        java.net.URL uRL20 = null;
        java.net.URLStreamHandler uRLStreamHandler22 = null;
        java.net.URL uRL23 = new java.net.URL(uRL20, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler22);
        java.lang.String str24 = uRL23.getHost();
        java.lang.String str25 = uRL23.getAuthority();
        java.lang.String str26 = uRL23.getAuthority();
        java.lang.String str27 = uRL23.getFile();
        java.net.URL uRL28 = null;
        java.net.URLStreamHandler uRLStreamHandler30 = null;
        java.net.URL uRL31 = new java.net.URL(uRL28, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler30);
        java.lang.String str32 = uRL31.getHost();
        java.net.URI uRI33 = uRL31.toURI();
        java.lang.String str34 = uRL31.toExternalForm();
        boolean boolean35 = uRL23.sameFile(uRL31);
        java.lang.String str36 = uRL31.getHost();
        java.net.URL uRL38 = new java.net.URL(uRL31, "");
        boolean boolean39 = uRL3.sameFile(uRL31);
        java.lang.String str40 = uRL3.getPath();
        java.net.URLStreamHandler uRLStreamHandler42 = null;
        java.net.URL uRL43 = new java.net.URL(uRL3, "", uRLStreamHandler42);
        java.net.URL uRL45 = new java.net.URL(uRL3, "");
        java.net.URI uRI46 = uRL3.toURI();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(uRI19);
        org.junit.Assert.assertEquals(uRL23.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str27, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL31.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(uRI33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str40, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL43.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI46);
    }

    @Test
    public void test9800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9800");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.io.File file3 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file5 = fileEntryIterator4.current;
        boolean boolean6 = fileEntryIterator4.hasNext();
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator4.entryComparator;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator4.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        fileEntryIterator0.stack = fileItorQueue11;
        java.io.File file13 = fileEntryIterator0.poll();
        java.io.File file14 = fileEntryIterator0.poll();
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator0.entryComparator;
        boolean boolean16 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator0.stack;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fileItorQueue21);
    }

    @Test
    public void test9801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9801");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        int int9 = uRL3.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler11 = null;
        java.net.URL uRL12 = new java.net.URL(uRL3, "file", uRLStreamHandler11);
        java.net.URL uRL13 = null;
        java.net.URLStreamHandler uRLStreamHandler15 = null;
        java.net.URL uRL16 = new java.net.URL(uRL13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler15);
        java.lang.String str17 = uRL16.getHost();
        java.lang.String str18 = uRL16.getAuthority();
        java.lang.String str19 = uRL16.getQuery();
        int int20 = uRL16.getDefaultPort();
        java.lang.String str21 = uRL16.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler23 = null;
        java.net.URL uRL24 = new java.net.URL(uRL16, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler23);
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler26);
        java.lang.String str28 = uRL16.getPath();
        boolean boolean29 = uRL12.sameFile(uRL16);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL16.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str28, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test9802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9802");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.lang.String str34 = explodedArchive0.toString();
        java.io.File file35 = explodedArchive0.manifestFile;
        boolean boolean36 = explodedArchive0.recursive;
        java.io.File file37 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9803");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.util.Comparator<java.io.File> fileComparator12 = fileComparator8.thenComparing(fileComparator11);
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator5.thenComparing(fileComparator11);
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator11.reversed();
        java.util.Comparator<java.io.File> fileComparator15 = fileComparator11.reversed();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator15.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        fileEntryIterator17.recursive = true;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator17.entryComparator;
        fileEntryIterator17.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        fileEntryIterator17.stack = fileItorQueue25;
        fileEntryIterator17.recursive = true;
        java.io.File file29 = fileEntryIterator17.current;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator15.thenComparing(fileComparator30);
        fileEntryIterator0.entryComparator = fileComparator31;
        java.io.File file33 = fileEntryIterator0.root;
        java.io.File file34 = fileEntryIterator0.poll();
        java.io.File file35 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
    }

    @Test
    public void test9804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9804");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file4 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = true;
        boolean boolean7 = fileEntryIterator0.recursive;
        fileEntryIterator0.recursive = true;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test9805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9805");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        int int13 = uRL11.getDefaultPort();
        java.lang.String str14 = uRL11.getUserInfo();
        java.lang.String str15 = uRL11.getRef();
        int int16 = uRL11.getPort();
        java.net.URL uRL18 = new java.net.URL(uRL11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive:0");
        java.lang.String str19 = uRL18.getProtocol();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals(uRL18.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive:0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "file" + "'", str19, "file");
    }

    @Test
    public void test9806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9806");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator25 = explodedArchive0.spliterator();
        java.io.File file26 = explodedArchive0.manifestFile;
        java.io.File file27 = explodedArchive0.manifestFile;
        java.net.URL uRL28 = explodedArchive0.getUrl();
        int int29 = uRL28.getDefaultPort();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNotNull(entrySpliterator25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(uRL28);
// flaky:         org.junit.Assert.assertEquals(uRL28.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test9807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9807");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        java.lang.Class[] classArray7 = new java.lang.Class[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = uRL3.getContent(classArray7);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(classArray7);
    }

    @Test
    public void test9808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9808");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file18 = fileEntryIterator17.current;
        boolean boolean19 = fileEntryIterator17.hasNext();
        fileEntryIterator17.recursive = true;
        boolean boolean22 = fileEntryIterator17.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        boolean boolean25 = explodedArchive23.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = null;
        fileEntryIterator26.current = file28;
        java.io.File file30 = fileEntryIterator26.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file32 = fileEntry31.getFile();
        java.lang.String str33 = fileEntry31.name;
        java.io.File file34 = fileEntry31.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        boolean boolean37 = fileEntryIterator35.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        boolean boolean43 = explodedArchive38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        fileEntryIterator44.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator54.thenComparing(fileComparator57);
        fileEntryIterator49.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator54.thenComparing(fileComparator62);
        fileEntryIterator44.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator44.root = file69;
        explodedArchive38.root = file69;
        java.util.Iterator<java.io.File> fileItor72 = fileEntryIterator35.listFiles(file69);
        fileEntry31.file = file69;
        fileEntryIterator26.current = file69;
        explodedArchive23.root = file69;
        java.util.Iterator<java.io.File> fileItor76 = fileEntryIterator17.listFiles(file69);
        explodedArchive0.root = file69;
        java.net.URL uRL78 = explodedArchive0.getUrl();
        java.net.URLConnection uRLConnection79 = uRL78.openConnection();
        java.lang.String str80 = uRL78.getHost();
        java.lang.String str81 = uRL78.getFile();
        java.lang.String str82 = uRL78.getUserInfo();
        int int83 = uRL78.getPort();
        java.lang.String str84 = uRL78.getRef();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "exploded archive" + "'", str24, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor72);
        org.junit.Assert.assertNotNull(fileItor76);
        org.junit.Assert.assertNotNull(uRL78);
// flaky:         org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str81, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNull(str84);
    }

    @Test
    public void test9809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9809");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        int int11 = uRL3.getPort();
        java.lang.String str12 = uRL3.toExternalForm();
        java.net.URL uRL13 = null;
        java.net.URLStreamHandler uRLStreamHandler15 = null;
        java.net.URL uRL16 = new java.net.URL(uRL13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler15);
        java.lang.String str17 = uRL16.getHost();
        java.lang.String str18 = uRL16.getAuthority();
        java.lang.String str19 = uRL16.getQuery();
        int int20 = uRL16.getDefaultPort();
        java.lang.String str21 = uRL16.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler23 = null;
        java.net.URL uRL24 = new java.net.URL(uRL16, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler23);
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        boolean boolean29 = uRL3.sameFile(uRL27);
        java.net.URLConnection uRLConnection30 = uRL3.openConnection();
        java.lang.String str31 = uRL3.getProtocol();
        java.net.URL uRL32 = null;
        java.net.URLStreamHandler uRLStreamHandler34 = null;
        java.net.URL uRL35 = new java.net.URL(uRL32, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler34);
        java.lang.String str36 = uRL35.getHost();
        java.lang.String str37 = uRL35.getAuthority();
        java.lang.String str38 = uRL35.getHost();
        int int39 = uRL35.getPort();
        java.lang.String str40 = uRL35.getPath();
        java.lang.String str41 = uRL35.getHost();
        java.lang.String str42 = uRL35.getAuthority();
        java.net.URL uRL44 = new java.net.URL(uRL35, "hi!");
        java.lang.String str45 = uRL44.getProtocol();
        java.lang.String str46 = uRL44.getRef();
        java.lang.Class<?> wildcardClass47 = uRL44.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive48.recursive = true;
        java.io.File file51 = explodedArchive48.manifestFile;
        java.util.jar.Manifest manifest52 = null;
        explodedArchive48.manifest = manifest52;
        java.util.jar.Manifest manifest54 = null;
        explodedArchive48.manifest = manifest54;
        java.lang.Class<?> wildcardClass56 = explodedArchive48.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file58 = fileEntryIterator57.current;
        java.io.File file59 = fileEntryIterator57.root;
        boolean boolean60 = fileEntryIterator57.hasNext();
        java.lang.Class<?> wildcardClass61 = fileEntryIterator57.getClass();
        java.lang.Class[] classArray62 = new java.lang.Class[] { wildcardClass47, wildcardClass56, wildcardClass61 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj63 = uRL3.getContent(classArray62);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL16.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(uRLConnection30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "file" + "'", str31, "file");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str40, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals(uRL44.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "file" + "'", str45, "file");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(classArray62);
    }

    @Test
    public void test9810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9810");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive0.manifest = manifest31;
        java.io.File file33 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file33);
    }

    @Test
    public void test9811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9811");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL73 = null;
        java.net.URLStreamHandler uRLStreamHandler75 = null;
        java.net.URL uRL76 = new java.net.URL(uRL73, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler75);
        java.lang.String str77 = uRL76.getHost();
        java.lang.String str78 = uRL76.getAuthority();
        java.lang.String str79 = uRL76.getHost();
        java.lang.String str80 = uRL76.getQuery();
        java.lang.String str81 = uRL76.getAuthority();
        java.lang.String str82 = uRL76.getRef();
        boolean boolean83 = uRL69.sameFile(uRL76);
        java.net.URLStreamHandler uRLStreamHandler88 = null;
        java.net.URL uRL89 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler88);
        java.lang.String str90 = uRL89.getPath();
        java.lang.String str91 = uRL89.getHost();
        boolean boolean92 = uRL69.sameFile(uRL89);
        java.lang.String str93 = uRL69.getPath();
        java.lang.String str94 = uRL69.getAuthority();
        int int95 = uRL69.getDefaultPort();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL76.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(str82);
// flaky:         org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals(uRL89.toString(), "file://exploded archive:0");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "exploded archive" + "'", str91, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str93 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str93, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test9812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9812");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler4);
        java.lang.String str6 = uRL5.getPath();
        java.lang.String str7 = uRL5.getHost();
        java.lang.String str8 = uRL5.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL5, "file://filefile://exploded archive:0", uRLStreamHandler10);
        java.lang.String str12 = uRL5.toString();
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive:0" + "'", str8, "exploded archive:0");
        org.junit.Assert.assertEquals(uRL11.toString(), "file://filefile://exploded archive:0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file://exploded archive:0" + "'", str12, "file://exploded archive:0");
    }

    @Test
    public void test9813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9813");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        boolean boolean8 = explodedArchive3.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator9.recursive = true;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator9.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator9.root = file34;
        explodedArchive3.root = file34;
        java.util.Iterator<java.io.File> fileItor37 = fileEntryIterator0.listFiles(file34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        boolean boolean40 = fileEntryIterator38.hasNext();
        boolean boolean41 = fileEntryIterator38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator47.thenComparing(fileComparator50);
        fileEntryIterator42.entryComparator = fileComparator47;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator47.thenComparing(fileComparator55);
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator55.reversed();
        fileEntryIterator38.entryComparator = fileComparator55;
        fileEntryIterator0.entryComparator = fileComparator55;
        java.io.File file60 = fileEntryIterator0.current;
        boolean boolean61 = fileEntryIterator0.recursive;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test9814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9814");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.net.URLStreamHandler uRLStreamHandler11 = null;
        java.net.URL uRL12 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler11);
        java.net.URL uRL13 = null;
        java.net.URLStreamHandler uRLStreamHandler15 = null;
        java.net.URL uRL16 = new java.net.URL(uRL13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler15);
        java.lang.String str17 = uRL16.getHost();
        java.lang.String str18 = uRL16.getAuthority();
        java.lang.String str19 = uRL16.toExternalForm();
        java.net.URLConnection uRLConnection20 = uRL16.openConnection();
        java.lang.String str21 = uRL16.getFile();
        boolean boolean22 = uRL3.sameFile(uRL16);
        int int23 = uRL16.getDefaultPort();
        java.lang.Class[] classArray24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = uRL16.getContent(classArray24);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL16.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str21, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test9815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9815");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file23 = fileEntryIterator22.current;
        java.io.File file24 = null;
        fileEntryIterator22.current = file24;
        java.io.File file26 = fileEntryIterator22.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file28 = fileEntry27.getFile();
        java.lang.String str29 = fileEntry27.name;
        java.io.File file30 = fileEntry27.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        boolean boolean33 = fileEntryIterator31.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        boolean boolean39 = explodedArchive34.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        fileEntryIterator40.recursive = true;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator40.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        java.util.Comparator<java.io.File> fileComparator54 = fileComparator50.thenComparing(fileComparator53);
        fileEntryIterator45.entryComparator = fileComparator50;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator50.thenComparing(fileComparator58);
        fileEntryIterator40.entryComparator = fileComparator59;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.manifestFile;
        java.io.File file63 = explodedArchive61.manifestFile;
        java.io.File file64 = null;
        java.io.File file65 = explodedArchive61.getManifestFile(file64);
        fileEntryIterator40.root = file65;
        explodedArchive34.root = file65;
        java.util.Iterator<java.io.File> fileItor68 = fileEntryIterator31.listFiles(file65);
        fileEntry27.file = file65;
        fileEntryIterator22.current = file65;
        explodedArchive0.manifestFile = file65;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter72 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList73 = explodedArchive0.getNestedArchives(entryFilter72);
        java.util.jar.Manifest manifest74 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest75 = explodedArchive0.manifest;
        boolean boolean76 = explodedArchive0.recursive;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor68);
        org.junit.Assert.assertNotNull(archiveList73);
        org.junit.Assert.assertNull(manifest74);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test9816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9816");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest25 = explodedArchive0.manifest;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor26 = explodedArchive0.iterator();
        java.io.File file27 = explodedArchive0.manifestFile;
        java.io.File file28 = explodedArchive0.root;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor29 = explodedArchive0.iterator();
        explodedArchive0.recursive = false;
        java.io.File file32 = explodedArchive0.root;
        java.util.jar.Manifest manifest33 = null;
        explodedArchive0.manifest = manifest33;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNotNull(entryItor26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor29);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test9817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9817");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file18 = fileEntry17.getFile();
        java.io.File file19 = fileEntry17.file;
        fileEntry17.name = "";
        java.lang.String str22 = fileEntry17.name;
        java.io.File file23 = fileEntry17.file;
        java.io.File file24 = fileEntry17.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file31 = fileEntry30.getFile();
        java.lang.String str32 = fileEntry30.name;
        java.io.File file33 = fileEntry30.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        boolean boolean36 = fileEntryIterator34.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        boolean boolean42 = explodedArchive37.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        fileEntryIterator43.recursive = true;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator53.thenComparing(fileComparator56);
        fileEntryIterator48.entryComparator = fileComparator53;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator53.thenComparing(fileComparator61);
        fileEntryIterator43.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        fileEntryIterator43.root = file68;
        explodedArchive37.root = file68;
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator34.listFiles(file68);
        fileEntry30.file = file68;
        explodedArchive25.manifestFile = file68;
        fileEntry17.file = file68;
        explodedArchive0.root = file68;
        java.net.URL uRL76 = explodedArchive0.getUrl();
        java.lang.String str77 = uRL76.getQuery();
        java.net.URLStreamHandler uRLStreamHandler79 = null;
        java.net.URL uRL80 = new java.net.URL(uRL76, "exploded archive:0", uRLStreamHandler79);
        java.lang.String str81 = uRL76.getUserInfo();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor71);
        org.junit.Assert.assertNotNull(uRL76);
// flaky:         org.junit.Assert.assertEquals(uRL76.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str77);
// flaky:         org.junit.Assert.assertEquals(uRL80.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive:0");
        org.junit.Assert.assertNull(str81);
    }

    @Test
    public void test9818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9818");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.io.File file10 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator11.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        java.util.Iterator<java.io.File> fileItor25 = fileEntryIterator11.listFiles(file24);
        fileEntryIterator6.root = file24;
        explodedArchive0.manifestFile = file24;
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        boolean boolean35 = explodedArchive30.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        fileEntryIterator36.recursive = true;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        java.util.Comparator<java.io.File> fileComparator50 = fileComparator46.thenComparing(fileComparator49);
        fileEntryIterator41.entryComparator = fileComparator46;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        java.util.Comparator<java.io.File> fileComparator55 = fileComparator46.thenComparing(fileComparator54);
        fileEntryIterator36.entryComparator = fileComparator55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        fileEntryIterator36.root = file61;
        explodedArchive30.root = file61;
        explodedArchive30.recursive = false;
        java.util.jar.Manifest manifest66 = null;
        explodedArchive30.manifest = manifest66;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file69 = fileEntryIterator68.current;
        java.io.File file70 = fileEntryIterator68.poll();
        java.io.File file71 = fileEntryIterator68.poll();
        java.io.File file72 = fileEntryIterator68.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.io.File file75 = fileEntryIterator73.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file77 = explodedArchive76.manifestFile;
        java.io.File file78 = explodedArchive76.manifestFile;
        java.io.File file79 = null;
        java.io.File file80 = explodedArchive76.getManifestFile(file79);
        fileEntryIterator73.root = file79;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file83 = explodedArchive82.manifestFile;
        java.io.File file84 = explodedArchive82.manifestFile;
        java.io.File file85 = null;
        java.io.File file86 = explodedArchive82.getManifestFile(file85);
        java.util.Iterator<java.io.File> fileItor87 = fileEntryIterator73.listFiles(file86);
        fileEntryIterator68.root = file86;
        explodedArchive30.root = file86;
        java.io.File file90 = explodedArchive30.root;
        java.io.File file91 = explodedArchive30.root;
        java.io.File file92 = explodedArchive0.getManifestFile(file91);
        java.io.File file93 = explodedArchive0.root;
        explodedArchive0.recursive = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor25);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor87);
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file90.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file93);
    }
}
