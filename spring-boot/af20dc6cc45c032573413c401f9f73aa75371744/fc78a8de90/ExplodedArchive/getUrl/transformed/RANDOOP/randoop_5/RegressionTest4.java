import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2001");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.lang.String str73 = uRL69.getUserInfo();
        java.net.URLConnection uRLConnection74 = uRL69.openConnection();
        int int75 = uRL69.getDefaultPort();
        int int76 = uRL69.getDefaultPort();
        java.net.Proxy proxy77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection78 = uRL69.openConnection(proxy77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(uRLConnection74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2002");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file6 = fileEntry5.getFile();
        java.lang.String str7 = fileEntry5.name;
        java.io.File file8 = fileEntry5.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        boolean boolean11 = fileEntryIterator9.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        boolean boolean17 = explodedArchive12.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        fileEntryIterator18.root = file43;
        explodedArchive12.root = file43;
        java.util.Iterator<java.io.File> fileItor46 = fileEntryIterator9.listFiles(file43);
        fileEntry5.file = file43;
        explodedArchive0.manifestFile = file43;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor46);
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2003");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.io.File file25 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest26 = null;
        explodedArchive0.manifest = manifest26;
        java.net.URL uRL28 = explodedArchive0.getUrl();
        java.util.jar.Manifest manifest29 = null;
        explodedArchive0.manifest = manifest29;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor31 = explodedArchive0.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest32 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(uRL28);
// flaky:         org.junit.Assert.assertEquals(uRL28.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor31);
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2004");
        java.net.URL uRL4 = new java.net.URL("file", "hi!", (int) ' ', "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        int int5 = uRL4.getDefaultPort();
        java.lang.String str6 = uRL4.getProtocol();
        org.junit.Assert.assertEquals(uRL4.toString(), "file://hi!:32file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file" + "'", str6, "file");
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2005");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.util.jar.Manifest manifest38 = explodedArchive0.manifest;
        java.lang.String str39 = explodedArchive0.toString();
        java.lang.String str40 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.io.File file43 = fileEntryIterator41.current;
        boolean boolean44 = fileEntryIterator41.hasNext();
        fileEntryIterator41.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        fileEntryIterator47.recursive = true;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator47.entryComparator;
        fileEntryIterator47.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.io.File file56 = fileEntryIterator54.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        fileEntryIterator54.entryComparator = fileComparator59;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.manifestFile;
        java.io.File file63 = explodedArchive61.manifestFile;
        java.io.File file64 = null;
        java.io.File file65 = explodedArchive61.getManifestFile(file64);
        fileEntryIterator54.root = file64;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file68 = fileEntryIterator67.current;
        java.io.File file69 = null;
        fileEntryIterator67.current = file69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean72 = explodedArchive71.recursive;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.util.jar.Manifest manifest74 = null;
        explodedArchive71.manifest = manifest74;
        java.io.File file76 = explodedArchive71.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        java.util.Comparator<java.io.File> fileComparator79 = fileEntryIterator77.entryComparator;
        java.io.File file80 = fileEntryIterator77.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file82 = explodedArchive81.manifestFile;
        java.io.File file83 = explodedArchive81.manifestFile;
        java.io.File file84 = null;
        java.io.File file85 = explodedArchive81.getManifestFile(file84);
        fileEntryIterator77.current = file85;
        explodedArchive71.root = file85;
        fileEntryIterator67.root = file85;
        fileEntryIterator54.current = file85;
        java.util.Iterator<java.io.File> fileItor90 = fileEntryIterator47.listFiles(file85);
        fileEntryIterator41.root = file85;
        explodedArchive0.root = file85;
        java.net.URL uRL93 = explodedArchive0.getUrl();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator94 = explodedArchive0.spliterator();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter95 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList96 = explodedArchive0.getNestedArchives(entryFilter95);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest38);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str40, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor90);
        org.junit.Assert.assertNotNull(uRL93);
// flaky:         org.junit.Assert.assertEquals(uRL93.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator94);
        org.junit.Assert.assertNotNull(archiveList96);
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2006");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        boolean boolean41 = explodedArchive39.recursive;
        java.io.File file42 = explodedArchive39.root;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive39.getManifestFile(file43);
        explodedArchive0.manifestFile = file43;
        java.io.File file46 = explodedArchive0.root;
        java.io.File file47 = explodedArchive0.manifestFile;
        java.net.URL uRL48 = explodedArchive0.getUrl();
        java.lang.String str49 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(uRL48);
// flaky:         org.junit.Assert.assertEquals(uRL48.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str49, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2007");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        java.io.File file7 = fileEntryIterator0.poll();
        java.io.File file8 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file10 = fileEntryIterator9.current;
        java.io.File file11 = fileEntryIterator9.poll();
        java.io.File file12 = fileEntryIterator9.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator9.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean15 = explodedArchive14.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file17 = fileEntry16.getFile();
        java.io.File file18 = fileEntry16.file;
        java.io.File file19 = null;
        fileEntry16.file = file19;
        java.lang.String str21 = fileEntry16.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        boolean boolean24 = fileEntryIterator22.hasNext();
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator38 = fileComparator31.thenComparing((java.util.Comparator<java.io.File>) entryComparator37);
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator25.thenComparing((java.util.Comparator<java.io.File>) entryComparator37);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean41 = fileEntryIterator40.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean43 = explodedArchive42.recursive;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.util.jar.Manifest manifest45 = null;
        explodedArchive42.manifest = manifest45;
        java.io.File file47 = explodedArchive42.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        java.io.File file51 = fileEntryIterator48.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        fileEntryIterator48.current = file56;
        explodedArchive42.root = file56;
        fileEntryIterator40.root = file56;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file61 = explodedArchive60.manifestFile;
        java.io.File file62 = explodedArchive60.manifestFile;
        java.io.File file63 = null;
        java.io.File file64 = explodedArchive60.getManifestFile(file63);
        boolean boolean65 = explodedArchive60.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        fileEntryIterator66.recursive = true;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator66.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.util.Comparator<java.io.File> fileComparator73 = fileEntryIterator71.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        java.util.Comparator<java.io.File> fileComparator79 = fileEntryIterator77.entryComparator;
        java.util.Comparator<java.io.File> fileComparator80 = fileComparator76.thenComparing(fileComparator79);
        fileEntryIterator71.entryComparator = fileComparator76;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator82 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue83 = fileEntryIterator82.stack;
        java.util.Comparator<java.io.File> fileComparator84 = fileEntryIterator82.entryComparator;
        java.util.Comparator<java.io.File> fileComparator85 = fileComparator76.thenComparing(fileComparator84);
        fileEntryIterator66.entryComparator = fileComparator85;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file88 = explodedArchive87.manifestFile;
        java.io.File file89 = explodedArchive87.manifestFile;
        java.io.File file90 = null;
        java.io.File file91 = explodedArchive87.getManifestFile(file90);
        fileEntryIterator66.root = file91;
        explodedArchive60.root = file91;
        int int94 = entryComparator37.compare(file56, file91);
        fileEntry16.file = file91;
        explodedArchive14.manifestFile = file91;
        fileEntryIterator9.current = file91;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue98 = fileEntryIterator9.stack;
        fileEntryIterator0.stack = fileItorQueue98;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNotNull(fileItorQueue83);
        org.junit.Assert.assertNotNull(fileComparator84);
        org.junit.Assert.assertNotNull(fileComparator85);
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertNotNull(fileItorQueue98);
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2008");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        boolean boolean4 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file6 = fileEntry5.getFile();
        java.io.File file7 = fileEntry5.file;
        java.io.File file8 = null;
        fileEntry5.file = file8;
        java.lang.String str10 = fileEntry5.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file12 = fileEntryIterator11.current;
        java.io.File file13 = null;
        fileEntryIterator11.current = file13;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean16 = explodedArchive15.recursive;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive15.manifest = manifest18;
        java.io.File file20 = explodedArchive15.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.io.File file24 = fileEntryIterator21.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        fileEntryIterator21.current = file29;
        explodedArchive15.root = file29;
        fileEntryIterator11.root = file29;
        fileEntry5.file = file29;
        boolean boolean34 = fileEntry5.isDirectory();
        java.lang.String str35 = fileEntry5.getName();
        fileEntry5.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!";
        java.io.File file38 = fileEntry5.file;
        explodedArchive0.root = file38;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor40 = explodedArchive0.iterator();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor40);
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2009");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URL uRL13 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URLStreamHandler uRLStreamHandler15 = null;
        java.net.URL uRL16 = new java.net.URL(uRL13, "", uRLStreamHandler15);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL16.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2010");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        java.util.Comparator<java.io.File> fileComparator38 = fileComparator36.reversed();
        fileEntryIterator0.entryComparator = fileComparator36;
        boolean boolean40 = fileEntryIterator0.hasNext();
        java.io.File file41 = fileEntryIterator0.root;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file41);
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2011");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        boolean boolean7 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        boolean boolean13 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator14.root = file39;
        explodedArchive8.root = file39;
        java.util.Iterator<java.io.File> fileItor42 = fileEntryIterator5.listFiles(file39);
        fileEntry0.file = file39;
        fileEntry0.name = "";
        boolean boolean46 = fileEntry0.isDirectory();
        fileEntry0.name = "file://exploded archive:0";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2012");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.io.File file3 = fileEntryIterator0.current;
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str7 = fileEntry6.getName();
        fileEntry6.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean11 = explodedArchive10.recursive;
        boolean boolean12 = explodedArchive10.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        explodedArchive10.root = file17;
        fileEntry6.file = file17;
        fileEntryIterator0.root = file17;
        fileEntryIterator0.recursive = false;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry23 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2013");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        fileEntryIterator5.root = file11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        java.util.Iterator<java.io.File> fileItor19 = fileEntryIterator5.listFiles(file18);
        fileEntryIterator0.root = file18;
        java.io.File file21 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean23 = explodedArchive22.recursive;
        java.util.jar.Manifest manifest24 = null;
        explodedArchive22.manifest = manifest24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.io.File file28 = fileEntryIterator26.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        fileEntryIterator26.root = file32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        java.util.Iterator<java.io.File> fileItor40 = fileEntryIterator26.listFiles(file39);
        explodedArchive22.manifestFile = file39;
        fileEntryIterator0.current = file39;
        fileEntryIterator0.recursive = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor19);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor40);
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2014");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getProtocol();
        java.lang.String str8 = uRL3.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file" + "'", str7, "file");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2015");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator25 = explodedArchive0.spliterator();
        java.net.URL uRL26 = explodedArchive0.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str28 = fileEntry27.name;
        java.io.File file29 = fileEntry27.getFile();
        fileEntry27.name = "file://exploded archive:0";
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive32 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNotNull(entrySpliterator25);
        org.junit.Assert.assertNotNull(uRL26);
// flaky:         org.junit.Assert.assertEquals(uRL26.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(file29);
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2016");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        java.lang.String str6 = explodedArchive0.toString();
        java.lang.String str7 = explodedArchive0.toString();
        java.lang.String str8 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor9 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2017");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        explodedArchive0.root = file56;
        java.io.File file60 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.io.File file63 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file65 = fileEntry64.getFile();
        java.io.File file66 = fileEntry64.file;
        fileEntry64.name = "";
        java.lang.String str69 = fileEntry64.name;
        fileEntry64.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!";
        java.lang.String str72 = fileEntry64.getName();
        fileEntry64.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive75 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str72, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2018");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        java.io.File file11 = explodedArchive0.getManifestFile(file9);
        java.util.jar.Manifest manifest12 = null;
        explodedArchive0.manifest = manifest12;
        java.io.File file14 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL17 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2019");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.lang.String str19 = uRL3.getProtocol();
        java.net.URL uRL21 = new java.net.URL(uRL3, "file://exploded archive:0");
        java.net.URI uRI22 = uRL3.toURI();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "file" + "'", str19, "file");
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertNotNull(uRI22);
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2020");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        boolean boolean32 = explodedArchive0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor33 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2021");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        java.io.File file4 = fileEntryIterator0.root;
        java.io.File file5 = fileEntryIterator0.poll();
        java.lang.Class<?> wildcardClass6 = fileEntryIterator0.getClass();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2022");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file://hi!:100hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://hi!:100hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2023");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.io.File file3 = fileEntryIterator0.current;
        java.io.File file4 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.lang.String str9 = explodedArchive6.toString();
        java.util.jar.Manifest manifest10 = null;
        explodedArchive6.manifest = manifest10;
        java.lang.String str12 = explodedArchive6.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        boolean boolean15 = fileEntryIterator13.hasNext();
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator22.thenComparing(fileComparator25);
        fileEntryIterator17.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator22.thenComparing((java.util.Comparator<java.io.File>) entryComparator28);
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator16.thenComparing((java.util.Comparator<java.io.File>) entryComparator28);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean32 = fileEntryIterator31.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean34 = explodedArchive33.recursive;
        java.io.File file35 = explodedArchive33.manifestFile;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive33.manifest = manifest36;
        java.io.File file38 = explodedArchive33.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.io.File file42 = fileEntryIterator39.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.manifestFile;
        java.io.File file45 = explodedArchive43.manifestFile;
        java.io.File file46 = null;
        java.io.File file47 = explodedArchive43.getManifestFile(file46);
        fileEntryIterator39.current = file47;
        explodedArchive33.root = file47;
        fileEntryIterator31.root = file47;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        boolean boolean56 = explodedArchive51.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        fileEntryIterator57.recursive = true;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator67.thenComparing(fileComparator70);
        fileEntryIterator62.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        java.util.Comparator<java.io.File> fileComparator76 = fileComparator67.thenComparing(fileComparator75);
        fileEntryIterator57.entryComparator = fileComparator76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file79 = explodedArchive78.manifestFile;
        java.io.File file80 = explodedArchive78.manifestFile;
        java.io.File file81 = null;
        java.io.File file82 = explodedArchive78.getManifestFile(file81);
        fileEntryIterator57.root = file82;
        explodedArchive51.root = file82;
        int int85 = entryComparator28.compare(file47, file82);
        java.io.File file86 = explodedArchive6.getManifestFile(file47);
        explodedArchive5.manifestFile = file86;
        fileEntryIterator0.root = file86;
        java.io.File file89 = fileEntryIterator0.poll();
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "exploded archive" + "'", str9, "exploded archive");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "exploded archive" + "'", str12, "exploded archive");
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file89);
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2024");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "exploded archive", (int) (byte) 10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2025");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.net.URL uRL8 = null;
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getHost();
        java.net.URI uRI13 = uRL11.toURI();
        java.lang.String str14 = uRL11.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL11, "file", uRLStreamHandler16);
        java.lang.String str18 = uRL11.getFile();
        int int19 = uRL11.getPort();
        java.lang.String str20 = uRL11.toExternalForm();
        boolean boolean21 = uRL3.sameFile(uRL11);
        java.net.URLStreamHandler uRLStreamHandler23 = null;
        java.net.URL uRL24 = new java.net.URL(uRL3, "exploded archive", uRLStreamHandler23);
        java.net.URL uRL25 = null;
        java.net.URLStreamHandler uRLStreamHandler27 = null;
        java.net.URL uRL28 = new java.net.URL(uRL25, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler27);
        java.lang.String str29 = uRL28.getHost();
        java.lang.String str30 = uRL28.getAuthority();
        java.lang.String str31 = uRL28.getQuery();
        int int32 = uRL28.getDefaultPort();
        java.lang.String str33 = uRL28.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler35 = null;
        java.net.URL uRL36 = new java.net.URL(uRL28, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler35);
        java.net.URL uRL38 = new java.net.URL(uRL28, "file://exploded archive");
        java.lang.String str39 = uRL38.getProtocol();
        java.lang.String str40 = uRL38.getHost();
        java.lang.String str41 = uRL38.getFile();
        java.lang.String str42 = uRL38.getAuthority();
        java.net.URL uRL43 = null;
        java.net.URLStreamHandler uRLStreamHandler45 = null;
        java.net.URL uRL46 = new java.net.URL(uRL43, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler45);
        java.lang.String str47 = uRL46.getHost();
        java.net.URI uRI48 = uRL46.toURI();
        java.lang.String str49 = uRL46.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler51 = null;
        java.net.URL uRL52 = new java.net.URL(uRL46, "file", uRLStreamHandler51);
        java.net.URLStreamHandler uRLStreamHandler54 = null;
        java.net.URL uRL55 = new java.net.URL(uRL46, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler54);
        java.lang.String str56 = uRL55.getHost();
        java.lang.String str57 = uRL55.getUserInfo();
        boolean boolean58 = uRL38.sameFile(uRL55);
        boolean boolean59 = uRL3.equals((java.lang.Object) uRL55);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(uRI13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str18, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str20, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals(uRL28.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals(uRL36.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL38.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "file" + "'", str39, "file");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "exploded archive" + "'", str40, "exploded archive");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "exploded archive" + "'", str42, "exploded archive");
        org.junit.Assert.assertEquals(uRL46.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(uRI48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str49, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL52.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL55.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2026");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        fileEntryIterator21.recursive = true;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator21.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator21.root = file46;
        explodedArchive18.manifestFile = file46;
        fileEntryIterator0.root = file46;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2027");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.io.File file8 = fileEntryIterator6.current;
        java.io.File file9 = fileEntryIterator6.current;
        fileEntryIterator6.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        fileEntryIterator6.root = file16;
        fileEntryIterator0.root = file16;
        java.io.File file19 = null;
        fileEntryIterator0.current = file19;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.manifestFile;
        java.io.File file23 = explodedArchive21.manifestFile;
        java.io.File file24 = null;
        java.io.File file25 = explodedArchive21.getManifestFile(file24);
        boolean boolean26 = explodedArchive21.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        fileEntryIterator27.recursive = true;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator37.thenComparing(fileComparator40);
        fileEntryIterator32.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator37.thenComparing(fileComparator45);
        fileEntryIterator27.entryComparator = fileComparator46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        fileEntryIterator27.root = file52;
        explodedArchive21.root = file52;
        java.lang.String str55 = explodedArchive21.toString();
        java.util.jar.Manifest manifest56 = explodedArchive21.manifest;
        java.io.File file57 = null;
        explodedArchive21.root = file57;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry59.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.io.File file64 = fileEntryIterator62.current;
        boolean boolean65 = fileEntryIterator62.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator62.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean68 = explodedArchive67.recursive;
        boolean boolean69 = explodedArchive67.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file71 = explodedArchive70.manifestFile;
        java.io.File file72 = explodedArchive70.manifestFile;
        java.io.File file73 = null;
        java.io.File file74 = explodedArchive70.getManifestFile(file73);
        explodedArchive67.root = file74;
        fileEntryIterator62.root = file74;
        fileEntry59.file = file74;
        explodedArchive21.manifestFile = file74;
        fileEntryIterator0.root = file74;
        java.io.File file80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<java.io.File> fileItor81 = fileEntryIterator0.listFiles(file80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str55, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest56);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2028");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.getName();
        java.lang.String str3 = fileEntry0.getName();
        fileEntry0.name = "";
        java.io.File file6 = fileEntry0.file;
        java.io.File file7 = fileEntry0.getFile();
        java.lang.String str8 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean10 = fileEntryIterator9.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.manifestFile;
        java.io.File file13 = explodedArchive11.manifestFile;
        java.lang.String str14 = explodedArchive11.toString();
        java.lang.String str15 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean17 = fileEntryIterator16.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean19 = explodedArchive18.recursive;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.util.jar.Manifest manifest21 = null;
        explodedArchive18.manifest = manifest21;
        java.io.File file23 = explodedArchive18.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.io.File file27 = fileEntryIterator24.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.manifestFile;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.io.File file31 = null;
        java.io.File file32 = explodedArchive28.getManifestFile(file31);
        fileEntryIterator24.current = file32;
        explodedArchive18.root = file32;
        fileEntryIterator16.root = file32;
        java.io.File file36 = explodedArchive11.getManifestFile(file32);
        java.util.Iterator<java.io.File> fileItor37 = fileEntryIterator9.listFiles(file36);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        boolean boolean43 = explodedArchive38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        fileEntryIterator44.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator54.thenComparing(fileComparator57);
        fileEntryIterator49.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator54.thenComparing(fileComparator62);
        fileEntryIterator44.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator44.root = file69;
        explodedArchive38.root = file69;
        explodedArchive38.recursive = false;
        java.util.jar.Manifest manifest74 = null;
        explodedArchive38.manifest = manifest74;
        java.lang.String str76 = explodedArchive38.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter77 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList78 = explodedArchive38.getNestedArchives(entryFilter77);
        java.io.File file79 = explodedArchive38.root;
        explodedArchive38.recursive = true;
        java.io.File file82 = explodedArchive38.root;
        java.io.File file83 = explodedArchive38.root;
        java.util.Iterator<java.io.File> fileItor84 = fileEntryIterator9.listFiles(file83);
        fileEntry0.file = file83;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "exploded archive" + "'", str14, "exploded archive");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "exploded archive" + "'", str15, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str76, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList78);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor84);
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2029");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getFile();
        java.lang.String str7 = uRL3.getPath();
        java.net.URLConnection uRLConnection8 = uRL3.openConnection();
        java.lang.String str9 = uRL3.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream10 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2030");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        fileEntryIterator5.root = file11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        java.util.Iterator<java.io.File> fileItor19 = fileEntryIterator5.listFiles(file18);
        fileEntryIterator0.root = file18;
        boolean boolean21 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.manifestFile;
        java.io.File file24 = explodedArchive22.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        fileEntryIterator25.recursive = true;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator35.thenComparing(fileComparator38);
        fileEntryIterator30.entryComparator = fileComparator35;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator35.thenComparing(fileComparator43);
        fileEntryIterator25.entryComparator = fileComparator44;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator25.root = file50;
        explodedArchive22.manifestFile = file50;
        java.util.jar.Manifest manifest53 = explodedArchive22.manifest;
        java.util.jar.Manifest manifest54 = explodedArchive22.manifest;
        java.util.jar.Manifest manifest55 = explodedArchive22.getManifest();
        java.util.jar.Manifest manifest56 = explodedArchive22.getManifest();
        java.io.File file57 = explodedArchive22.root;
        java.io.File file58 = null;
        explodedArchive22.manifestFile = file58;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        fileEntryIterator60.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        fileEntryIterator67.recursive = true;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator67.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator75.stack;
        java.util.Comparator<java.io.File> fileComparator77 = fileEntryIterator75.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator78.stack;
        java.util.Comparator<java.io.File> fileComparator80 = fileEntryIterator78.entryComparator;
        java.util.Comparator<java.io.File> fileComparator81 = fileComparator77.thenComparing(fileComparator80);
        fileEntryIterator72.entryComparator = fileComparator77;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator83 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue84 = fileEntryIterator83.stack;
        java.util.Comparator<java.io.File> fileComparator85 = fileEntryIterator83.entryComparator;
        java.util.Comparator<java.io.File> fileComparator86 = fileComparator77.thenComparing(fileComparator85);
        fileEntryIterator67.entryComparator = fileComparator86;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file89 = explodedArchive88.manifestFile;
        java.io.File file90 = explodedArchive88.manifestFile;
        java.io.File file91 = null;
        java.io.File file92 = explodedArchive88.getManifestFile(file91);
        fileEntryIterator67.root = file92;
        explodedArchive64.manifestFile = file92;
        fileEntryIterator60.current = file92;
        java.io.File file96 = fileEntryIterator60.current;
        java.io.File file97 = explodedArchive22.getManifestFile(file96);
        java.util.Iterator<java.io.File> fileItor98 = fileEntryIterator0.listFiles(file97);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest53);
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertNull(manifest55);
        org.junit.Assert.assertNull(manifest56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileItorQueue84);
        org.junit.Assert.assertNotNull(fileComparator85);
        org.junit.Assert.assertNotNull(fileComparator86);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file96);
        org.junit.Assert.assertEquals(file96.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file96.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file97);
        org.junit.Assert.assertEquals(file97.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file97.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor98);
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2031");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        explodedArchive0.root = file56;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean63 = explodedArchive62.recursive;
        boolean boolean64 = explodedArchive62.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        explodedArchive62.root = file69;
        explodedArchive62.recursive = false;
        java.io.File file73 = explodedArchive62.root;
        java.io.File file74 = explodedArchive0.getManifestFile(file73);
        java.net.URL uRL75 = explodedArchive0.getUrl();
        java.lang.Class<?> wildcardClass76 = explodedArchive0.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL75);
// flaky:         org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2032");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        explodedArchive0.root = file56;
        boolean boolean60 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter61 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList62 = explodedArchive0.getNestedArchives(entryFilter61);
        java.io.File file63 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file65 = fileEntry64.getFile();
        java.io.File file66 = fileEntry64.file;
        fileEntry64.name = "";
        java.lang.String str69 = fileEntry64.name;
        java.io.File file70 = fileEntry64.file;
        java.io.File file71 = fileEntry64.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive72 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(archiveList62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2033");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2034");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.lang.String str8 = uRL3.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2035");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = null;
        explodedArchive0.manifestFile = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.manifestFile;
        java.io.File file6 = explodedArchive4.manifestFile;
        java.io.File file7 = null;
        java.io.File file8 = explodedArchive4.getManifestFile(file7);
        boolean boolean9 = explodedArchive4.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        fileEntryIterator10.recursive = true;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator20.thenComparing(fileComparator28);
        fileEntryIterator10.entryComparator = fileComparator29;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.manifestFile;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.io.File file34 = null;
        java.io.File file35 = explodedArchive31.getManifestFile(file34);
        fileEntryIterator10.root = file35;
        explodedArchive4.root = file35;
        explodedArchive4.recursive = false;
        java.util.jar.Manifest manifest40 = null;
        explodedArchive4.manifest = manifest40;
        java.io.File file42 = explodedArchive4.root;
        explodedArchive0.root = file42;
        java.lang.String str44 = explodedArchive0.toString();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str44, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2036");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        fileEntryIterator8.recursive = true;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator18.thenComparing(fileComparator21);
        fileEntryIterator13.entryComparator = fileComparator18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator18.thenComparing(fileComparator26);
        fileEntryIterator8.entryComparator = fileComparator27;
        fileEntryIterator8.recursive = true;
        fileEntryIterator8.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator8.stack;
        fileEntryIterator5.stack = fileItorQueue33;
        fileEntryIterator0.stack = fileItorQueue33;
        java.io.File file36 = fileEntryIterator0.poll();
        java.io.File file37 = fileEntryIterator0.current;
        java.io.File file38 = fileEntryIterator0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2037");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file://exploded archive", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        org.junit.Assert.assertEquals(uRL3.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2038");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file://hi!:100hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", (int) '4', "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://hi!:100hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2039");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.net.URL uRL9 = new java.net.URL(uRL3, "exploded archive");
        java.lang.String str10 = uRL3.getAuthority();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream11 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2040");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = null;
        explodedArchive0.manifestFile = file2;
        java.io.File file4 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest5 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(manifest5);
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2041");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        int int9 = uRL3.getPort();
        java.lang.String str10 = uRL3.getFile();
        java.lang.String str11 = uRL3.getProtocol();
        int int12 = uRL3.getDefaultPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file" + "'", str11, "file");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2042");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        fileEntryIterator5.root = file11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        java.util.Iterator<java.io.File> fileItor19 = fileEntryIterator5.listFiles(file18);
        fileEntryIterator0.root = file18;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator25.thenComparing(fileComparator31);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.util.Comparator<java.io.File> fileComparator43 = fileComparator39.thenComparing(fileComparator42);
        fileEntryIterator34.entryComparator = fileComparator39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator39.thenComparing((java.util.Comparator<java.io.File>) entryComparator45);
        java.util.Comparator<java.io.File> fileComparator47 = fileComparator33.thenComparing((java.util.Comparator<java.io.File>) entryComparator45);
        fileEntryIterator0.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file50 = fileEntry49.getFile();
        java.io.File file51 = fileEntry49.file;
        java.io.File file52 = null;
        fileEntry49.file = file52;
        java.lang.String str54 = fileEntry49.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file56 = fileEntryIterator55.current;
        java.io.File file57 = null;
        fileEntryIterator55.current = file57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean60 = explodedArchive59.recursive;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.util.jar.Manifest manifest62 = null;
        explodedArchive59.manifest = manifest62;
        java.io.File file64 = explodedArchive59.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        java.io.File file68 = fileEntryIterator65.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file70 = explodedArchive69.manifestFile;
        java.io.File file71 = explodedArchive69.manifestFile;
        java.io.File file72 = null;
        java.io.File file73 = explodedArchive69.getManifestFile(file72);
        fileEntryIterator65.current = file73;
        explodedArchive59.root = file73;
        fileEntryIterator55.root = file73;
        fileEntry49.file = file73;
        java.io.File file78 = fileEntry49.file;
        fileEntryIterator0.current = file78;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive(file78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor19);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2043");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URLStreamHandler uRLStreamHandler74 = null;
        java.net.URL uRL75 = new java.net.URL(uRL72, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler74);
        java.net.Proxy proxy76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection77 = uRL72.openConnection(proxy76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2044");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        boolean boolean8 = explodedArchive3.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator9.recursive = true;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator9.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator9.root = file34;
        explodedArchive3.root = file34;
        java.util.Iterator<java.io.File> fileItor37 = fileEntryIterator0.listFiles(file34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        fileEntryIterator45.recursive = true;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator55.thenComparing(fileComparator58);
        fileEntryIterator50.entryComparator = fileComparator55;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator55.thenComparing(fileComparator63);
        fileEntryIterator45.entryComparator = fileComparator64;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.manifestFile;
        java.io.File file68 = explodedArchive66.manifestFile;
        java.io.File file69 = null;
        java.io.File file70 = explodedArchive66.getManifestFile(file69);
        fileEntryIterator45.root = file70;
        explodedArchive42.manifestFile = file70;
        fileEntryIterator38.current = file70;
        fileEntryIterator0.root = file70;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry75 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2045");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", (int) (byte) -1, "", uRLStreamHandler4);
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        java.lang.String str18 = uRL17.toExternalForm();
        java.lang.String str19 = uRL17.getUserInfo();
        java.lang.String str20 = uRL17.getProtocol();
        java.net.URLConnection uRLConnection21 = uRL17.openConnection();
        java.net.URL uRL23 = new java.net.URL(uRL17, "file://exploded archive");
        java.lang.String str24 = uRL17.getRef();
        java.lang.String str25 = uRL17.getFile();
        java.lang.String str26 = uRL17.getRef();
        boolean boolean27 = uRL5.sameFile(uRL17);
        java.lang.String str28 = uRL5.getProtocol();
        java.lang.String str29 = uRL5.toExternalForm();
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str18, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "file" + "'", str20, "file");
        org.junit.Assert.assertNotNull(uRLConnection21);
        org.junit.Assert.assertEquals(uRL23.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str25, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "file" + "'", str28, "file");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "file://exploded archive" + "'", str29, "file://exploded archive");
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2046");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.name;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = fileEntry0.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2047");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        java.io.File file18 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean21 = fileEntryIterator20.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean23 = explodedArchive22.recursive;
        java.io.File file24 = explodedArchive22.manifestFile;
        java.util.jar.Manifest manifest25 = null;
        explodedArchive22.manifest = manifest25;
        java.io.File file27 = explodedArchive22.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.io.File file31 = fileEntryIterator28.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        fileEntryIterator28.current = file36;
        explodedArchive22.root = file36;
        fileEntryIterator20.root = file36;
        explodedArchive19.root = file36;
        fileEntryIterator0.current = file36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file43 = fileEntry42.getFile();
        java.io.File file44 = fileEntry42.file;
        java.io.File file45 = null;
        fileEntry42.file = file45;
        java.lang.String str47 = fileEntry42.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file49 = fileEntryIterator48.current;
        java.io.File file50 = null;
        fileEntryIterator48.current = file50;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean53 = explodedArchive52.recursive;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.util.jar.Manifest manifest55 = null;
        explodedArchive52.manifest = manifest55;
        java.io.File file57 = explodedArchive52.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.io.File file61 = fileEntryIterator58.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        fileEntryIterator58.current = file66;
        explodedArchive52.root = file66;
        fileEntryIterator48.root = file66;
        fileEntry42.file = file66;
        java.io.File file71 = fileEntry42.getFile();
        java.util.Iterator<java.io.File> fileItor72 = fileEntryIterator0.listFiles(file71);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file71, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor72);
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2048");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "exploded archive", (int) (short) 100, "file://exploded archive:0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2049");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.lang.String str41 = explodedArchive38.toString();
        java.lang.String str42 = explodedArchive38.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean44 = fileEntryIterator43.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean46 = explodedArchive45.recursive;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.util.jar.Manifest manifest48 = null;
        explodedArchive45.manifest = manifest48;
        java.io.File file50 = explodedArchive45.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        java.io.File file54 = fileEntryIterator51.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.manifestFile;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.io.File file58 = null;
        java.io.File file59 = explodedArchive55.getManifestFile(file58);
        fileEntryIterator51.current = file59;
        explodedArchive45.root = file59;
        fileEntryIterator43.root = file59;
        java.io.File file63 = explodedArchive38.getManifestFile(file59);
        java.io.File file64 = explodedArchive0.getManifestFile(file63);
        java.io.File file65 = explodedArchive0.root;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator66 = explodedArchive0.spliterator();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file68 = fileEntry67.getFile();
        java.lang.String str69 = fileEntry67.name;
        java.io.File file70 = null;
        fileEntry67.file = file70;
        java.io.File file72 = fileEntry67.file;
        java.lang.String str73 = fileEntry67.name;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.io.File file76 = fileEntryIterator74.current;
        java.io.File file77 = fileEntryIterator74.current;
        fileEntryIterator74.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file81 = explodedArchive80.manifestFile;
        java.io.File file82 = explodedArchive80.manifestFile;
        java.io.File file83 = null;
        java.io.File file84 = explodedArchive80.getManifestFile(file83);
        fileEntryIterator74.root = file84;
        fileEntry67.file = file84;
        java.lang.String str87 = fileEntry67.name;
        java.lang.String str88 = fileEntry67.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive89 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "exploded archive" + "'", str41, "exploded archive");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "exploded archive" + "'", str42, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator66);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2050");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        fileEntryIterator0.root = file10;
        java.io.File file13 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry14 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2051");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "hi!", 100, "hi!", uRLStreamHandler4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean8 = fileEntryIterator7.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean10 = explodedArchive9.recursive;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive9.manifest = manifest12;
        java.io.File file14 = explodedArchive9.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.io.File file18 = fileEntryIterator15.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.manifestFile;
        java.io.File file21 = explodedArchive19.manifestFile;
        java.io.File file22 = null;
        java.io.File file23 = explodedArchive19.getManifestFile(file22);
        fileEntryIterator15.current = file23;
        explodedArchive9.root = file23;
        fileEntryIterator7.root = file23;
        explodedArchive6.root = file23;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator28 = explodedArchive6.spliterator();
        java.io.File file29 = explodedArchive6.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str31 = fileEntry30.name;
        java.io.File file32 = fileEntry30.file;
        fileEntry30.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        boolean boolean37 = fileEntryIterator35.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        boolean boolean43 = explodedArchive38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        fileEntryIterator44.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator54.thenComparing(fileComparator57);
        fileEntryIterator49.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator54.thenComparing(fileComparator62);
        fileEntryIterator44.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator44.root = file69;
        explodedArchive38.root = file69;
        java.util.Iterator<java.io.File> fileItor72 = fileEntryIterator35.listFiles(file69);
        fileEntry30.file = file69;
        explodedArchive6.root = file69;
        java.net.URL uRL75 = explodedArchive6.getUrl();
        java.lang.String str76 = uRL75.getUserInfo();
        java.net.URL uRL78 = new java.net.URL(uRL75, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URLStreamHandler uRLStreamHandler80 = null;
        java.net.URL uRL81 = new java.net.URL(uRL78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler80);
        int int82 = uRL81.getDefaultPort();
        boolean boolean83 = uRL5.sameFile(uRL81);
        int int84 = uRL81.getDefaultPort();
        java.lang.String str85 = uRL81.toExternalForm();
        org.junit.Assert.assertEquals(uRL5.toString(), "file://hi!:100hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor72);
        org.junit.Assert.assertNotNull(uRL75);
// flaky:         org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL81.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str85, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2052");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getProtocol();
        java.net.URLConnection uRLConnection11 = uRL3.openConnection();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file" + "'", str10, "file");
        org.junit.Assert.assertNotNull(uRLConnection11);
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2053");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        boolean boolean5 = explodedArchive0.recursive;
        boolean boolean6 = explodedArchive0.recursive;
        java.lang.String str7 = explodedArchive0.toString();
        java.io.File file8 = explodedArchive0.manifestFile;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2054");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.io.File file25 = explodedArchive0.manifestFile;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator26 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest27 = null;
        explodedArchive0.manifest = manifest27;
        boolean boolean29 = explodedArchive0.recursive;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(entrySpliterator26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2055");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str75 = uRL69.getRef();
        java.lang.String str76 = uRL69.getFile();
        java.net.URI uRI77 = uRL69.toURI();
        java.lang.Class<?> wildcardClass78 = uRI77.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str75);
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str76, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2056");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.net.URL uRL38 = explodedArchive0.getUrl();
        int int39 = uRL38.getDefaultPort();
        java.net.URLConnection uRLConnection40 = uRL38.openConnection();
        java.lang.String str41 = uRL38.getHost();
        java.net.URL uRL42 = null;
        java.net.URLStreamHandler uRLStreamHandler44 = null;
        java.net.URL uRL45 = new java.net.URL(uRL42, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler44);
        java.lang.String str46 = uRL45.getHost();
        java.lang.String str47 = uRL45.getAuthority();
        java.lang.String str48 = uRL45.getQuery();
        int int49 = uRL45.getDefaultPort();
        java.lang.String str50 = uRL45.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler52 = null;
        java.net.URL uRL53 = new java.net.URL(uRL45, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler52);
        java.lang.String str54 = uRL53.toExternalForm();
        java.lang.String str55 = uRL53.getUserInfo();
        java.lang.String str56 = uRL53.getProtocol();
        int int57 = uRL53.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler62 = null;
        java.net.URL uRL63 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler62);
        boolean boolean64 = uRL53.sameFile(uRL63);
        java.lang.String str65 = uRL53.getProtocol();
        java.lang.String str66 = uRL53.getRef();
        boolean boolean67 = uRL38.sameFile(uRL53);
        java.lang.String str68 = uRL53.getRef();
        java.lang.String str69 = uRL53.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(uRLConnection40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals(uRL53.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str54, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "file" + "'", str56, "file");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals(uRL63.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "file" + "'", str65, "file");
        org.junit.Assert.assertNull(str66);
// flaky:         org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2057");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URLStreamHandler uRLStreamHandler7 = null;
        java.net.URL uRL8 = new java.net.URL(uRL3, "hi!", uRLStreamHandler7);
        java.lang.String str9 = uRL8.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str9, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2058");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.getName();
        fileEntry0.name = "exploded archive";
        fileEntry0.name = "hi!";
        java.lang.String str6 = fileEntry0.getName();
        java.lang.String str7 = fileEntry0.getName();
        java.io.File file8 = fileEntry0.getFile();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2059");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator0.stack = fileItorQueue8;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator0.stack;
        java.io.File file11 = fileEntryIterator0.poll();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry12 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2060");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.lang.String str4 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file6 = fileEntry5.getFile();
        java.io.File file7 = fileEntry5.file;
        fileEntry5.name = "";
        java.lang.String str10 = fileEntry5.name;
        java.io.File file11 = fileEntry5.file;
        java.io.File file12 = fileEntry5.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file19 = fileEntry18.getFile();
        java.lang.String str20 = fileEntry18.name;
        java.io.File file21 = fileEntry18.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        boolean boolean24 = fileEntryIterator22.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        boolean boolean30 = explodedArchive25.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        fileEntryIterator31.recursive = true;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        java.util.Comparator<java.io.File> fileComparator45 = fileComparator41.thenComparing(fileComparator44);
        fileEntryIterator36.entryComparator = fileComparator41;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        java.util.Comparator<java.io.File> fileComparator50 = fileComparator41.thenComparing(fileComparator49);
        fileEntryIterator31.entryComparator = fileComparator50;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        fileEntryIterator31.root = file56;
        explodedArchive25.root = file56;
        java.util.Iterator<java.io.File> fileItor59 = fileEntryIterator22.listFiles(file56);
        fileEntry18.file = file56;
        explodedArchive13.manifestFile = file56;
        fileEntry5.file = file56;
        java.io.File file63 = fileEntry5.getFile();
        boolean boolean64 = fileEntry5.isDirectory();
        boolean boolean65 = fileEntry5.isDirectory();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive66 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor59);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2061");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        boolean boolean4 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = true;
        java.io.File file7 = fileEntryIterator0.poll();
        java.io.File file8 = fileEntryIterator0.current;
        boolean boolean9 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file11 = fileEntryIterator10.current;
        java.io.File file12 = fileEntryIterator10.poll();
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        fileEntryIterator14.recursive = true;
        fileEntryIterator14.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator14.stack;
        boolean boolean40 = fileEntryIterator14.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        java.util.Comparator<java.io.File> fileComparator50 = fileComparator46.thenComparing(fileComparator49);
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator43.thenComparing(fileComparator49);
        fileEntryIterator14.entryComparator = fileComparator43;
        java.util.Comparator<java.io.File> fileComparator53 = fileComparator43.reversed();
        java.util.Comparator<java.io.File> fileComparator54 = fileComparator13.thenComparing(fileComparator53);
        fileEntryIterator0.entryComparator = fileComparator13;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileComparator54);
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2062");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", 0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2063");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        java.util.jar.Manifest manifest17 = null;
        explodedArchive0.manifest = manifest17;
        java.util.jar.Manifest manifest19 = null;
        explodedArchive0.manifest = manifest19;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2064");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        java.net.URLConnection uRLConnection15 = uRL11.openConnection();
        java.net.URL uRL17 = new java.net.URL(uRL11, "file://exploded archive");
        java.lang.String str18 = uRL17.getPath();
        java.net.URL uRL20 = new java.net.URL(uRL17, "exploded archive");
        java.lang.String str21 = uRL20.getRef();
        java.lang.Class<?> wildcardClass22 = uRL20.getClass();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertNotNull(uRLConnection15);
        org.junit.Assert.assertEquals(uRL17.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals(uRL20.toString(), "file://exploded archive/exploded archive");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2065");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        fileEntryIterator10.recursive = true;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator20.thenComparing(fileComparator28);
        fileEntryIterator10.entryComparator = fileComparator29;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.manifestFile;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.io.File file34 = null;
        java.io.File file35 = explodedArchive31.getManifestFile(file34);
        fileEntryIterator10.root = file35;
        explodedArchive7.manifestFile = file35;
        explodedArchive0.root = file35;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2066");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        int int73 = uRL69.getPort();
        java.lang.String str74 = uRL69.toExternalForm();
        java.lang.String str75 = uRL69.getRef();
        java.lang.String str76 = uRL69.getFile();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str74, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str75);
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str76, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2067");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.io.File file8 = fileEntryIterator6.current;
        boolean boolean9 = fileEntryIterator6.hasNext();
        fileEntryIterator6.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        boolean boolean14 = fileEntryIterator12.hasNext();
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        fileEntryIterator16.entryComparator = fileComparator21;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator21.thenComparing((java.util.Comparator<java.io.File>) entryComparator27);
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator15.thenComparing((java.util.Comparator<java.io.File>) entryComparator27);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean31 = fileEntryIterator30.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean33 = explodedArchive32.recursive;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.util.jar.Manifest manifest35 = null;
        explodedArchive32.manifest = manifest35;
        java.io.File file37 = explodedArchive32.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.io.File file41 = fileEntryIterator38.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator38.current = file46;
        explodedArchive32.root = file46;
        fileEntryIterator30.root = file46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        boolean boolean55 = explodedArchive50.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        fileEntryIterator56.recursive = true;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator66.thenComparing(fileComparator69);
        fileEntryIterator61.entryComparator = fileComparator66;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        java.util.Comparator<java.io.File> fileComparator75 = fileComparator66.thenComparing(fileComparator74);
        fileEntryIterator56.entryComparator = fileComparator75;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file78 = explodedArchive77.manifestFile;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.io.File file80 = null;
        java.io.File file81 = explodedArchive77.getManifestFile(file80);
        fileEntryIterator56.root = file81;
        explodedArchive50.root = file81;
        int int84 = entryComparator27.compare(file46, file81);
        java.util.Iterator<java.io.File> fileItor85 = fileEntryIterator6.listFiles(file46);
        explodedArchive0.manifestFile = file46;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL87 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(fileItor85);
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2068");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.net.URL uRL6 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL9 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        boolean boolean10 = uRL3.equals((java.lang.Object) "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2069");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest25 = explodedArchive0.manifest;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor26 = explodedArchive0.iterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator27 = explodedArchive0.spliterator();
        boolean boolean28 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean31 = fileEntryIterator30.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean33 = explodedArchive32.recursive;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.util.jar.Manifest manifest35 = null;
        explodedArchive32.manifest = manifest35;
        java.io.File file37 = explodedArchive32.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.io.File file41 = fileEntryIterator38.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator38.current = file46;
        explodedArchive32.root = file46;
        fileEntryIterator30.root = file46;
        explodedArchive29.root = file46;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator51 = explodedArchive29.spliterator();
        java.io.File file52 = explodedArchive29.root;
        java.util.jar.Manifest manifest53 = explodedArchive29.manifest;
        java.io.File file54 = explodedArchive29.manifestFile;
        java.util.jar.Manifest manifest55 = null;
        explodedArchive29.manifest = manifest55;
        java.io.File file57 = explodedArchive29.root;
        java.io.File file58 = explodedArchive0.getManifestFile(file57);
        boolean boolean59 = explodedArchive0.recursive;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNotNull(entryItor26);
        org.junit.Assert.assertNotNull(entrySpliterator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2070");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getPath();
        java.lang.String str10 = uRL3.getRef();
        java.net.Proxy proxy11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection12 = uRL3.openConnection(proxy11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2071");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getRef();
        int int8 = uRL3.getDefaultPort();
        java.lang.String str9 = uRL3.getHost();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2072");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.lang.String str34 = uRL30.getFile();
        java.net.URL uRL36 = new java.net.URL(uRL30, "file");
        java.net.URI uRI37 = uRL30.toURI();
        java.net.URLStreamHandler uRLStreamHandler39 = null;
        java.net.URL uRL40 = new java.net.URL(uRL30, "", uRLStreamHandler39);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream41 = uRL30.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL36.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertNotNull(uRI37);
        org.junit.Assert.assertEquals(uRL40.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2073");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", 0, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2074");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.net.URLStreamHandler uRLStreamHandler11 = null;
        java.net.URL uRL12 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler11);
        java.lang.String str13 = uRL12.getHost();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream14 = uRL12.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2075");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.lang.String str71 = uRL69.getHost();
        java.net.URL uRL73 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str74 = uRL69.getFile();
        java.net.URI uRI75 = uRL69.toURI();
        java.lang.String str76 = uRL69.getProtocol();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals(uRL73.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str74, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "file" + "'", str76, "file");
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2076");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file23 = fileEntryIterator22.current;
        java.io.File file24 = null;
        fileEntryIterator22.current = file24;
        java.io.File file26 = fileEntryIterator22.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file28 = fileEntry27.getFile();
        java.lang.String str29 = fileEntry27.name;
        java.io.File file30 = fileEntry27.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        boolean boolean33 = fileEntryIterator31.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        boolean boolean39 = explodedArchive34.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        fileEntryIterator40.recursive = true;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator40.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        java.util.Comparator<java.io.File> fileComparator54 = fileComparator50.thenComparing(fileComparator53);
        fileEntryIterator45.entryComparator = fileComparator50;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator50.thenComparing(fileComparator58);
        fileEntryIterator40.entryComparator = fileComparator59;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.manifestFile;
        java.io.File file63 = explodedArchive61.manifestFile;
        java.io.File file64 = null;
        java.io.File file65 = explodedArchive61.getManifestFile(file64);
        fileEntryIterator40.root = file65;
        explodedArchive34.root = file65;
        java.util.Iterator<java.io.File> fileItor68 = fileEntryIterator31.listFiles(file65);
        fileEntry27.file = file65;
        fileEntryIterator22.current = file65;
        explodedArchive0.manifestFile = file65;
        java.net.URL uRL72 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler74 = null;
        java.net.URL uRL75 = new java.net.URL(uRL72, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", uRLStreamHandler74);
        java.lang.String str76 = uRL72.getPath();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor68);
        org.junit.Assert.assertNotNull(uRL72);
// flaky:         org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str76, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2077");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor42 = explodedArchive0.iterator();
        java.lang.Class<?> wildcardClass43 = entryItor42.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2078");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.lang.String str73 = uRL69.getUserInfo();
        java.net.URLConnection uRLConnection74 = uRL69.openConnection();
        int int75 = uRL69.getDefaultPort();
        java.lang.String str76 = uRL69.getUserInfo();
        java.lang.String str77 = uRL69.getPath();
        java.lang.String str78 = uRL69.getUserInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = uRL69.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(uRLConnection74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(str76);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str77, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2079");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.name;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = fileEntry0.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2080");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean12 = fileEntryIterator11.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean14 = explodedArchive13.recursive;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.util.jar.Manifest manifest16 = null;
        explodedArchive13.manifest = manifest16;
        java.io.File file18 = explodedArchive13.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.io.File file22 = fileEntryIterator19.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.io.File file26 = null;
        java.io.File file27 = explodedArchive23.getManifestFile(file26);
        fileEntryIterator19.current = file27;
        explodedArchive13.root = file27;
        fileEntryIterator11.root = file27;
        explodedArchive10.root = file27;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator32 = explodedArchive10.spliterator();
        java.io.File file33 = explodedArchive10.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str35 = fileEntry34.name;
        java.io.File file36 = fileEntry34.file;
        fileEntry34.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        boolean boolean41 = fileEntryIterator39.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        boolean boolean47 = explodedArchive42.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        fileEntryIterator48.recursive = true;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator58.thenComparing(fileComparator61);
        fileEntryIterator53.entryComparator = fileComparator58;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator58.thenComparing(fileComparator66);
        fileEntryIterator48.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file70 = explodedArchive69.manifestFile;
        java.io.File file71 = explodedArchive69.manifestFile;
        java.io.File file72 = null;
        java.io.File file73 = explodedArchive69.getManifestFile(file72);
        fileEntryIterator48.root = file73;
        explodedArchive42.root = file73;
        java.util.Iterator<java.io.File> fileItor76 = fileEntryIterator39.listFiles(file73);
        fileEntry34.file = file73;
        explodedArchive10.root = file73;
        java.net.URL uRL79 = explodedArchive10.getUrl();
        java.lang.String str80 = uRL79.getUserInfo();
        java.net.URL uRL81 = null;
        java.net.URLStreamHandler uRLStreamHandler83 = null;
        java.net.URL uRL84 = new java.net.URL(uRL81, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler83);
        java.lang.String str85 = uRL84.getHost();
        java.lang.String str86 = uRL84.getAuthority();
        java.lang.String str87 = uRL84.getAuthority();
        java.lang.String str88 = uRL84.getFile();
        int int89 = uRL84.getPort();
        java.lang.String str90 = uRL84.getRef();
        java.net.URL uRL92 = new java.net.URL(uRL84, "hi!");
        boolean boolean93 = uRL79.sameFile(uRL92);
        int int94 = uRL92.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler96 = null;
        java.net.URL uRL97 = new java.net.URL(uRL92, "file://exploded archive", uRLStreamHandler96);
        boolean boolean98 = uRL3.sameFile(uRL92);
        java.lang.String str99 = uRL3.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor76);
        org.junit.Assert.assertNotNull(uRL79);
// flaky:         org.junit.Assert.assertEquals(uRL79.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL84.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str88, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertEquals(uRL92.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertEquals(uRL97.toString(), "file://exploded archive");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str99, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2081");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "file://hi!:100hi!", (int) (short) -1, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2082");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.manifestFile;
        java.io.File file4 = explodedArchive2.manifestFile;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive2.getManifestFile(file5);
        fileEntryIterator0.current = file5;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = true;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator10);
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2083");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", (int) (short) 0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2084");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        java.io.File file18 = fileEntryIterator0.current;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator0.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator19.reversed();
        java.lang.Class<?> wildcardClass21 = fileComparator20.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2085");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        java.io.File file5 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.io.File file8 = explodedArchive0.manifestFile;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2086");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        boolean boolean41 = explodedArchive39.recursive;
        java.io.File file42 = explodedArchive39.root;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive39.getManifestFile(file43);
        explodedArchive0.manifestFile = file43;
        java.io.File file46 = explodedArchive0.root;
        explodedArchive0.recursive = false;
        explodedArchive0.recursive = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2087");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean6 = explodedArchive5.recursive;
        boolean boolean7 = explodedArchive5.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        explodedArchive5.root = file12;
        fileEntryIterator0.root = file12;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator20.thenComparing(fileComparator28);
        fileEntryIterator0.entryComparator = fileComparator29;
        java.io.File file31 = fileEntryIterator0.current;
        java.io.File file32 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2088");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = true;
        boolean boolean5 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean7 = fileEntryIterator6.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file9 = fileEntryIterator8.current;
        java.io.File file10 = fileEntryIterator8.poll();
        java.io.File file11 = fileEntryIterator8.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        fileEntryIterator8.entryComparator = entryComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        fileEntryIterator26.recursive = true;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator36.thenComparing(fileComparator39);
        fileEntryIterator31.entryComparator = fileComparator36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        java.util.Comparator<java.io.File> fileComparator45 = fileComparator36.thenComparing(fileComparator44);
        fileEntryIterator26.entryComparator = fileComparator45;
        java.util.Comparator<java.io.File> fileComparator47 = entryComparator23.thenComparing(fileComparator45);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean54 = fileEntryIterator53.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean56 = explodedArchive55.recursive;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.util.jar.Manifest manifest58 = null;
        explodedArchive55.manifest = manifest58;
        java.io.File file60 = explodedArchive55.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.io.File file64 = fileEntryIterator61.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator61.current = file69;
        explodedArchive55.root = file69;
        fileEntryIterator53.root = file69;
        int int73 = entryComparator23.compare(file52, file69);
        java.util.Iterator<java.io.File> fileItor74 = fileEntryIterator6.listFiles(file52);
        fileEntryIterator0.root = file52;
        java.io.File file76 = fileEntryIterator0.poll();
        java.io.File file77 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str79 = fileEntry78.getName();
        fileEntry78.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean83 = explodedArchive82.recursive;
        boolean boolean84 = explodedArchive82.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file86 = explodedArchive85.manifestFile;
        java.io.File file87 = explodedArchive85.manifestFile;
        java.io.File file88 = null;
        java.io.File file89 = explodedArchive85.getManifestFile(file88);
        explodedArchive82.root = file89;
        fileEntry78.file = file89;
        fileEntryIterator0.root = file89;
        java.io.File file93 = fileEntryIterator0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(fileItor74);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNull(file87);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file93);
        org.junit.Assert.assertEquals(file93.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file93.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2089");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        fileEntry0.name = "";
        java.lang.String str7 = fileEntry0.name;
        java.io.File file8 = fileEntry0.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2090");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.io.File file10 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator11.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        java.util.Iterator<java.io.File> fileItor25 = fileEntryIterator11.listFiles(file24);
        fileEntryIterator6.root = file24;
        explodedArchive0.manifestFile = file24;
        boolean boolean28 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest29 = explodedArchive0.getManifest();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor30 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(manifest29);
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2091");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getHost();
        java.lang.String str10 = uRL3.getAuthority();
        java.net.URL uRL12 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "exploded archive", uRLStreamHandler14);
        java.lang.String str16 = uRL12.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = uRL12.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "file" + "'", str16, "file");
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2092");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", (int) (byte) -1, "", uRLStreamHandler4);
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        java.lang.String str18 = uRL17.toExternalForm();
        java.lang.String str19 = uRL17.getUserInfo();
        java.lang.String str20 = uRL17.getProtocol();
        java.net.URLConnection uRLConnection21 = uRL17.openConnection();
        java.net.URL uRL23 = new java.net.URL(uRL17, "file://exploded archive");
        java.lang.String str24 = uRL17.getRef();
        java.lang.String str25 = uRL17.getFile();
        java.lang.String str26 = uRL17.getRef();
        boolean boolean27 = uRL5.sameFile(uRL17);
        java.lang.String str28 = uRL17.toExternalForm();
        java.lang.String str29 = uRL17.toString();
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str18, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "file" + "'", str20, "file");
        org.junit.Assert.assertNotNull(uRLConnection21);
        org.junit.Assert.assertEquals(uRL23.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str25, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str28, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str29, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2093");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        int int9 = uRL3.getDefaultPort();
        java.lang.String str10 = uRL3.getHost();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2094");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.lang.String str5 = uRL3.getFile();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL9 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.net.Proxy proxy10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection11 = uRL3.openConnection(proxy10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str5, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2095");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getFile();
        java.lang.String str7 = uRL3.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file9 = fileEntry8.getFile();
        java.lang.String str10 = fileEntry8.name;
        java.io.File file11 = fileEntry8.file;
        java.io.File file12 = fileEntry8.file;
        java.lang.String str13 = fileEntry8.name;
        java.lang.Class<?> wildcardClass14 = fileEntry8.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        boolean boolean17 = fileEntryIterator15.hasNext();
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator15.entryComparator;
        fileEntryIterator15.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file22 = fileEntryIterator21.current;
        java.io.File file23 = fileEntryIterator21.poll();
        java.io.File file24 = fileEntryIterator21.poll();
        java.io.File file25 = fileEntryIterator21.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.io.File file28 = fileEntryIterator26.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        fileEntryIterator29.recursive = true;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.util.Comparator<java.io.File> fileComparator43 = fileComparator39.thenComparing(fileComparator42);
        fileEntryIterator34.entryComparator = fileComparator39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        java.util.Comparator<java.io.File> fileComparator48 = fileComparator39.thenComparing(fileComparator47);
        fileEntryIterator29.entryComparator = fileComparator48;
        fileEntryIterator29.recursive = true;
        fileEntryIterator29.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator29.stack;
        fileEntryIterator26.stack = fileItorQueue54;
        fileEntryIterator21.stack = fileItorQueue54;
        fileEntryIterator15.stack = fileItorQueue54;
        java.lang.Class<?> wildcardClass58 = fileItorQueue54.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file60 = fileEntry59.getFile();
        java.lang.String str61 = fileEntry59.name;
        java.io.File file62 = fileEntry59.file;
        java.io.File file63 = fileEntry59.file;
        java.lang.String str64 = fileEntry59.name;
        java.lang.Class<?> wildcardClass65 = fileEntry59.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.lang.Class<?> wildcardClass68 = fileItorQueue67.getClass();
        java.lang.Class[] classArray69 = new java.lang.Class[] { wildcardClass14, wildcardClass58, wildcardClass65, wildcardClass68 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = uRL3.getContent(classArray69);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(classArray69);
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2096");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.io.File file4 = explodedArchive0.root;
        boolean boolean5 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.lang.String str8 = explodedArchive0.toString();
        explodedArchive0.recursive = false;
        boolean boolean11 = explodedArchive0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor12 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2097");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getHost();
        java.lang.String str10 = uRL3.getAuthority();
        java.net.URL uRL12 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "exploded archive", uRLStreamHandler14);
        java.lang.String str16 = uRL12.getFile();
        java.lang.String str17 = uRL12.getUserInfo();
        java.lang.String str18 = uRL12.getUserInfo();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str16, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2098");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        int int22 = uRL3.getPort();
        java.lang.String str23 = uRL3.toExternalForm();
        java.lang.String str24 = uRL3.getAuthority();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str23, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2099");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.net.URL uRL9 = new java.net.URL(uRL3, "exploded archive");
        java.lang.String str10 = uRL3.getAuthority();
        int int11 = uRL3.getPort();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2100");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getFile();
        java.lang.String str10 = uRL3.getFile();
        java.lang.String str11 = uRL3.toExternalForm();
        java.lang.String str12 = uRL3.getUserInfo();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2101");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file44 = fileEntry43.getFile();
        java.lang.String str45 = fileEntry43.name;
        java.io.File file46 = fileEntry43.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        boolean boolean49 = fileEntryIterator47.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        boolean boolean55 = explodedArchive50.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        fileEntryIterator56.recursive = true;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator66.thenComparing(fileComparator69);
        fileEntryIterator61.entryComparator = fileComparator66;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        java.util.Comparator<java.io.File> fileComparator75 = fileComparator66.thenComparing(fileComparator74);
        fileEntryIterator56.entryComparator = fileComparator75;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file78 = explodedArchive77.manifestFile;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.io.File file80 = null;
        java.io.File file81 = explodedArchive77.getManifestFile(file80);
        fileEntryIterator56.root = file81;
        explodedArchive50.root = file81;
        java.util.Iterator<java.io.File> fileItor84 = fileEntryIterator47.listFiles(file81);
        fileEntry43.file = file81;
        explodedArchive38.manifestFile = file81;
        explodedArchive0.root = file81;
        java.io.File file88 = null;
        explodedArchive0.root = file88;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL90 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor84);
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2102");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file4 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = true;
        boolean boolean7 = fileEntryIterator0.recursive;
        boolean boolean8 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.io.File file11 = fileEntryIterator9.current;
        java.io.File file12 = fileEntryIterator9.current;
        fileEntryIterator9.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.manifestFile;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.io.File file18 = null;
        java.io.File file19 = explodedArchive15.getManifestFile(file18);
        fileEntryIterator9.root = file19;
        java.util.Iterator<java.io.File> fileItor21 = fileEntryIterator0.listFiles(file19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.manifestFile;
        java.io.File file24 = explodedArchive22.manifestFile;
        java.io.File file25 = null;
        java.io.File file26 = explodedArchive22.getManifestFile(file25);
        boolean boolean27 = explodedArchive22.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        fileEntryIterator28.recursive = true;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator38.thenComparing(fileComparator41);
        fileEntryIterator33.entryComparator = fileComparator38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator44.entryComparator;
        java.util.Comparator<java.io.File> fileComparator47 = fileComparator38.thenComparing(fileComparator46);
        fileEntryIterator28.entryComparator = fileComparator47;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        fileEntryIterator28.root = file53;
        explodedArchive22.root = file53;
        explodedArchive22.recursive = false;
        java.util.jar.Manifest manifest58 = null;
        explodedArchive22.manifest = manifest58;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file61 = fileEntryIterator60.current;
        java.io.File file62 = fileEntryIterator60.poll();
        java.io.File file63 = fileEntryIterator60.poll();
        java.io.File file64 = fileEntryIterator60.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.io.File file67 = fileEntryIterator65.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.manifestFile;
        java.io.File file70 = explodedArchive68.manifestFile;
        java.io.File file71 = null;
        java.io.File file72 = explodedArchive68.getManifestFile(file71);
        fileEntryIterator65.root = file71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file75 = explodedArchive74.manifestFile;
        java.io.File file76 = explodedArchive74.manifestFile;
        java.io.File file77 = null;
        java.io.File file78 = explodedArchive74.getManifestFile(file77);
        java.util.Iterator<java.io.File> fileItor79 = fileEntryIterator65.listFiles(file78);
        fileEntryIterator60.root = file78;
        explodedArchive22.root = file78;
        explodedArchive22.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean85 = explodedArchive84.recursive;
        boolean boolean86 = explodedArchive84.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file88 = explodedArchive87.manifestFile;
        java.io.File file89 = explodedArchive87.manifestFile;
        java.io.File file90 = null;
        java.io.File file91 = explodedArchive87.getManifestFile(file90);
        explodedArchive84.root = file91;
        explodedArchive84.recursive = false;
        java.io.File file95 = explodedArchive84.root;
        java.io.File file96 = explodedArchive22.getManifestFile(file95);
        fileEntryIterator0.root = file96;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry98 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor21);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor79);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file95);
        org.junit.Assert.assertEquals(file95.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file95.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file96);
        org.junit.Assert.assertEquals(file96.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file96.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2103");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.lang.String str8 = uRL3.getFile();
        java.net.URL uRL10 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str11 = uRL10.getQuery();
        java.lang.String str12 = uRL10.getAuthority();
        java.lang.String str13 = uRL10.getUserInfo();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2104");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.lang.String str7 = uRL3.getFile();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getUserInfo();
        java.net.URLStreamHandler uRLStreamHandler11 = null;
        java.net.URL uRL12 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", uRLStreamHandler11);
        java.net.URL uRL13 = null;
        java.net.URLStreamHandler uRLStreamHandler15 = null;
        java.net.URL uRL16 = new java.net.URL(uRL13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler15);
        java.lang.String str17 = uRL16.getHost();
        java.lang.String str18 = uRL16.getAuthority();
        java.lang.String str19 = uRL16.getQuery();
        int int20 = uRL16.getDefaultPort();
        java.lang.String str21 = uRL16.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler23 = null;
        java.net.URL uRL24 = new java.net.URL(uRL16, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler23);
        java.lang.String str25 = uRL24.toExternalForm();
        java.lang.String str26 = uRL24.getUserInfo();
        java.lang.String str27 = uRL24.getProtocol();
        java.net.URLConnection uRLConnection28 = uRL24.openConnection();
        java.net.URL uRL30 = new java.net.URL(uRL24, "file://exploded archive");
        java.lang.String str31 = uRL24.getRef();
        java.net.URL uRL33 = new java.net.URL(uRL24, "exploded archive");
        java.lang.String str34 = uRL33.getPath();
        java.lang.String str35 = uRL33.getFile();
        boolean boolean36 = uRL3.sameFile(uRL33);
        java.lang.String str37 = uRL3.getHost();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals(uRL16.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str25, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "file" + "'", str27, "file");
        org.junit.Assert.assertNotNull(uRLConnection28);
        org.junit.Assert.assertEquals(uRL30.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str34, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str35, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2105");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.manifestFile;
        java.io.File file6 = explodedArchive4.manifestFile;
        java.io.File file7 = null;
        java.io.File file8 = explodedArchive4.getManifestFile(file7);
        fileEntryIterator0.current = file8;
        boolean boolean10 = fileEntryIterator0.recursive;
        java.io.File file11 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.io.File file14 = fileEntryIterator12.current;
        java.util.ArrayDeque<java.util.Iterator<java.io.File>> fileItorQueue15 = new java.util.ArrayDeque<java.util.Iterator<java.io.File>>();
        fileEntryIterator12.stack = fileItorQueue15;
        boolean boolean17 = fileEntryIterator12.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator12.stack;
        fileEntryIterator0.stack = fileItorQueue18;
        boolean boolean20 = fileEntryIterator0.recursive;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2106");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getRef();
        java.lang.String str8 = uRL3.getPath();
        java.net.URI uRI9 = uRL3.toURI();
        java.lang.String str10 = uRL3.getFile();
        java.lang.String str11 = uRL3.getFile();
        java.lang.String str12 = uRL3.getProtocol();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file" + "'", str12, "file");
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2107");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLConnection uRLConnection9 = uRL3.openConnection();
        int int10 = uRL3.getPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(uRLConnection9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2108");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str73 = uRL72.getUserInfo();
        int int74 = uRL72.getDefaultPort();
        java.net.URLConnection uRLConnection75 = uRL72.openConnection();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(uRLConnection75);
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2109");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.manifestFile;
        java.lang.String str4 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.manifestFile;
        java.io.File file7 = explodedArchive5.manifestFile;
        java.io.File file8 = null;
        java.io.File file9 = explodedArchive5.getManifestFile(file8);
        boolean boolean10 = explodedArchive5.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        fileEntryIterator11.recursive = true;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        fileEntryIterator16.entryComparator = fileComparator21;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator21.thenComparing(fileComparator29);
        fileEntryIterator11.entryComparator = fileComparator30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        fileEntryIterator11.root = file36;
        explodedArchive5.root = file36;
        explodedArchive5.recursive = false;
        java.util.jar.Manifest manifest41 = null;
        explodedArchive5.manifest = manifest41;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file44 = fileEntryIterator43.current;
        java.io.File file45 = fileEntryIterator43.poll();
        java.io.File file46 = fileEntryIterator43.poll();
        java.io.File file47 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.io.File file50 = fileEntryIterator48.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        fileEntryIterator48.root = file54;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        java.util.Iterator<java.io.File> fileItor62 = fileEntryIterator48.listFiles(file61);
        fileEntryIterator43.root = file61;
        explodedArchive5.root = file61;
        explodedArchive5.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean68 = explodedArchive67.recursive;
        boolean boolean69 = explodedArchive67.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file71 = explodedArchive70.manifestFile;
        java.io.File file72 = explodedArchive70.manifestFile;
        java.io.File file73 = null;
        java.io.File file74 = explodedArchive70.getManifestFile(file73);
        explodedArchive67.root = file74;
        explodedArchive67.recursive = false;
        java.io.File file78 = explodedArchive67.root;
        java.io.File file79 = explodedArchive5.getManifestFile(file78);
        explodedArchive0.root = file78;
        java.util.jar.Manifest manifest81 = explodedArchive0.manifest;
        java.lang.String str82 = explodedArchive0.toString();
        java.io.File file83 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive(file83);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest81);
// flaky:         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str82, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2110");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2111");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.io.File file25 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest26 = null;
        explodedArchive0.manifest = manifest26;
        java.io.File file28 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file30 = fileEntry29.getFile();
        java.io.File file31 = fileEntry29.file;
        java.io.File file32 = null;
        fileEntry29.file = file32;
        java.lang.String str34 = fileEntry29.getName();
        java.io.File file35 = fileEntry29.getFile();
        java.io.File file36 = fileEntry29.getFile();
        java.io.File file37 = fileEntry29.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive38 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2112");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        int int13 = uRL11.getDefaultPort();
        java.lang.String str14 = uRL11.getHost();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2113");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.root;
        boolean boolean3 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL6 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2114");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.io.File file27 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file29 = fileEntryIterator28.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator35.thenComparing(fileComparator38);
        fileEntryIterator30.entryComparator = fileComparator35;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator35.thenComparing(fileComparator43);
        fileEntryIterator28.entryComparator = fileComparator44;
        boolean boolean46 = fileEntryIterator28.hasNext();
        java.io.File file47 = fileEntryIterator28.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file49 = fileEntryIterator48.current;
        java.io.File file50 = fileEntryIterator48.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file52 = fileEntryIterator51.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator58.thenComparing(fileComparator61);
        fileEntryIterator53.entryComparator = fileComparator58;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator58.thenComparing(fileComparator66);
        fileEntryIterator51.entryComparator = fileComparator67;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator51.stack;
        fileEntryIterator48.stack = fileItorQueue69;
        boolean boolean71 = fileEntryIterator48.recursive;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator48.stack;
        fileEntryIterator28.stack = fileItorQueue72;
        fileEntryIterator0.stack = fileItorQueue72;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(fileItorQueue72);
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2115");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        java.net.URLConnection uRLConnection15 = uRL11.openConnection();
        java.net.URL uRL17 = new java.net.URL(uRL11, "file://exploded archive");
        java.lang.String str18 = uRL11.getRef();
        java.net.URL uRL20 = new java.net.URL(uRL11, "exploded archive");
        java.lang.String str21 = uRL20.getAuthority();
        java.net.URLConnection uRLConnection22 = uRL20.openConnection();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream23 = uRL20.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertNotNull(uRLConnection15);
        org.junit.Assert.assertEquals(uRL17.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(uRLConnection22);
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2116");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        int int9 = uRL3.getPort();
        java.lang.String str10 = uRL3.getFile();
        java.lang.String str11 = uRL3.getProtocol();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.net.URI uRI17 = uRL15.toURI();
        java.lang.String str18 = uRL15.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL(uRL15, "file", uRLStreamHandler20);
        java.lang.String str22 = uRL15.getFile();
        java.net.URL uRL23 = null;
        java.net.URLStreamHandler uRLStreamHandler25 = null;
        java.net.URL uRL26 = new java.net.URL(uRL23, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler25);
        java.lang.String str27 = uRL26.getHost();
        java.lang.String str28 = uRL26.getAuthority();
        java.lang.String str29 = uRL26.getAuthority();
        java.lang.String str30 = uRL26.getRef();
        java.net.URL uRL31 = null;
        java.net.URLStreamHandler uRLStreamHandler33 = null;
        java.net.URL uRL34 = new java.net.URL(uRL31, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler33);
        java.lang.String str35 = uRL34.getHost();
        java.lang.String str36 = uRL34.getAuthority();
        java.lang.String str37 = uRL34.getQuery();
        int int38 = uRL34.getDefaultPort();
        java.lang.String str39 = uRL34.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler41 = null;
        java.net.URL uRL42 = new java.net.URL(uRL34, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler41);
        java.lang.String str43 = uRL42.getFile();
        boolean boolean44 = uRL26.sameFile(uRL42);
        boolean boolean45 = uRL15.sameFile(uRL42);
        java.net.URL uRL46 = null;
        java.net.URLStreamHandler uRLStreamHandler48 = null;
        java.net.URL uRL49 = new java.net.URL(uRL46, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler48);
        java.lang.String str50 = uRL49.getHost();
        java.lang.String str51 = uRL49.getAuthority();
        java.lang.String str52 = uRL49.getAuthority();
        java.lang.String str53 = uRL49.getFile();
        int int54 = uRL49.getPort();
        java.lang.String str55 = uRL49.getRef();
        java.net.URL uRL57 = new java.net.URL(uRL49, "hi!");
        boolean boolean58 = uRL15.sameFile(uRL57);
        int int59 = uRL15.getDefaultPort();
        java.net.URL uRL60 = null;
        java.net.URLStreamHandler uRLStreamHandler62 = null;
        java.net.URL uRL63 = new java.net.URL(uRL60, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler62);
        java.lang.String str64 = uRL63.getHost();
        int int65 = uRL63.getPort();
        java.net.URLStreamHandler uRLStreamHandler67 = null;
        java.net.URL uRL68 = new java.net.URL(uRL63, "hi!", uRLStreamHandler67);
        java.net.URLConnection uRLConnection69 = uRL68.openConnection();
        boolean boolean70 = uRL15.sameFile(uRL68);
        int int71 = uRL15.getPort();
        boolean boolean72 = uRL3.equals((java.lang.Object) int71);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file" + "'", str11, "file");
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(uRI17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str18, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL21.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL26.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals(uRL34.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals(uRL42.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str43, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals(uRL49.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str53, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals(uRL57.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertEquals(uRL63.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertEquals(uRL68.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(uRLConnection69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2117");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        boolean boolean5 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator0.entryComparator;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator0.entryComparator;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileComparator7);
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2118");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        boolean boolean6 = fileEntryIterator4.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        boolean boolean12 = explodedArchive7.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        fileEntryIterator13.recursive = true;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator23.thenComparing(fileComparator26);
        fileEntryIterator18.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator23.thenComparing(fileComparator31);
        fileEntryIterator13.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator13.root = file38;
        explodedArchive7.root = file38;
        java.util.Iterator<java.io.File> fileItor41 = fileEntryIterator4.listFiles(file38);
        fileEntry0.file = file38;
        fileEntry0.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        java.lang.String str45 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str47 = fileEntry46.name;
        java.lang.String str48 = fileEntry46.name;
        java.lang.String str49 = fileEntry46.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file51 = fileEntryIterator50.current;
        java.io.File file52 = fileEntryIterator50.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file54 = fileEntryIterator53.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator60.thenComparing(fileComparator63);
        fileEntryIterator55.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator60.thenComparing(fileComparator68);
        fileEntryIterator53.entryComparator = fileComparator69;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator53.stack;
        fileEntryIterator50.stack = fileItorQueue71;
        boolean boolean73 = fileEntryIterator50.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean76 = fileEntryIterator75.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean78 = explodedArchive77.recursive;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.util.jar.Manifest manifest80 = null;
        explodedArchive77.manifest = manifest80;
        java.io.File file82 = explodedArchive77.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator83 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue84 = fileEntryIterator83.stack;
        java.util.Comparator<java.io.File> fileComparator85 = fileEntryIterator83.entryComparator;
        java.io.File file86 = fileEntryIterator83.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file88 = explodedArchive87.manifestFile;
        java.io.File file89 = explodedArchive87.manifestFile;
        java.io.File file90 = null;
        java.io.File file91 = explodedArchive87.getManifestFile(file90);
        fileEntryIterator83.current = file91;
        explodedArchive77.root = file91;
        fileEntryIterator75.root = file91;
        explodedArchive74.root = file91;
        java.util.Iterator<java.io.File> fileItor96 = fileEntryIterator50.listFiles(file91);
        fileEntry46.file = file91;
        fileEntry0.file = file91;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive99 = new org.springframework.boot.loader.archive.ExplodedArchive(file91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str45, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNotNull(fileItorQueue84);
        org.junit.Assert.assertNotNull(fileComparator85);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor96);
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2119");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.io.File file3 = fileEntryIterator0.current;
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        boolean boolean11 = explodedArchive6.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        fileEntryIterator12.recursive = true;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator22.thenComparing(fileComparator25);
        fileEntryIterator17.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator22.thenComparing(fileComparator30);
        fileEntryIterator12.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.manifestFile;
        java.io.File file35 = explodedArchive33.manifestFile;
        java.io.File file36 = null;
        java.io.File file37 = explodedArchive33.getManifestFile(file36);
        fileEntryIterator12.root = file37;
        explodedArchive6.root = file37;
        explodedArchive6.recursive = false;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive6.manifest = manifest42;
        java.lang.String str44 = explodedArchive6.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive6.getNestedArchives(entryFilter45);
        java.io.File file47 = explodedArchive6.root;
        explodedArchive6.recursive = true;
        java.lang.String str50 = explodedArchive6.toString();
        java.util.jar.Manifest manifest51 = null;
        explodedArchive6.manifest = manifest51;
        java.io.File file53 = explodedArchive6.root;
        java.util.Iterator<java.io.File> fileItor54 = fileEntryIterator0.listFiles(file53);
        java.io.File file55 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str44, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str50, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor54);
        org.junit.Assert.assertNull(file55);
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2120");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "exploded archive", (int) (short) -1, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2121");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        java.lang.String str7 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean10 = fileEntryIterator9.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean12 = explodedArchive11.recursive;
        java.io.File file13 = explodedArchive11.manifestFile;
        java.util.jar.Manifest manifest14 = null;
        explodedArchive11.manifest = manifest14;
        java.io.File file16 = explodedArchive11.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.io.File file20 = fileEntryIterator17.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.manifestFile;
        java.io.File file23 = explodedArchive21.manifestFile;
        java.io.File file24 = null;
        java.io.File file25 = explodedArchive21.getManifestFile(file24);
        fileEntryIterator17.current = file25;
        explodedArchive11.root = file25;
        fileEntryIterator9.root = file25;
        explodedArchive8.root = file25;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator30 = explodedArchive8.spliterator();
        java.io.File file31 = explodedArchive8.root;
        java.util.jar.Manifest manifest32 = explodedArchive8.manifest;
        java.io.File file33 = explodedArchive8.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file35 = fileEntryIterator34.current;
        java.io.File file36 = null;
        fileEntryIterator34.current = file36;
        java.io.File file38 = fileEntryIterator34.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file40 = fileEntry39.getFile();
        java.lang.String str41 = fileEntry39.name;
        java.io.File file42 = fileEntry39.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        boolean boolean45 = fileEntryIterator43.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        boolean boolean51 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        fileEntryIterator52.recursive = true;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator52.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        fileEntryIterator52.root = file77;
        explodedArchive46.root = file77;
        java.util.Iterator<java.io.File> fileItor80 = fileEntryIterator43.listFiles(file77);
        fileEntry39.file = file77;
        fileEntryIterator34.current = file77;
        explodedArchive8.root = file77;
        explodedArchive0.manifestFile = file77;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = new org.springframework.boot.loader.archive.ExplodedArchive(file77, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor80);
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2122");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        boolean boolean4 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file6 = fileEntry5.getFile();
        java.io.File file7 = fileEntry5.file;
        java.io.File file8 = null;
        fileEntry5.file = file8;
        java.lang.String str10 = fileEntry5.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file12 = fileEntryIterator11.current;
        java.io.File file13 = null;
        fileEntryIterator11.current = file13;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean16 = explodedArchive15.recursive;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive15.manifest = manifest18;
        java.io.File file20 = explodedArchive15.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.io.File file24 = fileEntryIterator21.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        fileEntryIterator21.current = file29;
        explodedArchive15.root = file29;
        fileEntryIterator11.root = file29;
        fileEntry5.file = file29;
        boolean boolean34 = fileEntry5.isDirectory();
        java.lang.String str35 = fileEntry5.getName();
        fileEntry5.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!";
        java.io.File file38 = fileEntry5.file;
        explodedArchive0.root = file38;
        java.io.File file40 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.Archive.Entry entry41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive42 = explodedArchive0.getNestedArchive(entry41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file40);
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2123");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator39 = explodedArchive0.spliterator();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive0.getNestedArchives(entryFilter40);
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor42 = explodedArchive0.iterator();
        java.net.URL uRL43 = explodedArchive0.getUrl();
        java.lang.String str44 = uRL43.getRef();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(entryItor42);
        org.junit.Assert.assertNotNull(uRL43);
// flaky:         org.junit.Assert.assertEquals(uRL43.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2124");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.net.URL uRL8 = null;
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getHost();
        java.net.URI uRI13 = uRL11.toURI();
        java.lang.String str14 = uRL11.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL11, "file", uRLStreamHandler16);
        java.lang.String str18 = uRL11.getFile();
        int int19 = uRL11.getPort();
        java.lang.String str20 = uRL11.toExternalForm();
        boolean boolean21 = uRL3.sameFile(uRL11);
        java.net.URLConnection uRLConnection22 = uRL11.openConnection();
        java.net.URI uRI23 = uRL11.toURI();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(uRI13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str18, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str20, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(uRLConnection22);
        org.junit.Assert.assertNotNull(uRI23);
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2125");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator3.entryComparator = fileComparator19;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator3.stack;
        fileEntryIterator0.stack = fileItorQueue21;
        boolean boolean23 = fileEntryIterator0.recursive;
        fileEntryIterator0.recursive = true;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2126");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.io.File file4 = explodedArchive0.root;
        boolean boolean5 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.lang.String str8 = explodedArchive0.toString();
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
        org.junit.Assert.assertNull(manifest9);
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2127");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive0.getNestedArchives(entryFilter36);
        java.net.URL uRL38 = explodedArchive0.getUrl();
        java.lang.String str39 = uRL38.toExternalForm();
        java.lang.String str40 = uRL38.getPath();
        java.net.URLStreamHandler uRLStreamHandler42 = null;
        java.net.URL uRL43 = new java.net.URL(uRL38, "hi!", uRLStreamHandler42);
        java.lang.String str44 = uRL38.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str40, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals(uRL43.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str44, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2128");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean6 = fileEntryIterator5.recursive;
        boolean boolean7 = fileEntryIterator5.recursive;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator5.entryComparator;
        java.io.File file9 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file11 = fileEntryIterator10.current;
        java.io.File file12 = fileEntryIterator10.poll();
        java.io.File file13 = fileEntryIterator10.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator19.thenComparing((java.util.Comparator<java.io.File>) entryComparator25);
        fileEntryIterator10.entryComparator = entryComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        fileEntryIterator28.recursive = true;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator38.thenComparing(fileComparator41);
        fileEntryIterator33.entryComparator = fileComparator38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator44.entryComparator;
        java.util.Comparator<java.io.File> fileComparator47 = fileComparator38.thenComparing(fileComparator46);
        fileEntryIterator28.entryComparator = fileComparator47;
        java.util.Comparator<java.io.File> fileComparator49 = entryComparator25.thenComparing(fileComparator47);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean56 = fileEntryIterator55.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean58 = explodedArchive57.recursive;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.util.jar.Manifest manifest60 = null;
        explodedArchive57.manifest = manifest60;
        java.io.File file62 = explodedArchive57.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.io.File file66 = fileEntryIterator63.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file68 = explodedArchive67.manifestFile;
        java.io.File file69 = explodedArchive67.manifestFile;
        java.io.File file70 = null;
        java.io.File file71 = explodedArchive67.getManifestFile(file70);
        fileEntryIterator63.current = file71;
        explodedArchive57.root = file71;
        fileEntryIterator55.root = file71;
        int int75 = entryComparator25.compare(file54, file71);
        java.util.Iterator<java.io.File> fileItor76 = fileEntryIterator5.listFiles(file71);
        java.io.File file77 = fileEntryIterator5.current;
        boolean boolean78 = uRL3.equals((java.lang.Object) fileEntryIterator5);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(fileItor76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2129");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("exploded archive", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", 1, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2130");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        java.io.File file5 = null;
        fileEntryIterator3.current = file5;
        java.io.File file7 = fileEntryIterator3.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file9 = fileEntry8.getFile();
        java.lang.String str10 = fileEntry8.name;
        java.io.File file11 = fileEntry8.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        boolean boolean14 = fileEntryIterator12.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.manifestFile;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.io.File file18 = null;
        java.io.File file19 = explodedArchive15.getManifestFile(file18);
        boolean boolean20 = explodedArchive15.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        fileEntryIterator21.recursive = true;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator21.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator21.root = file46;
        explodedArchive15.root = file46;
        java.util.Iterator<java.io.File> fileItor49 = fileEntryIterator12.listFiles(file46);
        fileEntry8.file = file46;
        fileEntryIterator3.current = file46;
        explodedArchive0.root = file46;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "exploded archive" + "'", str1, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor49);
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2131");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        java.net.URLStreamHandler uRLStreamHandler23 = null;
        java.net.URL uRL24 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler23);
        int int25 = uRL24.getPort();
        java.lang.String str26 = uRL24.getAuthority();
        java.net.URI uRI27 = uRL24.toURI();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = uRL24.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(uRI27);
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2132");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator0.stack;
        java.io.File file7 = fileEntryIterator0.current;
        java.io.File file8 = null;
        fileEntryIterator0.root = file8;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry10 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2133");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.recursive;
        boolean boolean2 = fileEntryIterator0.recursive;
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2134");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.lang.String str2 = explodedArchive0.toString();
        boolean boolean3 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.manifestFile;
        java.io.File file7 = explodedArchive5.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        fileEntryIterator8.recursive = true;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator18.thenComparing(fileComparator21);
        fileEntryIterator13.entryComparator = fileComparator18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator18.thenComparing(fileComparator26);
        fileEntryIterator8.entryComparator = fileComparator27;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        fileEntryIterator8.root = file33;
        explodedArchive5.manifestFile = file33;
        java.io.File file36 = explodedArchive0.getManifestFile(file33);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "exploded archive" + "'", str2, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2135");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator0.stack;
        java.io.File file19 = fileEntryIterator0.current;
        java.io.File file20 = fileEntryIterator0.current;
        java.io.File file21 = fileEntryIterator0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2136");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.lang.String str71 = uRL69.getHost();
        java.net.URI uRI72 = uRL69.toURI();
        java.lang.String str73 = uRL69.getQuery();
        java.lang.String str74 = uRL69.getRef();
        java.lang.String str75 = uRL69.getUserInfo();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(uRI72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2137");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.lang.String str34 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator35 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.net.URL uRL37 = explodedArchive0.getUrl();
        java.io.File file38 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.Archive.Entry entry39 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive40 = explodedArchive0.getNestedArchive(entry39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(uRL37);
// flaky:         org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file38);
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2138");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        boolean boolean22 = uRL11.sameFile(uRL21);
        java.lang.String str23 = uRL21.toExternalForm();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = uRL21.getContent();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: exploded archive");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file://exploded archive:0" + "'", str23, "file://exploded archive:0");
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2139");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.io.File file5 = fileEntry0.file;
        java.lang.String str6 = fileEntry0.name;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.io.File file9 = fileEntryIterator7.current;
        java.io.File file10 = fileEntryIterator7.current;
        fileEntryIterator7.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator7.root = file17;
        fileEntry0.file = file17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        boolean boolean22 = fileEntryIterator20.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.io.File file26 = null;
        java.io.File file27 = explodedArchive23.getManifestFile(file26);
        boolean boolean28 = explodedArchive23.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        fileEntryIterator29.recursive = true;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.util.Comparator<java.io.File> fileComparator43 = fileComparator39.thenComparing(fileComparator42);
        fileEntryIterator34.entryComparator = fileComparator39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        java.util.Comparator<java.io.File> fileComparator48 = fileComparator39.thenComparing(fileComparator47);
        fileEntryIterator29.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        fileEntryIterator29.root = file54;
        explodedArchive23.root = file54;
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator20.listFiles(file54);
        fileEntry0.file = file54;
        boolean boolean59 = fileEntry0.isDirectory();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2140");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.net.URL uRL38 = explodedArchive0.getUrl();
        int int39 = uRL38.getDefaultPort();
        java.net.URLConnection uRLConnection40 = uRL38.openConnection();
        java.lang.String str41 = uRL38.getHost();
        java.net.URL uRL42 = null;
        java.net.URLStreamHandler uRLStreamHandler44 = null;
        java.net.URL uRL45 = new java.net.URL(uRL42, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler44);
        java.lang.String str46 = uRL45.getHost();
        java.lang.String str47 = uRL45.getAuthority();
        java.lang.String str48 = uRL45.getQuery();
        int int49 = uRL45.getDefaultPort();
        java.lang.String str50 = uRL45.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler52 = null;
        java.net.URL uRL53 = new java.net.URL(uRL45, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler52);
        java.lang.String str54 = uRL53.toExternalForm();
        java.lang.String str55 = uRL53.getUserInfo();
        java.lang.String str56 = uRL53.getProtocol();
        int int57 = uRL53.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler62 = null;
        java.net.URL uRL63 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler62);
        boolean boolean64 = uRL53.sameFile(uRL63);
        java.lang.String str65 = uRL53.getProtocol();
        java.lang.String str66 = uRL53.getRef();
        boolean boolean67 = uRL38.sameFile(uRL53);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream68 = uRL38.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(uRLConnection40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals(uRL53.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str54, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "file" + "'", str56, "file");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals(uRL63.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "file" + "'", str65, "file");
        org.junit.Assert.assertNull(str66);
// flaky:         org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2141");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        fileEntry0.name = "file";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        boolean boolean12 = explodedArchive7.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        fileEntryIterator13.recursive = true;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator23.thenComparing(fileComparator26);
        fileEntryIterator18.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator23.thenComparing(fileComparator31);
        fileEntryIterator13.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator13.root = file38;
        explodedArchive7.root = file38;
        explodedArchive7.recursive = false;
        java.util.jar.Manifest manifest43 = explodedArchive7.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator44 = explodedArchive7.spliterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator45 = explodedArchive7.spliterator();
        java.io.File file46 = explodedArchive7.root;
        fileEntry0.file = file46;
        boolean boolean48 = fileEntry0.isDirectory();
        fileEntry0.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file";
        java.lang.String str51 = fileEntry0.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertNotNull(entrySpliterator44);
        org.junit.Assert.assertNotNull(entrySpliterator45);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str51, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2142");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file3 = fileEntry2.getFile();
        java.io.File file4 = fileEntry2.file;
        java.io.File file5 = null;
        fileEntry2.file = file5;
        java.lang.String str7 = fileEntry2.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        boolean boolean10 = fileEntryIterator8.hasNext();
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator11.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean27 = fileEntryIterator26.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean29 = explodedArchive28.recursive;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive28.manifest = manifest31;
        java.io.File file33 = explodedArchive28.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.io.File file37 = fileEntryIterator34.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator34.current = file42;
        explodedArchive28.root = file42;
        fileEntryIterator26.root = file42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        boolean boolean51 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        fileEntryIterator52.recursive = true;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator52.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        fileEntryIterator52.root = file77;
        explodedArchive46.root = file77;
        int int80 = entryComparator23.compare(file42, file77);
        fileEntry2.file = file77;
        explodedArchive0.manifestFile = file77;
        java.util.jar.Manifest manifest83 = null;
        explodedArchive0.manifest = manifest83;
        java.io.File file85 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest86 = explodedArchive0.manifest;
        java.io.File file87 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL88 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest86);
        org.junit.Assert.assertNull(file87);
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2143");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = null;
        fileEntryIterator6.current = file8;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean11 = explodedArchive10.recursive;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.util.jar.Manifest manifest13 = null;
        explodedArchive10.manifest = manifest13;
        java.io.File file15 = explodedArchive10.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.io.File file19 = fileEntryIterator16.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        fileEntryIterator16.current = file24;
        explodedArchive10.root = file24;
        fileEntryIterator6.root = file24;
        fileEntry0.file = file24;
        java.io.File file29 = fileEntry0.file;
        java.lang.String str30 = fileEntry0.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2144");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        java.net.URL uRL17 = explodedArchive0.getUrl();
        java.util.jar.Manifest manifest18 = null;
        explodedArchive0.manifest = manifest18;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest20 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL17);
// flaky:         org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2145");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        fileEntryIterator8.recursive = true;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator18.thenComparing(fileComparator21);
        fileEntryIterator13.entryComparator = fileComparator18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator18.thenComparing(fileComparator26);
        fileEntryIterator8.entryComparator = fileComparator27;
        fileEntryIterator8.recursive = true;
        fileEntryIterator8.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator8.stack;
        fileEntryIterator5.stack = fileItorQueue33;
        fileEntryIterator0.stack = fileItorQueue33;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str37 = fileEntry36.name;
        java.io.File file38 = fileEntry36.file;
        fileEntry36.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        boolean boolean43 = fileEntryIterator41.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        boolean boolean49 = explodedArchive44.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator60.thenComparing(fileComparator63);
        fileEntryIterator55.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator60.thenComparing(fileComparator68);
        fileEntryIterator50.entryComparator = fileComparator69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.io.File file74 = null;
        java.io.File file75 = explodedArchive71.getManifestFile(file74);
        fileEntryIterator50.root = file75;
        explodedArchive44.root = file75;
        java.util.Iterator<java.io.File> fileItor78 = fileEntryIterator41.listFiles(file75);
        fileEntry36.file = file75;
        java.io.File file80 = fileEntry36.getFile();
        fileEntryIterator0.root = file80;
        java.io.File file82 = fileEntryIterator0.root;
        boolean boolean83 = fileEntryIterator0.recursive;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor78);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2146");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        java.io.File file5 = explodedArchive0.manifestFile;
        java.io.File file6 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor11 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2147");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.lang.String str71 = uRL69.getHost();
        java.net.URL uRL73 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str74 = uRL69.getFile();
        java.net.URL uRL76 = new java.net.URL(uRL69, "file");
        java.lang.String str77 = uRL76.getProtocol();
        java.lang.String str78 = uRL76.getProtocol();
        java.lang.String str79 = uRL76.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals(uRL73.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str74, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals(uRL76.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "file" + "'", str77, "file");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "file" + "'", str78, "file");
// flaky:         org.junit.Assert.assertEquals("'" + str79 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str79, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2148");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getFile();
        java.lang.String str10 = uRL3.getFile();
        java.lang.String str11 = uRL3.getProtocol();
        java.lang.String str12 = uRL3.getRef();
        java.lang.String str13 = uRL3.toExternalForm();
        int int14 = uRL3.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file" + "'", str11, "file");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2149");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.lang.String str2 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean5 = fileEntryIterator4.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean7 = explodedArchive6.recursive;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive6.manifest = manifest9;
        java.io.File file11 = explodedArchive6.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        java.io.File file15 = fileEntryIterator12.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.manifestFile;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.io.File file19 = null;
        java.io.File file20 = explodedArchive16.getManifestFile(file19);
        fileEntryIterator12.current = file20;
        explodedArchive6.root = file20;
        fileEntryIterator4.root = file20;
        explodedArchive3.root = file20;
        java.io.File file25 = explodedArchive3.root;
        explodedArchive0.manifestFile = file25;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator27 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "exploded archive" + "'", str2, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2150");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.manifestFile;
        java.io.File file6 = explodedArchive4.manifestFile;
        java.io.File file7 = null;
        java.io.File file8 = explodedArchive4.getManifestFile(file7);
        fileEntryIterator0.current = file8;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2151");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file://exploded archive:0", "exploded archive", (int) '4', "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2152");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        boolean boolean8 = explodedArchive3.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator9.recursive = true;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator9.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator9.root = file34;
        explodedArchive3.root = file34;
        explodedArchive3.recursive = false;
        java.util.jar.Manifest manifest39 = null;
        explodedArchive3.manifest = manifest39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file42 = fileEntryIterator41.current;
        java.io.File file43 = fileEntryIterator41.poll();
        java.io.File file44 = fileEntryIterator41.poll();
        java.io.File file45 = fileEntryIterator41.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.io.File file48 = fileEntryIterator46.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        fileEntryIterator46.root = file52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.manifestFile;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.io.File file58 = null;
        java.io.File file59 = explodedArchive55.getManifestFile(file58);
        java.util.Iterator<java.io.File> fileItor60 = fileEntryIterator46.listFiles(file59);
        fileEntryIterator41.root = file59;
        explodedArchive3.root = file59;
        java.io.File file63 = explodedArchive3.root;
        explodedArchive0.root = file63;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive(file63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor60);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2153");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "";
        java.lang.String str5 = fileEntry0.name;
        java.io.File file6 = fileEntry0.file;
        java.lang.String str7 = fileEntry0.getName();
        java.io.File file8 = fileEntry0.file;
        java.lang.String str9 = fileEntry0.name;
        java.lang.String str10 = fileEntry0.name;
        java.lang.String str11 = fileEntry0.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2154");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler16);
        java.lang.Class[] classArray18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = uRL17.getContent(classArray18);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2155");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean6 = explodedArchive5.recursive;
        boolean boolean7 = explodedArchive5.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        explodedArchive5.root = file12;
        fileEntryIterator0.root = file12;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator20.thenComparing(fileComparator28);
        fileEntryIterator0.entryComparator = fileComparator29;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry33.name = "exploded archive";
        java.lang.String str36 = fileEntry33.name;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file38 = fileEntryIterator37.current;
        boolean boolean39 = fileEntryIterator37.hasNext();
        fileEntryIterator37.recursive = true;
        boolean boolean42 = fileEntryIterator37.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        boolean boolean45 = explodedArchive43.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file47 = fileEntryIterator46.current;
        java.io.File file48 = null;
        fileEntryIterator46.current = file48;
        java.io.File file50 = fileEntryIterator46.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file52 = fileEntry51.getFile();
        java.lang.String str53 = fileEntry51.name;
        java.io.File file54 = fileEntry51.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        boolean boolean57 = fileEntryIterator55.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.manifestFile;
        java.io.File file60 = explodedArchive58.manifestFile;
        java.io.File file61 = null;
        java.io.File file62 = explodedArchive58.getManifestFile(file61);
        boolean boolean63 = explodedArchive58.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        fileEntryIterator64.recursive = true;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator64.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator75.stack;
        java.util.Comparator<java.io.File> fileComparator77 = fileEntryIterator75.entryComparator;
        java.util.Comparator<java.io.File> fileComparator78 = fileComparator74.thenComparing(fileComparator77);
        fileEntryIterator69.entryComparator = fileComparator74;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator80 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue81 = fileEntryIterator80.stack;
        java.util.Comparator<java.io.File> fileComparator82 = fileEntryIterator80.entryComparator;
        java.util.Comparator<java.io.File> fileComparator83 = fileComparator74.thenComparing(fileComparator82);
        fileEntryIterator64.entryComparator = fileComparator83;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file86 = explodedArchive85.manifestFile;
        java.io.File file87 = explodedArchive85.manifestFile;
        java.io.File file88 = null;
        java.io.File file89 = explodedArchive85.getManifestFile(file88);
        fileEntryIterator64.root = file89;
        explodedArchive58.root = file89;
        java.util.Iterator<java.io.File> fileItor92 = fileEntryIterator55.listFiles(file89);
        fileEntry51.file = file89;
        fileEntryIterator46.current = file89;
        explodedArchive43.root = file89;
        java.util.Iterator<java.io.File> fileItor96 = fileEntryIterator37.listFiles(file89);
        fileEntry33.file = file89;
        java.util.Iterator<java.io.File> fileItor98 = fileEntryIterator0.listFiles(file89);
        java.io.File file99 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "exploded archive" + "'", str36, "exploded archive");
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "exploded archive" + "'", str44, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNotNull(fileItorQueue81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNotNull(fileComparator83);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNull(file87);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor92);
        org.junit.Assert.assertNotNull(fileItor96);
        org.junit.Assert.assertNotNull(fileItor98);
        org.junit.Assert.assertNull(file99);
    }

    @Test
    public void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2156");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.io.File file18 = fileEntryIterator0.root;
        boolean boolean19 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        explodedArchive20.recursive = true;
        java.lang.String str24 = explodedArchive20.toString();
        boolean boolean25 = explodedArchive20.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = fileEntryIterator26.poll();
        java.io.File file29 = fileEntryIterator26.poll();
        java.io.File file30 = fileEntryIterator26.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.io.File file33 = fileEntryIterator31.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator31.root = file37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        java.util.Iterator<java.io.File> fileItor45 = fileEntryIterator31.listFiles(file44);
        fileEntryIterator26.root = file44;
        explodedArchive20.manifestFile = file44;
        fileEntryIterator0.root = file44;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "exploded archive" + "'", str24, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor45);
    }

    @Test
    public void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2157");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        boolean boolean41 = explodedArchive39.recursive;
        java.io.File file42 = explodedArchive39.root;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive39.getManifestFile(file43);
        explodedArchive0.manifestFile = file43;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive0.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        fileEntryIterator48.recursive = true;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator58.thenComparing(fileComparator61);
        fileEntryIterator53.entryComparator = fileComparator58;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator58.thenComparing(fileComparator66);
        fileEntryIterator48.entryComparator = fileComparator67;
        fileEntryIterator48.recursive = true;
        fileEntryIterator48.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator48.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean75 = explodedArchive74.recursive;
        boolean boolean76 = explodedArchive74.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file78 = explodedArchive77.manifestFile;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.io.File file80 = null;
        java.io.File file81 = explodedArchive77.getManifestFile(file80);
        explodedArchive74.root = file81;
        fileEntryIterator48.root = file81;
        java.io.File file84 = explodedArchive0.getManifestFile(file81);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = new org.springframework.boot.loader.archive.ExplodedArchive(file81, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2158");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.manifestFile;
        java.io.File file7 = explodedArchive5.manifestFile;
        java.io.File file8 = null;
        java.io.File file9 = explodedArchive5.getManifestFile(file8);
        fileEntryIterator3.current = file8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        fileEntryIterator3.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator20.thenComparing((java.util.Comparator<java.io.File>) entryComparator26);
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator13.thenComparing(fileComparator20);
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator13.reversed();
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator2.thenComparing(fileComparator13);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        fileEntryIterator31.recursive = true;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator31.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator31.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator2.thenComparing(fileComparator36);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.io.File file40 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        fileEntryIterator41.recursive = true;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator41.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        java.util.Comparator<java.io.File> fileComparator55 = fileComparator51.thenComparing(fileComparator54);
        fileEntryIterator46.entryComparator = fileComparator51;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        java.util.Comparator<java.io.File> fileComparator60 = fileComparator51.thenComparing(fileComparator59);
        fileEntryIterator41.entryComparator = fileComparator60;
        fileEntryIterator41.recursive = true;
        fileEntryIterator41.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator41.stack;
        fileEntryIterator38.stack = fileItorQueue66;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.util.Comparator<java.io.File> fileComparator73 = fileEntryIterator71.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator73.thenComparing(fileComparator76);
        fileEntryIterator68.entryComparator = fileComparator73;
        boolean boolean79 = fileEntryIterator68.recursive;
        java.util.Comparator<java.io.File> fileComparator80 = fileEntryIterator68.entryComparator;
        fileEntryIterator38.entryComparator = fileComparator80;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator82 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue83 = fileEntryIterator82.stack;
        java.io.File file84 = fileEntryIterator82.current;
        java.io.File file85 = fileEntryIterator82.current;
        fileEntryIterator82.recursive = true;
        java.util.Comparator<java.io.File> fileComparator88 = fileEntryIterator82.entryComparator;
        java.util.Comparator<java.io.File> fileComparator89 = fileComparator80.thenComparing(fileComparator88);
        java.util.Comparator<java.io.File> fileComparator90 = fileComparator37.thenComparing(fileComparator88);
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNotNull(fileItorQueue83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNotNull(fileComparator88);
        org.junit.Assert.assertNotNull(fileComparator89);
        org.junit.Assert.assertNotNull(fileComparator90);
    }

    @Test
    public void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2159");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "file://hi!:100hi!", (int) (byte) -1, "exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2160");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.jar.Manifest manifest22 = null;
        explodedArchive0.manifest = manifest22;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.io.File file26 = fileEntryIterator24.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        fileEntryIterator24.entryComparator = fileComparator29;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.manifestFile;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.io.File file34 = null;
        java.io.File file35 = explodedArchive31.getManifestFile(file34);
        fileEntryIterator24.root = file34;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file38 = fileEntryIterator37.current;
        java.io.File file39 = null;
        fileEntryIterator37.current = file39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean42 = explodedArchive41.recursive;
        java.io.File file43 = explodedArchive41.manifestFile;
        java.util.jar.Manifest manifest44 = null;
        explodedArchive41.manifest = manifest44;
        java.io.File file46 = explodedArchive41.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        java.io.File file50 = fileEntryIterator47.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        fileEntryIterator47.current = file55;
        explodedArchive41.root = file55;
        fileEntryIterator37.root = file55;
        fileEntryIterator24.current = file55;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file61 = fileEntryIterator60.current;
        java.io.File file62 = fileEntryIterator60.poll();
        java.io.File file63 = fileEntryIterator60.poll();
        java.io.File file64 = fileEntryIterator60.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.io.File file67 = fileEntryIterator65.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.manifestFile;
        java.io.File file70 = explodedArchive68.manifestFile;
        java.io.File file71 = null;
        java.io.File file72 = explodedArchive68.getManifestFile(file71);
        fileEntryIterator65.root = file71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file75 = explodedArchive74.manifestFile;
        java.io.File file76 = explodedArchive74.manifestFile;
        java.io.File file77 = null;
        java.io.File file78 = explodedArchive74.getManifestFile(file77);
        java.util.Iterator<java.io.File> fileItor79 = fileEntryIterator65.listFiles(file78);
        fileEntryIterator60.root = file78;
        fileEntryIterator24.current = file78;
        explodedArchive0.root = file78;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry83 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str84 = fileEntry83.getName();
        fileEntry83.name = "exploded archive";
        fileEntry83.name = "hi!";
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive89 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor79);
        org.junit.Assert.assertNull(str84);
    }

    @Test
    public void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2161");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", 0, "exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: Illegal character found in host: '/'");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2162");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getUserInfo();
        boolean boolean13 = uRL3.sameFile(uRL9);
        java.lang.String str14 = uRL9.getAuthority();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2163");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator5;
        fileEntryIterator0.recursive = false;
        java.io.File file9 = fileEntryIterator0.poll();
        java.io.File file10 = fileEntryIterator0.root;
        java.io.File file11 = fileEntryIterator0.root;
        java.io.File file12 = fileEntryIterator0.root;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2164");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        java.net.URL uRL84 = null;
        java.net.URLStreamHandler uRLStreamHandler86 = null;
        java.net.URL uRL87 = new java.net.URL(uRL84, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler86);
        java.lang.String str88 = uRL87.getHost();
        java.lang.String str89 = uRL87.getAuthority();
        java.lang.String str90 = uRL87.getQuery();
        int int91 = uRL87.getDefaultPort();
        int int92 = uRL87.getPort();
        boolean boolean93 = uRL82.sameFile(uRL87);
        int int94 = uRL87.getDefaultPort();
        java.lang.String str95 = uRL87.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals(uRL87.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str95, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2165");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.recursive;
        boolean boolean2 = fileEntryIterator0.recursive;
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file5 = fileEntryIterator4.current;
        java.io.File file6 = fileEntryIterator4.poll();
        java.io.File file7 = fileEntryIterator4.poll();
        java.io.File file8 = fileEntryIterator4.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.io.File file11 = fileEntryIterator9.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        fileEntryIterator9.root = file15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.io.File file21 = null;
        java.io.File file22 = explodedArchive18.getManifestFile(file21);
        java.util.Iterator<java.io.File> fileItor23 = fileEntryIterator9.listFiles(file22);
        fileEntryIterator4.root = file22;
        java.io.File file25 = fileEntryIterator4.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = fileEntryIterator26.poll();
        java.io.File file29 = fileEntryIterator26.poll();
        java.io.File file30 = fileEntryIterator26.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.io.File file33 = fileEntryIterator31.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        fileEntryIterator34.recursive = true;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        java.util.Comparator<java.io.File> fileComparator48 = fileComparator44.thenComparing(fileComparator47);
        fileEntryIterator39.entryComparator = fileComparator44;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        java.util.Comparator<java.io.File> fileComparator53 = fileComparator44.thenComparing(fileComparator52);
        fileEntryIterator34.entryComparator = fileComparator53;
        fileEntryIterator34.recursive = true;
        fileEntryIterator34.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator34.stack;
        fileEntryIterator31.stack = fileItorQueue59;
        fileEntryIterator26.stack = fileItorQueue59;
        fileEntryIterator4.stack = fileItorQueue59;
        fileEntryIterator0.stack = fileItorQueue59;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor23);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue59);
    }

    @Test
    public void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2166");
        java.net.URL uRL4 = new java.net.URL("file", "", (int) (short) 10, "");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.manifestFile;
        java.io.File file7 = explodedArchive5.manifestFile;
        java.io.File file8 = null;
        java.io.File file9 = explodedArchive5.getManifestFile(file8);
        boolean boolean10 = explodedArchive5.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        fileEntryIterator11.recursive = true;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        fileEntryIterator16.entryComparator = fileComparator21;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator21.thenComparing(fileComparator29);
        fileEntryIterator11.entryComparator = fileComparator30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        fileEntryIterator11.root = file36;
        explodedArchive5.root = file36;
        explodedArchive5.recursive = false;
        java.util.jar.Manifest manifest41 = null;
        explodedArchive5.manifest = manifest41;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file44 = fileEntryIterator43.current;
        java.io.File file45 = fileEntryIterator43.poll();
        java.io.File file46 = fileEntryIterator43.poll();
        java.io.File file47 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.io.File file50 = fileEntryIterator48.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        fileEntryIterator48.root = file54;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        java.util.Iterator<java.io.File> fileItor62 = fileEntryIterator48.listFiles(file61);
        fileEntryIterator43.root = file61;
        explodedArchive5.root = file61;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter65 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList66 = explodedArchive5.getNestedArchives(entryFilter65);
        java.net.URL uRL67 = explodedArchive5.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.manifestFile;
        java.io.File file70 = explodedArchive68.manifestFile;
        java.io.File file71 = null;
        java.io.File file72 = explodedArchive68.getManifestFile(file71);
        explodedArchive5.manifestFile = file72;
        java.io.File file74 = explodedArchive5.root;
        boolean boolean75 = uRL4.equals((java.lang.Object) file74);
        org.junit.Assert.assertEquals(uRL4.toString(), "file://:10");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor62);
        org.junit.Assert.assertNotNull(archiveList66);
        org.junit.Assert.assertNotNull(uRL67);
// flaky:         org.junit.Assert.assertEquals(uRL67.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2167");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        explodedArchive0.recursive = false;
        explodedArchive0.recursive = true;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2168");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator0.stack = fileItorQueue8;
        fileEntryIterator0.recursive = true;
        java.io.File file12 = fileEntryIterator0.current;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator0.entryComparator;
        java.io.File file14 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2169");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        java.util.jar.Manifest manifest17 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.io.File file21 = null;
        java.io.File file22 = explodedArchive18.getManifestFile(file21);
        boolean boolean23 = explodedArchive18.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        fileEntryIterator24.recursive = true;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        java.util.Comparator<java.io.File> fileComparator38 = fileComparator34.thenComparing(fileComparator37);
        fileEntryIterator29.entryComparator = fileComparator34;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.util.Comparator<java.io.File> fileComparator43 = fileComparator34.thenComparing(fileComparator42);
        fileEntryIterator24.entryComparator = fileComparator43;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        fileEntryIterator24.root = file49;
        explodedArchive18.root = file49;
        java.io.File file52 = explodedArchive0.getManifestFile(file49);
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest53 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2170");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator38 = explodedArchive0.spliterator();
        java.io.File file39 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(entrySpliterator38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2171");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("exploded archive", "file://hi!:100hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2172");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        boolean boolean41 = explodedArchive39.recursive;
        java.io.File file42 = explodedArchive39.root;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive39.getManifestFile(file43);
        explodedArchive0.manifestFile = file43;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive0.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        fileEntryIterator48.recursive = true;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator58.thenComparing(fileComparator61);
        fileEntryIterator53.entryComparator = fileComparator58;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator58.thenComparing(fileComparator66);
        fileEntryIterator48.entryComparator = fileComparator67;
        fileEntryIterator48.recursive = true;
        fileEntryIterator48.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator48.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean75 = explodedArchive74.recursive;
        boolean boolean76 = explodedArchive74.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file78 = explodedArchive77.manifestFile;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.io.File file80 = null;
        java.io.File file81 = explodedArchive77.getManifestFile(file80);
        explodedArchive74.root = file81;
        fileEntryIterator48.root = file81;
        java.io.File file84 = explodedArchive0.getManifestFile(file81);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = new org.springframework.boot.loader.archive.ExplodedArchive(file84, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2173");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        boolean boolean4 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file6 = fileEntry5.getFile();
        java.io.File file7 = fileEntry5.file;
        java.io.File file8 = null;
        fileEntry5.file = file8;
        java.lang.String str10 = fileEntry5.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file12 = fileEntryIterator11.current;
        java.io.File file13 = null;
        fileEntryIterator11.current = file13;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean16 = explodedArchive15.recursive;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive15.manifest = manifest18;
        java.io.File file20 = explodedArchive15.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.io.File file24 = fileEntryIterator21.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        fileEntryIterator21.current = file29;
        explodedArchive15.root = file29;
        fileEntryIterator11.root = file29;
        fileEntry5.file = file29;
        boolean boolean34 = fileEntry5.isDirectory();
        java.lang.String str35 = fileEntry5.getName();
        fileEntry5.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!";
        java.io.File file38 = fileEntry5.file;
        explodedArchive0.root = file38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file41 = fileEntry40.getFile();
        java.io.File file42 = fileEntry40.file;
        fileEntry40.name = "";
        java.io.File file45 = fileEntry40.file;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean47 = explodedArchive46.recursive;
        boolean boolean48 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        explodedArchive46.root = file53;
        explodedArchive46.recursive = false;
        java.io.File file57 = explodedArchive46.root;
        fileEntry40.file = file57;
        java.io.File file59 = fileEntry40.getFile();
        java.io.File file60 = fileEntry40.file;
        java.io.File file61 = fileEntry40.getFile();
        java.io.File file62 = fileEntry40.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive63 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2174");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.root;
        java.io.File file4 = explodedArchive0.root;
        explodedArchive0.recursive = false;
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator11 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
    }

    @Test
    public void test2175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2175");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        java.io.File file5 = null;
        fileEntryIterator3.current = file5;
        java.io.File file7 = fileEntryIterator3.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file9 = fileEntry8.getFile();
        java.lang.String str10 = fileEntry8.name;
        java.io.File file11 = fileEntry8.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        boolean boolean14 = fileEntryIterator12.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.manifestFile;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.io.File file18 = null;
        java.io.File file19 = explodedArchive15.getManifestFile(file18);
        boolean boolean20 = explodedArchive15.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        fileEntryIterator21.recursive = true;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator21.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator21.root = file46;
        explodedArchive15.root = file46;
        java.util.Iterator<java.io.File> fileItor49 = fileEntryIterator12.listFiles(file46);
        fileEntry8.file = file46;
        fileEntryIterator3.current = file46;
        explodedArchive0.root = file46;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator53 = explodedArchive0.spliterator();
        java.lang.String str54 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.manifestFile;
        java.io.File file57 = explodedArchive55.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        fileEntryIterator58.recursive = true;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        java.util.Comparator<java.io.File> fileComparator72 = fileComparator68.thenComparing(fileComparator71);
        fileEntryIterator63.entryComparator = fileComparator68;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator68.thenComparing(fileComparator76);
        fileEntryIterator58.entryComparator = fileComparator77;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file80 = explodedArchive79.manifestFile;
        java.io.File file81 = explodedArchive79.manifestFile;
        java.io.File file82 = null;
        java.io.File file83 = explodedArchive79.getManifestFile(file82);
        fileEntryIterator58.root = file83;
        explodedArchive55.manifestFile = file83;
        java.util.jar.Manifest manifest86 = explodedArchive55.manifest;
        java.util.jar.Manifest manifest87 = explodedArchive55.manifest;
        java.util.jar.Manifest manifest88 = explodedArchive55.getManifest();
        java.util.jar.Manifest manifest89 = explodedArchive55.getManifest();
        java.io.File file90 = explodedArchive55.root;
        java.io.File file91 = explodedArchive55.manifestFile;
        java.io.File file92 = explodedArchive0.getManifestFile(file91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest93 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "exploded archive" + "'", str1, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor49);
        org.junit.Assert.assertNotNull(entrySpliterator53);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str54, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest86);
        org.junit.Assert.assertNull(manifest87);
        org.junit.Assert.assertNull(manifest88);
        org.junit.Assert.assertNull(manifest89);
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2176");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        fileEntryIterator0.root = file10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file14 = fileEntryIterator13.current;
        java.io.File file15 = null;
        fileEntryIterator13.current = file15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean18 = explodedArchive17.recursive;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.util.jar.Manifest manifest20 = null;
        explodedArchive17.manifest = manifest20;
        java.io.File file22 = explodedArchive17.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.io.File file26 = fileEntryIterator23.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator23.current = file31;
        explodedArchive17.root = file31;
        fileEntryIterator13.root = file31;
        fileEntryIterator0.current = file31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file37 = fileEntryIterator36.current;
        java.io.File file38 = fileEntryIterator36.poll();
        java.io.File file39 = fileEntryIterator36.poll();
        java.io.File file40 = fileEntryIterator36.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.io.File file43 = fileEntryIterator41.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        fileEntryIterator41.root = file47;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        java.util.Iterator<java.io.File> fileItor55 = fileEntryIterator41.listFiles(file54);
        fileEntryIterator36.root = file54;
        fileEntryIterator0.current = file54;
        java.io.File file58 = fileEntryIterator0.root;
        boolean boolean59 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor55);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test2177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2177");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URLStreamHandler uRLStreamHandler74 = null;
        java.net.URL uRL75 = new java.net.URL(uRL72, "", uRLStreamHandler74);
        java.net.URL uRL76 = null;
        java.net.URLStreamHandler uRLStreamHandler78 = null;
        java.net.URL uRL79 = new java.net.URL(uRL76, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler78);
        java.lang.String str80 = uRL79.getProtocol();
        java.lang.String str81 = uRL79.getUserInfo();
        java.net.URL uRL82 = null;
        java.net.URLStreamHandler uRLStreamHandler84 = null;
        java.net.URL uRL85 = new java.net.URL(uRL82, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler84);
        java.lang.String str86 = uRL85.getHost();
        java.lang.String str87 = uRL85.getAuthority();
        java.lang.String str88 = uRL85.getQuery();
        int int89 = uRL85.getDefaultPort();
        java.lang.String str90 = uRL85.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler92 = null;
        java.net.URL uRL93 = new java.net.URL(uRL85, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler92);
        boolean boolean94 = uRL79.sameFile(uRL93);
        java.net.URL uRL96 = new java.net.URL(uRL79, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        boolean boolean97 = uRL75.equals((java.lang.Object) "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL79.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "file" + "'", str80, "file");
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertEquals(uRL85.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertEquals(uRL93.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals(uRL96.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test2178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2178");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        int int22 = uRL3.getDefaultPort();
        int int23 = uRL3.getDefaultPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test2179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2179");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.lang.String str34 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator35 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor37 = explodedArchive0.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest38 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entryItor37);
    }

    @Test
    public void test2180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2180");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.util.Comparator<java.io.File> fileComparator9 = fileComparator5.thenComparing(fileComparator8);
        fileEntryIterator0.entryComparator = fileComparator5;
        boolean boolean11 = fileEntryIterator0.recursive;
        fileEntryIterator0.recursive = false;
        java.io.File file14 = null;
        fileEntryIterator0.current = file14;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test2181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2181");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.util.jar.Manifest manifest38 = explodedArchive0.manifest;
        explodedArchive0.recursive = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest38);
    }

    @Test
    public void test2182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2182");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        boolean boolean8 = fileEntryIterator6.hasNext();
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator15.thenComparing(fileComparator18);
        fileEntryIterator10.entryComparator = fileComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator15.thenComparing((java.util.Comparator<java.io.File>) entryComparator21);
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean25 = fileEntryIterator24.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        java.io.File file28 = explodedArchive26.manifestFile;
        java.util.jar.Manifest manifest29 = null;
        explodedArchive26.manifest = manifest29;
        java.io.File file31 = explodedArchive26.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.io.File file35 = fileEntryIterator32.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.manifestFile;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.io.File file39 = null;
        java.io.File file40 = explodedArchive36.getManifestFile(file39);
        fileEntryIterator32.current = file40;
        explodedArchive26.root = file40;
        fileEntryIterator24.root = file40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        boolean boolean49 = explodedArchive44.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator60.thenComparing(fileComparator63);
        fileEntryIterator55.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator60.thenComparing(fileComparator68);
        fileEntryIterator50.entryComparator = fileComparator69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.io.File file74 = null;
        java.io.File file75 = explodedArchive71.getManifestFile(file74);
        fileEntryIterator50.root = file75;
        explodedArchive44.root = file75;
        int int78 = entryComparator21.compare(file40, file75);
        fileEntry0.file = file75;
        java.lang.String str80 = fileEntry0.getName();
        java.io.File file81 = fileEntry0.getFile();
        java.io.File file82 = fileEntry0.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive(file82, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2183");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.lang.String str3 = fileEntry0.getName();
        java.lang.String str4 = fileEntry0.getName();
        java.lang.String str5 = fileEntry0.name;
        java.io.File file6 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator7.recursive = true;
        boolean boolean11 = fileEntryIterator7.hasNext();
        fileEntryIterator7.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        fileEntryIterator21.recursive = true;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator21.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator21.root = file46;
        explodedArchive18.manifestFile = file46;
        fileEntryIterator14.current = file46;
        java.io.File file50 = fileEntryIterator14.current;
        java.util.Iterator<java.io.File> fileItor51 = fileEntryIterator7.listFiles(file50);
        fileEntry0.file = file50;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor51);
    }

    @Test
    public void test2184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2184");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest32 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest33 = explodedArchive0.getManifest();
        boolean boolean34 = explodedArchive0.recursive;
        java.lang.String str35 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str37 = fileEntry36.getName();
        fileEntry36.name = "exploded archive";
        fileEntry36.name = "hi!";
        java.io.File file42 = fileEntry36.getFile();
        fileEntry36.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive45 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "exploded archive" + "'", str35, "exploded archive");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(file42);
    }

    @Test
    public void test2185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2185");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean7 = fileEntryIterator6.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean9 = explodedArchive8.recursive;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive8.manifest = manifest11;
        java.io.File file13 = explodedArchive8.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.io.File file17 = fileEntryIterator14.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.io.File file21 = null;
        java.io.File file22 = explodedArchive18.getManifestFile(file21);
        fileEntryIterator14.current = file22;
        explodedArchive8.root = file22;
        fileEntryIterator6.root = file22;
        explodedArchive5.root = file22;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file28 = fileEntryIterator27.current;
        java.io.File file29 = null;
        fileEntryIterator27.current = file29;
        java.io.File file31 = fileEntryIterator27.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file33 = fileEntry32.getFile();
        java.lang.String str34 = fileEntry32.name;
        java.io.File file35 = fileEntry32.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        boolean boolean38 = fileEntryIterator36.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        boolean boolean44 = explodedArchive39.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        fileEntryIterator45.recursive = true;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator55.thenComparing(fileComparator58);
        fileEntryIterator50.entryComparator = fileComparator55;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator55.thenComparing(fileComparator63);
        fileEntryIterator45.entryComparator = fileComparator64;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.manifestFile;
        java.io.File file68 = explodedArchive66.manifestFile;
        java.io.File file69 = null;
        java.io.File file70 = explodedArchive66.getManifestFile(file69);
        fileEntryIterator45.root = file70;
        explodedArchive39.root = file70;
        java.util.Iterator<java.io.File> fileItor73 = fileEntryIterator36.listFiles(file70);
        fileEntry32.file = file70;
        fileEntryIterator27.current = file70;
        explodedArchive5.manifestFile = file70;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator77 = explodedArchive5.spliterator();
        java.io.File file78 = explodedArchive5.root;
        fileEntryIterator0.current = file78;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor73);
        org.junit.Assert.assertNotNull(entrySpliterator77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2186");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean4 = fileEntryIterator3.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        fileEntryIterator3.stack = fileItorQueue6;
        fileEntryIterator0.stack = fileItorQueue6;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean10 = fileEntryIterator9.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        fileEntryIterator9.stack = fileItorQueue12;
        boolean boolean14 = fileEntryIterator9.hasNext();
        boolean boolean15 = fileEntryIterator9.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry16.name = "exploded archive";
        java.lang.String str19 = fileEntry16.getName();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        fileEntryIterator23.recursive = true;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator33.thenComparing(fileComparator36);
        fileEntryIterator28.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator33.thenComparing(fileComparator41);
        fileEntryIterator23.entryComparator = fileComparator42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        fileEntryIterator23.root = file48;
        explodedArchive20.manifestFile = file48;
        java.util.jar.Manifest manifest51 = explodedArchive20.manifest;
        java.util.jar.Manifest manifest52 = explodedArchive20.manifest;
        java.util.jar.Manifest manifest53 = explodedArchive20.getManifest();
        java.util.jar.Manifest manifest54 = explodedArchive20.getManifest();
        java.io.File file55 = explodedArchive20.root;
        java.io.File file56 = explodedArchive20.manifestFile;
        java.io.File file57 = explodedArchive20.manifestFile;
        fileEntry16.file = file57;
        java.util.Iterator<java.io.File> fileItor59 = fileEntryIterator9.listFiles(file57);
        java.util.Iterator<java.io.File> fileItor60 = fileEntryIterator0.listFiles(file57);
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "exploded archive" + "'", str19, "exploded archive");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertNull(manifest53);
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor59);
        org.junit.Assert.assertNotNull(fileItor60);
    }

    @Test
    public void test2187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2187");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        boolean boolean3 = fileEntryIterator0.recursive;
        java.io.File file4 = fileEntryIterator0.root;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file8 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        boolean boolean11 = fileEntryIterator9.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        boolean boolean17 = explodedArchive12.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        fileEntryIterator18.root = file43;
        explodedArchive12.root = file43;
        java.util.Iterator<java.io.File> fileItor46 = fileEntryIterator9.listFiles(file43);
        boolean boolean47 = fileEntryIterator9.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean49 = explodedArchive48.recursive;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.util.jar.Manifest manifest51 = null;
        explodedArchive48.manifest = manifest51;
        java.io.File file53 = explodedArchive48.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        java.io.File file57 = null;
        java.io.File file58 = explodedArchive54.getManifestFile(file57);
        boolean boolean59 = explodedArchive54.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        fileEntryIterator60.recursive = true;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.util.Comparator<java.io.File> fileComparator73 = fileEntryIterator71.entryComparator;
        java.util.Comparator<java.io.File> fileComparator74 = fileComparator70.thenComparing(fileComparator73);
        fileEntryIterator65.entryComparator = fileComparator70;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator76 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue77 = fileEntryIterator76.stack;
        java.util.Comparator<java.io.File> fileComparator78 = fileEntryIterator76.entryComparator;
        java.util.Comparator<java.io.File> fileComparator79 = fileComparator70.thenComparing(fileComparator78);
        fileEntryIterator60.entryComparator = fileComparator79;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file82 = explodedArchive81.manifestFile;
        java.io.File file83 = explodedArchive81.manifestFile;
        java.io.File file84 = null;
        java.io.File file85 = explodedArchive81.getManifestFile(file84);
        fileEntryIterator60.root = file85;
        explodedArchive54.root = file85;
        explodedArchive54.recursive = false;
        java.util.jar.Manifest manifest90 = null;
        explodedArchive54.manifest = manifest90;
        java.lang.String str92 = explodedArchive54.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter93 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList94 = explodedArchive54.getNestedArchives(entryFilter93);
        java.io.File file95 = explodedArchive54.root;
        explodedArchive48.root = file95;
        fileEntryIterator9.root = file95;
        fileEntryIterator0.root = file95;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue99 = fileEntryIterator0.stack;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileItorQueue77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str92 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str92, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList94);
        org.junit.Assert.assertNotNull(file95);
        org.junit.Assert.assertEquals(file95.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file95.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue99);
    }

    @Test
    public void test2188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2188");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getAuthority();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URLStreamHandler uRLStreamHandler7 = null;
        java.net.URL uRL8 = new java.net.URL(uRL3, "file://exploded archive:0", uRLStreamHandler7);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream9 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL8.toString(), "file://exploded archive:0");
    }

    @Test
    public void test2189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2189");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.util.Comparator<java.io.File> fileComparator9 = fileComparator5.thenComparing(fileComparator8);
        fileEntryIterator0.entryComparator = fileComparator5;
        boolean boolean11 = fileEntryIterator0.recursive;
        java.io.File file12 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.io.File file15 = fileEntryIterator13.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        fileEntryIterator13.entryComparator = fileComparator18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        fileEntryIterator13.root = file23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean27 = fileEntryIterator26.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean29 = explodedArchive28.recursive;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive28.manifest = manifest31;
        java.io.File file33 = explodedArchive28.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.io.File file37 = fileEntryIterator34.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator34.current = file42;
        explodedArchive28.root = file42;
        fileEntryIterator26.root = file42;
        java.util.Iterator<java.io.File> fileItor46 = fileEntryIterator13.listFiles(file42);
        fileEntryIterator13.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator13.stack;
        fileEntryIterator0.stack = fileItorQueue49;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor46);
        org.junit.Assert.assertNotNull(fileItorQueue49);
    }

    @Test
    public void test2190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2190");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file7;
        explodedArchive0.recursive = false;
        java.io.File file11 = explodedArchive0.root;
        java.net.URL uRL12 = explodedArchive0.getUrl();
        java.lang.String str13 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.Entry entry14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive15 = explodedArchive0.getNestedArchive(entry14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL12);
// flaky:         org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2191");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        java.lang.String str7 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
    }

    @Test
    public void test2192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2192");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "", 52, "file://hi!:100hi!", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2193");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", 0, "", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2194");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest32 = explodedArchive0.manifest;
        java.lang.String str33 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "exploded archive" + "'", str33, "exploded archive");
    }

    @Test
    public void test2195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2195");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.net.URL uRL9 = new java.net.URL(uRL3, "exploded archive");
        java.lang.String str10 = uRL3.getAuthority();
        java.lang.String str11 = uRL3.toExternalForm();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        java.lang.String str20 = uRL15.getAuthority();
        java.net.URL uRL22 = new java.net.URL(uRL15, "");
        boolean boolean23 = uRL3.sameFile(uRL22);
        java.lang.String str24 = uRL3.getAuthority();
        java.lang.String str25 = uRL3.getUserInfo();
        java.net.URI uRI26 = uRL3.toURI();
        java.net.URLConnection uRLConnection27 = uRL3.openConnection();
        java.lang.String str28 = uRL3.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(uRI26);
        org.junit.Assert.assertNotNull(uRLConnection27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str28, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2196");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.io.File file5 = explodedArchive0.manifestFile;
        boolean boolean6 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file8 = fileEntry7.getFile();
        java.io.File file9 = fileEntry7.file;
        java.io.File file10 = null;
        fileEntry7.file = file10;
        java.lang.String str12 = fileEntry7.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file14 = fileEntryIterator13.current;
        java.io.File file15 = null;
        fileEntryIterator13.current = file15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean18 = explodedArchive17.recursive;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.util.jar.Manifest manifest20 = null;
        explodedArchive17.manifest = manifest20;
        java.io.File file22 = explodedArchive17.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.io.File file26 = fileEntryIterator23.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator23.current = file31;
        explodedArchive17.root = file31;
        fileEntryIterator13.root = file31;
        fileEntry7.file = file31;
        java.io.File file36 = fileEntry7.getFile();
        java.io.File file37 = fileEntry7.file;
        explodedArchive0.manifestFile = file37;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2197");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.net.URL uRL6 = new java.net.URL(uRL3, "file");
        java.net.URL uRL8 = new java.net.URL(uRL6, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        java.lang.String str9 = uRL6.getQuery();
        java.lang.String str10 = uRL6.getProtocol();
        java.lang.String str11 = uRL6.getFile();
        java.net.URI uRI12 = uRL6.toURI();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file" + "'", str10, "file");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertNotNull(uRI12);
    }

    @Test
    public void test2198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2198");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getRef();
        java.lang.String str8 = uRL3.getQuery();
        java.lang.String str9 = uRL3.toExternalForm();
        java.lang.String str10 = uRL3.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream11 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file" + "'", str10, "file");
    }

    @Test
    public void test2199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2199");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        java.io.File file11 = explodedArchive0.getManifestFile(file9);
        java.util.jar.Manifest manifest12 = null;
        explodedArchive0.manifest = manifest12;
        java.io.File file14 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean16 = explodedArchive15.recursive;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive15.manifest = manifest18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file21 = fileEntryIterator20.current;
        java.io.File file22 = fileEntryIterator20.poll();
        java.io.File file23 = fileEntryIterator20.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator29.thenComparing(fileComparator32);
        fileEntryIterator24.entryComparator = fileComparator29;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator29.thenComparing((java.util.Comparator<java.io.File>) entryComparator35);
        fileEntryIterator20.entryComparator = entryComparator35;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        java.util.Comparator<java.io.File> fileComparator59 = entryComparator35.thenComparing(fileComparator57);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file61 = explodedArchive60.manifestFile;
        java.io.File file62 = explodedArchive60.manifestFile;
        java.io.File file63 = null;
        java.io.File file64 = explodedArchive60.getManifestFile(file63);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean66 = fileEntryIterator65.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean68 = explodedArchive67.recursive;
        java.io.File file69 = explodedArchive67.manifestFile;
        java.util.jar.Manifest manifest70 = null;
        explodedArchive67.manifest = manifest70;
        java.io.File file72 = explodedArchive67.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        java.io.File file76 = fileEntryIterator73.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file78 = explodedArchive77.manifestFile;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.io.File file80 = null;
        java.io.File file81 = explodedArchive77.getManifestFile(file80);
        fileEntryIterator73.current = file81;
        explodedArchive67.root = file81;
        fileEntryIterator65.root = file81;
        int int85 = entryComparator35.compare(file64, file81);
        java.io.File file86 = explodedArchive15.getManifestFile(file81);
        explodedArchive0.manifestFile = file86;
        java.util.jar.Manifest manifest88 = explodedArchive0.getManifest();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest88);
    }

    @Test
    public void test2200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2200");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        boolean boolean28 = explodedArchive26.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        explodedArchive26.root = file33;
        fileEntryIterator0.root = file33;
        boolean boolean36 = fileEntryIterator0.recursive;
        java.io.File file37 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.io.File file42 = fileEntryIterator38.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator38.entryComparator;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator38.stack;
        fileEntryIterator0.stack = fileItorQueue45;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry47 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue45);
    }

    @Test
    public void test2201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2201");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getFile();
        java.lang.String str10 = uRL3.getFile();
        java.lang.String str11 = uRL3.getProtocol();
        java.lang.String str12 = uRL3.getProtocol();
        java.lang.String str13 = uRL3.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file15 = fileEntryIterator14.current;
        java.io.File file16 = fileEntryIterator14.poll();
        java.io.File file17 = fileEntryIterator14.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator14.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator19.stack;
        fileEntryIterator14.stack = fileItorQueue22;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        boolean boolean26 = fileEntryIterator24.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        boolean boolean32 = explodedArchive27.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        fileEntryIterator33.recursive = true;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator44.entryComparator;
        java.util.Comparator<java.io.File> fileComparator47 = fileComparator43.thenComparing(fileComparator46);
        fileEntryIterator38.entryComparator = fileComparator43;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator43.thenComparing(fileComparator51);
        fileEntryIterator33.entryComparator = fileComparator52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        java.io.File file57 = null;
        java.io.File file58 = explodedArchive54.getManifestFile(file57);
        fileEntryIterator33.root = file58;
        explodedArchive27.root = file58;
        java.util.Iterator<java.io.File> fileItor61 = fileEntryIterator24.listFiles(file58);
        java.io.File file62 = fileEntryIterator24.root;
        java.io.File file63 = fileEntryIterator24.current;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator24.stack;
        fileEntryIterator14.stack = fileItorQueue64;
        java.io.File file66 = fileEntryIterator14.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean68 = fileEntryIterator67.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        fileEntryIterator67.stack = fileItorQueue70;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator67.entryComparator;
        fileEntryIterator14.entryComparator = fileComparator72;
        boolean boolean74 = uRL3.equals((java.lang.Object) fileEntryIterator14);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file" + "'", str11, "file");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file" + "'", str12, "file");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor61);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2202");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        java.lang.String str22 = uRL9.toExternalForm();
        java.net.URL uRL24 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str25 = uRL24.getRef();
        java.lang.String str26 = uRL24.getFile();
        java.net.URL uRL28 = new java.net.URL(uRL24, "exploded archive");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = uRL24.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str22, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str26, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL28.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
    }

    @Test
    public void test2203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2203");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.io.File file18 = fileEntryIterator0.root;
        boolean boolean19 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        explodedArchive20.recursive = true;
        java.lang.String str24 = explodedArchive20.toString();
        boolean boolean25 = explodedArchive20.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = fileEntryIterator26.poll();
        java.io.File file29 = fileEntryIterator26.poll();
        java.io.File file30 = fileEntryIterator26.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.io.File file33 = fileEntryIterator31.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator31.root = file37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        java.util.Iterator<java.io.File> fileItor45 = fileEntryIterator31.listFiles(file44);
        fileEntryIterator26.root = file44;
        explodedArchive20.manifestFile = file44;
        fileEntryIterator0.root = file44;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator50 = entryComparator49.reversed();
        fileEntryIterator0.entryComparator = entryComparator49;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "exploded archive" + "'", str24, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor45);
        org.junit.Assert.assertNotNull(fileComparator50);
    }

    @Test
    public void test2204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2204");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "";
        java.io.File file5 = fileEntry0.file;
        java.io.File file6 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file8 = fileEntryIterator7.current;
        java.io.File file9 = fileEntryIterator7.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file11 = fileEntryIterator10.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator17.thenComparing(fileComparator25);
        fileEntryIterator10.entryComparator = fileComparator26;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator10.stack;
        fileEntryIterator7.stack = fileItorQueue28;
        boolean boolean30 = fileEntryIterator7.recursive;
        java.io.File file31 = null;
        fileEntryIterator7.root = file31;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator7.stack;
        java.io.File file34 = fileEntryIterator7.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator35.stack;
        boolean boolean39 = fileEntryIterator35.recursive;
        fileEntryIterator35.recursive = false;
        boolean boolean42 = fileEntryIterator35.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        fileEntryIterator43.current = file48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.io.File file53 = fileEntryIterator51.current;
        java.util.ArrayDeque<java.util.Iterator<java.io.File>> fileItorQueue54 = new java.util.ArrayDeque<java.util.Iterator<java.io.File>>();
        fileEntryIterator51.stack = fileItorQueue54;
        boolean boolean56 = fileEntryIterator51.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator51.stack;
        fileEntryIterator43.stack = fileItorQueue57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.lang.String str62 = explodedArchive59.toString();
        java.lang.String str63 = explodedArchive59.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean65 = fileEntryIterator64.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean67 = explodedArchive66.recursive;
        java.io.File file68 = explodedArchive66.manifestFile;
        java.util.jar.Manifest manifest69 = null;
        explodedArchive66.manifest = manifest69;
        java.io.File file71 = explodedArchive66.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        java.io.File file75 = fileEntryIterator72.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file77 = explodedArchive76.manifestFile;
        java.io.File file78 = explodedArchive76.manifestFile;
        java.io.File file79 = null;
        java.io.File file80 = explodedArchive76.getManifestFile(file79);
        fileEntryIterator72.current = file80;
        explodedArchive66.root = file80;
        fileEntryIterator64.root = file80;
        java.io.File file84 = explodedArchive59.getManifestFile(file80);
        java.util.Iterator<java.io.File> fileItor85 = fileEntryIterator43.listFiles(file84);
        java.util.Iterator<java.io.File> fileItor86 = fileEntryIterator35.listFiles(file84);
        fileEntryIterator7.root = file84;
        fileEntry0.file = file84;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "exploded archive" + "'", str62, "exploded archive");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "exploded archive" + "'", str63, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor85);
        org.junit.Assert.assertNotNull(fileItor86);
    }

    @Test
    public void test2205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2205");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getRef();
        int int7 = uRL3.getDefaultPort();
        java.net.URL uRL9 = new java.net.URL(uRL3, "");
        java.net.URL uRL10 = null;
        java.net.URLStreamHandler uRLStreamHandler12 = null;
        java.net.URL uRL13 = new java.net.URL(uRL10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler12);
        java.lang.String str14 = uRL13.getHost();
        java.lang.String str15 = uRL13.getAuthority();
        java.lang.String str16 = uRL13.getHost();
        java.lang.String str17 = uRL13.getRef();
        java.net.URLConnection uRLConnection18 = uRL13.openConnection();
        java.lang.Class<?> wildcardClass19 = uRLConnection18.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        fileEntryIterator20.recursive = true;
        boolean boolean24 = fileEntryIterator20.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file26 = fileEntryIterator25.current;
        java.io.File file27 = fileEntryIterator25.poll();
        java.io.File file28 = fileEntryIterator25.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator25.stack;
        java.io.File file30 = fileEntryIterator25.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.io.File file33 = fileEntryIterator31.current;
        java.io.File file34 = fileEntryIterator31.current;
        fileEntryIterator31.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        fileEntryIterator31.root = file41;
        fileEntryIterator25.root = file41;
        java.io.File file44 = fileEntryIterator25.root;
        fileEntryIterator20.current = file44;
        java.lang.Class<?> wildcardClass46 = file44.getClass();
        java.lang.Class[] classArray47 = new java.lang.Class[] { wildcardClass19, wildcardClass46 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = uRL3.getContent(classArray47);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(uRLConnection18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(classArray47);
    }

    @Test
    public void test2206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2206");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        boolean boolean14 = uRL3.sameFile(uRL9);
        java.lang.String str15 = uRL3.getQuery();
        java.net.URLStreamHandler uRLStreamHandler17 = null;
        java.net.URL uRL18 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler17);
        int int19 = uRL18.getPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals(uRL18.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test2207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2207");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "file://exploded archive:0", (-1), "exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2208");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.io.File file22 = explodedArchive0.root;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor23 = explodedArchive0.iterator();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive0.getNestedArchives(entryFilter24);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor23);
        org.junit.Assert.assertNotNull(archiveList25);
    }

    @Test
    public void test2209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2209");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.net.URL uRL6 = new java.net.URL(uRL3, "file");
        java.lang.String str7 = uRL3.getFile();
        java.lang.String str8 = uRL3.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2210");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file3 = fileEntry2.getFile();
        java.io.File file4 = fileEntry2.file;
        java.io.File file5 = null;
        fileEntry2.file = file5;
        java.lang.String str7 = fileEntry2.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        boolean boolean10 = fileEntryIterator8.hasNext();
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator11.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean27 = fileEntryIterator26.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean29 = explodedArchive28.recursive;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive28.manifest = manifest31;
        java.io.File file33 = explodedArchive28.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.io.File file37 = fileEntryIterator34.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator34.current = file42;
        explodedArchive28.root = file42;
        fileEntryIterator26.root = file42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        boolean boolean51 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        fileEntryIterator52.recursive = true;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator52.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        fileEntryIterator52.root = file77;
        explodedArchive46.root = file77;
        int int80 = entryComparator23.compare(file42, file77);
        fileEntry2.file = file77;
        explodedArchive0.manifestFile = file77;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor83 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test2211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2211");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getRef();
        java.lang.String str7 = uRL3.getHost();
        java.lang.String str8 = uRL3.getUserInfo();
        int int9 = uRL3.getPort();
        java.lang.String str10 = uRL3.getHost();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test2212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2212");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        explodedArchive0.recursive = true;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor24 = explodedArchive0.iterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator25 = explodedArchive0.spliterator();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file27 = fileEntry26.getFile();
        java.lang.String str28 = fileEntry26.name;
        java.lang.String str29 = fileEntry26.getName();
        java.lang.String str30 = fileEntry26.getName();
        java.lang.String str31 = fileEntry26.name;
        java.lang.String str32 = fileEntry26.getName();
        java.lang.String str33 = fileEntry26.name;
        java.io.File file34 = fileEntry26.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file41 = fileEntry40.getFile();
        java.lang.String str42 = fileEntry40.name;
        java.io.File file43 = fileEntry40.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        boolean boolean46 = fileEntryIterator44.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.manifestFile;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.io.File file50 = null;
        java.io.File file51 = explodedArchive47.getManifestFile(file50);
        boolean boolean52 = explodedArchive47.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        fileEntryIterator53.recursive = true;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator63.thenComparing(fileComparator66);
        fileEntryIterator58.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        java.util.Comparator<java.io.File> fileComparator72 = fileComparator63.thenComparing(fileComparator71);
        fileEntryIterator53.entryComparator = fileComparator72;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file75 = explodedArchive74.manifestFile;
        java.io.File file76 = explodedArchive74.manifestFile;
        java.io.File file77 = null;
        java.io.File file78 = explodedArchive74.getManifestFile(file77);
        fileEntryIterator53.root = file78;
        explodedArchive47.root = file78;
        java.util.Iterator<java.io.File> fileItor81 = fileEntryIterator44.listFiles(file78);
        fileEntry40.file = file78;
        explodedArchive35.manifestFile = file78;
        fileEntry26.file = file78;
        java.io.File file85 = fileEntry26.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive86 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor24);
        org.junit.Assert.assertNotNull(entrySpliterator25);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor81);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2213");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator39 = explodedArchive0.spliterator();
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor40 = explodedArchive0.iterator();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive0.getNestedArchives(entryFilter41);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file44 = fileEntry43.getFile();
        java.lang.String str45 = fileEntry43.name;
        java.io.File file46 = null;
        fileEntry43.file = file46;
        java.lang.String str48 = fileEntry43.name;
        fileEntry43.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive";
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive51 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator39);
        org.junit.Assert.assertNotNull(entryItor40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test2214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2214");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator39 = explodedArchive0.spliterator();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive0.getNestedArchives(entryFilter40);
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor42 = explodedArchive0.iterator();
        java.net.URL uRL43 = explodedArchive0.getUrl();
        java.util.jar.Manifest manifest44 = null;
        explodedArchive0.manifest = manifest44;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(entryItor42);
        org.junit.Assert.assertNotNull(uRL43);
// flaky:         org.junit.Assert.assertEquals(uRL43.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2215");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean7 = fileEntryIterator6.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        fileEntryIterator6.stack = fileItorQueue9;
        boolean boolean11 = fileEntryIterator6.hasNext();
        fileEntryIterator6.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file15 = fileEntry14.getFile();
        java.lang.String str16 = fileEntry14.name;
        java.io.File file17 = fileEntry14.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        boolean boolean20 = fileEntryIterator18.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.manifestFile;
        java.io.File file23 = explodedArchive21.manifestFile;
        java.io.File file24 = null;
        java.io.File file25 = explodedArchive21.getManifestFile(file24);
        boolean boolean26 = explodedArchive21.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        fileEntryIterator27.recursive = true;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator37.thenComparing(fileComparator40);
        fileEntryIterator32.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator37.thenComparing(fileComparator45);
        fileEntryIterator27.entryComparator = fileComparator46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        fileEntryIterator27.root = file52;
        explodedArchive21.root = file52;
        java.util.Iterator<java.io.File> fileItor55 = fileEntryIterator18.listFiles(file52);
        fileEntry14.file = file52;
        fileEntryIterator6.current = file52;
        explodedArchive0.manifestFile = file52;
        boolean boolean59 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive0.getNestedArchives(entryFilter60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test2216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2216");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.lang.String str71 = uRL69.getHost();
        java.lang.String str72 = uRL69.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream73 = uRL69.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "file" + "'", str72, "file");
    }

    @Test
    public void test2217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2217");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        fileEntryIterator0.recursive = true;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test2218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2218");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        java.net.URL uRL84 = null;
        java.net.URLStreamHandler uRLStreamHandler86 = null;
        java.net.URL uRL87 = new java.net.URL(uRL84, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler86);
        java.lang.String str88 = uRL87.getHost();
        java.lang.String str89 = uRL87.getAuthority();
        java.lang.String str90 = uRL87.getQuery();
        int int91 = uRL87.getDefaultPort();
        int int92 = uRL87.getPort();
        boolean boolean93 = uRL82.sameFile(uRL87);
        int int94 = uRL87.getDefaultPort();
        int int95 = uRL87.getPort();
        java.lang.String str96 = uRL87.getProtocol();
        java.lang.String str97 = uRL87.toExternalForm();
        java.lang.String str98 = uRL87.getProtocol();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals(uRL87.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "file" + "'", str96, "file");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str97, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "file" + "'", str98, "file");
    }

    @Test
    public void test2219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2219");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        boolean boolean4 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = true;
        java.io.File file7 = fileEntryIterator0.poll();
        java.io.File file8 = fileEntryIterator0.current;
        boolean boolean9 = fileEntryIterator0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test2220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2220");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        java.net.URLConnection uRLConnection15 = uRL11.openConnection();
        java.net.URL uRL17 = new java.net.URL(uRL11, "file://exploded archive");
        java.lang.String str18 = uRL11.getRef();
        java.net.URL uRL20 = new java.net.URL(uRL11, "exploded archive");
        java.lang.Class[] classArray21 = new java.lang.Class[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = uRL11.getContent(classArray21);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertNotNull(uRLConnection15);
        org.junit.Assert.assertEquals(uRL17.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNotNull(classArray21);
    }

    @Test
    public void test2221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2221");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = fileEntry0.file;
        java.lang.String str4 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean6 = explodedArchive5.recursive;
        boolean boolean7 = explodedArchive5.recursive;
        java.io.File file8 = explodedArchive5.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file10 = fileEntry9.getFile();
        java.io.File file11 = fileEntry9.file;
        java.io.File file12 = null;
        fileEntry9.file = file12;
        java.lang.String str14 = fileEntry9.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        boolean boolean17 = fileEntryIterator15.hasNext();
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator24.thenComparing((java.util.Comparator<java.io.File>) entryComparator30);
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator18.thenComparing((java.util.Comparator<java.io.File>) entryComparator30);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean34 = fileEntryIterator33.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean36 = explodedArchive35.recursive;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.util.jar.Manifest manifest38 = null;
        explodedArchive35.manifest = manifest38;
        java.io.File file40 = explodedArchive35.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.io.File file44 = fileEntryIterator41.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        fileEntryIterator41.current = file49;
        explodedArchive35.root = file49;
        fileEntryIterator33.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file54 = explodedArchive53.manifestFile;
        java.io.File file55 = explodedArchive53.manifestFile;
        java.io.File file56 = null;
        java.io.File file57 = explodedArchive53.getManifestFile(file56);
        boolean boolean58 = explodedArchive53.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        fileEntryIterator59.recursive = true;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator70.entryComparator;
        java.util.Comparator<java.io.File> fileComparator73 = fileComparator69.thenComparing(fileComparator72);
        fileEntryIterator64.entryComparator = fileComparator69;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator75.stack;
        java.util.Comparator<java.io.File> fileComparator77 = fileEntryIterator75.entryComparator;
        java.util.Comparator<java.io.File> fileComparator78 = fileComparator69.thenComparing(fileComparator77);
        fileEntryIterator59.entryComparator = fileComparator78;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file81 = explodedArchive80.manifestFile;
        java.io.File file82 = explodedArchive80.manifestFile;
        java.io.File file83 = null;
        java.io.File file84 = explodedArchive80.getManifestFile(file83);
        fileEntryIterator59.root = file84;
        explodedArchive53.root = file84;
        int int87 = entryComparator30.compare(file49, file84);
        fileEntry9.file = file84;
        java.io.File file89 = explodedArchive5.getManifestFile(file84);
        fileEntry0.file = file89;
        boolean boolean91 = fileEntry0.isDirectory();
        java.io.File file92 = fileEntry0.getFile();
        fileEntry0.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2222");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.lang.String str71 = uRL69.getHost();
        java.net.URL uRL73 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str74 = uRL69.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator75.stack;
        java.util.Comparator<java.io.File> fileComparator77 = fileEntryIterator75.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator78.stack;
        java.util.Comparator<java.io.File> fileComparator80 = fileEntryIterator78.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator81 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue82 = fileEntryIterator81.stack;
        java.util.Comparator<java.io.File> fileComparator83 = fileEntryIterator81.entryComparator;
        java.util.Comparator<java.io.File> fileComparator84 = fileComparator80.thenComparing(fileComparator83);
        fileEntryIterator75.entryComparator = fileComparator80;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator86 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator87 = fileComparator80.thenComparing((java.util.Comparator<java.io.File>) entryComparator86);
        java.util.Comparator<java.io.File> fileComparator88 = entryComparator86.reversed();
        java.util.Comparator<java.io.File> fileComparator89 = fileComparator88.reversed();
        boolean boolean90 = uRL69.equals((java.lang.Object) fileComparator89);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals(uRL73.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str74, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNotNull(fileItorQueue82);
        org.junit.Assert.assertNotNull(fileComparator83);
        org.junit.Assert.assertNotNull(fileComparator84);
        org.junit.Assert.assertNotNull(fileComparator87);
        org.junit.Assert.assertNotNull(fileComparator88);
        org.junit.Assert.assertNotNull(fileComparator89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test2223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2223");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        int int12 = uRL3.getPort();
        java.lang.String str13 = uRL3.getPath();
        java.lang.String str14 = uRL3.getUserInfo();
        java.net.Proxy proxy15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection16 = uRL3.openConnection(proxy15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str13, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test2224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2224");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "hi!", 0, "file://hi!:100hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2225");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file://exploded archive", "file://hi!:100hi!", "file://exploded archive:0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2226");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        boolean boolean3 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator9.thenComparing(fileComparator17);
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator17.reversed();
        fileEntryIterator0.entryComparator = fileComparator17;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry21 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
    }

    @Test
    public void test2227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2227");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        boolean boolean5 = fileEntryIterator0.hasNext();
        boolean boolean6 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator0.entryComparator;
        java.io.File file8 = fileEntryIterator0.root;
        java.io.File file9 = fileEntryIterator0.root;
        boolean boolean10 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test2228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2228");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        boolean boolean8 = explodedArchive3.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator9.recursive = true;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator9.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator9.root = file34;
        explodedArchive3.root = file34;
        java.util.Iterator<java.io.File> fileItor37 = fileEntryIterator0.listFiles(file34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        boolean boolean40 = fileEntryIterator38.hasNext();
        boolean boolean41 = fileEntryIterator38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator47.thenComparing(fileComparator50);
        fileEntryIterator42.entryComparator = fileComparator47;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator47.thenComparing(fileComparator55);
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator55.reversed();
        fileEntryIterator38.entryComparator = fileComparator55;
        fileEntryIterator0.entryComparator = fileComparator55;
        fileEntryIterator0.recursive = false;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
    }

    @Test
    public void test2229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2229");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.lang.String str8 = uRL3.getFile();
        java.net.URL uRL10 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str11 = uRL10.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = uRL10.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test2230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2230");
        java.net.URL uRL1 = new java.net.URL("file://exploded archive");
        java.lang.String str2 = uRL1.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL(uRL1, "", uRLStreamHandler4);
        java.lang.String str6 = uRL1.getQuery();
        java.net.URL uRL8 = new java.net.URL(uRL1, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.lang.String str9 = uRL1.getRef();
        java.lang.String str10 = uRL1.getUserInfo();
        org.junit.Assert.assertEquals(uRL1.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "file" + "'", str2, "file");
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test2231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2231");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getQuery();
        int int10 = uRL3.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream11 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test2232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2232");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file3 = fileEntry2.getFile();
        java.io.File file4 = fileEntry2.file;
        java.io.File file5 = null;
        fileEntry2.file = file5;
        java.lang.String str7 = fileEntry2.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        boolean boolean10 = fileEntryIterator8.hasNext();
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator11.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean27 = fileEntryIterator26.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean29 = explodedArchive28.recursive;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive28.manifest = manifest31;
        java.io.File file33 = explodedArchive28.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.io.File file37 = fileEntryIterator34.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator34.current = file42;
        explodedArchive28.root = file42;
        fileEntryIterator26.root = file42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        boolean boolean51 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        fileEntryIterator52.recursive = true;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator52.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        fileEntryIterator52.root = file77;
        explodedArchive46.root = file77;
        int int80 = entryComparator23.compare(file42, file77);
        fileEntry2.file = file77;
        explodedArchive0.manifestFile = file77;
        java.util.jar.Manifest manifest83 = null;
        explodedArchive0.manifest = manifest83;
        java.io.File file85 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest86 = explodedArchive0.manifest;
        java.io.File file87 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor88 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest86);
        org.junit.Assert.assertNull(file87);
    }

    @Test
    public void test2233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2233");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.io.File file5 = fileEntry0.file;
        java.lang.String str6 = fileEntry0.name;
        java.io.File file7 = fileEntry0.file;
        java.io.File file8 = fileEntry0.file;
        java.lang.String str9 = fileEntry0.name;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = fileEntry0.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2234");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URL uRL34 = null;
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler36);
        java.lang.String str38 = uRL37.getHost();
        java.lang.String str39 = uRL37.getAuthority();
        java.lang.String str40 = uRL37.getAuthority();
        java.lang.String str41 = uRL37.getFile();
        int int42 = uRL37.getPort();
        java.lang.String str43 = uRL37.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL37, "hi!");
        boolean boolean46 = uRL3.sameFile(uRL45);
        java.lang.String str47 = uRL45.getPath();
        java.lang.String str48 = uRL45.getProtocol();
        java.net.Proxy proxy49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection50 = uRL45.openConnection(proxy49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str41, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str47, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "file" + "'", str48, "file");
    }

    @Test
    public void test2235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2235");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", (int) (byte) -1, "", uRLStreamHandler4);
        int int6 = uRL5.getDefaultPort();
        java.lang.String str7 = uRL5.getAuthority();
        java.lang.String str8 = uRL5.getQuery();
        java.lang.String str9 = uRL5.getProtocol();
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "file" + "'", str9, "file");
    }

    @Test
    public void test2236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2236");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.manifestFile;
        java.io.File file6 = explodedArchive4.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator7.recursive = true;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator17.thenComparing(fileComparator25);
        fileEntryIterator7.entryComparator = fileComparator26;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.manifestFile;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.io.File file31 = null;
        java.io.File file32 = explodedArchive28.getManifestFile(file31);
        fileEntryIterator7.root = file32;
        explodedArchive4.manifestFile = file32;
        fileEntryIterator0.current = file32;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2237");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.net.URLStreamHandler uRLStreamHandler11 = null;
        java.net.URL uRL12 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler11);
        java.net.URL uRL13 = null;
        java.net.URLStreamHandler uRLStreamHandler15 = null;
        java.net.URL uRL16 = new java.net.URL(uRL13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler15);
        java.lang.String str17 = uRL16.getHost();
        java.lang.String str18 = uRL16.getAuthority();
        java.lang.String str19 = uRL16.toExternalForm();
        java.net.URLConnection uRLConnection20 = uRL16.openConnection();
        java.lang.String str21 = uRL16.getFile();
        boolean boolean22 = uRL3.sameFile(uRL16);
        java.lang.String str23 = uRL16.getQuery();
        java.lang.String str24 = uRL16.getPath();
        java.lang.String str25 = uRL16.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL16.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str21, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str24, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str25, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2238");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator38 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest39 = null;
        explodedArchive0.manifest = manifest39;
        java.net.URL uRL41 = explodedArchive0.getUrl();
        java.net.URL uRL42 = explodedArchive0.getUrl();
        java.lang.Class<?> wildcardClass43 = explodedArchive0.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(entrySpliterator38);
        org.junit.Assert.assertNotNull(uRL41);
// flaky:         org.junit.Assert.assertEquals(uRL41.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL42);
// flaky:         org.junit.Assert.assertEquals(uRL42.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2239");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.util.Comparator<java.io.File> fileComparator12 = fileComparator8.thenComparing(fileComparator11);
        fileEntryIterator3.entryComparator = fileComparator8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator15 = fileComparator8.thenComparing((java.util.Comparator<java.io.File>) entryComparator14);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator18.thenComparing(fileComparator24);
        java.util.Comparator<java.io.File> fileComparator27 = entryComparator14.thenComparing(fileComparator26);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file29 = fileEntryIterator28.current;
        java.io.File file30 = null;
        fileEntryIterator28.current = file30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean33 = explodedArchive32.recursive;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.util.jar.Manifest manifest35 = null;
        explodedArchive32.manifest = manifest35;
        java.io.File file37 = explodedArchive32.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.io.File file41 = fileEntryIterator38.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator38.current = file46;
        explodedArchive32.root = file46;
        fileEntryIterator28.root = file46;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        fileEntryIterator57.recursive = true;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator67.thenComparing(fileComparator70);
        fileEntryIterator62.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        java.util.Comparator<java.io.File> fileComparator76 = fileComparator67.thenComparing(fileComparator75);
        fileEntryIterator57.entryComparator = fileComparator76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file79 = explodedArchive78.manifestFile;
        java.io.File file80 = explodedArchive78.manifestFile;
        java.io.File file81 = null;
        java.io.File file82 = explodedArchive78.getManifestFile(file81);
        fileEntryIterator57.root = file82;
        explodedArchive54.manifestFile = file82;
        fileEntryIterator50.current = file82;
        int int86 = entryComparator14.compare(file46, file82);
        fileEntry0.file = file82;
        java.io.File file88 = fileEntry0.file;
        java.io.File file89 = fileEntry0.getFile();
        fileEntry0.name = "file://exploded archive";
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2240");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean12 = fileEntryIterator11.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean14 = explodedArchive13.recursive;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.util.jar.Manifest manifest16 = null;
        explodedArchive13.manifest = manifest16;
        java.io.File file18 = explodedArchive13.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.io.File file22 = fileEntryIterator19.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.io.File file26 = null;
        java.io.File file27 = explodedArchive23.getManifestFile(file26);
        fileEntryIterator19.current = file27;
        explodedArchive13.root = file27;
        fileEntryIterator11.root = file27;
        explodedArchive10.root = file27;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator32 = explodedArchive10.spliterator();
        java.io.File file33 = explodedArchive10.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str35 = fileEntry34.name;
        java.io.File file36 = fileEntry34.file;
        fileEntry34.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        boolean boolean41 = fileEntryIterator39.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        boolean boolean47 = explodedArchive42.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        fileEntryIterator48.recursive = true;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator58.thenComparing(fileComparator61);
        fileEntryIterator53.entryComparator = fileComparator58;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator58.thenComparing(fileComparator66);
        fileEntryIterator48.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file70 = explodedArchive69.manifestFile;
        java.io.File file71 = explodedArchive69.manifestFile;
        java.io.File file72 = null;
        java.io.File file73 = explodedArchive69.getManifestFile(file72);
        fileEntryIterator48.root = file73;
        explodedArchive42.root = file73;
        java.util.Iterator<java.io.File> fileItor76 = fileEntryIterator39.listFiles(file73);
        fileEntry34.file = file73;
        explodedArchive10.root = file73;
        java.net.URL uRL79 = explodedArchive10.getUrl();
        java.lang.String str80 = uRL79.getUserInfo();
        java.net.URL uRL81 = null;
        java.net.URLStreamHandler uRLStreamHandler83 = null;
        java.net.URL uRL84 = new java.net.URL(uRL81, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler83);
        java.lang.String str85 = uRL84.getHost();
        java.lang.String str86 = uRL84.getAuthority();
        java.lang.String str87 = uRL84.getAuthority();
        java.lang.String str88 = uRL84.getFile();
        int int89 = uRL84.getPort();
        java.lang.String str90 = uRL84.getRef();
        java.net.URL uRL92 = new java.net.URL(uRL84, "hi!");
        boolean boolean93 = uRL79.sameFile(uRL92);
        int int94 = uRL92.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler96 = null;
        java.net.URL uRL97 = new java.net.URL(uRL92, "file://exploded archive", uRLStreamHandler96);
        boolean boolean98 = uRL3.sameFile(uRL92);
        java.lang.String str99 = uRL92.getUserInfo();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor76);
        org.junit.Assert.assertNotNull(uRL79);
// flaky:         org.junit.Assert.assertEquals(uRL79.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL84.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str88, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertEquals(uRL92.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertEquals(uRL97.toString(), "file://exploded archive");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test2241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2241");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file://exploded archive", "hi!", (int) (short) 1, "file://hi!:100hi!", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2242");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        int int9 = uRL3.getPort();
        java.lang.String str10 = uRL3.getPath();
        java.net.URLConnection uRLConnection11 = uRL3.openConnection();
        java.net.URI uRI12 = uRL3.toURI();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection11);
        org.junit.Assert.assertNotNull(uRI12);
    }

    @Test
    public void test2243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2243");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        java.io.File file6 = null;
        explodedArchive0.root = file6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        java.io.File file10 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator11 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test2244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2244");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        boolean boolean3 = fileEntryIterator0.recursive;
        java.io.File file4 = fileEntryIterator0.root;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file8 = fileEntryIterator0.root;
        java.io.File file9 = fileEntryIterator0.root;
        boolean boolean10 = fileEntryIterator0.hasNext();
        java.io.File file11 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test2245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2245");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        fileEntryIterator5.root = file11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        java.util.Iterator<java.io.File> fileItor19 = fileEntryIterator5.listFiles(file18);
        fileEntryIterator0.root = file18;
        fileEntryIterator0.recursive = false;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry23 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor19);
    }

    @Test
    public void test2246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2246");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2247");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getHost();
        java.lang.String str10 = uRL3.getProtocol();
        java.lang.String str11 = uRL3.getHost();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file" + "'", str10, "file");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test2248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2248");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive0.manifest = manifest31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest35 = explodedArchive0.manifest;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator36 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest35);
    }

    @Test
    public void test2249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2249");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file7;
        explodedArchive0.recursive = false;
        java.io.File file11 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.net.URL uRL14 = explodedArchive0.getUrl();
        java.net.Proxy proxy15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection16 = uRL14.openConnection(proxy15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL14);
// flaky:         org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2250");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test2251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2251");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.util.Comparator<java.io.File> fileComparator12 = fileComparator8.thenComparing(fileComparator11);
        fileEntryIterator3.entryComparator = fileComparator8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator15 = fileComparator8.thenComparing((java.util.Comparator<java.io.File>) entryComparator14);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator18.thenComparing(fileComparator24);
        java.util.Comparator<java.io.File> fileComparator27 = entryComparator14.thenComparing(fileComparator26);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file29 = fileEntryIterator28.current;
        java.io.File file30 = null;
        fileEntryIterator28.current = file30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean33 = explodedArchive32.recursive;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.util.jar.Manifest manifest35 = null;
        explodedArchive32.manifest = manifest35;
        java.io.File file37 = explodedArchive32.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.io.File file41 = fileEntryIterator38.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator38.current = file46;
        explodedArchive32.root = file46;
        fileEntryIterator28.root = file46;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        fileEntryIterator57.recursive = true;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator67.thenComparing(fileComparator70);
        fileEntryIterator62.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        java.util.Comparator<java.io.File> fileComparator76 = fileComparator67.thenComparing(fileComparator75);
        fileEntryIterator57.entryComparator = fileComparator76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file79 = explodedArchive78.manifestFile;
        java.io.File file80 = explodedArchive78.manifestFile;
        java.io.File file81 = null;
        java.io.File file82 = explodedArchive78.getManifestFile(file81);
        fileEntryIterator57.root = file82;
        explodedArchive54.manifestFile = file82;
        fileEntryIterator50.current = file82;
        int int86 = entryComparator14.compare(file46, file82);
        fileEntry0.file = file82;
        java.io.File file88 = fileEntry0.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive90 = new org.springframework.boot.loader.archive.ExplodedArchive(file88, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2252");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2253");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getHost();
        java.lang.String str10 = uRL3.getAuthority();
        java.net.URL uRL12 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "exploded archive", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getFile();
        java.lang.String str17 = uRL15.getQuery();
        java.net.URL uRL18 = null;
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL(uRL18, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        java.lang.String str23 = uRL21.getAuthority();
        java.lang.String str24 = uRL21.getQuery();
        int int25 = uRL21.getDefaultPort();
        java.lang.String str26 = uRL21.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler28 = null;
        java.net.URL uRL29 = new java.net.URL(uRL21, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler28);
        java.net.URLStreamHandler uRLStreamHandler31 = null;
        java.net.URL uRL32 = new java.net.URL(uRL21, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler31);
        java.lang.String str33 = uRL32.getHost();
        java.lang.String str34 = uRL32.getProtocol();
        java.lang.String str35 = uRL32.getRef();
        boolean boolean36 = uRL15.equals((java.lang.Object) str35);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str16, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals(uRL21.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals(uRL29.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL32.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file" + "'", str34, "file");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test2254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2254");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.manifestFile;
        java.io.File file23 = explodedArchive21.manifestFile;
        java.io.File file24 = null;
        java.io.File file25 = explodedArchive21.getManifestFile(file24);
        fileEntryIterator0.root = file25;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator0.entryComparator;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator0.stack;
        java.io.File file29 = fileEntryIterator0.current;
        java.io.File file30 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
    }

    @Test
    public void test2255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2255");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file", "file://exploded archive:0", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: Illegal character found in host: '/'");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2256");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", (int) (short) -1, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2257");
        java.net.URL uRL1 = new java.net.URL("file://exploded archive");
        java.net.URL uRL2 = null;
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL(uRL2, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
        java.lang.String str6 = uRL5.getHost();
        java.lang.String str7 = uRL5.getAuthority();
        java.lang.String str8 = uRL5.getQuery();
        int int9 = uRL5.getDefaultPort();
        java.lang.String str10 = uRL5.getAuthority();
        java.net.URLConnection uRLConnection11 = uRL5.openConnection();
        java.lang.String str12 = uRL5.toExternalForm();
        java.lang.String str13 = uRL5.getAuthority();
        boolean boolean14 = uRL1.sameFile(uRL5);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream15 = uRL1.openStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: exploded archive");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals(uRL5.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(uRLConnection11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2258");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "";
        java.lang.String str5 = fileEntry0.name;
        java.io.File file6 = fileEntry0.file;
        java.lang.String str7 = fileEntry0.getName();
        java.io.File file8 = fileEntry0.file;
        java.lang.String str9 = fileEntry0.name;
        java.lang.String str10 = fileEntry0.name;
        fileEntry0.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive";
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test2259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2259");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        java.io.File file5 = fileEntryIterator0.root;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNull(file5);
    }

    @Test
    public void test2260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2260");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.manifestFile;
        java.io.File file4 = explodedArchive2.manifestFile;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive2.getManifestFile(file5);
        fileEntryIterator0.current = file5;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2261");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor44 = explodedArchive0.iterator();
        java.io.File file45 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive0.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean49 = explodedArchive48.recursive;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.util.jar.Manifest manifest51 = null;
        explodedArchive48.manifest = manifest51;
        java.io.File file53 = explodedArchive48.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.io.File file57 = fileEntryIterator54.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.manifestFile;
        java.io.File file60 = explodedArchive58.manifestFile;
        java.io.File file61 = null;
        java.io.File file62 = explodedArchive58.getManifestFile(file61);
        fileEntryIterator54.current = file62;
        explodedArchive48.root = file62;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean66 = explodedArchive65.recursive;
        java.lang.String str67 = explodedArchive65.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean70 = fileEntryIterator69.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean72 = explodedArchive71.recursive;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.util.jar.Manifest manifest74 = null;
        explodedArchive71.manifest = manifest74;
        java.io.File file76 = explodedArchive71.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        java.util.Comparator<java.io.File> fileComparator79 = fileEntryIterator77.entryComparator;
        java.io.File file80 = fileEntryIterator77.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file82 = explodedArchive81.manifestFile;
        java.io.File file83 = explodedArchive81.manifestFile;
        java.io.File file84 = null;
        java.io.File file85 = explodedArchive81.getManifestFile(file84);
        fileEntryIterator77.current = file85;
        explodedArchive71.root = file85;
        fileEntryIterator69.root = file85;
        explodedArchive68.root = file85;
        java.io.File file90 = explodedArchive68.root;
        explodedArchive65.manifestFile = file90;
        java.io.File file92 = explodedArchive65.manifestFile;
        java.io.File file93 = explodedArchive65.manifestFile;
        java.io.File file94 = explodedArchive48.getManifestFile(file93);
        explodedArchive0.manifestFile = file93;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "exploded archive" + "'", str67, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file90.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file93);
        org.junit.Assert.assertEquals(file93.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file93.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file94);
        org.junit.Assert.assertEquals(file94.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file94.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2262");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean6 = explodedArchive5.recursive;
        boolean boolean7 = explodedArchive5.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        explodedArchive5.root = file12;
        fileEntryIterator0.root = file12;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator20.thenComparing(fileComparator28);
        fileEntryIterator0.entryComparator = fileComparator29;
        java.io.File file31 = fileEntryIterator0.root;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2263");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file7;
        explodedArchive0.recursive = false;
        java.io.File file11 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.net.URL uRL14 = explodedArchive0.getUrl();
        java.net.URI uRI15 = uRL14.toURI();
        java.net.Proxy proxy16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection17 = uRL14.openConnection(proxy16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL14);
// flaky:         org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI15);
    }

    @Test
    public void test2264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2264");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean6 = explodedArchive5.recursive;
        boolean boolean7 = explodedArchive5.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        explodedArchive5.root = file12;
        fileEntryIterator0.root = file12;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2265");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL73 = null;
        java.net.URLStreamHandler uRLStreamHandler75 = null;
        java.net.URL uRL76 = new java.net.URL(uRL73, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler75);
        java.lang.String str77 = uRL76.getHost();
        java.lang.String str78 = uRL76.getAuthority();
        java.lang.String str79 = uRL76.getHost();
        java.lang.String str80 = uRL76.getQuery();
        java.lang.String str81 = uRL76.getAuthority();
        java.lang.String str82 = uRL76.getRef();
        boolean boolean83 = uRL69.sameFile(uRL76);
        java.net.URLStreamHandler uRLStreamHandler85 = null;
        java.net.URL uRL86 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler85);
        java.net.URI uRI87 = uRL69.toURI();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL76.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(str82);
// flaky:         org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals(uRL86.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI87);
    }

    @Test
    public void test2266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2266");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getAuthority();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        int int76 = uRL74.getPort();
        java.net.URL uRL77 = null;
        java.net.URLStreamHandler uRLStreamHandler79 = null;
        java.net.URL uRL80 = new java.net.URL(uRL77, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler79);
        java.lang.String str81 = uRL80.getHost();
        int int82 = uRL80.getPort();
        java.net.URL uRL83 = null;
        java.net.URLStreamHandler uRLStreamHandler85 = null;
        java.net.URL uRL86 = new java.net.URL(uRL83, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler85);
        java.lang.String str87 = uRL86.getHost();
        java.lang.String str88 = uRL86.getAuthority();
        java.lang.String str89 = uRL86.getQuery();
        int int90 = uRL86.getDefaultPort();
        boolean boolean91 = uRL80.sameFile(uRL86);
        boolean boolean92 = uRL74.sameFile(uRL80);
        boolean boolean93 = uRL69.sameFile(uRL74);
        java.lang.String str94 = uRL74.getRef();
        java.lang.String str95 = uRL74.getPath();
        java.net.URLStreamHandler uRLStreamHandler97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL98 = new java.net.URL(uRL74, "file://hi!:100hi!", uRLStreamHandler97);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: For input string: \"100hi!\"");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertEquals(uRL80.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertEquals(uRL86.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str95, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2267");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "file://exploded archive:0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2268");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) (byte) 1, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2269");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        boolean boolean8 = explodedArchive3.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator9.recursive = true;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator9.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator9.root = file34;
        explodedArchive3.root = file34;
        explodedArchive3.recursive = false;
        java.util.jar.Manifest manifest39 = null;
        explodedArchive3.manifest = manifest39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file42 = fileEntryIterator41.current;
        java.io.File file43 = fileEntryIterator41.poll();
        java.io.File file44 = fileEntryIterator41.poll();
        java.io.File file45 = fileEntryIterator41.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.io.File file48 = fileEntryIterator46.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        fileEntryIterator46.root = file52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.manifestFile;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.io.File file58 = null;
        java.io.File file59 = explodedArchive55.getManifestFile(file58);
        java.util.Iterator<java.io.File> fileItor60 = fileEntryIterator46.listFiles(file59);
        fileEntryIterator41.root = file59;
        explodedArchive3.root = file59;
        java.io.File file63 = explodedArchive3.root;
        explodedArchive0.root = file63;
        java.util.jar.Manifest manifest65 = explodedArchive0.manifest;
        java.io.File file66 = explodedArchive0.manifestFile;
        java.io.File file67 = explodedArchive0.manifestFile;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor60);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
    }

    @Test
    public void test2270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2270");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        explodedArchive0.root = file56;
        explodedArchive0.recursive = true;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor62 = explodedArchive0.iterator();
        java.net.URL uRL63 = explodedArchive0.getUrl();
        java.io.File file64 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file66 = fileEntry65.getFile();
        java.io.File file67 = fileEntry65.file;
        java.io.File file68 = null;
        fileEntry65.file = file68;
        java.lang.String str70 = fileEntry65.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file72 = fileEntryIterator71.current;
        java.io.File file73 = null;
        fileEntryIterator71.current = file73;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean76 = explodedArchive75.recursive;
        java.io.File file77 = explodedArchive75.manifestFile;
        java.util.jar.Manifest manifest78 = null;
        explodedArchive75.manifest = manifest78;
        java.io.File file80 = explodedArchive75.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator81 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue82 = fileEntryIterator81.stack;
        java.util.Comparator<java.io.File> fileComparator83 = fileEntryIterator81.entryComparator;
        java.io.File file84 = fileEntryIterator81.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file86 = explodedArchive85.manifestFile;
        java.io.File file87 = explodedArchive85.manifestFile;
        java.io.File file88 = null;
        java.io.File file89 = explodedArchive85.getManifestFile(file88);
        fileEntryIterator81.current = file89;
        explodedArchive75.root = file89;
        fileEntryIterator71.root = file89;
        fileEntry65.file = file89;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive94 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertNotNull(entryItor62);
        org.junit.Assert.assertNotNull(uRL63);
// flaky:         org.junit.Assert.assertEquals(uRL63.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(fileItorQueue82);
        org.junit.Assert.assertNotNull(fileComparator83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNull(file87);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2271");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive0.getNestedArchives(entryFilter36);
        java.net.URL uRL38 = explodedArchive0.getUrl();
        java.lang.String str39 = uRL38.toExternalForm();
        java.lang.String str40 = uRL38.getHost();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test2272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2272");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest5 = explodedArchive0.manifest;
        java.lang.String str6 = explodedArchive0.toString();
        java.lang.String str7 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(manifest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
    }

    @Test
    public void test2273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2273");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URL uRL34 = null;
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler36);
        java.lang.String str38 = uRL37.getHost();
        java.lang.String str39 = uRL37.getAuthority();
        java.lang.String str40 = uRL37.getAuthority();
        java.lang.String str41 = uRL37.getFile();
        int int42 = uRL37.getPort();
        java.lang.String str43 = uRL37.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL37, "hi!");
        boolean boolean46 = uRL3.sameFile(uRL45);
        int int47 = uRL45.getPort();
        java.net.URI uRI48 = uRL45.toURI();
        java.lang.Class<?> wildcardClass49 = uRL45.getClass();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str41, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(uRI48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test2274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2274");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file18 = fileEntryIterator17.current;
        boolean boolean19 = fileEntryIterator17.hasNext();
        fileEntryIterator17.recursive = true;
        boolean boolean22 = fileEntryIterator17.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        boolean boolean25 = explodedArchive23.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = null;
        fileEntryIterator26.current = file28;
        java.io.File file30 = fileEntryIterator26.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file32 = fileEntry31.getFile();
        java.lang.String str33 = fileEntry31.name;
        java.io.File file34 = fileEntry31.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        boolean boolean37 = fileEntryIterator35.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        boolean boolean43 = explodedArchive38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        fileEntryIterator44.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator54.thenComparing(fileComparator57);
        fileEntryIterator49.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator54.thenComparing(fileComparator62);
        fileEntryIterator44.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator44.root = file69;
        explodedArchive38.root = file69;
        java.util.Iterator<java.io.File> fileItor72 = fileEntryIterator35.listFiles(file69);
        fileEntry31.file = file69;
        fileEntryIterator26.current = file69;
        explodedArchive23.root = file69;
        java.util.Iterator<java.io.File> fileItor76 = fileEntryIterator17.listFiles(file69);
        explodedArchive0.root = file69;
        java.net.URL uRL78 = explodedArchive0.getUrl();
        java.net.URLConnection uRLConnection79 = uRL78.openConnection();
        java.net.URLStreamHandler uRLStreamHandler81 = null;
        java.net.URL uRL82 = new java.net.URL(uRL78, "file://exploded archive", uRLStreamHandler81);
        java.lang.String str83 = uRL78.getPath();
        java.lang.Class<?> wildcardClass84 = uRL78.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "exploded archive" + "'", str24, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor72);
        org.junit.Assert.assertNotNull(fileItor76);
        org.junit.Assert.assertNotNull(uRL78);
// flaky:         org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection79);
        org.junit.Assert.assertEquals(uRL82.toString(), "file://exploded archive");
// flaky:         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str83, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2275");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.Class<?> wildcardClass8 = uRL3.getClass();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test2276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2276");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        boolean boolean7 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        boolean boolean13 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator14.root = file39;
        explodedArchive8.root = file39;
        java.util.Iterator<java.io.File> fileItor42 = fileEntryIterator5.listFiles(file39);
        fileEntry0.file = file39;
        java.io.File file44 = fileEntry0.getFile();
        boolean boolean45 = fileEntry0.isDirectory();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        boolean boolean51 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        fileEntryIterator52.recursive = true;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator52.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        fileEntryIterator52.root = file77;
        explodedArchive46.root = file77;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor80 = explodedArchive46.iterator();
        java.io.File file81 = explodedArchive46.root;
        java.io.File file82 = explodedArchive46.root;
        fileEntry0.file = file82;
        java.io.File file84 = fileEntry0.file;
        boolean boolean85 = fileEntry0.isDirectory();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor80);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test2277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2277");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.io.File file3 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file5 = fileEntryIterator4.current;
        boolean boolean6 = fileEntryIterator4.hasNext();
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator4.entryComparator;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator4.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator8;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator0.entryComparator;
        boolean boolean11 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator0.stack;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileItorQueue12);
    }

    @Test
    public void test2278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2278");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2279");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.recursive;
        boolean boolean2 = fileEntryIterator0.recursive;
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean7 = fileEntryIterator6.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean9 = explodedArchive8.recursive;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive8.manifest = manifest11;
        java.io.File file13 = explodedArchive8.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.io.File file17 = fileEntryIterator14.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.io.File file21 = null;
        java.io.File file22 = explodedArchive18.getManifestFile(file21);
        fileEntryIterator14.current = file22;
        explodedArchive8.root = file22;
        fileEntryIterator6.root = file22;
        explodedArchive5.root = file22;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator27 = explodedArchive5.spliterator();
        java.io.File file28 = explodedArchive5.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str30 = fileEntry29.name;
        java.io.File file31 = fileEntry29.file;
        fileEntry29.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        boolean boolean36 = fileEntryIterator34.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        boolean boolean42 = explodedArchive37.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        fileEntryIterator43.recursive = true;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator53.thenComparing(fileComparator56);
        fileEntryIterator48.entryComparator = fileComparator53;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator53.thenComparing(fileComparator61);
        fileEntryIterator43.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        fileEntryIterator43.root = file68;
        explodedArchive37.root = file68;
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator34.listFiles(file68);
        fileEntry29.file = file68;
        explodedArchive5.root = file68;
        java.util.Iterator<java.io.File> fileItor74 = fileEntryIterator0.listFiles(file68);
        java.io.File file75 = fileEntryIterator0.poll();
        java.io.File file76 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        java.io.File file79 = fileEntryIterator77.current;
        java.io.File file80 = fileEntryIterator77.current;
        fileEntryIterator77.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file84 = explodedArchive83.manifestFile;
        java.io.File file85 = explodedArchive83.manifestFile;
        java.io.File file86 = null;
        java.io.File file87 = explodedArchive83.getManifestFile(file86);
        fileEntryIterator77.root = file87;
        boolean boolean89 = fileEntryIterator77.hasNext();
        java.io.File file90 = fileEntryIterator77.root;
        java.util.Iterator<java.io.File> fileItor91 = fileEntryIterator0.listFiles(file90);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive92 = new org.springframework.boot.loader.archive.ExplodedArchive(file90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor71);
        org.junit.Assert.assertNotNull(fileItor74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file90.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor91);
    }

    @Test
    public void test2280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2280");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive0.getManifestFile(file5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2281");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        int int13 = uRL11.getDefaultPort();
        java.lang.String str14 = uRL11.getUserInfo();
        java.lang.String str15 = uRL11.getRef();
        int int16 = uRL11.getPort();
        java.lang.String str17 = uRL11.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2282");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        boolean boolean8 = explodedArchive3.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator9.recursive = true;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator9.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator9.root = file34;
        explodedArchive3.root = file34;
        java.util.Iterator<java.io.File> fileItor37 = fileEntryIterator0.listFiles(file34);
        java.io.File file38 = fileEntryIterator0.root;
        java.io.File file39 = fileEntryIterator0.poll();
        java.io.File file40 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
    }

    @Test
    public void test2283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2283");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2284");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getQuery();
        int int9 = uRL3.getPort();
        java.lang.String str10 = uRL3.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.manifestFile;
        java.io.File file13 = explodedArchive11.manifestFile;
        java.io.File file14 = null;
        java.io.File file15 = explodedArchive11.getManifestFile(file14);
        boolean boolean16 = explodedArchive11.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        fileEntryIterator17.recursive = true;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator27.thenComparing(fileComparator30);
        fileEntryIterator22.entryComparator = fileComparator27;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator27.thenComparing(fileComparator35);
        fileEntryIterator17.entryComparator = fileComparator36;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator17.root = file42;
        explodedArchive11.root = file42;
        explodedArchive11.recursive = false;
        java.util.jar.Manifest manifest47 = null;
        explodedArchive11.manifest = manifest47;
        java.lang.String str49 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive11.getNestedArchives(entryFilter50);
        explodedArchive11.recursive = false;
        explodedArchive11.recursive = true;
        java.io.File file56 = explodedArchive11.root;
        java.util.jar.Manifest manifest57 = explodedArchive11.manifest;
        java.util.jar.Manifest manifest58 = null;
        explodedArchive11.manifest = manifest58;
        boolean boolean60 = uRL3.equals((java.lang.Object) manifest58);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file15.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str49, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test2285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2285");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getRef();
        java.net.URL uRL7 = null;
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL7, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler9);
        java.lang.String str11 = uRL10.getHost();
        java.lang.String str12 = uRL10.getAuthority();
        java.lang.String str13 = uRL10.getAuthority();
        java.lang.String str14 = uRL10.getFile();
        int int15 = uRL10.getPort();
        java.lang.String str16 = uRL10.getRef();
        java.net.URL uRL18 = new java.net.URL(uRL10, "hi!");
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL(uRL18, "", uRLStreamHandler20);
        boolean boolean22 = uRL3.sameFile(uRL18);
        java.lang.String str23 = uRL18.getProtocol();
        java.net.URLConnection uRLConnection24 = uRL18.openConnection();
        java.net.Proxy proxy25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection26 = uRL18.openConnection(proxy25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL18.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL21.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file" + "'", str23, "file");
        org.junit.Assert.assertNotNull(uRLConnection24);
    }

    @Test
    public void test2286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2286");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.lang.String str2 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        boolean boolean8 = explodedArchive3.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator9.recursive = true;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator9.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator9.root = file34;
        explodedArchive3.root = file34;
        explodedArchive3.recursive = false;
        java.util.jar.Manifest manifest39 = null;
        explodedArchive3.manifest = manifest39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file42 = fileEntryIterator41.current;
        java.io.File file43 = fileEntryIterator41.poll();
        java.io.File file44 = fileEntryIterator41.poll();
        java.io.File file45 = fileEntryIterator41.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.io.File file48 = fileEntryIterator46.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        fileEntryIterator46.root = file52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.manifestFile;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.io.File file58 = null;
        java.io.File file59 = explodedArchive55.getManifestFile(file58);
        java.util.Iterator<java.io.File> fileItor60 = fileEntryIterator46.listFiles(file59);
        fileEntryIterator41.root = file59;
        explodedArchive3.root = file59;
        explodedArchive3.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file66 = fileEntryIterator65.current;
        java.io.File file67 = null;
        fileEntryIterator65.current = file67;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean70 = explodedArchive69.recursive;
        java.io.File file71 = explodedArchive69.manifestFile;
        java.util.jar.Manifest manifest72 = null;
        explodedArchive69.manifest = manifest72;
        java.io.File file74 = explodedArchive69.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator75.stack;
        java.util.Comparator<java.io.File> fileComparator77 = fileEntryIterator75.entryComparator;
        java.io.File file78 = fileEntryIterator75.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file80 = explodedArchive79.manifestFile;
        java.io.File file81 = explodedArchive79.manifestFile;
        java.io.File file82 = null;
        java.io.File file83 = explodedArchive79.getManifestFile(file82);
        fileEntryIterator75.current = file83;
        explodedArchive69.root = file83;
        fileEntryIterator65.root = file83;
        java.io.File file87 = explodedArchive3.getManifestFile(file83);
        explodedArchive0.manifestFile = file87;
        java.util.jar.Manifest manifest89 = null;
        explodedArchive0.manifest = manifest89;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "exploded archive" + "'", str2, "exploded archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor60);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2287");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) '4', "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2288");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL3.getHost();
        java.lang.String str16 = uRL3.toExternalForm();
        java.net.URL uRL17 = null;
        java.net.URLStreamHandler uRLStreamHandler19 = null;
        java.net.URL uRL20 = new java.net.URL(uRL17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler19);
        java.lang.String str21 = uRL20.getHost();
        java.net.URI uRI22 = uRL20.toURI();
        java.net.URL uRL23 = null;
        java.net.URLStreamHandler uRLStreamHandler25 = null;
        java.net.URL uRL26 = new java.net.URL(uRL23, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler25);
        java.lang.String str27 = uRL26.getHost();
        java.lang.String str28 = uRL26.getAuthority();
        java.lang.String str29 = uRL26.getUserInfo();
        boolean boolean30 = uRL20.sameFile(uRL26);
        java.net.URL uRL32 = new java.net.URL(uRL26, "exploded archive");
        boolean boolean33 = uRL3.sameFile(uRL26);
        java.net.Proxy proxy34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection35 = uRL26.openConnection(proxy34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(uRI22);
        org.junit.Assert.assertEquals(uRL26.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals(uRL32.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test2289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2289");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.getName();
        java.lang.String str3 = fileEntry0.getName();
        fileEntry0.name = "";
        java.io.File file6 = fileEntry0.file;
        java.lang.String str7 = fileEntry0.getName();
        java.io.File file8 = fileEntry0.getFile();
        fileEntry0.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        fileEntry0.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        java.lang.String str13 = fileEntry0.getName();
        fileEntry0.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive";
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2290");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        java.io.File file11 = explodedArchive0.getManifestFile(file9);
        java.util.jar.Manifest manifest12 = null;
        explodedArchive0.manifest = manifest12;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest14 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2291");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest25 = explodedArchive0.manifest;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor26 = explodedArchive0.iterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator27 = explodedArchive0.spliterator();
        boolean boolean28 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file30 = fileEntry29.getFile();
        java.io.File file31 = fileEntry29.file;
        java.io.File file32 = null;
        fileEntry29.file = file32;
        java.lang.String str34 = fileEntry29.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive35 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNotNull(entryItor26);
        org.junit.Assert.assertNotNull(entrySpliterator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test2292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2292");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean6 = explodedArchive5.recursive;
        boolean boolean7 = explodedArchive5.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        explodedArchive5.root = file12;
        fileEntryIterator0.root = file12;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator20.thenComparing(fileComparator28);
        fileEntryIterator0.entryComparator = fileComparator29;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file32 = fileEntryIterator31.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator38.thenComparing(fileComparator41);
        fileEntryIterator33.entryComparator = fileComparator38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator44.entryComparator;
        java.util.Comparator<java.io.File> fileComparator47 = fileComparator38.thenComparing(fileComparator46);
        fileEntryIterator31.entryComparator = fileComparator47;
        java.io.File file49 = fileEntryIterator31.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        fileEntryIterator31.entryComparator = entryComparator50;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator60.thenComparing(fileComparator63);
        java.util.Comparator<java.io.File> fileComparator65 = fileComparator57.thenComparing(fileComparator63);
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator54.thenComparing(fileComparator63);
        java.util.Comparator<java.io.File> fileComparator67 = entryComparator50.thenComparing(fileComparator54);
        java.util.Comparator<java.io.File> fileComparator68 = entryComparator50.reversed();
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator29.thenComparing(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator69);
    }

    @Test
    public void test2293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2293");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "file://exploded archive:0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2294");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = true;
        boolean boolean5 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean7 = fileEntryIterator6.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file9 = fileEntryIterator8.current;
        java.io.File file10 = fileEntryIterator8.poll();
        java.io.File file11 = fileEntryIterator8.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        fileEntryIterator8.entryComparator = entryComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        fileEntryIterator26.recursive = true;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator36.thenComparing(fileComparator39);
        fileEntryIterator31.entryComparator = fileComparator36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        java.util.Comparator<java.io.File> fileComparator45 = fileComparator36.thenComparing(fileComparator44);
        fileEntryIterator26.entryComparator = fileComparator45;
        java.util.Comparator<java.io.File> fileComparator47 = entryComparator23.thenComparing(fileComparator45);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean54 = fileEntryIterator53.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean56 = explodedArchive55.recursive;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.util.jar.Manifest manifest58 = null;
        explodedArchive55.manifest = manifest58;
        java.io.File file60 = explodedArchive55.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.io.File file64 = fileEntryIterator61.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator61.current = file69;
        explodedArchive55.root = file69;
        fileEntryIterator53.root = file69;
        int int73 = entryComparator23.compare(file52, file69);
        java.util.Iterator<java.io.File> fileItor74 = fileEntryIterator6.listFiles(file52);
        fileEntryIterator0.root = file52;
        boolean boolean76 = fileEntryIterator0.hasNext();
        java.io.File file77 = fileEntryIterator0.current;
        java.io.File file78 = fileEntryIterator0.poll();
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(fileItor74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file78);
    }

    @Test
    public void test2295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2295");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        java.net.URLConnection uRLConnection15 = uRL11.openConnection();
        java.net.URL uRL17 = new java.net.URL(uRL11, "file://exploded archive");
        java.lang.String str18 = uRL11.getRef();
        java.net.URL uRL20 = new java.net.URL(uRL11, "exploded archive");
        java.lang.String str21 = uRL20.getPath();
        java.lang.String str22 = uRL20.getFile();
        java.net.URLStreamHandler uRLStreamHandler24 = null;
        java.net.URL uRL25 = new java.net.URL(uRL20, "", uRLStreamHandler24);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertNotNull(uRLConnection15);
        org.junit.Assert.assertEquals(uRL17.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str21, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
    }

    @Test
    public void test2296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2296");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URL uRL34 = null;
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler36);
        java.lang.String str38 = uRL37.getHost();
        java.lang.String str39 = uRL37.getAuthority();
        java.lang.String str40 = uRL37.getAuthority();
        java.lang.String str41 = uRL37.getFile();
        int int42 = uRL37.getPort();
        java.lang.String str43 = uRL37.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL37, "hi!");
        boolean boolean46 = uRL3.sameFile(uRL45);
        java.lang.String str47 = uRL45.getPath();
        java.lang.String str48 = uRL45.getAuthority();
        java.lang.Class<?> wildcardClass49 = uRL45.getClass();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str41, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str47, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test2297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2297");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.getName();
        fileEntry0.name = "exploded archive";
        fileEntry0.name = "hi!";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.lang.String str9 = explodedArchive6.toString();
        java.lang.String str10 = explodedArchive6.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean12 = fileEntryIterator11.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean14 = explodedArchive13.recursive;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.util.jar.Manifest manifest16 = null;
        explodedArchive13.manifest = manifest16;
        java.io.File file18 = explodedArchive13.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.io.File file22 = fileEntryIterator19.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.io.File file26 = null;
        java.io.File file27 = explodedArchive23.getManifestFile(file26);
        fileEntryIterator19.current = file27;
        explodedArchive13.root = file27;
        fileEntryIterator11.root = file27;
        java.io.File file31 = explodedArchive6.getManifestFile(file27);
        fileEntry0.file = file31;
        fileEntry0.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        java.io.File file35 = fileEntry0.file;
        java.io.File file36 = fileEntry0.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "exploded archive" + "'", str9, "exploded archive");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "exploded archive" + "'", str10, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2298");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        java.lang.String str6 = explodedArchive0.toString();
        boolean boolean7 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        boolean boolean13 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator14.root = file39;
        explodedArchive8.root = file39;
        explodedArchive8.recursive = false;
        java.util.jar.Manifest manifest44 = null;
        explodedArchive8.manifest = manifest44;
        java.lang.String str46 = explodedArchive8.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive8.getNestedArchives(entryFilter47);
        boolean boolean49 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file51 = fileEntryIterator50.current;
        java.io.File file52 = fileEntryIterator50.poll();
        java.io.File file53 = fileEntryIterator50.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator59.thenComparing(fileComparator62);
        fileEntryIterator54.entryComparator = fileComparator59;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator59.thenComparing((java.util.Comparator<java.io.File>) entryComparator65);
        fileEntryIterator50.entryComparator = entryComparator65;
        java.io.File file68 = fileEntryIterator50.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean71 = fileEntryIterator70.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean73 = explodedArchive72.recursive;
        java.io.File file74 = explodedArchive72.manifestFile;
        java.util.jar.Manifest manifest75 = null;
        explodedArchive72.manifest = manifest75;
        java.io.File file77 = explodedArchive72.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator78.stack;
        java.util.Comparator<java.io.File> fileComparator80 = fileEntryIterator78.entryComparator;
        java.io.File file81 = fileEntryIterator78.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file83 = explodedArchive82.manifestFile;
        java.io.File file84 = explodedArchive82.manifestFile;
        java.io.File file85 = null;
        java.io.File file86 = explodedArchive82.getManifestFile(file85);
        fileEntryIterator78.current = file86;
        explodedArchive72.root = file86;
        fileEntryIterator70.root = file86;
        explodedArchive69.root = file86;
        fileEntryIterator50.current = file86;
        explodedArchive8.manifestFile = file86;
        java.io.File file93 = explodedArchive0.getManifestFile(file86);
        explodedArchive0.recursive = true;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor96 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str46, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file93);
        org.junit.Assert.assertEquals(file93.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file93.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2299");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        boolean boolean4 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file6 = fileEntryIterator5.current;
        java.io.File file7 = fileEntryIterator5.poll();
        java.io.File file8 = fileEntryIterator5.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator5.stack;
        java.io.File file10 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        java.io.File file14 = fileEntryIterator11.current;
        fileEntryIterator11.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.manifestFile;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.io.File file20 = null;
        java.io.File file21 = explodedArchive17.getManifestFile(file20);
        fileEntryIterator11.root = file21;
        fileEntryIterator5.root = file21;
        java.io.File file24 = fileEntryIterator5.root;
        fileEntryIterator0.current = file24;
        java.io.File file26 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file26);
    }

    @Test
    public void test2300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2300");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.recursive = true;
        explodedArchive0.recursive = false;
        boolean boolean5 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test2301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2301");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getHost();
        java.net.URL uRL10 = null;
        java.net.URLStreamHandler uRLStreamHandler12 = null;
        java.net.URL uRL13 = new java.net.URL(uRL10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler12);
        java.lang.String str14 = uRL13.getHost();
        java.net.URI uRI15 = uRL13.toURI();
        java.lang.String str16 = uRL13.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler18 = null;
        java.net.URL uRL19 = new java.net.URL(uRL13, "file", uRLStreamHandler18);
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL13, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        boolean boolean23 = uRL3.sameFile(uRL13);
        java.net.URL uRL24 = null;
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL24, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler26);
        java.lang.String str28 = uRL27.getHost();
        java.lang.String str29 = uRL27.getAuthority();
        java.lang.String str30 = uRL27.getHost();
        java.lang.String str31 = uRL27.getQuery();
        java.lang.String str32 = uRL27.getAuthority();
        java.lang.String str33 = uRL27.getFile();
        java.lang.String str34 = uRL27.getFile();
        java.lang.String str35 = uRL27.getProtocol();
        boolean boolean36 = uRL3.sameFile(uRL27);
        java.lang.String str37 = uRL3.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        boolean boolean40 = fileEntryIterator38.hasNext();
        boolean boolean41 = fileEntryIterator38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator47.thenComparing(fileComparator50);
        fileEntryIterator42.entryComparator = fileComparator47;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator47.thenComparing(fileComparator55);
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator55.reversed();
        fileEntryIterator38.entryComparator = fileComparator55;
        java.io.File file59 = fileEntryIterator38.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file61 = fileEntryIterator60.current;
        java.io.File file62 = fileEntryIterator60.poll();
        java.io.File file63 = fileEntryIterator60.poll();
        java.io.File file64 = fileEntryIterator60.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.io.File file67 = fileEntryIterator65.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.manifestFile;
        java.io.File file70 = explodedArchive68.manifestFile;
        java.io.File file71 = null;
        java.io.File file72 = explodedArchive68.getManifestFile(file71);
        fileEntryIterator65.root = file71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file75 = explodedArchive74.manifestFile;
        java.io.File file76 = explodedArchive74.manifestFile;
        java.io.File file77 = null;
        java.io.File file78 = explodedArchive74.getManifestFile(file77);
        java.util.Iterator<java.io.File> fileItor79 = fileEntryIterator65.listFiles(file78);
        fileEntryIterator60.root = file78;
        fileEntryIterator60.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator83 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue84 = fileEntryIterator83.stack;
        fileEntryIterator83.recursive = true;
        java.util.Comparator<java.io.File> fileComparator87 = fileEntryIterator83.entryComparator;
        fileEntryIterator83.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator90 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue91 = fileEntryIterator90.stack;
        fileEntryIterator83.stack = fileItorQueue91;
        fileEntryIterator60.stack = fileItorQueue91;
        fileEntryIterator38.stack = fileItorQueue91;
        boolean boolean95 = uRL3.equals((java.lang.Object) fileEntryIterator38);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(uRI15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL19.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str33, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "file" + "'", str35, "file");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str37, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor79);
        org.junit.Assert.assertNotNull(fileItorQueue84);
        org.junit.Assert.assertNotNull(fileComparator87);
        org.junit.Assert.assertNotNull(fileItorQueue91);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test2302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2302");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        boolean boolean8 = explodedArchive3.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator9.recursive = true;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator9.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator9.root = file34;
        explodedArchive3.root = file34;
        java.util.Iterator<java.io.File> fileItor37 = fileEntryIterator0.listFiles(file34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        fileEntryIterator45.recursive = true;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator55.thenComparing(fileComparator58);
        fileEntryIterator50.entryComparator = fileComparator55;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator55.thenComparing(fileComparator63);
        fileEntryIterator45.entryComparator = fileComparator64;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.manifestFile;
        java.io.File file68 = explodedArchive66.manifestFile;
        java.io.File file69 = null;
        java.io.File file70 = explodedArchive66.getManifestFile(file69);
        fileEntryIterator45.root = file70;
        explodedArchive42.manifestFile = file70;
        fileEntryIterator38.current = file70;
        fileEntryIterator0.root = file70;
        boolean boolean75 = fileEntryIterator0.hasNext();
        java.io.File file76 = fileEntryIterator0.current;
        java.io.File file77 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
    }

    @Test
    public void test2303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2303");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        int int22 = uRL3.getPort();
        java.lang.String str23 = uRL3.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str23, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2304");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        boolean boolean4 = fileEntryIterator0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test2305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2305");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getUserInfo();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test2306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2306");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator0.stack = fileItorQueue8;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator0.entryComparator;
        java.io.File file13 = fileEntryIterator0.root;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test2307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2307");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        java.net.URLConnection uRLConnection15 = uRL11.openConnection();
        java.net.URL uRL17 = new java.net.URL(uRL11, "file://exploded archive");
        java.lang.String str18 = uRL11.getRef();
        java.net.URL uRL20 = new java.net.URL(uRL11, "exploded archive");
        java.lang.String str21 = uRL20.getPath();
        java.net.URL uRL23 = new java.net.URL(uRL20, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream24 = uRL23.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertNotNull(uRLConnection15);
        org.junit.Assert.assertEquals(uRL17.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str21, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals(uRL23.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test2308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2308");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        java.lang.String str22 = uRL9.toExternalForm();
        java.net.URL uRL24 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str25 = uRL24.getRef();
        java.lang.String str26 = uRL24.getPath();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str22, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str26, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2309");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean6 = explodedArchive5.recursive;
        boolean boolean7 = explodedArchive5.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        explodedArchive5.root = file12;
        fileEntryIterator0.root = file12;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator20.thenComparing(fileComparator28);
        fileEntryIterator0.entryComparator = fileComparator29;
        java.io.File file31 = fileEntryIterator0.current;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator0.entryComparator;
        java.io.File file33 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNull(file33);
    }

    @Test
    public void test2310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2310");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.lang.String str34 = explodedArchive0.toString();
        java.io.File file35 = explodedArchive0.manifestFile;
        boolean boolean36 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str38 = fileEntry37.name;
        java.lang.String str39 = fileEntry37.getName();
        java.io.File file40 = fileEntry37.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry41.name = "exploded archive";
        java.lang.String str44 = fileEntry41.getName();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        fileEntryIterator48.recursive = true;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator58.thenComparing(fileComparator61);
        fileEntryIterator53.entryComparator = fileComparator58;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator58.thenComparing(fileComparator66);
        fileEntryIterator48.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file70 = explodedArchive69.manifestFile;
        java.io.File file71 = explodedArchive69.manifestFile;
        java.io.File file72 = null;
        java.io.File file73 = explodedArchive69.getManifestFile(file72);
        fileEntryIterator48.root = file73;
        explodedArchive45.manifestFile = file73;
        java.util.jar.Manifest manifest76 = explodedArchive45.manifest;
        java.util.jar.Manifest manifest77 = explodedArchive45.manifest;
        java.util.jar.Manifest manifest78 = explodedArchive45.getManifest();
        java.util.jar.Manifest manifest79 = explodedArchive45.getManifest();
        java.io.File file80 = explodedArchive45.root;
        java.io.File file81 = explodedArchive45.manifestFile;
        java.io.File file82 = explodedArchive45.manifestFile;
        fileEntry41.file = file82;
        fileEntry37.file = file82;
        java.io.File file85 = explodedArchive0.getManifestFile(file82);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive(file82, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "exploded archive" + "'", str44, "exploded archive");
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest76);
        org.junit.Assert.assertNull(manifest77);
        org.junit.Assert.assertNull(manifest78);
        org.junit.Assert.assertNull(manifest79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2311");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str73 = uRL72.getFile();
        java.lang.String str74 = uRL72.getUserInfo();
        java.lang.String str75 = uRL72.getPath();
        java.net.URL uRL77 = new java.net.URL(uRL72, "hi!");
        java.net.URI uRI78 = uRL72.toURI();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream79 = uRL72.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str73, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str75, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL77.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(uRI78);
    }

    @Test
    public void test2312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2312");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.net.URI uRI19 = uRL3.toURI();
        java.lang.String str20 = uRL3.getUserInfo();
        java.net.URLConnection uRLConnection21 = uRL3.openConnection();
        java.lang.String str22 = uRL3.getHost();
        java.lang.String str23 = uRL3.getRef();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(uRI19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(uRLConnection21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test2313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2313");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file://exploded archive", "hi!", (int) (short) 100, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2314");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file18 = fileEntryIterator17.current;
        boolean boolean19 = fileEntryIterator17.hasNext();
        fileEntryIterator17.recursive = true;
        boolean boolean22 = fileEntryIterator17.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        boolean boolean25 = explodedArchive23.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = null;
        fileEntryIterator26.current = file28;
        java.io.File file30 = fileEntryIterator26.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file32 = fileEntry31.getFile();
        java.lang.String str33 = fileEntry31.name;
        java.io.File file34 = fileEntry31.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        boolean boolean37 = fileEntryIterator35.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        boolean boolean43 = explodedArchive38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        fileEntryIterator44.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator54.thenComparing(fileComparator57);
        fileEntryIterator49.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator54.thenComparing(fileComparator62);
        fileEntryIterator44.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator44.root = file69;
        explodedArchive38.root = file69;
        java.util.Iterator<java.io.File> fileItor72 = fileEntryIterator35.listFiles(file69);
        fileEntry31.file = file69;
        fileEntryIterator26.current = file69;
        explodedArchive23.root = file69;
        java.util.Iterator<java.io.File> fileItor76 = fileEntryIterator17.listFiles(file69);
        explodedArchive0.root = file69;
        java.net.URL uRL78 = explodedArchive0.getUrl();
        boolean boolean79 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest80 = null;
        explodedArchive0.manifest = manifest80;
        java.util.jar.Manifest manifest82 = explodedArchive0.manifest;
        explodedArchive0.recursive = true;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "exploded archive" + "'", str24, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor72);
        org.junit.Assert.assertNotNull(fileItor76);
        org.junit.Assert.assertNotNull(uRL78);
// flaky:         org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(manifest82);
    }

    @Test
    public void test2315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2315");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getQuery();
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URLConnection uRLConnection12 = uRL11.openConnection();
        java.lang.String str13 = uRL11.getHost();
        java.lang.String str14 = uRL11.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2316");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.lang.String str3 = fileEntry0.getName();
        java.lang.String str4 = fileEntry0.getName();
        java.lang.String str5 = fileEntry0.name;
        fileEntry0.name = "hi!";
        java.io.File file8 = fileEntry0.file;
        fileEntry0.name = "";
        java.lang.String str11 = fileEntry0.name;
        java.lang.String str12 = fileEntry0.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test2317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2317");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.net.URL uRL25 = explodedArchive0.getUrl();
        java.lang.String str26 = uRL25.getRef();
        java.lang.String str27 = uRL25.getHost();
        java.lang.String str28 = uRL25.toExternalForm();
        java.lang.String str29 = uRL25.toExternalForm();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNotNull(uRL25);
// flaky:         org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str28, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str29, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2318");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator38 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest39 = null;
        explodedArchive0.manifest = manifest39;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive0.getNestedArchives(entryFilter43);
        java.util.jar.Manifest manifest45 = null;
        explodedArchive0.manifest = manifest45;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(entrySpliterator38);
        org.junit.Assert.assertNotNull(archiveList44);
    }

    @Test
    public void test2319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2319");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.lang.String str2 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean5 = fileEntryIterator4.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean7 = explodedArchive6.recursive;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive6.manifest = manifest9;
        java.io.File file11 = explodedArchive6.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        java.io.File file15 = fileEntryIterator12.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.manifestFile;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.io.File file19 = null;
        java.io.File file20 = explodedArchive16.getManifestFile(file19);
        fileEntryIterator12.current = file20;
        explodedArchive6.root = file20;
        fileEntryIterator4.root = file20;
        explodedArchive3.root = file20;
        java.io.File file25 = explodedArchive3.root;
        explodedArchive0.manifestFile = file25;
        java.io.File file27 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean29 = explodedArchive28.recursive;
        boolean boolean30 = explodedArchive28.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.manifestFile;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.io.File file34 = null;
        java.io.File file35 = explodedArchive31.getManifestFile(file34);
        explodedArchive28.root = file35;
        explodedArchive28.recursive = false;
        java.io.File file39 = explodedArchive28.root;
        java.io.File file40 = explodedArchive0.getManifestFile(file39);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "exploded archive" + "'", str2, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2320");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        boolean boolean17 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.io.File file21 = null;
        java.io.File file22 = explodedArchive18.getManifestFile(file21);
        java.io.File file23 = explodedArchive0.getManifestFile(file22);
        java.util.jar.Manifest manifest24 = null;
        explodedArchive0.manifest = manifest24;
        explodedArchive0.recursive = true;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2321");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.net.URL uRL6 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.lang.String str7 = uRL3.getFile();
        java.net.URLConnection uRLConnection8 = uRL3.openConnection();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream9 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection8);
    }

    @Test
    public void test2322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2322");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.lang.String str73 = uRL69.getUserInfo();
        java.net.URLConnection uRLConnection74 = uRL69.openConnection();
        int int75 = uRL69.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream76 = uRL69.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(uRLConnection74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
    }

    @Test
    public void test2323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2323");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", (int) ' ', "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2324");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean3 = explodedArchive2.recursive;
        java.io.File file4 = explodedArchive2.manifestFile;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive2.manifest = manifest5;
        java.io.File file7 = explodedArchive2.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.io.File file11 = fileEntryIterator8.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        fileEntryIterator8.current = file16;
        explodedArchive2.root = file16;
        fileEntryIterator0.root = file16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file21 = fileEntry20.getFile();
        java.io.File file22 = fileEntry20.file;
        fileEntry20.name = "";
        java.lang.String str25 = fileEntry20.name;
        java.io.File file26 = fileEntry20.file;
        java.io.File file27 = fileEntry20.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.manifestFile;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.io.File file31 = null;
        java.io.File file32 = explodedArchive28.getManifestFile(file31);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file34 = fileEntry33.getFile();
        java.lang.String str35 = fileEntry33.name;
        java.io.File file36 = fileEntry33.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        boolean boolean39 = fileEntryIterator37.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        boolean boolean45 = explodedArchive40.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        fileEntryIterator46.recursive = true;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        java.util.Comparator<java.io.File> fileComparator60 = fileComparator56.thenComparing(fileComparator59);
        fileEntryIterator51.entryComparator = fileComparator56;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        java.util.Comparator<java.io.File> fileComparator65 = fileComparator56.thenComparing(fileComparator64);
        fileEntryIterator46.entryComparator = fileComparator65;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file68 = explodedArchive67.manifestFile;
        java.io.File file69 = explodedArchive67.manifestFile;
        java.io.File file70 = null;
        java.io.File file71 = explodedArchive67.getManifestFile(file70);
        fileEntryIterator46.root = file71;
        explodedArchive40.root = file71;
        java.util.Iterator<java.io.File> fileItor74 = fileEntryIterator37.listFiles(file71);
        fileEntry33.file = file71;
        explodedArchive28.manifestFile = file71;
        fileEntry20.file = file71;
        java.io.File file78 = fileEntry20.getFile();
        boolean boolean79 = fileEntry20.isDirectory();
        java.io.File file80 = fileEntry20.getFile();
        java.util.Iterator<java.io.File> fileItor81 = fileEntryIterator0.listFiles(file80);
        java.util.Comparator<java.io.File> fileComparator82 = fileEntryIterator0.entryComparator;
        java.io.File file83 = fileEntryIterator0.root;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry84 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor74);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2325");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = null;
        fileEntryIterator0.current = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.manifestFile;
        java.io.File file6 = explodedArchive4.manifestFile;
        java.lang.String str7 = explodedArchive4.toString();
        java.io.File file8 = explodedArchive4.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file10 = fileEntryIterator9.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator9.entryComparator = fileComparator25;
        java.io.File file27 = fileEntryIterator9.root;
        java.io.File file28 = fileEntryIterator9.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        boolean boolean34 = explodedArchive29.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        fileEntryIterator35.recursive = true;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        java.util.Comparator<java.io.File> fileComparator49 = fileComparator45.thenComparing(fileComparator48);
        fileEntryIterator40.entryComparator = fileComparator45;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        java.util.Comparator<java.io.File> fileComparator54 = fileComparator45.thenComparing(fileComparator53);
        fileEntryIterator35.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file57 = explodedArchive56.manifestFile;
        java.io.File file58 = explodedArchive56.manifestFile;
        java.io.File file59 = null;
        java.io.File file60 = explodedArchive56.getManifestFile(file59);
        fileEntryIterator35.root = file60;
        explodedArchive29.root = file60;
        explodedArchive29.recursive = false;
        java.util.jar.Manifest manifest65 = null;
        explodedArchive29.manifest = manifest65;
        java.lang.String str67 = explodedArchive29.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter68 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList69 = explodedArchive29.getNestedArchives(entryFilter68);
        java.io.File file70 = explodedArchive29.root;
        explodedArchive29.recursive = true;
        java.io.File file73 = explodedArchive29.root;
        fileEntryIterator9.root = file73;
        explodedArchive4.root = file73;
        fileEntryIterator0.current = file73;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file73, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str67, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList69);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2326");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        int int15 = uRL14.getDefaultPort();
        java.lang.String str16 = uRL14.getAuthority();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test2327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2327");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        boolean boolean38 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive39.manifest = manifest42;
        java.io.File file44 = explodedArchive39.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        java.io.File file48 = fileEntryIterator45.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        fileEntryIterator45.current = file53;
        explodedArchive39.root = file53;
        java.util.jar.Manifest manifest56 = explodedArchive39.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        boolean boolean62 = explodedArchive57.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        fileEntryIterator63.recursive = true;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.util.Comparator<java.io.File> fileComparator73 = fileEntryIterator71.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator73.thenComparing(fileComparator76);
        fileEntryIterator68.entryComparator = fileComparator73;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.util.Comparator<java.io.File> fileComparator81 = fileEntryIterator79.entryComparator;
        java.util.Comparator<java.io.File> fileComparator82 = fileComparator73.thenComparing(fileComparator81);
        fileEntryIterator63.entryComparator = fileComparator82;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file85 = explodedArchive84.manifestFile;
        java.io.File file86 = explodedArchive84.manifestFile;
        java.io.File file87 = null;
        java.io.File file88 = explodedArchive84.getManifestFile(file87);
        fileEntryIterator63.root = file88;
        explodedArchive57.root = file88;
        java.io.File file91 = explodedArchive39.getManifestFile(file88);
        java.io.File file92 = explodedArchive0.getManifestFile(file88);
        java.lang.Class<?> wildcardClass93 = file88.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest56);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2328");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLConnection uRLConnection9 = uRL3.openConnection();
        java.lang.String str10 = uRL3.toExternalForm();
        java.lang.String str11 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(uRLConnection9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2329");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", (int) (short) 0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2330");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        boolean boolean3 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator9.thenComparing(fileComparator17);
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator17.reversed();
        fileEntryIterator0.entryComparator = fileComparator17;
        boolean boolean21 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file23 = fileEntryIterator22.current;
        java.io.File file24 = fileEntryIterator22.poll();
        java.io.File file25 = fileEntryIterator22.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator38 = fileComparator31.thenComparing((java.util.Comparator<java.io.File>) entryComparator37);
        fileEntryIterator22.entryComparator = entryComparator37;
        java.io.File file40 = fileEntryIterator22.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean43 = fileEntryIterator42.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean45 = explodedArchive44.recursive;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.util.jar.Manifest manifest47 = null;
        explodedArchive44.manifest = manifest47;
        java.io.File file49 = explodedArchive44.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        java.io.File file53 = fileEntryIterator50.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        java.io.File file57 = null;
        java.io.File file58 = explodedArchive54.getManifestFile(file57);
        fileEntryIterator50.current = file58;
        explodedArchive44.root = file58;
        fileEntryIterator42.root = file58;
        explodedArchive41.root = file58;
        fileEntryIterator22.current = file58;
        fileEntryIterator0.root = file58;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        fileEntryIterator68.recursive = true;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator68.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator76 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue77 = fileEntryIterator76.stack;
        java.util.Comparator<java.io.File> fileComparator78 = fileEntryIterator76.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.util.Comparator<java.io.File> fileComparator81 = fileEntryIterator79.entryComparator;
        java.util.Comparator<java.io.File> fileComparator82 = fileComparator78.thenComparing(fileComparator81);
        fileEntryIterator73.entryComparator = fileComparator78;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator84 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue85 = fileEntryIterator84.stack;
        java.util.Comparator<java.io.File> fileComparator86 = fileEntryIterator84.entryComparator;
        java.util.Comparator<java.io.File> fileComparator87 = fileComparator78.thenComparing(fileComparator86);
        fileEntryIterator68.entryComparator = fileComparator87;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive89 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file90 = explodedArchive89.manifestFile;
        java.io.File file91 = explodedArchive89.manifestFile;
        java.io.File file92 = null;
        java.io.File file93 = explodedArchive89.getManifestFile(file92);
        fileEntryIterator68.root = file93;
        explodedArchive65.manifestFile = file93;
        fileEntryIterator0.current = file93;
        boolean boolean97 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileItorQueue77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNotNull(fileItorQueue85);
        org.junit.Assert.assertNotNull(fileComparator86);
        org.junit.Assert.assertNotNull(fileComparator87);
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNull(file91);
        org.junit.Assert.assertNotNull(file93);
        org.junit.Assert.assertEquals(file93.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file93.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test2331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2331");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive0.getNestedArchives(entryFilter9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(manifest8);
    }

    @Test
    public void test2332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2332");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getRef();
        java.net.URL uRL8 = null;
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getHost();
        java.lang.String str13 = uRL11.getAuthority();
        java.lang.String str14 = uRL11.getQuery();
        int int15 = uRL11.getDefaultPort();
        java.lang.String str16 = uRL11.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler18 = null;
        java.net.URL uRL19 = new java.net.URL(uRL11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler18);
        java.lang.String str20 = uRL19.getFile();
        boolean boolean21 = uRL3.sameFile(uRL19);
        java.lang.String str22 = uRL19.getUserInfo();
        int int23 = uRL19.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = uRL19.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL19.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str20, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test2333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2333");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.net.URL uRL38 = explodedArchive0.getUrl();
        int int39 = uRL38.getDefaultPort();
        java.net.URLConnection uRLConnection40 = uRL38.openConnection();
        java.net.URLStreamHandler uRLStreamHandler42 = null;
        java.net.URL uRL43 = new java.net.URL(uRL38, "file", uRLStreamHandler42);
        java.lang.String str44 = uRL38.getAuthority();
        java.lang.String str45 = uRL38.getHost();
        int int46 = uRL38.getDefaultPort();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(uRLConnection40);
// flaky:         org.junit.Assert.assertEquals(uRL43.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test2334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2334");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL8 = null;
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getHost();
        java.net.URI uRI13 = uRL11.toURI();
        java.lang.String str14 = uRL11.toExternalForm();
        boolean boolean15 = uRL3.sameFile(uRL11);
        java.lang.String str16 = uRL11.getHost();
        java.net.URL uRL18 = new java.net.URL(uRL11, "");
        java.net.URLConnection uRLConnection19 = uRL11.openConnection();
        java.lang.String str20 = uRL11.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(uRI13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals(uRL18.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str20, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2335");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator3.entryComparator = fileComparator19;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator3.stack;
        fileEntryIterator0.stack = fileItorQueue21;
        boolean boolean23 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        fileEntryIterator24.recursive = true;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        java.util.Comparator<java.io.File> fileComparator38 = fileComparator34.thenComparing(fileComparator37);
        fileEntryIterator29.entryComparator = fileComparator34;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.util.Comparator<java.io.File> fileComparator43 = fileComparator34.thenComparing(fileComparator42);
        fileEntryIterator24.entryComparator = fileComparator43;
        fileEntryIterator24.recursive = true;
        fileEntryIterator24.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator24.stack;
        boolean boolean50 = fileEntryIterator24.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.io.File file53 = fileEntryIterator51.current;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator51.stack;
        fileEntryIterator24.stack = fileItorQueue54;
        fileEntryIterator0.stack = fileItorQueue54;
        fileEntryIterator0.recursive = false;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(fileItorQueue54);
    }

    @Test
    public void test2336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2336");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        java.io.File file18 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        fileEntryIterator19.recursive = true;
        boolean boolean23 = fileEntryIterator19.hasNext();
        fileEntryIterator19.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        fileEntryIterator26.recursive = true;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator36.thenComparing(fileComparator39);
        fileEntryIterator31.entryComparator = fileComparator36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        java.util.Comparator<java.io.File> fileComparator45 = fileComparator36.thenComparing(fileComparator44);
        fileEntryIterator26.entryComparator = fileComparator45;
        fileEntryIterator26.recursive = true;
        fileEntryIterator26.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator26.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean53 = explodedArchive52.recursive;
        boolean boolean54 = explodedArchive52.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.manifestFile;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.io.File file58 = null;
        java.io.File file59 = explodedArchive55.getManifestFile(file58);
        explodedArchive52.root = file59;
        fileEntryIterator26.root = file59;
        fileEntryIterator19.root = file59;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator19.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator63;
        java.io.File file65 = fileEntryIterator0.current;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file65);
    }

    @Test
    public void test2337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2337");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "";
        java.io.File file5 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean7 = explodedArchive6.recursive;
        boolean boolean8 = explodedArchive6.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.io.File file12 = null;
        java.io.File file13 = explodedArchive9.getManifestFile(file12);
        explodedArchive6.root = file13;
        explodedArchive6.recursive = false;
        java.io.File file17 = explodedArchive6.root;
        fileEntry0.file = file17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean20 = explodedArchive19.recursive;
        boolean boolean21 = explodedArchive19.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.manifestFile;
        java.io.File file24 = explodedArchive22.manifestFile;
        java.io.File file25 = null;
        java.io.File file26 = explodedArchive22.getManifestFile(file25);
        explodedArchive19.root = file26;
        fileEntry0.file = file26;
        java.io.File file29 = fileEntry0.file;
        java.io.File file30 = fileEntry0.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2338");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file", "file://exploded archive:0", (int) '#', "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: Illegal character found in host: '/'");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2339");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        boolean boolean69 = explodedArchive0.recursive;
        explodedArchive0.recursive = false;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator72 = explodedArchive0.spliterator();
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor73 = explodedArchive0.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(entrySpliterator72);
        org.junit.Assert.assertNotNull(entryItor73);
    }

    @Test
    public void test2340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2340");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor9 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
    }

    @Test
    public void test2341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2341");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        boolean boolean22 = uRL11.sameFile(uRL21);
        java.lang.String str23 = uRL11.getProtocol();
        java.net.URL uRL24 = null;
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL24, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler26);
        java.lang.String str28 = uRL27.getHost();
        int int29 = uRL27.getPort();
        java.net.URL uRL30 = null;
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL30, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler32);
        java.lang.String str34 = uRL33.getHost();
        java.lang.String str35 = uRL33.getAuthority();
        java.lang.String str36 = uRL33.getQuery();
        int int37 = uRL33.getDefaultPort();
        boolean boolean38 = uRL27.sameFile(uRL33);
        java.lang.String str39 = uRL33.getFile();
        boolean boolean40 = uRL11.sameFile(uRL33);
        java.lang.String str41 = uRL33.getFile();
        java.lang.String str42 = uRL33.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file" + "'", str23, "file");
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str41, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str42, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2342");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        int int13 = uRL11.getDefaultPort();
        java.lang.String str14 = uRL11.getUserInfo();
        java.lang.String str15 = uRL11.getRef();
        int int16 = uRL11.getPort();
        java.lang.String str17 = uRL11.getQuery();
        java.lang.String str18 = uRL11.getRef();
        int int19 = uRL11.getPort();
        java.net.URLConnection uRLConnection20 = uRL11.openConnection();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(uRLConnection20);
    }

    @Test
    public void test2343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2343");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str75 = uRL74.getRef();
        java.lang.String str76 = uRL74.getUserInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj77 = uRL74.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test2344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2344");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file4 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.manifestFile;
        explodedArchive5.recursive = true;
        java.lang.String str9 = explodedArchive5.toString();
        boolean boolean10 = explodedArchive5.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file12 = fileEntryIterator11.current;
        java.io.File file13 = fileEntryIterator11.poll();
        java.io.File file14 = fileEntryIterator11.poll();
        java.io.File file15 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.io.File file18 = fileEntryIterator16.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.manifestFile;
        java.io.File file21 = explodedArchive19.manifestFile;
        java.io.File file22 = null;
        java.io.File file23 = explodedArchive19.getManifestFile(file22);
        fileEntryIterator16.root = file22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        java.util.Iterator<java.io.File> fileItor30 = fileEntryIterator16.listFiles(file29);
        fileEntryIterator11.root = file29;
        explodedArchive5.manifestFile = file29;
        explodedArchive5.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        boolean boolean40 = explodedArchive35.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        fileEntryIterator41.recursive = true;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator41.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        java.util.Comparator<java.io.File> fileComparator55 = fileComparator51.thenComparing(fileComparator54);
        fileEntryIterator46.entryComparator = fileComparator51;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        java.util.Comparator<java.io.File> fileComparator60 = fileComparator51.thenComparing(fileComparator59);
        fileEntryIterator41.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        fileEntryIterator41.root = file66;
        explodedArchive35.root = file66;
        explodedArchive35.recursive = false;
        java.util.jar.Manifest manifest71 = null;
        explodedArchive35.manifest = manifest71;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file74 = fileEntryIterator73.current;
        java.io.File file75 = fileEntryIterator73.poll();
        java.io.File file76 = fileEntryIterator73.poll();
        java.io.File file77 = fileEntryIterator73.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator78.stack;
        java.io.File file80 = fileEntryIterator78.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file82 = explodedArchive81.manifestFile;
        java.io.File file83 = explodedArchive81.manifestFile;
        java.io.File file84 = null;
        java.io.File file85 = explodedArchive81.getManifestFile(file84);
        fileEntryIterator78.root = file84;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file88 = explodedArchive87.manifestFile;
        java.io.File file89 = explodedArchive87.manifestFile;
        java.io.File file90 = null;
        java.io.File file91 = explodedArchive87.getManifestFile(file90);
        java.util.Iterator<java.io.File> fileItor92 = fileEntryIterator78.listFiles(file91);
        fileEntryIterator73.root = file91;
        explodedArchive35.root = file91;
        java.io.File file95 = explodedArchive35.root;
        java.io.File file96 = explodedArchive35.root;
        java.io.File file97 = explodedArchive5.getManifestFile(file96);
        fileEntryIterator0.root = file96;
        java.io.File file99 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "exploded archive" + "'", str9, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor30);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor92);
        org.junit.Assert.assertNotNull(file95);
        org.junit.Assert.assertEquals(file95.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file95.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file96);
        org.junit.Assert.assertEquals(file96.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file96.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file97);
        org.junit.Assert.assertEquals(file97.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file97.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file99);
    }

    @Test
    public void test2345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2345");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getAuthority();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        int int76 = uRL74.getPort();
        java.net.URL uRL77 = null;
        java.net.URLStreamHandler uRLStreamHandler79 = null;
        java.net.URL uRL80 = new java.net.URL(uRL77, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler79);
        java.lang.String str81 = uRL80.getHost();
        int int82 = uRL80.getPort();
        java.net.URL uRL83 = null;
        java.net.URLStreamHandler uRLStreamHandler85 = null;
        java.net.URL uRL86 = new java.net.URL(uRL83, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler85);
        java.lang.String str87 = uRL86.getHost();
        java.lang.String str88 = uRL86.getAuthority();
        java.lang.String str89 = uRL86.getQuery();
        int int90 = uRL86.getDefaultPort();
        boolean boolean91 = uRL80.sameFile(uRL86);
        boolean boolean92 = uRL74.sameFile(uRL80);
        boolean boolean93 = uRL69.sameFile(uRL74);
        java.lang.String str94 = uRL69.getProtocol();
        java.lang.String str95 = uRL69.getPath();
        java.lang.String str96 = uRL69.getAuthority();
        java.net.URL uRL98 = new java.net.URL(uRL69, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        java.lang.String str99 = uRL98.getHost();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertEquals(uRL80.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertEquals(uRL86.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "file" + "'", str94, "file");
// flaky:         org.junit.Assert.assertEquals("'" + str95 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str95, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
        org.junit.Assert.assertEquals(uRL98.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "" + "'", str99, "");
    }

    @Test
    public void test2346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2346");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) '#', "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: Illegal character found in host: '/'");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2347");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        fileEntry0.name = "";
        fileEntry0.name = "hi!";
        java.lang.String str6 = fileEntry0.getName();
        java.lang.String str7 = fileEntry0.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test2348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2348");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str8 = fileEntry7.name;
        java.io.File file9 = fileEntry7.file;
        fileEntry7.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        boolean boolean14 = fileEntryIterator12.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.manifestFile;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.io.File file18 = null;
        java.io.File file19 = explodedArchive15.getManifestFile(file18);
        boolean boolean20 = explodedArchive15.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        fileEntryIterator21.recursive = true;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator21.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator21.root = file46;
        explodedArchive15.root = file46;
        java.util.Iterator<java.io.File> fileItor49 = fileEntryIterator12.listFiles(file46);
        fileEntry7.file = file46;
        explodedArchive0.manifestFile = file46;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor52 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor49);
    }

    @Test
    public void test2349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2349");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.root;
        boolean boolean3 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        explodedArchive0.recursive = true;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator10 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test2350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2350");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator5.stack;
        fileEntryIterator0.stack = fileItorQueue8;
        boolean boolean10 = fileEntryIterator0.hasNext();
        java.io.File file11 = fileEntryIterator0.root;
        fileEntryIterator0.recursive = true;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry14 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test2351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2351");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = null;
        fileEntryIterator0.current = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean5 = explodedArchive4.recursive;
        java.io.File file6 = explodedArchive4.manifestFile;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive4.manifest = manifest7;
        java.io.File file9 = explodedArchive4.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.io.File file13 = fileEntryIterator10.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator10.current = file18;
        explodedArchive4.root = file18;
        fileEntryIterator0.root = file18;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2352");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        boolean boolean4 = explodedArchive0.recursive;
        boolean boolean5 = explodedArchive0.recursive;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test2353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2353");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "hi!", 100, "hi!", uRLStreamHandler4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean8 = fileEntryIterator7.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean10 = explodedArchive9.recursive;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive9.manifest = manifest12;
        java.io.File file14 = explodedArchive9.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.io.File file18 = fileEntryIterator15.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.manifestFile;
        java.io.File file21 = explodedArchive19.manifestFile;
        java.io.File file22 = null;
        java.io.File file23 = explodedArchive19.getManifestFile(file22);
        fileEntryIterator15.current = file23;
        explodedArchive9.root = file23;
        fileEntryIterator7.root = file23;
        explodedArchive6.root = file23;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator28 = explodedArchive6.spliterator();
        java.io.File file29 = explodedArchive6.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str31 = fileEntry30.name;
        java.io.File file32 = fileEntry30.file;
        fileEntry30.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        boolean boolean37 = fileEntryIterator35.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        boolean boolean43 = explodedArchive38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        fileEntryIterator44.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator54.thenComparing(fileComparator57);
        fileEntryIterator49.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator54.thenComparing(fileComparator62);
        fileEntryIterator44.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator44.root = file69;
        explodedArchive38.root = file69;
        java.util.Iterator<java.io.File> fileItor72 = fileEntryIterator35.listFiles(file69);
        fileEntry30.file = file69;
        explodedArchive6.root = file69;
        java.net.URL uRL75 = explodedArchive6.getUrl();
        java.lang.String str76 = uRL75.getUserInfo();
        java.net.URL uRL78 = new java.net.URL(uRL75, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URLStreamHandler uRLStreamHandler80 = null;
        java.net.URL uRL81 = new java.net.URL(uRL78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler80);
        int int82 = uRL81.getDefaultPort();
        boolean boolean83 = uRL5.sameFile(uRL81);
        int int84 = uRL81.getDefaultPort();
        java.lang.String str85 = uRL81.getQuery();
        java.lang.String str86 = uRL81.getUserInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream87 = uRL81.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL5.toString(), "file://hi!:100hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor72);
        org.junit.Assert.assertNotNull(uRL75);
// flaky:         org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL81.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test2354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2354");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        boolean boolean6 = explodedArchive0.recursive;
        java.lang.String str7 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str9 = fileEntry8.name;
        java.io.File file10 = fileEntry8.file;
        fileEntry8.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        boolean boolean15 = fileEntryIterator13.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.manifestFile;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.io.File file19 = null;
        java.io.File file20 = explodedArchive16.getManifestFile(file19);
        boolean boolean21 = explodedArchive16.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        fileEntryIterator22.recursive = true;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator32.thenComparing(fileComparator35);
        fileEntryIterator27.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator32.thenComparing(fileComparator40);
        fileEntryIterator22.entryComparator = fileComparator41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.manifestFile;
        java.io.File file45 = explodedArchive43.manifestFile;
        java.io.File file46 = null;
        java.io.File file47 = explodedArchive43.getManifestFile(file46);
        fileEntryIterator22.root = file47;
        explodedArchive16.root = file47;
        java.util.Iterator<java.io.File> fileItor50 = fileEntryIterator13.listFiles(file47);
        fileEntry8.file = file47;
        explodedArchive0.root = file47;
        boolean boolean53 = explodedArchive0.recursive;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test2355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2355");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.lang.String str5 = uRL3.getFile();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL9 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.lang.String str10 = uRL9.getUserInfo();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getPath();
        java.lang.String str13 = uRL9.getPath();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str5, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str12, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str13, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test2356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2356");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        fileEntry0.name = "file";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        boolean boolean9 = fileEntryIterator7.hasNext();
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator16.thenComparing((java.util.Comparator<java.io.File>) entryComparator22);
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator10.thenComparing((java.util.Comparator<java.io.File>) entryComparator22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean26 = fileEntryIterator25.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean28 = explodedArchive27.recursive;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.util.jar.Manifest manifest30 = null;
        explodedArchive27.manifest = manifest30;
        java.io.File file32 = explodedArchive27.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.io.File file36 = fileEntryIterator33.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        fileEntryIterator33.current = file41;
        explodedArchive27.root = file41;
        fileEntryIterator25.root = file41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        boolean boolean50 = explodedArchive45.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        fileEntryIterator51.recursive = true;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        java.util.Comparator<java.io.File> fileComparator65 = fileComparator61.thenComparing(fileComparator64);
        fileEntryIterator56.entryComparator = fileComparator61;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator61.thenComparing(fileComparator69);
        fileEntryIterator51.entryComparator = fileComparator70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file73 = explodedArchive72.manifestFile;
        java.io.File file74 = explodedArchive72.manifestFile;
        java.io.File file75 = null;
        java.io.File file76 = explodedArchive72.getManifestFile(file75);
        fileEntryIterator51.root = file76;
        explodedArchive45.root = file76;
        int int79 = entryComparator22.compare(file41, file76);
        fileEntry0.file = file76;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
    }

    @Test
    public void test2357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2357");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        boolean boolean5 = fileEntryIterator3.hasNext();
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator12.thenComparing(fileComparator15);
        fileEntryIterator7.entryComparator = fileComparator12;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator12.thenComparing((java.util.Comparator<java.io.File>) entryComparator18);
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator6.thenComparing((java.util.Comparator<java.io.File>) entryComparator18);
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator6.reversed();
        fileEntryIterator0.entryComparator = fileComparator21;
        boolean boolean23 = fileEntryIterator0.recursive;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test2358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2358");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.io.File file18 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        fileEntryIterator0.entryComparator = entryComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator29.thenComparing(fileComparator32);
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator26.thenComparing(fileComparator32);
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator23.thenComparing(fileComparator32);
        java.util.Comparator<java.io.File> fileComparator36 = entryComparator19.thenComparing(fileComparator23);
        java.io.File file37 = null;
        java.io.File file38 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int39 = entryComparator19.compare(file37, file38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
    }

    @Test
    public void test2359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2359");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        boolean boolean6 = fileEntryIterator4.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        boolean boolean12 = explodedArchive7.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        fileEntryIterator13.recursive = true;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator23.thenComparing(fileComparator26);
        fileEntryIterator18.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator23.thenComparing(fileComparator31);
        fileEntryIterator13.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator13.root = file38;
        explodedArchive7.root = file38;
        java.util.Iterator<java.io.File> fileItor41 = fileEntryIterator4.listFiles(file38);
        fileEntry0.file = file38;
        fileEntry0.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        java.lang.String str45 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str47 = fileEntry46.name;
        java.lang.String str48 = fileEntry46.name;
        java.lang.String str49 = fileEntry46.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file51 = fileEntryIterator50.current;
        java.io.File file52 = fileEntryIterator50.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file54 = fileEntryIterator53.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator60.thenComparing(fileComparator63);
        fileEntryIterator55.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator60.thenComparing(fileComparator68);
        fileEntryIterator53.entryComparator = fileComparator69;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator53.stack;
        fileEntryIterator50.stack = fileItorQueue71;
        boolean boolean73 = fileEntryIterator50.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean76 = fileEntryIterator75.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean78 = explodedArchive77.recursive;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.util.jar.Manifest manifest80 = null;
        explodedArchive77.manifest = manifest80;
        java.io.File file82 = explodedArchive77.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator83 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue84 = fileEntryIterator83.stack;
        java.util.Comparator<java.io.File> fileComparator85 = fileEntryIterator83.entryComparator;
        java.io.File file86 = fileEntryIterator83.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file88 = explodedArchive87.manifestFile;
        java.io.File file89 = explodedArchive87.manifestFile;
        java.io.File file90 = null;
        java.io.File file91 = explodedArchive87.getManifestFile(file90);
        fileEntryIterator83.current = file91;
        explodedArchive77.root = file91;
        fileEntryIterator75.root = file91;
        explodedArchive74.root = file91;
        java.util.Iterator<java.io.File> fileItor96 = fileEntryIterator50.listFiles(file91);
        fileEntry46.file = file91;
        fileEntry0.file = file91;
        boolean boolean99 = fileEntry0.isDirectory();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str45, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNotNull(fileItorQueue84);
        org.junit.Assert.assertNotNull(fileComparator85);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor96);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test2360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2360");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.getName();
        java.io.File file6 = fileEntry0.getFile();
        java.lang.String str7 = fileEntry0.name;
        java.io.File file8 = fileEntry0.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test2361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2361");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        boolean boolean26 = fileEntryIterator0.recursive;
        java.io.File file27 = fileEntryIterator0.current;
        java.io.File file28 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
    }

    @Test
    public void test2362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2362");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.io.File file4 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file8 = fileEntry7.getFile();
        java.io.File file9 = fileEntry7.file;
        fileEntry7.name = "";
        java.io.File file12 = fileEntry7.file;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean14 = explodedArchive13.recursive;
        boolean boolean15 = explodedArchive13.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.manifestFile;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.io.File file19 = null;
        java.io.File file20 = explodedArchive16.getManifestFile(file19);
        explodedArchive13.root = file20;
        explodedArchive13.recursive = false;
        java.io.File file24 = explodedArchive13.root;
        fileEntry7.file = file24;
        java.io.File file26 = fileEntry7.getFile();
        java.io.File file27 = fileEntry7.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive28 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2363");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.root;
        java.io.File file4 = explodedArchive0.root;
        explodedArchive0.recursive = false;
        explodedArchive0.recursive = true;
        java.io.File file9 = explodedArchive0.manifestFile;
        boolean boolean10 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.manifestFile;
        java.io.File file13 = explodedArchive11.manifestFile;
        java.lang.String str14 = explodedArchive11.toString();
        java.util.jar.Manifest manifest15 = null;
        explodedArchive11.manifest = manifest15;
        java.lang.String str17 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        boolean boolean20 = fileEntryIterator18.hasNext();
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator27.thenComparing(fileComparator30);
        fileEntryIterator22.entryComparator = fileComparator27;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator27.thenComparing((java.util.Comparator<java.io.File>) entryComparator33);
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator21.thenComparing((java.util.Comparator<java.io.File>) entryComparator33);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean37 = fileEntryIterator36.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean39 = explodedArchive38.recursive;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.util.jar.Manifest manifest41 = null;
        explodedArchive38.manifest = manifest41;
        java.io.File file43 = explodedArchive38.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator44.entryComparator;
        java.io.File file47 = fileEntryIterator44.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        fileEntryIterator44.current = file52;
        explodedArchive38.root = file52;
        fileEntryIterator36.root = file52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file57 = explodedArchive56.manifestFile;
        java.io.File file58 = explodedArchive56.manifestFile;
        java.io.File file59 = null;
        java.io.File file60 = explodedArchive56.getManifestFile(file59);
        boolean boolean61 = explodedArchive56.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        fileEntryIterator62.recursive = true;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator70.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        java.util.Comparator<java.io.File> fileComparator76 = fileComparator72.thenComparing(fileComparator75);
        fileEntryIterator67.entryComparator = fileComparator72;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator78.stack;
        java.util.Comparator<java.io.File> fileComparator80 = fileEntryIterator78.entryComparator;
        java.util.Comparator<java.io.File> fileComparator81 = fileComparator72.thenComparing(fileComparator80);
        fileEntryIterator62.entryComparator = fileComparator81;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file84 = explodedArchive83.manifestFile;
        java.io.File file85 = explodedArchive83.manifestFile;
        java.io.File file86 = null;
        java.io.File file87 = explodedArchive83.getManifestFile(file86);
        fileEntryIterator62.root = file87;
        explodedArchive56.root = file87;
        int int90 = entryComparator33.compare(file52, file87);
        java.io.File file91 = explodedArchive11.getManifestFile(file52);
        explodedArchive0.manifestFile = file91;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL93 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "exploded archive" + "'", str14, "exploded archive");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "exploded archive" + "'", str17, "exploded archive");
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2364");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) (byte) 10, "file://exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2365");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file18 = fileEntryIterator17.current;
        boolean boolean19 = fileEntryIterator17.hasNext();
        fileEntryIterator17.recursive = true;
        boolean boolean22 = fileEntryIterator17.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        boolean boolean25 = explodedArchive23.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = null;
        fileEntryIterator26.current = file28;
        java.io.File file30 = fileEntryIterator26.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file32 = fileEntry31.getFile();
        java.lang.String str33 = fileEntry31.name;
        java.io.File file34 = fileEntry31.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        boolean boolean37 = fileEntryIterator35.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        boolean boolean43 = explodedArchive38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        fileEntryIterator44.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator54.thenComparing(fileComparator57);
        fileEntryIterator49.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator54.thenComparing(fileComparator62);
        fileEntryIterator44.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator44.root = file69;
        explodedArchive38.root = file69;
        java.util.Iterator<java.io.File> fileItor72 = fileEntryIterator35.listFiles(file69);
        fileEntry31.file = file69;
        fileEntryIterator26.current = file69;
        explodedArchive23.root = file69;
        java.util.Iterator<java.io.File> fileItor76 = fileEntryIterator17.listFiles(file69);
        explodedArchive0.root = file69;
        java.net.URL uRL78 = explodedArchive0.getUrl();
        boolean boolean79 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest80 = null;
        explodedArchive0.manifest = manifest80;
        java.util.jar.Manifest manifest82 = explodedArchive0.manifest;
        boolean boolean83 = explodedArchive0.recursive;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "exploded archive" + "'", str24, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor72);
        org.junit.Assert.assertNotNull(fileItor76);
        org.junit.Assert.assertNotNull(uRL78);
// flaky:         org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(manifest82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test2366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2366");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        fileEntryIterator0.root = file10;
        java.io.File file13 = fileEntryIterator0.current;
        boolean boolean14 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file16 = fileEntry15.getFile();
        java.io.File file17 = fileEntry15.file;
        fileEntry15.name = "";
        java.io.File file20 = fileEntry15.file;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean22 = explodedArchive21.recursive;
        boolean boolean23 = explodedArchive21.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        explodedArchive21.root = file28;
        explodedArchive21.recursive = false;
        java.io.File file32 = explodedArchive21.root;
        fileEntry15.file = file32;
        java.io.File file34 = fileEntry15.getFile();
        java.io.File file35 = fileEntry15.file;
        fileEntryIterator0.current = file35;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2367");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        boolean boolean4 = fileEntryIterator0.recursive;
        boolean boolean5 = fileEntryIterator0.recursive;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test2368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2368");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        boolean boolean22 = uRL11.sameFile(uRL21);
        java.lang.String str23 = uRL11.getProtocol();
        java.net.URL uRL24 = null;
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL24, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler26);
        java.lang.String str28 = uRL27.getHost();
        int int29 = uRL27.getPort();
        java.net.URL uRL30 = null;
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL30, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler32);
        java.lang.String str34 = uRL33.getHost();
        java.lang.String str35 = uRL33.getAuthority();
        java.lang.String str36 = uRL33.getQuery();
        int int37 = uRL33.getDefaultPort();
        boolean boolean38 = uRL27.sameFile(uRL33);
        java.lang.String str39 = uRL33.getFile();
        boolean boolean40 = uRL11.sameFile(uRL33);
        java.net.URL uRL41 = null;
        java.net.URLStreamHandler uRLStreamHandler43 = null;
        java.net.URL uRL44 = new java.net.URL(uRL41, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler43);
        java.lang.String str45 = uRL44.getHost();
        int int46 = uRL44.getPort();
        java.net.URI uRI47 = uRL44.toURI();
        boolean boolean48 = uRL11.sameFile(uRL44);
        java.lang.String str49 = uRL44.getPath();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file" + "'", str23, "file");
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals(uRL44.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(uRI47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str49, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2369");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getQuery();
        int int10 = uRL3.getDefaultPort();
        java.lang.String str11 = uRL3.getRef();
        java.lang.String str12 = uRL3.getHost();
        java.net.Proxy proxy13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection14 = uRL3.openConnection(proxy13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test2370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2370");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file6 = fileEntry5.getFile();
        java.lang.String str7 = fileEntry5.name;
        java.io.File file8 = fileEntry5.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        boolean boolean11 = fileEntryIterator9.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        boolean boolean17 = explodedArchive12.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        fileEntryIterator18.root = file43;
        explodedArchive12.root = file43;
        java.util.Iterator<java.io.File> fileItor46 = fileEntryIterator9.listFiles(file43);
        fileEntry5.file = file43;
        explodedArchive0.manifestFile = file43;
        java.util.jar.Manifest manifest49 = null;
        explodedArchive0.manifest = manifest49;
        java.util.jar.Manifest manifest51 = explodedArchive0.getManifest();
        boolean boolean52 = explodedArchive0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor53 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor46);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test2371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2371");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URL uRL13 = new java.net.URL(uRL3, "file://exploded archive");
        java.lang.String str14 = uRL13.getProtocol();
        java.lang.String str15 = uRL13.getHost();
        java.lang.String str16 = uRL13.getFile();
        java.lang.String str17 = uRL13.toExternalForm();
        java.lang.Object obj18 = null;
        boolean boolean19 = uRL13.equals(obj18);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL13.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "exploded archive" + "'", str15, "exploded archive");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "file://exploded archive" + "'", str17, "file://exploded archive");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test2372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2372");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getFile();
        java.net.URLConnection uRLConnection14 = uRL11.openConnection();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file16 = fileEntry15.getFile();
        java.lang.String str17 = fileEntry15.name;
        java.io.File file18 = fileEntry15.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        boolean boolean21 = fileEntryIterator19.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.manifestFile;
        java.io.File file24 = explodedArchive22.manifestFile;
        java.io.File file25 = null;
        java.io.File file26 = explodedArchive22.getManifestFile(file25);
        boolean boolean27 = explodedArchive22.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        fileEntryIterator28.recursive = true;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator38.thenComparing(fileComparator41);
        fileEntryIterator33.entryComparator = fileComparator38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator44.entryComparator;
        java.util.Comparator<java.io.File> fileComparator47 = fileComparator38.thenComparing(fileComparator46);
        fileEntryIterator28.entryComparator = fileComparator47;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        fileEntryIterator28.root = file53;
        explodedArchive22.root = file53;
        java.util.Iterator<java.io.File> fileItor56 = fileEntryIterator19.listFiles(file53);
        fileEntry15.file = file53;
        fileEntry15.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        java.io.File file60 = fileEntry15.file;
        java.lang.String str61 = fileEntry15.name;
        java.lang.Class<?> wildcardClass62 = fileEntry15.getClass();
        boolean boolean63 = uRL11.equals((java.lang.Object) fileEntry15);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str13, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection14);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor56);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str61, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test2373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2373");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", 100, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2374");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        int int12 = uRL3.getPort();
        java.net.URLConnection uRLConnection13 = uRL3.openConnection();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(uRLConnection13);
    }

    @Test
    public void test2375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2375");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.io.File file38 = explodedArchive0.root;
        java.util.jar.Manifest manifest39 = explodedArchive0.manifest;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest40 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest39);
    }

    @Test
    public void test2376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2376");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getFile();
        java.lang.String str10 = uRL3.getFile();
        java.lang.String str11 = uRL3.getProtocol();
        java.lang.String str12 = uRL3.getRef();
        java.net.URLConnection uRLConnection13 = uRL3.openConnection();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream14 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file" + "'", str11, "file");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(uRLConnection13);
    }

    @Test
    public void test2377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2377");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest44 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2378");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator0.stack = fileItorQueue8;
        fileEntryIterator0.recursive = true;
        java.io.File file12 = fileEntryIterator0.current;
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.manifestFile;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.io.File file18 = null;
        java.io.File file19 = explodedArchive15.getManifestFile(file18);
        boolean boolean20 = explodedArchive15.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        fileEntryIterator21.recursive = true;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator21.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator21.root = file46;
        explodedArchive15.root = file46;
        explodedArchive15.recursive = false;
        java.util.jar.Manifest manifest51 = null;
        explodedArchive15.manifest = manifest51;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean54 = fileEntryIterator53.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.manifestFile;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.lang.String str58 = explodedArchive55.toString();
        java.lang.String str59 = explodedArchive55.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean61 = fileEntryIterator60.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean63 = explodedArchive62.recursive;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.util.jar.Manifest manifest65 = null;
        explodedArchive62.manifest = manifest65;
        java.io.File file67 = explodedArchive62.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.io.File file71 = fileEntryIterator68.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file73 = explodedArchive72.manifestFile;
        java.io.File file74 = explodedArchive72.manifestFile;
        java.io.File file75 = null;
        java.io.File file76 = explodedArchive72.getManifestFile(file75);
        fileEntryIterator68.current = file76;
        explodedArchive62.root = file76;
        fileEntryIterator60.root = file76;
        java.io.File file80 = explodedArchive55.getManifestFile(file76);
        java.util.Iterator<java.io.File> fileItor81 = fileEntryIterator53.listFiles(file80);
        java.io.File file82 = explodedArchive15.getManifestFile(file80);
        fileEntryIterator0.current = file80;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = new org.springframework.boot.loader.archive.ExplodedArchive(file80, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "exploded archive" + "'", str58, "exploded archive");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "exploded archive" + "'", str59, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor81);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2379");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator38 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest39 = null;
        explodedArchive0.manifest = manifest39;
        java.net.URL uRL41 = explodedArchive0.getUrl();
        java.net.URL uRL42 = null;
        java.net.URLStreamHandler uRLStreamHandler44 = null;
        java.net.URL uRL45 = new java.net.URL(uRL42, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler44);
        java.lang.String str46 = uRL45.getHost();
        java.net.URI uRI47 = uRL45.toURI();
        java.lang.String str48 = uRL45.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler50 = null;
        java.net.URL uRL51 = new java.net.URL(uRL45, "file", uRLStreamHandler50);
        java.lang.String str52 = uRL45.getFile();
        java.net.URL uRL53 = null;
        java.net.URLStreamHandler uRLStreamHandler55 = null;
        java.net.URL uRL56 = new java.net.URL(uRL53, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler55);
        java.lang.String str57 = uRL56.getHost();
        java.lang.String str58 = uRL56.getAuthority();
        java.lang.String str59 = uRL56.getAuthority();
        java.lang.String str60 = uRL56.getRef();
        java.net.URL uRL61 = null;
        java.net.URLStreamHandler uRLStreamHandler63 = null;
        java.net.URL uRL64 = new java.net.URL(uRL61, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler63);
        java.lang.String str65 = uRL64.getHost();
        java.lang.String str66 = uRL64.getAuthority();
        java.lang.String str67 = uRL64.getQuery();
        int int68 = uRL64.getDefaultPort();
        java.lang.String str69 = uRL64.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL64, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.lang.String str73 = uRL72.getFile();
        boolean boolean74 = uRL56.sameFile(uRL72);
        boolean boolean75 = uRL45.sameFile(uRL72);
        java.net.URL uRL76 = null;
        java.net.URLStreamHandler uRLStreamHandler78 = null;
        java.net.URL uRL79 = new java.net.URL(uRL76, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler78);
        java.lang.String str80 = uRL79.getHost();
        java.lang.String str81 = uRL79.getAuthority();
        java.lang.String str82 = uRL79.getAuthority();
        java.lang.String str83 = uRL79.getFile();
        int int84 = uRL79.getPort();
        java.lang.String str85 = uRL79.getRef();
        java.net.URL uRL87 = new java.net.URL(uRL79, "hi!");
        boolean boolean88 = uRL45.sameFile(uRL87);
        int int89 = uRL45.getDefaultPort();
        java.lang.String str90 = uRL45.getQuery();
        java.lang.String str91 = uRL45.getHost();
        boolean boolean92 = uRL41.equals((java.lang.Object) str91);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(entrySpliterator38);
        org.junit.Assert.assertNotNull(uRL41);
// flaky:         org.junit.Assert.assertEquals(uRL41.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(uRI47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str48, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL51.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str52, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL56.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals(uRL64.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str73, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals(uRL79.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str83, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertEquals(uRL87.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test2380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2380");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.io.File file25 = explodedArchive0.manifestFile;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator26 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest27 = null;
        explodedArchive0.manifest = manifest27;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        fileEntryIterator29.recursive = true;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.util.Comparator<java.io.File> fileComparator43 = fileComparator39.thenComparing(fileComparator42);
        fileEntryIterator34.entryComparator = fileComparator39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        java.util.Comparator<java.io.File> fileComparator48 = fileComparator39.thenComparing(fileComparator47);
        fileEntryIterator29.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        fileEntryIterator29.root = file54;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file57 = explodedArchive56.manifestFile;
        java.io.File file58 = explodedArchive56.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        fileEntryIterator59.recursive = true;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator70.entryComparator;
        java.util.Comparator<java.io.File> fileComparator73 = fileComparator69.thenComparing(fileComparator72);
        fileEntryIterator64.entryComparator = fileComparator69;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator75.stack;
        java.util.Comparator<java.io.File> fileComparator77 = fileEntryIterator75.entryComparator;
        java.util.Comparator<java.io.File> fileComparator78 = fileComparator69.thenComparing(fileComparator77);
        fileEntryIterator59.entryComparator = fileComparator78;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file81 = explodedArchive80.manifestFile;
        java.io.File file82 = explodedArchive80.manifestFile;
        java.io.File file83 = null;
        java.io.File file84 = explodedArchive80.getManifestFile(file83);
        fileEntryIterator59.root = file84;
        explodedArchive56.manifestFile = file84;
        java.util.jar.Manifest manifest87 = explodedArchive56.manifest;
        java.util.jar.Manifest manifest88 = explodedArchive56.manifest;
        java.io.File file89 = explodedArchive56.manifestFile;
        java.util.Iterator<java.io.File> fileItor90 = fileEntryIterator29.listFiles(file89);
        explodedArchive0.root = file89;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(entrySpliterator26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest87);
        org.junit.Assert.assertNull(manifest88);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor90);
    }

    @Test
    public void test2381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2381");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        int int9 = uRL3.getPort();
        java.lang.String str10 = uRL3.getFile();
        java.lang.String str11 = uRL3.toExternalForm();
        int int12 = uRL3.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test2382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2382");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.recursive;
        boolean boolean2 = fileEntryIterator0.recursive;
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file6 = fileEntryIterator5.current;
        java.io.File file7 = fileEntryIterator5.poll();
        java.io.File file8 = fileEntryIterator5.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator14.thenComparing((java.util.Comparator<java.io.File>) entryComparator20);
        fileEntryIterator5.entryComparator = entryComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        fileEntryIterator23.recursive = true;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator33.thenComparing(fileComparator36);
        fileEntryIterator28.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator33.thenComparing(fileComparator41);
        fileEntryIterator23.entryComparator = fileComparator42;
        java.util.Comparator<java.io.File> fileComparator44 = entryComparator20.thenComparing(fileComparator42);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean51 = fileEntryIterator50.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean53 = explodedArchive52.recursive;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.util.jar.Manifest manifest55 = null;
        explodedArchive52.manifest = manifest55;
        java.io.File file57 = explodedArchive52.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.io.File file61 = fileEntryIterator58.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        fileEntryIterator58.current = file66;
        explodedArchive52.root = file66;
        fileEntryIterator50.root = file66;
        int int70 = entryComparator20.compare(file49, file66);
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator0.listFiles(file66);
        boolean boolean72 = fileEntryIterator0.recursive;
        java.io.File file73 = fileEntryIterator0.poll();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(fileItor71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(file73);
    }

    @Test
    public void test2383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2383");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.io.File file27 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean29 = fileEntryIterator28.recursive;
        boolean boolean30 = fileEntryIterator28.recursive;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file33 = fileEntryIterator32.current;
        java.io.File file34 = fileEntryIterator32.poll();
        java.io.File file35 = fileEntryIterator32.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        java.util.Comparator<java.io.File> fileComparator45 = fileComparator41.thenComparing(fileComparator44);
        fileEntryIterator36.entryComparator = fileComparator41;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator48 = fileComparator41.thenComparing((java.util.Comparator<java.io.File>) entryComparator47);
        fileEntryIterator32.entryComparator = entryComparator47;
        java.io.File file50 = fileEntryIterator32.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        fileEntryIterator51.recursive = true;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        java.util.Comparator<java.io.File> fileComparator65 = fileComparator61.thenComparing(fileComparator64);
        fileEntryIterator56.entryComparator = fileComparator61;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator61.thenComparing(fileComparator69);
        fileEntryIterator51.entryComparator = fileComparator70;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file73 = fileEntryIterator72.current;
        java.io.File file74 = fileEntryIterator72.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file76 = fileEntryIterator75.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        java.util.Comparator<java.io.File> fileComparator79 = fileEntryIterator77.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator80 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue81 = fileEntryIterator80.stack;
        java.util.Comparator<java.io.File> fileComparator82 = fileEntryIterator80.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator83 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue84 = fileEntryIterator83.stack;
        java.util.Comparator<java.io.File> fileComparator85 = fileEntryIterator83.entryComparator;
        java.util.Comparator<java.io.File> fileComparator86 = fileComparator82.thenComparing(fileComparator85);
        fileEntryIterator77.entryComparator = fileComparator82;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator88 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue89 = fileEntryIterator88.stack;
        java.util.Comparator<java.io.File> fileComparator90 = fileEntryIterator88.entryComparator;
        java.util.Comparator<java.io.File> fileComparator91 = fileComparator82.thenComparing(fileComparator90);
        fileEntryIterator75.entryComparator = fileComparator91;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue93 = fileEntryIterator75.stack;
        fileEntryIterator72.stack = fileItorQueue93;
        fileEntryIterator51.stack = fileItorQueue93;
        fileEntryIterator32.stack = fileItorQueue93;
        fileEntryIterator28.stack = fileItorQueue93;
        fileEntryIterator0.stack = fileItorQueue93;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNotNull(fileItorQueue81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNotNull(fileItorQueue84);
        org.junit.Assert.assertNotNull(fileComparator85);
        org.junit.Assert.assertNotNull(fileComparator86);
        org.junit.Assert.assertNotNull(fileItorQueue89);
        org.junit.Assert.assertNotNull(fileComparator90);
        org.junit.Assert.assertNotNull(fileComparator91);
        org.junit.Assert.assertNotNull(fileItorQueue93);
    }

    @Test
    public void test2384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2384");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        java.net.URLConnection uRLConnection15 = uRL11.openConnection();
        java.net.URL uRL17 = new java.net.URL(uRL11, "file://exploded archive");
        java.lang.String str18 = uRL11.getRef();
        java.net.URL uRL20 = new java.net.URL(uRL11, "exploded archive");
        java.lang.String str21 = uRL20.getAuthority();
        java.net.URLConnection uRLConnection22 = uRL20.openConnection();
        java.lang.String str23 = uRL20.getQuery();
        int int24 = uRL20.getPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertNotNull(uRLConnection15);
        org.junit.Assert.assertEquals(uRL17.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(uRLConnection22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test2385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2385");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler4);
        java.lang.String str6 = uRL5.getPath();
        java.lang.String str7 = uRL5.getQuery();
        java.lang.String str8 = uRL5.getPath();
        java.net.URL uRL9 = null;
        java.net.URLStreamHandler uRLStreamHandler11 = null;
        java.net.URL uRL12 = new java.net.URL(uRL9, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler11);
        java.lang.String str13 = uRL12.getHost();
        java.lang.String str14 = uRL12.getAuthority();
        java.lang.String str15 = uRL12.getHost();
        java.lang.String str16 = uRL12.getRef();
        java.lang.String str17 = uRL12.getAuthority();
        boolean boolean18 = uRL5.sameFile(uRL12);
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL21 = new java.net.URL(uRL5, "file://hi!:100hi!", uRLStreamHandler20);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: For input string: \"100hi!\"");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test2386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2386");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.util.Comparator<java.io.File> fileComparator12 = fileComparator8.thenComparing(fileComparator11);
        fileEntryIterator3.entryComparator = fileComparator8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator15 = fileComparator8.thenComparing((java.util.Comparator<java.io.File>) entryComparator14);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator18.thenComparing(fileComparator24);
        java.util.Comparator<java.io.File> fileComparator27 = entryComparator14.thenComparing(fileComparator26);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file29 = fileEntryIterator28.current;
        java.io.File file30 = null;
        fileEntryIterator28.current = file30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean33 = explodedArchive32.recursive;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.util.jar.Manifest manifest35 = null;
        explodedArchive32.manifest = manifest35;
        java.io.File file37 = explodedArchive32.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.io.File file41 = fileEntryIterator38.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator38.current = file46;
        explodedArchive32.root = file46;
        fileEntryIterator28.root = file46;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        fileEntryIterator57.recursive = true;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator67.thenComparing(fileComparator70);
        fileEntryIterator62.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        java.util.Comparator<java.io.File> fileComparator76 = fileComparator67.thenComparing(fileComparator75);
        fileEntryIterator57.entryComparator = fileComparator76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file79 = explodedArchive78.manifestFile;
        java.io.File file80 = explodedArchive78.manifestFile;
        java.io.File file81 = null;
        java.io.File file82 = explodedArchive78.getManifestFile(file81);
        fileEntryIterator57.root = file82;
        explodedArchive54.manifestFile = file82;
        fileEntryIterator50.current = file82;
        int int86 = entryComparator14.compare(file46, file82);
        fileEntry0.file = file82;
        java.io.File file88 = fileEntry0.file;
        java.lang.String str89 = fileEntry0.getName();
        java.io.File file90 = fileEntry0.getFile();
        boolean boolean91 = fileEntry0.isDirectory();
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "exploded archive" + "'", str89, "exploded archive");
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file90.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test2387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2387");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.lang.String str5 = uRL3.getFile();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL9 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream10 = uRL9.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str5, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test2388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2388");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        java.io.File file18 = fileEntryIterator0.current;
        java.io.File file19 = fileEntryIterator0.root;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.io.File file23 = fileEntryIterator21.current;
        boolean boolean24 = fileEntryIterator21.hasNext();
        fileEntryIterator21.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        fileEntryIterator27.recursive = true;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator27.entryComparator;
        fileEntryIterator27.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.io.File file36 = fileEntryIterator34.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        fileEntryIterator34.entryComparator = fileComparator39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file42 = explodedArchive41.manifestFile;
        java.io.File file43 = explodedArchive41.manifestFile;
        java.io.File file44 = null;
        java.io.File file45 = explodedArchive41.getManifestFile(file44);
        fileEntryIterator34.root = file44;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file48 = fileEntryIterator47.current;
        java.io.File file49 = null;
        fileEntryIterator47.current = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean52 = explodedArchive51.recursive;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.util.jar.Manifest manifest54 = null;
        explodedArchive51.manifest = manifest54;
        java.io.File file56 = explodedArchive51.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        java.io.File file60 = fileEntryIterator57.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.manifestFile;
        java.io.File file63 = explodedArchive61.manifestFile;
        java.io.File file64 = null;
        java.io.File file65 = explodedArchive61.getManifestFile(file64);
        fileEntryIterator57.current = file65;
        explodedArchive51.root = file65;
        fileEntryIterator47.root = file65;
        fileEntryIterator34.current = file65;
        java.util.Iterator<java.io.File> fileItor70 = fileEntryIterator27.listFiles(file65);
        fileEntryIterator21.root = file65;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator21.stack;
        fileEntryIterator0.stack = fileItorQueue72;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
    }

    @Test
    public void test2389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2389");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        int int12 = uRL3.getPort();
        java.lang.String str13 = uRL3.getUserInfo();
        java.net.URLStreamHandler uRLStreamHandler15 = null;
        java.net.URL uRL16 = new java.net.URL(uRL3, "file://exploded archive:0", uRLStreamHandler15);
        java.lang.String str17 = uRL16.getUserInfo();
        int int18 = uRL16.getPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL16.toString(), "file://exploded archive:0");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test2390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2390");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.io.File file2 = explodedArchive0.root;
        java.io.File file3 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file5 = fileEntryIterator4.current;
        java.io.File file6 = fileEntryIterator4.poll();
        java.io.File file7 = fileEntryIterator4.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator13.thenComparing((java.util.Comparator<java.io.File>) entryComparator19);
        fileEntryIterator4.entryComparator = entryComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.manifestFile;
        java.io.File file24 = explodedArchive22.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        fileEntryIterator25.recursive = true;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator35.thenComparing(fileComparator38);
        fileEntryIterator30.entryComparator = fileComparator35;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator35.thenComparing(fileComparator43);
        fileEntryIterator25.entryComparator = fileComparator44;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator25.root = file50;
        explodedArchive22.manifestFile = file50;
        fileEntryIterator4.root = file50;
        explodedArchive0.root = file50;
        java.util.jar.Manifest manifest55 = null;
        explodedArchive0.manifest = manifest55;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file58 = fileEntry57.getFile();
        java.io.File file59 = fileEntry57.file;
        fileEntry57.name = "";
        java.io.File file62 = fileEntry57.file;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean64 = explodedArchive63.recursive;
        boolean boolean65 = explodedArchive63.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.manifestFile;
        java.io.File file68 = explodedArchive66.manifestFile;
        java.io.File file69 = null;
        java.io.File file70 = explodedArchive66.getManifestFile(file69);
        explodedArchive63.root = file70;
        explodedArchive63.recursive = false;
        java.io.File file74 = explodedArchive63.root;
        fileEntry57.file = file74;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean77 = explodedArchive76.recursive;
        boolean boolean78 = explodedArchive76.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file80 = explodedArchive79.manifestFile;
        java.io.File file81 = explodedArchive79.manifestFile;
        java.io.File file82 = null;
        java.io.File file83 = explodedArchive79.getManifestFile(file82);
        explodedArchive76.root = file83;
        fileEntry57.file = file83;
        java.io.File file86 = fileEntry57.file;
        explodedArchive0.root = file86;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive89 = new org.springframework.boot.loader.archive.ExplodedArchive(file86, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "exploded archive" + "'", str1, "exploded archive");
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2391");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        boolean boolean26 = fileEntryIterator0.recursive;
        boolean boolean27 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test2392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2392");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.lang.String str11 = uRL3.getPath();
        java.lang.String str12 = uRL3.getQuery();
        int int13 = uRL3.getDefaultPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test2393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2393");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "exploded archive", (int) (byte) 1, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2394");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "file://hi!:100hi!", (int) '4', "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2395");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        boolean boolean7 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        boolean boolean13 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator14.root = file39;
        explodedArchive8.root = file39;
        java.util.Iterator<java.io.File> fileItor42 = fileEntryIterator5.listFiles(file39);
        fileEntry0.file = file39;
        fileEntry0.name = "";
        boolean boolean46 = fileEntry0.isDirectory();
        java.lang.String str47 = fileEntry0.name;
        java.io.File file48 = fileEntry0.file;
        java.io.File file49 = fileEntry0.getFile();
        fileEntry0.name = "hi!";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2396");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        java.net.URL uRL84 = null;
        java.net.URLStreamHandler uRLStreamHandler86 = null;
        java.net.URL uRL87 = new java.net.URL(uRL84, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler86);
        java.lang.String str88 = uRL87.getHost();
        java.lang.String str89 = uRL87.getAuthority();
        java.lang.String str90 = uRL87.getQuery();
        int int91 = uRL87.getDefaultPort();
        int int92 = uRL87.getPort();
        boolean boolean93 = uRL82.sameFile(uRL87);
        java.net.URLStreamHandler uRLStreamHandler95 = null;
        java.net.URL uRL96 = new java.net.URL(uRL87, "file", uRLStreamHandler95);
        java.net.URL uRL98 = new java.net.URL(uRL87, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.net.URI uRI99 = uRL98.toURI();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals(uRL87.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals(uRL96.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL98.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(uRI99);
    }

    @Test
    public void test2397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2397");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URL uRL13 = new java.net.URL(uRL3, "file://exploded archive");
        java.lang.String str14 = uRL13.getProtocol();
        java.lang.String str15 = uRL13.getHost();
        java.lang.String str16 = uRL13.getFile();
        java.lang.String str17 = uRL13.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file19 = fileEntryIterator18.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator25.thenComparing(fileComparator28);
        fileEntryIterator20.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator25.thenComparing(fileComparator33);
        fileEntryIterator18.entryComparator = fileComparator34;
        java.lang.Class<?> wildcardClass36 = fileComparator34.getClass();
        java.net.URL uRL37 = null;
        java.net.URLStreamHandler uRLStreamHandler39 = null;
        java.net.URL uRL40 = new java.net.URL(uRL37, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler39);
        java.lang.String str41 = uRL40.getHost();
        java.lang.String str42 = uRL40.getAuthority();
        java.lang.String str43 = uRL40.toExternalForm();
        java.net.URLConnection uRLConnection44 = uRL40.openConnection();
        java.lang.String str45 = uRL40.getFile();
        java.net.URL uRL47 = new java.net.URL(uRL40, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.Class<?> wildcardClass48 = uRL40.getClass();
        java.lang.Class[] classArray49 = new java.lang.Class[] { wildcardClass36, wildcardClass48 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = uRL13.getContent(classArray49);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: exploded archive");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL13.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "exploded archive" + "'", str15, "exploded archive");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "file://exploded archive" + "'", str17, "file://exploded archive");
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals(uRL40.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str43, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str45, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(classArray49);
    }

    @Test
    public void test2398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2398");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getFile();
        java.lang.String str5 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str4, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str5, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
    }

    @Test
    public void test2399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2399");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.lang.String str6 = uRL3.getProtocol();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.toExternalForm();
        java.lang.String str9 = uRL3.getPath();
        java.net.URI uRI10 = uRL3.toURI();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file12 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator18.thenComparing(fileComparator21);
        fileEntryIterator13.entryComparator = fileComparator18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator18.thenComparing(fileComparator26);
        fileEntryIterator11.entryComparator = fileComparator27;
        java.io.File file29 = fileEntryIterator11.root;
        boolean boolean30 = fileEntryIterator11.hasNext();
        java.lang.Class<?> wildcardClass31 = fileEntryIterator11.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[] { wildcardClass31 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = uRL3.getContent(classArray32);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file" + "'", str6, "file");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray32);
    }

    @Test
    public void test2400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2400");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file7;
        explodedArchive0.recursive = false;
        java.io.File file11 = explodedArchive0.root;
        java.net.URL uRL12 = explodedArchive0.getUrl();
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor13 = explodedArchive0.iterator();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL12);
// flaky:         org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor13);
    }

    @Test
    public void test2401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2401");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        java.net.URL uRL84 = null;
        java.net.URLStreamHandler uRLStreamHandler86 = null;
        java.net.URL uRL87 = new java.net.URL(uRL84, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler86);
        java.lang.String str88 = uRL87.getHost();
        java.lang.String str89 = uRL87.getAuthority();
        java.lang.String str90 = uRL87.getQuery();
        int int91 = uRL87.getDefaultPort();
        int int92 = uRL87.getPort();
        boolean boolean93 = uRL82.sameFile(uRL87);
        int int94 = uRL87.getDefaultPort();
        java.lang.String str95 = uRL87.getHost();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = uRL87.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals(uRL87.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "" + "'", str95, "");
    }

    @Test
    public void test2402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2402");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        java.lang.String str84 = uRL69.getProtocol();
        java.lang.String str85 = uRL69.getUserInfo();
        java.net.URLStreamHandler uRLStreamHandler87 = null;
        java.net.URL uRL88 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler87);
        java.net.URLStreamHandler uRLStreamHandler90 = null;
        java.net.URL uRL91 = new java.net.URL(uRL88, "file://exploded archive:0", uRLStreamHandler90);
        java.lang.String str92 = uRL88.toExternalForm();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "file" + "'", str84, "file");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertEquals(uRL88.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL91.toString(), "file://exploded archive:0");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str92, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2403");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("", "file", (int) (byte) -1, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2404");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "exploded archive", (int) (short) 1, "hi!", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2405");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URI uRI9 = uRL3.toURI();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean12 = fileEntryIterator11.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean14 = explodedArchive13.recursive;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.util.jar.Manifest manifest16 = null;
        explodedArchive13.manifest = manifest16;
        java.io.File file18 = explodedArchive13.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.io.File file22 = fileEntryIterator19.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.io.File file26 = null;
        java.io.File file27 = explodedArchive23.getManifestFile(file26);
        fileEntryIterator19.current = file27;
        explodedArchive13.root = file27;
        fileEntryIterator11.root = file27;
        explodedArchive10.root = file27;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator32 = explodedArchive10.spliterator();
        java.io.File file33 = explodedArchive10.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str35 = fileEntry34.name;
        java.io.File file36 = fileEntry34.file;
        fileEntry34.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        boolean boolean41 = fileEntryIterator39.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        boolean boolean47 = explodedArchive42.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        fileEntryIterator48.recursive = true;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator58.thenComparing(fileComparator61);
        fileEntryIterator53.entryComparator = fileComparator58;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator58.thenComparing(fileComparator66);
        fileEntryIterator48.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file70 = explodedArchive69.manifestFile;
        java.io.File file71 = explodedArchive69.manifestFile;
        java.io.File file72 = null;
        java.io.File file73 = explodedArchive69.getManifestFile(file72);
        fileEntryIterator48.root = file73;
        explodedArchive42.root = file73;
        java.util.Iterator<java.io.File> fileItor76 = fileEntryIterator39.listFiles(file73);
        fileEntry34.file = file73;
        explodedArchive10.root = file73;
        java.net.URL uRL79 = explodedArchive10.getUrl();
        java.lang.String str80 = uRL79.getUserInfo();
        java.net.URL uRL82 = new java.net.URL(uRL79, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str83 = uRL82.getFile();
        java.lang.String str84 = uRL82.getFile();
        boolean boolean85 = uRL3.sameFile(uRL82);
        java.lang.String str86 = uRL82.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(uRI9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor76);
        org.junit.Assert.assertNotNull(uRL79);
// flaky:         org.junit.Assert.assertEquals(uRL79.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str83, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str84, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str86, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2406");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "file", (int) (short) 1, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2407");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.io.File file4 = explodedArchive0.root;
        boolean boolean5 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.lang.String str8 = explodedArchive0.toString();
        explodedArchive0.recursive = false;
        boolean boolean11 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator12.current = file17;
        fileEntryIterator12.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean23 = explodedArchive22.recursive;
        java.io.File file24 = explodedArchive22.manifestFile;
        java.util.jar.Manifest manifest25 = null;
        explodedArchive22.manifest = manifest25;
        java.io.File file27 = explodedArchive22.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.io.File file31 = fileEntryIterator28.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        fileEntryIterator28.current = file36;
        explodedArchive22.root = file36;
        java.util.Iterator<java.io.File> fileItor39 = fileEntryIterator12.listFiles(file36);
        java.io.File file40 = explodedArchive0.getManifestFile(file36);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2408");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.lang.String str34 = uRL30.getFile();
        java.net.URL uRL36 = new java.net.URL(uRL30, "file");
        java.net.URI uRI37 = uRL30.toURI();
        java.net.Proxy proxy38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection39 = uRL30.openConnection(proxy38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL36.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertNotNull(uRI37);
    }

    @Test
    public void test2409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2409");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URL uRL10 = new java.net.URL(uRL3, "");
        java.lang.String str11 = uRL10.getQuery();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test2410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2410");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getProtocol();
        java.lang.String str14 = uRL11.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file" + "'", str13, "file");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2411");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        int int13 = uRL11.getDefaultPort();
        java.lang.String str14 = uRL11.getUserInfo();
        java.lang.String str15 = uRL11.getRef();
        java.net.URLConnection uRLConnection16 = uRL11.openConnection();
        java.lang.String str17 = uRL11.getProtocol();
        java.lang.String str18 = uRL11.getHost();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        boolean boolean28 = uRL11.sameFile(uRL22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = uRL11.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(uRLConnection16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "file" + "'", str17, "file");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test2412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2412");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        fileEntryIterator5.root = file11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        java.util.Iterator<java.io.File> fileItor19 = fileEntryIterator5.listFiles(file18);
        fileEntryIterator0.root = file18;
        boolean boolean21 = fileEntryIterator0.hasNext();
        boolean boolean22 = fileEntryIterator0.recursive;
        java.io.File file23 = fileEntryIterator0.current;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(file23);
    }

    @Test
    public void test2413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2413");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        int int11 = uRL3.getPort();
        java.lang.String str12 = uRL3.toExternalForm();
        java.net.URL uRL13 = null;
        java.net.URLStreamHandler uRLStreamHandler15 = null;
        java.net.URL uRL16 = new java.net.URL(uRL13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler15);
        java.lang.String str17 = uRL16.getHost();
        java.lang.String str18 = uRL16.getAuthority();
        java.lang.String str19 = uRL16.getQuery();
        int int20 = uRL16.getDefaultPort();
        java.lang.String str21 = uRL16.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler23 = null;
        java.net.URL uRL24 = new java.net.URL(uRL16, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler23);
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        boolean boolean29 = uRL3.sameFile(uRL27);
        java.net.URI uRI30 = uRL3.toURI();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL16.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(uRI30);
    }

    @Test
    public void test2414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2414");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getHost();
        java.net.URL uRL10 = null;
        java.net.URLStreamHandler uRLStreamHandler12 = null;
        java.net.URL uRL13 = new java.net.URL(uRL10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler12);
        java.lang.String str14 = uRL13.getHost();
        java.net.URI uRI15 = uRL13.toURI();
        java.lang.String str16 = uRL13.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler18 = null;
        java.net.URL uRL19 = new java.net.URL(uRL13, "file", uRLStreamHandler18);
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL13, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        boolean boolean23 = uRL3.sameFile(uRL13);
        java.net.URL uRL24 = null;
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL24, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler26);
        java.lang.String str28 = uRL27.getHost();
        java.lang.String str29 = uRL27.getAuthority();
        java.lang.String str30 = uRL27.getHost();
        java.lang.String str31 = uRL27.getQuery();
        java.lang.String str32 = uRL27.getAuthority();
        java.lang.String str33 = uRL27.getFile();
        java.lang.String str34 = uRL27.getFile();
        java.lang.String str35 = uRL27.getProtocol();
        boolean boolean36 = uRL3.sameFile(uRL27);
        java.net.URI uRI37 = uRL27.toURI();
        java.lang.Class<?> wildcardClass38 = uRI37.getClass();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(uRI15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL19.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str33, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "file" + "'", str35, "file");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(uRI37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2415");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "file", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2416");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator38 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest39 = null;
        explodedArchive0.manifest = manifest39;
        java.net.URL uRL41 = explodedArchive0.getUrl();
        java.net.URL uRL42 = explodedArchive0.getUrl();
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor43 = explodedArchive0.iterator();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(entrySpliterator38);
        org.junit.Assert.assertNotNull(uRL41);
// flaky:         org.junit.Assert.assertEquals(uRL41.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL42);
// flaky:         org.junit.Assert.assertEquals(uRL42.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor43);
    }

    @Test
    public void test2417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2417");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getQuery();
        int int9 = uRL3.getPort();
        int int10 = uRL3.getPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test2418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2418");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive0.getManifestFile(file5);
        java.lang.String str7 = explodedArchive0.toString();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        boolean boolean10 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file12 = fileEntryIterator11.current;
        java.io.File file13 = fileEntryIterator11.poll();
        java.io.File file14 = fileEntryIterator11.poll();
        java.io.File file15 = fileEntryIterator11.current;
        boolean boolean16 = fileEntryIterator11.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator11.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean19 = explodedArchive18.recursive;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.util.jar.Manifest manifest21 = null;
        explodedArchive18.manifest = manifest21;
        java.io.File file23 = explodedArchive18.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.io.File file27 = fileEntryIterator24.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.manifestFile;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.io.File file31 = null;
        java.io.File file32 = explodedArchive28.getManifestFile(file31);
        fileEntryIterator24.current = file32;
        explodedArchive18.root = file32;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file36 = fileEntryIterator35.current;
        boolean boolean37 = fileEntryIterator35.hasNext();
        fileEntryIterator35.recursive = true;
        boolean boolean40 = fileEntryIterator35.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        boolean boolean43 = explodedArchive41.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file45 = fileEntryIterator44.current;
        java.io.File file46 = null;
        fileEntryIterator44.current = file46;
        java.io.File file48 = fileEntryIterator44.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file50 = fileEntry49.getFile();
        java.lang.String str51 = fileEntry49.name;
        java.io.File file52 = fileEntry49.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        boolean boolean55 = fileEntryIterator53.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file57 = explodedArchive56.manifestFile;
        java.io.File file58 = explodedArchive56.manifestFile;
        java.io.File file59 = null;
        java.io.File file60 = explodedArchive56.getManifestFile(file59);
        boolean boolean61 = explodedArchive56.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        fileEntryIterator62.recursive = true;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator70.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        java.util.Comparator<java.io.File> fileComparator76 = fileComparator72.thenComparing(fileComparator75);
        fileEntryIterator67.entryComparator = fileComparator72;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator78.stack;
        java.util.Comparator<java.io.File> fileComparator80 = fileEntryIterator78.entryComparator;
        java.util.Comparator<java.io.File> fileComparator81 = fileComparator72.thenComparing(fileComparator80);
        fileEntryIterator62.entryComparator = fileComparator81;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file84 = explodedArchive83.manifestFile;
        java.io.File file85 = explodedArchive83.manifestFile;
        java.io.File file86 = null;
        java.io.File file87 = explodedArchive83.getManifestFile(file86);
        fileEntryIterator62.root = file87;
        explodedArchive56.root = file87;
        java.util.Iterator<java.io.File> fileItor90 = fileEntryIterator53.listFiles(file87);
        fileEntry49.file = file87;
        fileEntryIterator44.current = file87;
        explodedArchive41.root = file87;
        java.util.Iterator<java.io.File> fileItor94 = fileEntryIterator35.listFiles(file87);
        explodedArchive18.root = file87;
        fileEntryIterator11.root = file87;
        explodedArchive0.root = file87;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter98 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList99 = explodedArchive0.getNestedArchives(entryFilter98);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "exploded archive" + "'", str42, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor90);
        org.junit.Assert.assertNotNull(fileItor94);
        org.junit.Assert.assertNotNull(archiveList99);
    }

    @Test
    public void test2419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2419");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file22 = fileEntryIterator21.current;
        java.io.File file23 = fileEntryIterator21.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file25 = fileEntryIterator24.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator24.entryComparator = fileComparator40;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator24.stack;
        fileEntryIterator21.stack = fileItorQueue42;
        fileEntryIterator0.stack = fileItorQueue42;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean47 = fileEntryIterator46.hasNext();
        fileEntryIterator46.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        fileEntryIterator57.recursive = true;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator67.thenComparing(fileComparator70);
        fileEntryIterator62.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        java.util.Comparator<java.io.File> fileComparator76 = fileComparator67.thenComparing(fileComparator75);
        fileEntryIterator57.entryComparator = fileComparator76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file79 = explodedArchive78.manifestFile;
        java.io.File file80 = explodedArchive78.manifestFile;
        java.io.File file81 = null;
        java.io.File file82 = explodedArchive78.getManifestFile(file81);
        fileEntryIterator57.root = file82;
        explodedArchive54.manifestFile = file82;
        fileEntryIterator50.current = file82;
        java.io.File file86 = fileEntryIterator50.current;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue87 = fileEntryIterator50.stack;
        fileEntryIterator46.stack = fileItorQueue87;
        fileEntryIterator0.stack = fileItorQueue87;
        boolean boolean90 = fileEntryIterator0.recursive;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue91 = fileEntryIterator0.stack;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry92 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(fileItorQueue91);
    }

    @Test
    public void test2420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2420");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file", uRLStreamHandler13);
        int int15 = uRL14.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean17 = fileEntryIterator16.recursive;
        boolean boolean18 = fileEntryIterator16.recursive;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator16.entryComparator;
        java.io.File file20 = fileEntryIterator16.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file22 = fileEntryIterator21.current;
        java.io.File file23 = fileEntryIterator21.poll();
        java.io.File file24 = fileEntryIterator21.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator30.thenComparing(fileComparator33);
        fileEntryIterator25.entryComparator = fileComparator30;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator30.thenComparing((java.util.Comparator<java.io.File>) entryComparator36);
        fileEntryIterator21.entryComparator = entryComparator36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        fileEntryIterator39.recursive = true;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator39.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        java.util.Comparator<java.io.File> fileComparator53 = fileComparator49.thenComparing(fileComparator52);
        fileEntryIterator44.entryComparator = fileComparator49;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator49.thenComparing(fileComparator57);
        fileEntryIterator39.entryComparator = fileComparator58;
        java.util.Comparator<java.io.File> fileComparator60 = entryComparator36.thenComparing(fileComparator58);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.manifestFile;
        java.io.File file63 = explodedArchive61.manifestFile;
        java.io.File file64 = null;
        java.io.File file65 = explodedArchive61.getManifestFile(file64);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean67 = fileEntryIterator66.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean69 = explodedArchive68.recursive;
        java.io.File file70 = explodedArchive68.manifestFile;
        java.util.jar.Manifest manifest71 = null;
        explodedArchive68.manifest = manifest71;
        java.io.File file73 = explodedArchive68.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.io.File file77 = fileEntryIterator74.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file79 = explodedArchive78.manifestFile;
        java.io.File file80 = explodedArchive78.manifestFile;
        java.io.File file81 = null;
        java.io.File file82 = explodedArchive78.getManifestFile(file81);
        fileEntryIterator74.current = file82;
        explodedArchive68.root = file82;
        fileEntryIterator66.root = file82;
        int int86 = entryComparator36.compare(file65, file82);
        java.util.Iterator<java.io.File> fileItor87 = fileEntryIterator16.listFiles(file82);
        java.lang.Class<?> wildcardClass88 = fileEntryIterator16.getClass();
        java.lang.Class[] classArray89 = new java.lang.Class[] { wildcardClass88 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj90 = uRL14.getContent(classArray89);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(fileItor87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(classArray89);
    }

    @Test
    public void test2421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2421");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest32 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest33 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest34 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file36 = fileEntry35.getFile();
        java.lang.String str37 = fileEntry35.name;
        java.io.File file38 = null;
        fileEntry35.file = file38;
        java.io.File file40 = fileEntry35.file;
        java.lang.String str41 = fileEntry35.name;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.io.File file44 = fileEntryIterator42.current;
        java.io.File file45 = fileEntryIterator42.current;
        fileEntryIterator42.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        fileEntryIterator42.root = file52;
        fileEntry35.file = file52;
        boolean boolean55 = fileEntry35.isDirectory();
        java.io.File file56 = fileEntry35.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive57 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2422");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.lang.Class<?> wildcardClass11 = uRL3.getClass();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2423");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.lang.String str6 = uRL3.getProtocol();
        java.lang.String str7 = uRL3.getPath();
        java.lang.String str8 = uRL3.getRef();
        java.net.URL uRL10 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URI uRI11 = uRL3.toURI();
        java.net.URL uRL13 = new java.net.URL(uRL3, "");
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file" + "'", str6, "file");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI11);
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2424");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator3.entryComparator = fileComparator19;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator3.stack;
        fileEntryIterator0.stack = fileItorQueue21;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator0.entryComparator;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator23);
    }

    @Test
    public void test2425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2425");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        int int12 = uRL3.getPort();
        java.lang.String str13 = uRL3.getUserInfo();
        java.net.URLStreamHandler uRLStreamHandler15 = null;
        java.net.URL uRL16 = new java.net.URL(uRL3, "file://exploded archive:0", uRLStreamHandler15);
        java.lang.String str17 = uRL3.getPath();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL16.toString(), "file://exploded archive:0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str17, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2426");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        explodedArchive0.root = file56;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean63 = explodedArchive62.recursive;
        boolean boolean64 = explodedArchive62.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        explodedArchive62.root = file69;
        explodedArchive62.recursive = false;
        java.io.File file73 = explodedArchive62.root;
        java.io.File file74 = explodedArchive0.getManifestFile(file73);
        java.net.URL uRL75 = explodedArchive0.getUrl();
        java.util.jar.Manifest manifest76 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest77 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL75);
// flaky:         org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest76);
        org.junit.Assert.assertNull(manifest77);
    }

    @Test
    public void test2427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2427");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        boolean boolean5 = fileEntryIterator0.hasNext();
        java.io.File file6 = fileEntryIterator0.current;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file6);
    }

    @Test
    public void test2428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2428");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.net.URL uRL38 = explodedArchive0.getUrl();
        java.util.jar.Manifest manifest39 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest40 = explodedArchive0.manifest;
        boolean boolean41 = explodedArchive0.recursive;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test2429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2429");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("exploded archive", "", (int) (short) 0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2430");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.lang.String str2 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean5 = fileEntryIterator4.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean7 = explodedArchive6.recursive;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive6.manifest = manifest9;
        java.io.File file11 = explodedArchive6.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        java.io.File file15 = fileEntryIterator12.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.manifestFile;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.io.File file19 = null;
        java.io.File file20 = explodedArchive16.getManifestFile(file19);
        fileEntryIterator12.current = file20;
        explodedArchive6.root = file20;
        fileEntryIterator4.root = file20;
        explodedArchive3.root = file20;
        java.io.File file25 = explodedArchive3.root;
        explodedArchive0.manifestFile = file25;
        java.io.File file27 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive0.getNestedArchives(entryFilter30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "exploded archive" + "'", str2, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2431");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.io.File file5 = fileEntryIterator3.current;
        boolean boolean6 = fileEntryIterator3.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator3.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean9 = explodedArchive8.recursive;
        boolean boolean10 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.manifestFile;
        java.io.File file13 = explodedArchive11.manifestFile;
        java.io.File file14 = null;
        java.io.File file15 = explodedArchive11.getManifestFile(file14);
        explodedArchive8.root = file15;
        fileEntryIterator3.root = file15;
        fileEntry0.file = file15;
        java.io.File file19 = fileEntry0.getFile();
        java.lang.String str20 = fileEntry0.name;
        fileEntry0.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        fileEntry0.name = "file";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        fileEntryIterator28.recursive = true;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator38.thenComparing(fileComparator41);
        fileEntryIterator33.entryComparator = fileComparator38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator44.entryComparator;
        java.util.Comparator<java.io.File> fileComparator47 = fileComparator38.thenComparing(fileComparator46);
        fileEntryIterator28.entryComparator = fileComparator47;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        fileEntryIterator28.root = file53;
        explodedArchive25.manifestFile = file53;
        java.util.jar.Manifest manifest56 = explodedArchive25.manifest;
        boolean boolean57 = explodedArchive25.recursive;
        java.util.jar.Manifest manifest58 = explodedArchive25.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file60 = fileEntryIterator59.current;
        java.io.File file61 = fileEntryIterator59.poll();
        java.io.File file62 = fileEntryIterator59.poll();
        java.io.File file63 = fileEntryIterator59.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.io.File file66 = fileEntryIterator64.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file68 = explodedArchive67.manifestFile;
        java.io.File file69 = explodedArchive67.manifestFile;
        java.io.File file70 = null;
        java.io.File file71 = explodedArchive67.getManifestFile(file70);
        fileEntryIterator64.root = file70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        java.util.Iterator<java.io.File> fileItor78 = fileEntryIterator64.listFiles(file77);
        fileEntryIterator59.root = file77;
        explodedArchive25.manifestFile = file77;
        fileEntry0.file = file77;
        java.io.File file82 = fileEntry0.getFile();
        java.lang.String str83 = fileEntry0.name;
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file15.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "exploded archive" + "'", str20, "exploded archive");
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor78);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "file" + "'", str83, "file");
    }

    @Test
    public void test2432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2432");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getQuery();
        java.lang.String str9 = uRL3.getRef();
        java.net.URLStreamHandler uRLStreamHandler11 = null;
        java.net.URL uRL12 = new java.net.URL(uRL3, "exploded archive", uRLStreamHandler11);
        java.lang.String str13 = uRL12.toExternalForm();
        java.lang.String str14 = uRL12.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
    }

    @Test
    public void test2433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2433");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        java.net.URLConnection uRLConnection15 = uRL11.openConnection();
        java.net.URL uRL17 = new java.net.URL(uRL11, "file://exploded archive");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str19 = fileEntry18.name;
        java.lang.String str20 = fileEntry18.getName();
        java.lang.String str21 = fileEntry18.getName();
        java.lang.String str22 = fileEntry18.name;
        java.io.File file23 = fileEntry18.file;
        boolean boolean24 = uRL11.equals((java.lang.Object) fileEntry18);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertNotNull(uRLConnection15);
        org.junit.Assert.assertEquals(uRL17.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test2434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2434");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        fileEntryIterator0.root = file10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean14 = fileEntryIterator13.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean16 = explodedArchive15.recursive;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive15.manifest = manifest18;
        java.io.File file20 = explodedArchive15.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.io.File file24 = fileEntryIterator21.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        fileEntryIterator21.current = file29;
        explodedArchive15.root = file29;
        fileEntryIterator13.root = file29;
        java.util.Iterator<java.io.File> fileItor33 = fileEntryIterator0.listFiles(file29);
        fileEntryIterator0.recursive = true;
        boolean boolean36 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator0.entryComparator;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(fileComparator37);
    }

    @Test
    public void test2435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2435");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.io.File file5 = fileEntryIterator3.current;
        boolean boolean6 = fileEntryIterator3.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator3.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean9 = explodedArchive8.recursive;
        boolean boolean10 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.manifestFile;
        java.io.File file13 = explodedArchive11.manifestFile;
        java.io.File file14 = null;
        java.io.File file15 = explodedArchive11.getManifestFile(file14);
        explodedArchive8.root = file15;
        fileEntryIterator3.root = file15;
        fileEntry0.file = file15;
        java.io.File file19 = fileEntry0.getFile();
        java.lang.String str20 = fileEntry0.name;
        fileEntry0.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        fileEntry0.name = "file";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        fileEntryIterator28.recursive = true;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator38.thenComparing(fileComparator41);
        fileEntryIterator33.entryComparator = fileComparator38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator44.entryComparator;
        java.util.Comparator<java.io.File> fileComparator47 = fileComparator38.thenComparing(fileComparator46);
        fileEntryIterator28.entryComparator = fileComparator47;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        fileEntryIterator28.root = file53;
        explodedArchive25.manifestFile = file53;
        java.util.jar.Manifest manifest56 = explodedArchive25.manifest;
        boolean boolean57 = explodedArchive25.recursive;
        java.util.jar.Manifest manifest58 = explodedArchive25.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file60 = fileEntryIterator59.current;
        java.io.File file61 = fileEntryIterator59.poll();
        java.io.File file62 = fileEntryIterator59.poll();
        java.io.File file63 = fileEntryIterator59.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.io.File file66 = fileEntryIterator64.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file68 = explodedArchive67.manifestFile;
        java.io.File file69 = explodedArchive67.manifestFile;
        java.io.File file70 = null;
        java.io.File file71 = explodedArchive67.getManifestFile(file70);
        fileEntryIterator64.root = file70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        java.util.Iterator<java.io.File> fileItor78 = fileEntryIterator64.listFiles(file77);
        fileEntryIterator59.root = file77;
        explodedArchive25.manifestFile = file77;
        fileEntry0.file = file77;
        boolean boolean82 = fileEntry0.isDirectory();
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file15.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "exploded archive" + "'", str20, "exploded archive");
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test2436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2436");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.lang.String str9 = explodedArchive6.toString();
        java.lang.String str10 = explodedArchive6.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean12 = fileEntryIterator11.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean14 = explodedArchive13.recursive;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.util.jar.Manifest manifest16 = null;
        explodedArchive13.manifest = manifest16;
        java.io.File file18 = explodedArchive13.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.io.File file22 = fileEntryIterator19.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.io.File file26 = null;
        java.io.File file27 = explodedArchive23.getManifestFile(file26);
        fileEntryIterator19.current = file27;
        explodedArchive13.root = file27;
        fileEntryIterator11.root = file27;
        java.io.File file31 = explodedArchive6.getManifestFile(file27);
        fileEntryIterator0.current = file31;
        java.io.File file33 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        fileEntryIterator37.recursive = true;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator47.thenComparing(fileComparator50);
        fileEntryIterator42.entryComparator = fileComparator47;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator47.thenComparing(fileComparator55);
        fileEntryIterator37.entryComparator = fileComparator56;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.manifestFile;
        java.io.File file60 = explodedArchive58.manifestFile;
        java.io.File file61 = null;
        java.io.File file62 = explodedArchive58.getManifestFile(file61);
        fileEntryIterator37.root = file62;
        explodedArchive34.manifestFile = file62;
        fileEntryIterator0.root = file62;
        boolean boolean66 = fileEntryIterator0.recursive;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "exploded archive" + "'", str9, "exploded archive");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "exploded archive" + "'", str10, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test2437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2437");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.io.File file18 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        fileEntryIterator0.entryComparator = entryComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator29.thenComparing(fileComparator32);
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator26.thenComparing(fileComparator32);
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator23.thenComparing(fileComparator32);
        java.util.Comparator<java.io.File> fileComparator36 = entryComparator19.thenComparing(fileComparator23);
        java.util.Comparator<java.io.File> fileComparator37 = entryComparator19.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean39 = explodedArchive38.recursive;
        java.io.File file40 = null;
        explodedArchive38.manifestFile = file40;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str43 = fileEntry42.getName();
        fileEntry42.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean47 = explodedArchive46.recursive;
        boolean boolean48 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        explodedArchive46.root = file53;
        fileEntry42.file = file53;
        java.io.File file56 = fileEntry42.getFile();
        explodedArchive38.manifestFile = file56;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.manifestFile;
        java.io.File file60 = explodedArchive58.manifestFile;
        java.io.File file61 = null;
        java.io.File file62 = explodedArchive58.getManifestFile(file61);
        boolean boolean63 = explodedArchive58.recursive;
        java.io.File file64 = explodedArchive58.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        explodedArchive65.recursive = true;
        java.lang.String str69 = explodedArchive65.toString();
        boolean boolean70 = explodedArchive65.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.io.File file74 = null;
        java.io.File file75 = explodedArchive71.getManifestFile(file74);
        java.io.File file76 = explodedArchive65.getManifestFile(file74);
        explodedArchive58.root = file76;
        int int78 = entryComparator19.compare(file56, file76);
        java.util.Comparator<java.io.File> fileComparator79 = entryComparator19.reversed();
        java.util.Comparator<java.io.File> fileComparator80 = entryComparator19.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator81 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue82 = fileEntryIterator81.stack;
        java.util.Comparator<java.io.File> fileComparator83 = fileEntryIterator81.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator84 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue85 = fileEntryIterator84.stack;
        java.util.Comparator<java.io.File> fileComparator86 = fileEntryIterator84.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator87 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue88 = fileEntryIterator87.stack;
        java.util.Comparator<java.io.File> fileComparator89 = fileEntryIterator87.entryComparator;
        java.util.Comparator<java.io.File> fileComparator90 = fileComparator86.thenComparing(fileComparator89);
        java.util.Comparator<java.io.File> fileComparator91 = fileComparator83.thenComparing(fileComparator89);
        java.util.Comparator<java.io.File> fileComparator92 = fileComparator89.reversed();
        java.util.Comparator<java.io.File> fileComparator93 = fileComparator89.reversed();
        java.util.Comparator<java.io.File> fileComparator94 = entryComparator19.thenComparing(fileComparator93);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "exploded archive" + "'", str69, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNotNull(fileItorQueue82);
        org.junit.Assert.assertNotNull(fileComparator83);
        org.junit.Assert.assertNotNull(fileItorQueue85);
        org.junit.Assert.assertNotNull(fileComparator86);
        org.junit.Assert.assertNotNull(fileItorQueue88);
        org.junit.Assert.assertNotNull(fileComparator89);
        org.junit.Assert.assertNotNull(fileComparator90);
        org.junit.Assert.assertNotNull(fileComparator91);
        org.junit.Assert.assertNotNull(fileComparator92);
        org.junit.Assert.assertNotNull(fileComparator93);
        org.junit.Assert.assertNotNull(fileComparator94);
    }

    @Test
    public void test2438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2438");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file", "file://exploded archive", (int) (byte) 10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: Illegal character found in host: '/'");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2439");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", (int) (byte) -1, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2440");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.io.File file3 = fileEntryIterator0.current;
        java.io.File file4 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.lang.String str9 = explodedArchive6.toString();
        java.util.jar.Manifest manifest10 = null;
        explodedArchive6.manifest = manifest10;
        java.lang.String str12 = explodedArchive6.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        boolean boolean15 = fileEntryIterator13.hasNext();
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator22.thenComparing(fileComparator25);
        fileEntryIterator17.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator22.thenComparing((java.util.Comparator<java.io.File>) entryComparator28);
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator16.thenComparing((java.util.Comparator<java.io.File>) entryComparator28);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean32 = fileEntryIterator31.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean34 = explodedArchive33.recursive;
        java.io.File file35 = explodedArchive33.manifestFile;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive33.manifest = manifest36;
        java.io.File file38 = explodedArchive33.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.io.File file42 = fileEntryIterator39.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.manifestFile;
        java.io.File file45 = explodedArchive43.manifestFile;
        java.io.File file46 = null;
        java.io.File file47 = explodedArchive43.getManifestFile(file46);
        fileEntryIterator39.current = file47;
        explodedArchive33.root = file47;
        fileEntryIterator31.root = file47;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        boolean boolean56 = explodedArchive51.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        fileEntryIterator57.recursive = true;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator67.thenComparing(fileComparator70);
        fileEntryIterator62.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        java.util.Comparator<java.io.File> fileComparator76 = fileComparator67.thenComparing(fileComparator75);
        fileEntryIterator57.entryComparator = fileComparator76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file79 = explodedArchive78.manifestFile;
        java.io.File file80 = explodedArchive78.manifestFile;
        java.io.File file81 = null;
        java.io.File file82 = explodedArchive78.getManifestFile(file81);
        fileEntryIterator57.root = file82;
        explodedArchive51.root = file82;
        int int85 = entryComparator28.compare(file47, file82);
        java.io.File file86 = explodedArchive6.getManifestFile(file47);
        explodedArchive5.manifestFile = file86;
        fileEntryIterator0.root = file86;
        java.io.File file89 = fileEntryIterator0.poll();
        boolean boolean90 = fileEntryIterator0.recursive;
        boolean boolean91 = fileEntryIterator0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry92 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "exploded archive" + "'", str9, "exploded archive");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "exploded archive" + "'", str12, "exploded archive");
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test2441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2441");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", (int) (byte) -1, "", uRLStreamHandler4);
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        java.lang.String str18 = uRL17.toExternalForm();
        java.lang.String str19 = uRL17.getUserInfo();
        java.lang.String str20 = uRL17.getProtocol();
        java.net.URLConnection uRLConnection21 = uRL17.openConnection();
        java.net.URL uRL23 = new java.net.URL(uRL17, "file://exploded archive");
        java.lang.String str24 = uRL17.getRef();
        java.lang.String str25 = uRL17.getFile();
        java.lang.String str26 = uRL17.getRef();
        boolean boolean27 = uRL5.sameFile(uRL17);
        java.lang.String str28 = uRL17.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.manifestFile;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.io.File file34 = null;
        java.io.File file35 = explodedArchive31.getManifestFile(file34);
        fileEntryIterator29.current = file34;
        fileEntryIterator29.recursive = true;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator29.entryComparator;
        java.lang.Class<?> wildcardClass40 = fileEntryIterator29.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        boolean boolean43 = fileEntryIterator41.hasNext();
        boolean boolean44 = fileEntryIterator41.recursive;
        java.io.File file45 = fileEntryIterator41.root;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator41.stack;
        fileEntryIterator41.recursive = true;
        fileEntryIterator41.recursive = true;
        fileEntryIterator41.recursive = false;
        java.lang.Class<?> wildcardClass53 = fileEntryIterator41.getClass();
        java.net.URL uRL54 = null;
        java.net.URLStreamHandler uRLStreamHandler56 = null;
        java.net.URL uRL57 = new java.net.URL(uRL54, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler56);
        java.lang.String str58 = uRL57.getHost();
        java.lang.String str59 = uRL57.getAuthority();
        java.lang.String str60 = uRL57.getHost();
        java.lang.String str61 = uRL57.getRef();
        java.net.URLConnection uRLConnection62 = uRL57.openConnection();
        java.lang.Class<?> wildcardClass63 = uRLConnection62.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        boolean boolean66 = fileEntryIterator64.hasNext();
        boolean boolean67 = fileEntryIterator64.recursive;
        java.io.File file68 = fileEntryIterator64.root;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator64.stack;
        fileEntryIterator64.recursive = true;
        fileEntryIterator64.recursive = true;
        fileEntryIterator64.recursive = false;
        java.lang.Class<?> wildcardClass76 = fileEntryIterator64.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[] { wildcardClass40, wildcardClass53, wildcardClass63, wildcardClass76 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = uRL17.getContent(classArray77);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str18, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "file" + "'", str20, "file");
        org.junit.Assert.assertNotNull(uRLConnection21);
        org.junit.Assert.assertEquals(uRL23.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str25, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertEquals(uRL57.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(uRLConnection62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray77);
    }

    @Test
    public void test2442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2442");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.manifestFile;
        java.io.File file6 = explodedArchive4.manifestFile;
        java.io.File file7 = null;
        java.io.File file8 = explodedArchive4.getManifestFile(file7);
        fileEntryIterator0.current = file8;
        boolean boolean10 = fileEntryIterator0.recursive;
        java.io.File file11 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.io.File file14 = fileEntryIterator12.current;
        java.util.ArrayDeque<java.util.Iterator<java.io.File>> fileItorQueue15 = new java.util.ArrayDeque<java.util.Iterator<java.io.File>>();
        fileEntryIterator12.stack = fileItorQueue15;
        boolean boolean17 = fileEntryIterator12.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator12.stack;
        fileEntryIterator0.stack = fileItorQueue18;
        java.io.File file20 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2443");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.io.File file27 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file27);
    }

    @Test
    public void test2444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2444");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.io.File file10 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator11.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        java.util.Iterator<java.io.File> fileItor25 = fileEntryIterator11.listFiles(file24);
        fileEntryIterator6.root = file24;
        explodedArchive0.manifestFile = file24;
        explodedArchive0.recursive = false;
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest32 = explodedArchive0.getManifest();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor25);
        org.junit.Assert.assertNull(manifest32);
    }

    @Test
    public void test2445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2445");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "", uRLStreamHandler13);
        java.lang.String str15 = uRL11.getQuery();
        java.net.URL uRL17 = new java.net.URL(uRL11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        java.lang.String str18 = uRL17.getProtocol();
        java.net.URL uRL20 = new java.net.URL(uRL17, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URL uRL21 = null;
        java.net.URLStreamHandler uRLStreamHandler23 = null;
        java.net.URL uRL24 = new java.net.URL(uRL21, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler23);
        java.lang.String str25 = uRL24.getHost();
        int int26 = uRL24.getPort();
        java.lang.String str27 = uRL24.getProtocol();
        int int28 = uRL24.getPort();
        java.lang.String str29 = uRL24.getPath();
        boolean boolean30 = uRL17.equals((java.lang.Object) uRL24);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file" + "'", str18, "file");
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "file" + "'", str27, "file");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str29, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test2446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2446");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.util.Comparator<java.io.File> fileComparator9 = fileComparator5.thenComparing(fileComparator8);
        fileEntryIterator0.entryComparator = fileComparator5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file12 = fileEntryIterator11.current;
        java.io.File file13 = fileEntryIterator11.poll();
        java.io.File file14 = fileEntryIterator11.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator20.thenComparing(fileComparator28);
        fileEntryIterator11.entryComparator = fileComparator29;
        java.io.File file31 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file38 = fileEntry37.getFile();
        java.lang.String str39 = fileEntry37.name;
        java.io.File file40 = fileEntry37.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        boolean boolean43 = fileEntryIterator41.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        boolean boolean49 = explodedArchive44.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator60.thenComparing(fileComparator63);
        fileEntryIterator55.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator60.thenComparing(fileComparator68);
        fileEntryIterator50.entryComparator = fileComparator69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.io.File file74 = null;
        java.io.File file75 = explodedArchive71.getManifestFile(file74);
        fileEntryIterator50.root = file75;
        explodedArchive44.root = file75;
        java.util.Iterator<java.io.File> fileItor78 = fileEntryIterator41.listFiles(file75);
        fileEntry37.file = file75;
        explodedArchive32.manifestFile = file75;
        java.io.File file81 = explodedArchive32.manifestFile;
        fileEntryIterator11.current = file81;
        fileEntryIterator0.current = file81;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive(file81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor78);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2447");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("exploded archive", "", 10, "file://hi!:100hi!", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2448");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.io.File file4 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file8 = fileEntryIterator7.current;
        java.io.File file9 = fileEntryIterator7.poll();
        java.io.File file10 = fileEntryIterator7.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator7.stack;
        java.io.File file12 = fileEntryIterator7.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.io.File file15 = fileEntryIterator13.current;
        java.io.File file16 = fileEntryIterator13.current;
        fileEntryIterator13.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.manifestFile;
        java.io.File file21 = explodedArchive19.manifestFile;
        java.io.File file22 = null;
        java.io.File file23 = explodedArchive19.getManifestFile(file22);
        fileEntryIterator13.root = file23;
        fileEntryIterator7.root = file23;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean29 = fileEntryIterator28.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean31 = explodedArchive30.recursive;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.util.jar.Manifest manifest33 = null;
        explodedArchive30.manifest = manifest33;
        java.io.File file35 = explodedArchive30.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.io.File file39 = fileEntryIterator36.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        fileEntryIterator36.current = file44;
        explodedArchive30.root = file44;
        fileEntryIterator28.root = file44;
        explodedArchive27.root = file44;
        fileEntryIterator7.root = file44;
        explodedArchive0.manifestFile = file44;
        java.util.jar.Manifest manifest51 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest52 = explodedArchive0.manifest;
        java.io.File file53 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        fileEntryIterator54.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.manifestFile;
        java.io.File file60 = explodedArchive58.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        fileEntryIterator61.recursive = true;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        java.util.Comparator<java.io.File> fileComparator75 = fileComparator71.thenComparing(fileComparator74);
        fileEntryIterator66.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        java.util.Comparator<java.io.File> fileComparator79 = fileEntryIterator77.entryComparator;
        java.util.Comparator<java.io.File> fileComparator80 = fileComparator71.thenComparing(fileComparator79);
        fileEntryIterator61.entryComparator = fileComparator80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file83 = explodedArchive82.manifestFile;
        java.io.File file84 = explodedArchive82.manifestFile;
        java.io.File file85 = null;
        java.io.File file86 = explodedArchive82.getManifestFile(file85);
        fileEntryIterator61.root = file86;
        explodedArchive58.manifestFile = file86;
        fileEntryIterator54.current = file86;
        java.io.File file90 = fileEntryIterator54.current;
        explodedArchive0.manifestFile = file90;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file90.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2449");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        boolean boolean6 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator12.thenComparing(fileComparator15);
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator9.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        boolean boolean21 = fileEntryIterator19.hasNext();
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator28.thenComparing((java.util.Comparator<java.io.File>) entryComparator34);
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator22.thenComparing((java.util.Comparator<java.io.File>) entryComparator34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean38 = fileEntryIterator37.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive39.manifest = manifest42;
        java.io.File file44 = explodedArchive39.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        java.io.File file48 = fileEntryIterator45.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        fileEntryIterator45.current = file53;
        explodedArchive39.root = file53;
        fileEntryIterator37.root = file53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        boolean boolean62 = explodedArchive57.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        fileEntryIterator63.recursive = true;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.util.Comparator<java.io.File> fileComparator73 = fileEntryIterator71.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator73.thenComparing(fileComparator76);
        fileEntryIterator68.entryComparator = fileComparator73;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.util.Comparator<java.io.File> fileComparator81 = fileEntryIterator79.entryComparator;
        java.util.Comparator<java.io.File> fileComparator82 = fileComparator73.thenComparing(fileComparator81);
        fileEntryIterator63.entryComparator = fileComparator82;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file85 = explodedArchive84.manifestFile;
        java.io.File file86 = explodedArchive84.manifestFile;
        java.io.File file87 = null;
        java.io.File file88 = explodedArchive84.getManifestFile(file87);
        fileEntryIterator63.root = file88;
        explodedArchive57.root = file88;
        int int91 = entryComparator34.compare(file53, file88);
        fileEntryIterator0.entryComparator = entryComparator34;
        java.io.File file93 = fileEntryIterator0.root;
        boolean boolean94 = fileEntryIterator0.recursive;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNull(file93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test2450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2450");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        java.io.File file18 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean21 = fileEntryIterator20.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean23 = explodedArchive22.recursive;
        java.io.File file24 = explodedArchive22.manifestFile;
        java.util.jar.Manifest manifest25 = null;
        explodedArchive22.manifest = manifest25;
        java.io.File file27 = explodedArchive22.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.io.File file31 = fileEntryIterator28.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        fileEntryIterator28.current = file36;
        explodedArchive22.root = file36;
        fileEntryIterator20.root = file36;
        explodedArchive19.root = file36;
        fileEntryIterator0.current = file36;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean43 = explodedArchive42.recursive;
        boolean boolean44 = explodedArchive42.recursive;
        java.io.File file45 = explodedArchive42.root;
        java.io.File file46 = null;
        java.io.File file47 = explodedArchive42.getManifestFile(file46);
        fileEntryIterator0.current = file47;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator0.stack;
        boolean boolean50 = fileEntryIterator0.recursive;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test2451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2451");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "";
        java.io.File file5 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean7 = explodedArchive6.recursive;
        boolean boolean8 = explodedArchive6.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.io.File file12 = null;
        java.io.File file13 = explodedArchive9.getManifestFile(file12);
        explodedArchive6.root = file13;
        explodedArchive6.recursive = false;
        java.io.File file17 = explodedArchive6.root;
        fileEntry0.file = file17;
        java.io.File file19 = fileEntry0.getFile();
        java.io.File file20 = fileEntry0.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2452");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str75 = uRL74.getUserInfo();
        java.lang.String str76 = uRL74.getUserInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj77 = uRL74.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test2453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2453");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("exploded archive", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", 52, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2454");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        boolean boolean6 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator12.thenComparing(fileComparator15);
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator9.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator15;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator0.stack;
        java.io.File file20 = fileEntryIterator0.root;
        java.io.File file21 = fileEntryIterator0.poll();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
    }

    @Test
    public void test2455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2455");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getQuery();
        java.lang.String str10 = uRL3.getRef();
        int int11 = uRL3.getPort();
        java.lang.String str12 = uRL3.getPath();
        java.lang.String str13 = uRL3.getRef();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test2456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2456");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URLStreamHandler uRLStreamHandler74 = null;
        java.net.URL uRL75 = new java.net.URL(uRL72, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler74);
        java.lang.String str76 = uRL72.getProtocol();
        java.lang.String str77 = uRL72.getAuthority();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = uRL72.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "file" + "'", str76, "file");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
    }

    @Test
    public void test2457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2457");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.io.File file10 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator11.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        java.util.Iterator<java.io.File> fileItor25 = fileEntryIterator11.listFiles(file24);
        fileEntryIterator6.root = file24;
        explodedArchive0.manifestFile = file24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        boolean boolean30 = fileEntryIterator28.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.manifestFile;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.io.File file34 = null;
        java.io.File file35 = explodedArchive31.getManifestFile(file34);
        boolean boolean36 = explodedArchive31.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        fileEntryIterator37.recursive = true;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator47.thenComparing(fileComparator50);
        fileEntryIterator42.entryComparator = fileComparator47;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator47.thenComparing(fileComparator55);
        fileEntryIterator37.entryComparator = fileComparator56;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.manifestFile;
        java.io.File file60 = explodedArchive58.manifestFile;
        java.io.File file61 = null;
        java.io.File file62 = explodedArchive58.getManifestFile(file61);
        fileEntryIterator37.root = file62;
        explodedArchive31.root = file62;
        java.util.Iterator<java.io.File> fileItor65 = fileEntryIterator28.listFiles(file62);
        java.io.File file66 = explodedArchive0.getManifestFile(file62);
        java.lang.String str67 = explodedArchive0.toString();
        java.util.jar.Manifest manifest68 = null;
        explodedArchive0.manifest = manifest68;
        java.util.jar.Manifest manifest70 = null;
        explodedArchive0.manifest = manifest70;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file73 = fileEntry72.getFile();
        java.lang.String str74 = fileEntry72.getName();
        java.lang.String str75 = fileEntry72.getName();
        fileEntry72.name = "";
        java.io.File file78 = fileEntry72.file;
        java.lang.String str79 = fileEntry72.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive80 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor25);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor65);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "exploded archive" + "'", str67, "exploded archive");
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
    }

    @Test
    public void test2458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2458");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.manifestFile;
        java.io.File file4 = explodedArchive2.manifestFile;
        java.lang.String str5 = explodedArchive2.toString();
        java.lang.String str6 = explodedArchive2.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean8 = fileEntryIterator7.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean10 = explodedArchive9.recursive;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive9.manifest = manifest12;
        java.io.File file14 = explodedArchive9.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.io.File file18 = fileEntryIterator15.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.manifestFile;
        java.io.File file21 = explodedArchive19.manifestFile;
        java.io.File file22 = null;
        java.io.File file23 = explodedArchive19.getManifestFile(file22);
        fileEntryIterator15.current = file23;
        explodedArchive9.root = file23;
        fileEntryIterator7.root = file23;
        java.io.File file27 = explodedArchive2.getManifestFile(file23);
        java.util.Iterator<java.io.File> fileItor28 = fileEntryIterator0.listFiles(file27);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file27, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "exploded archive" + "'", str5, "exploded archive");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor28);
    }

    @Test
    public void test2459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2459");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.current;
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file5 = fileEntryIterator4.current;
        java.io.File file6 = fileEntryIterator4.poll();
        java.io.File file7 = fileEntryIterator4.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator4.stack;
        java.io.File file9 = fileEntryIterator4.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.io.File file12 = fileEntryIterator10.current;
        java.io.File file13 = fileEntryIterator10.current;
        fileEntryIterator10.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.manifestFile;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.io.File file19 = null;
        java.io.File file20 = explodedArchive16.getManifestFile(file19);
        fileEntryIterator10.root = file20;
        fileEntryIterator4.root = file20;
        fileEntryIterator0.current = file20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        boolean boolean26 = fileEntryIterator24.hasNext();
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator24.entryComparator;
        fileEntryIterator24.recursive = true;
        java.io.File file30 = fileEntryIterator24.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry31.name = "exploded archive";
        java.lang.String str34 = fileEntry31.getName();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive35.manifestFile = file63;
        java.util.jar.Manifest manifest66 = explodedArchive35.manifest;
        java.util.jar.Manifest manifest67 = explodedArchive35.manifest;
        java.util.jar.Manifest manifest68 = explodedArchive35.getManifest();
        java.util.jar.Manifest manifest69 = explodedArchive35.getManifest();
        java.io.File file70 = explodedArchive35.root;
        java.io.File file71 = explodedArchive35.manifestFile;
        java.io.File file72 = explodedArchive35.manifestFile;
        fileEntry31.file = file72;
        fileEntryIterator24.root = file72;
        fileEntryIterator0.root = file72;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive(file72, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "exploded archive" + "'", str34, "exploded archive");
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest66);
        org.junit.Assert.assertNull(manifest67);
        org.junit.Assert.assertNull(manifest68);
        org.junit.Assert.assertNull(manifest69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2460");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        boolean boolean41 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest42 = explodedArchive0.manifest;
        java.net.URL uRL43 = explodedArchive0.getUrl();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream44 = uRL43.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNotNull(uRL43);
// flaky:         org.junit.Assert.assertEquals(uRL43.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2461");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.lang.String str5 = uRL3.getFile();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL9 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.lang.String str10 = uRL9.getUserInfo();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getAuthority();
        java.lang.String str13 = uRL9.getQuery();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str5, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test2462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2462");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "file", 0, "file://hi!:100hi!", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2463");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "exploded archive", (int) (byte) 0, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2464");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        boolean boolean5 = fileEntryIterator0.recursive;
        java.io.File file6 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file8 = fileEntryIterator7.current;
        java.io.File file9 = fileEntryIterator7.poll();
        java.io.File file10 = fileEntryIterator7.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.manifestFile;
        java.io.File file13 = explodedArchive11.manifestFile;
        java.io.File file14 = null;
        java.io.File file15 = explodedArchive11.getManifestFile(file14);
        boolean boolean16 = explodedArchive11.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        fileEntryIterator17.recursive = true;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator27.thenComparing(fileComparator30);
        fileEntryIterator22.entryComparator = fileComparator27;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator27.thenComparing(fileComparator35);
        fileEntryIterator17.entryComparator = fileComparator36;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator17.root = file42;
        explodedArchive11.root = file42;
        explodedArchive11.recursive = false;
        java.util.jar.Manifest manifest47 = null;
        explodedArchive11.manifest = manifest47;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file50 = fileEntryIterator49.current;
        java.io.File file51 = fileEntryIterator49.poll();
        java.io.File file52 = fileEntryIterator49.poll();
        java.io.File file53 = fileEntryIterator49.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.io.File file56 = fileEntryIterator54.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        fileEntryIterator54.root = file60;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.manifestFile;
        java.io.File file65 = explodedArchive63.manifestFile;
        java.io.File file66 = null;
        java.io.File file67 = explodedArchive63.getManifestFile(file66);
        java.util.Iterator<java.io.File> fileItor68 = fileEntryIterator54.listFiles(file67);
        fileEntryIterator49.root = file67;
        explodedArchive11.root = file67;
        explodedArchive11.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file74 = fileEntryIterator73.current;
        java.io.File file75 = null;
        fileEntryIterator73.current = file75;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean78 = explodedArchive77.recursive;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.util.jar.Manifest manifest80 = null;
        explodedArchive77.manifest = manifest80;
        java.io.File file82 = explodedArchive77.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator83 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue84 = fileEntryIterator83.stack;
        java.util.Comparator<java.io.File> fileComparator85 = fileEntryIterator83.entryComparator;
        java.io.File file86 = fileEntryIterator83.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file88 = explodedArchive87.manifestFile;
        java.io.File file89 = explodedArchive87.manifestFile;
        java.io.File file90 = null;
        java.io.File file91 = explodedArchive87.getManifestFile(file90);
        fileEntryIterator83.current = file91;
        explodedArchive77.root = file91;
        fileEntryIterator73.root = file91;
        java.io.File file95 = explodedArchive11.getManifestFile(file91);
        java.util.Iterator<java.io.File> fileItor96 = fileEntryIterator7.listFiles(file95);
        java.util.Iterator<java.io.File> fileItor97 = fileEntryIterator0.listFiles(file95);
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file15.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor68);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNotNull(fileItorQueue84);
        org.junit.Assert.assertNotNull(fileComparator85);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file95);
        org.junit.Assert.assertEquals(file95.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file95.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor96);
        org.junit.Assert.assertNotNull(fileItor97);
    }

    @Test
    public void test2465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2465");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.util.jar.Manifest manifest41 = null;
        explodedArchive0.manifest = manifest41;
        java.io.File file43 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2466");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("", "file://exploded archive:0", 0, "file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2467");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "exploded archive", 0, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2468");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor34 = explodedArchive0.iterator();
        java.io.File file35 = explodedArchive0.root;
        java.net.URL uRL36 = explodedArchive0.getUrl();
        java.lang.String str37 = uRL36.getUserInfo();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL36);
// flaky:         org.junit.Assert.assertEquals(uRL36.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test2469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2469");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str75 = uRL69.getRef();
        java.lang.String str76 = uRL69.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj77 = uRL69.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test2470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2470");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.lang.String str5 = uRL3.getFile();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.Class<?> wildcardClass7 = uRL3.getClass();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str5, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2471");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        boolean boolean26 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator0.stack;
        boolean boolean28 = fileEntryIterator0.recursive;
        java.io.File file29 = fileEntryIterator0.poll();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry30 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(file29);
    }

    @Test
    public void test2472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2472");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.lang.String str7 = uRL3.getPath();
        java.lang.String str8 = uRL3.getHost();
        java.net.Proxy proxy9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection10 = uRL3.openConnection(proxy9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test2473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2473");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.lang.String str8 = uRL3.getUserInfo();
        java.lang.String str9 = uRL3.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream10 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2474");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!", "", (int) ' ', "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2475");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getQuery();
        java.lang.String str16 = uRL14.getUserInfo();
        java.lang.String str17 = uRL14.getProtocol();
        java.lang.String str18 = uRL14.getQuery();
        java.lang.Class<?> wildcardClass19 = uRL14.getClass();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "file" + "'", str17, "file");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2476");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.manifestFile;
        java.lang.String str4 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.manifestFile;
        java.io.File file7 = explodedArchive5.manifestFile;
        java.io.File file8 = null;
        java.io.File file9 = explodedArchive5.getManifestFile(file8);
        boolean boolean10 = explodedArchive5.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        fileEntryIterator11.recursive = true;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        fileEntryIterator16.entryComparator = fileComparator21;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator21.thenComparing(fileComparator29);
        fileEntryIterator11.entryComparator = fileComparator30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        fileEntryIterator11.root = file36;
        explodedArchive5.root = file36;
        explodedArchive5.recursive = false;
        java.util.jar.Manifest manifest41 = null;
        explodedArchive5.manifest = manifest41;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file44 = fileEntryIterator43.current;
        java.io.File file45 = fileEntryIterator43.poll();
        java.io.File file46 = fileEntryIterator43.poll();
        java.io.File file47 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.io.File file50 = fileEntryIterator48.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        fileEntryIterator48.root = file54;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        java.util.Iterator<java.io.File> fileItor62 = fileEntryIterator48.listFiles(file61);
        fileEntryIterator43.root = file61;
        explodedArchive5.root = file61;
        explodedArchive5.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean68 = explodedArchive67.recursive;
        boolean boolean69 = explodedArchive67.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file71 = explodedArchive70.manifestFile;
        java.io.File file72 = explodedArchive70.manifestFile;
        java.io.File file73 = null;
        java.io.File file74 = explodedArchive70.getManifestFile(file73);
        explodedArchive67.root = file74;
        explodedArchive67.recursive = false;
        java.io.File file78 = explodedArchive67.root;
        java.io.File file79 = explodedArchive5.getManifestFile(file78);
        explodedArchive0.root = file78;
        java.util.jar.Manifest manifest81 = explodedArchive0.manifest;
        java.lang.String str82 = explodedArchive0.toString();
        explodedArchive0.recursive = true;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor85 = explodedArchive0.iterator();
        java.io.File file86 = explodedArchive0.manifestFile;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest81);
// flaky:         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str82, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor85);
        org.junit.Assert.assertNull(file86);
    }

    @Test
    public void test2477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2477");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.manifestFile;
        java.io.File file23 = explodedArchive21.manifestFile;
        java.io.File file24 = null;
        java.io.File file25 = explodedArchive21.getManifestFile(file24);
        fileEntryIterator0.root = file25;
        boolean boolean27 = fileEntryIterator0.recursive;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator0.entryComparator;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
    }

    @Test
    public void test2478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2478");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URLStreamHandler uRLStreamHandler35 = null;
        java.net.URL uRL36 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", uRLStreamHandler35);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.io.File file39 = fileEntryIterator37.current;
        boolean boolean40 = fileEntryIterator37.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator37.stack;
        boolean boolean42 = uRL36.equals((java.lang.Object) fileItorQueue41);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals(uRL36.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test2479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2479");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!", "file://exploded archive:0", 1, "file://hi!:100hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2480");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.io.File file6 = fileEntryIterator4.current;
        java.util.ArrayDeque<java.util.Iterator<java.io.File>> fileItorQueue7 = new java.util.ArrayDeque<java.util.Iterator<java.io.File>>();
        fileEntryIterator4.stack = fileItorQueue7;
        boolean boolean9 = fileEntryIterator4.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator4.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file12 = fileEntryIterator11.current;
        java.io.File file13 = fileEntryIterator11.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file15 = fileEntryIterator14.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        fileEntryIterator16.entryComparator = fileComparator21;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator21.thenComparing(fileComparator29);
        fileEntryIterator14.entryComparator = fileComparator30;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator14.stack;
        fileEntryIterator11.stack = fileItorQueue32;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file35 = fileEntryIterator34.current;
        java.io.File file36 = fileEntryIterator34.poll();
        java.io.File file37 = fileEntryIterator34.poll();
        java.io.File file38 = fileEntryIterator34.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.io.File file41 = fileEntryIterator39.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator39.root = file45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        java.util.Iterator<java.io.File> fileItor53 = fileEntryIterator39.listFiles(file52);
        fileEntryIterator34.root = file52;
        java.util.Iterator<java.io.File> fileItor55 = fileEntryIterator11.listFiles(file52);
        fileEntryIterator4.current = file52;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        fileEntryIterator57.recursive = true;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator57.entryComparator;
        fileEntryIterator57.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        fileEntryIterator57.stack = fileItorQueue65;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file68 = fileEntryIterator67.current;
        java.io.File file69 = fileEntryIterator67.poll();
        java.io.File file70 = fileEntryIterator67.poll();
        java.io.File file71 = fileEntryIterator67.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.io.File file74 = fileEntryIterator72.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file76 = explodedArchive75.manifestFile;
        java.io.File file77 = explodedArchive75.manifestFile;
        java.io.File file78 = null;
        java.io.File file79 = explodedArchive75.getManifestFile(file78);
        fileEntryIterator72.root = file78;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file82 = explodedArchive81.manifestFile;
        java.io.File file83 = explodedArchive81.manifestFile;
        java.io.File file84 = null;
        java.io.File file85 = explodedArchive81.getManifestFile(file84);
        java.util.Iterator<java.io.File> fileItor86 = fileEntryIterator72.listFiles(file85);
        fileEntryIterator67.root = file85;
        java.util.Iterator<java.io.File> fileItor88 = fileEntryIterator57.listFiles(file85);
        fileEntryIterator4.root = file85;
        fileEntryIterator0.current = file85;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive92 = new org.springframework.boot.loader.archive.ExplodedArchive(file85, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor53);
        org.junit.Assert.assertNotNull(fileItor55);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor86);
        org.junit.Assert.assertNotNull(fileItor88);
    }

    @Test
    public void test2481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2481");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.io.File file2 = explodedArchive0.root;
        java.io.File file3 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file5 = fileEntryIterator4.current;
        java.io.File file6 = fileEntryIterator4.poll();
        java.io.File file7 = fileEntryIterator4.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator13.thenComparing((java.util.Comparator<java.io.File>) entryComparator19);
        fileEntryIterator4.entryComparator = entryComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.manifestFile;
        java.io.File file24 = explodedArchive22.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        fileEntryIterator25.recursive = true;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator35.thenComparing(fileComparator38);
        fileEntryIterator30.entryComparator = fileComparator35;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator35.thenComparing(fileComparator43);
        fileEntryIterator25.entryComparator = fileComparator44;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator25.root = file50;
        explodedArchive22.manifestFile = file50;
        fileEntryIterator4.root = file50;
        explodedArchive0.root = file50;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "exploded archive" + "'", str1, "exploded archive");
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2482");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        boolean boolean32 = explodedArchive0.recursive;
        java.io.File file33 = explodedArchive0.root;
        boolean boolean34 = explodedArchive0.recursive;
        boolean boolean35 = explodedArchive0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL36 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test2483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2483");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URL uRL13 = new java.net.URL(uRL3, "file://exploded archive");
        java.lang.String str14 = uRL13.getProtocol();
        java.lang.String str15 = uRL13.getHost();
        java.lang.String str16 = uRL13.getFile();
        java.net.URL uRL18 = new java.net.URL(uRL13, "exploded archive");
        java.net.Proxy proxy19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection20 = uRL18.openConnection(proxy19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL13.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "exploded archive" + "'", str15, "exploded archive");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals(uRL18.toString(), "file://exploded archive/exploded archive");
    }

    @Test
    public void test2484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2484");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str75 = uRL69.getHost();
        java.lang.String str76 = uRL69.getRef();
        java.lang.String str77 = uRL69.getRef();
        java.lang.String str78 = uRL69.getQuery();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test2485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2485");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file6;
        java.io.File file9 = explodedArchive0.root;
        java.lang.String str10 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator11 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "exploded archive" + "'", str10, "exploded archive");
    }

    @Test
    public void test2486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2486");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "file", 10, "", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2487");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str73 = uRL72.getFile();
        java.lang.String str74 = uRL72.getUserInfo();
        java.lang.String str75 = uRL72.toExternalForm();
        java.lang.String str76 = uRL72.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str73, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str75, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str76, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test2488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2488");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.lang.String str8 = explodedArchive0.toString();
        java.io.File file9 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor10 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test2489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2489");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("hi!", "", (int) (short) 10, "file://exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2490");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        boolean boolean41 = explodedArchive39.recursive;
        java.io.File file42 = explodedArchive39.root;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive39.getManifestFile(file43);
        explodedArchive0.manifestFile = file43;
        java.io.File file46 = explodedArchive0.root;
        java.io.File file47 = explodedArchive0.manifestFile;
        java.net.URL uRL48 = explodedArchive0.getUrl();
        java.lang.String str49 = uRL48.getHost();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(uRL48);
// flaky:         org.junit.Assert.assertEquals(uRL48.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
    }

    @Test
    public void test2491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2491");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.net.URL uRL25 = explodedArchive0.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry26.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.io.File file31 = fileEntryIterator29.current;
        boolean boolean32 = fileEntryIterator29.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator29.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean35 = explodedArchive34.recursive;
        boolean boolean36 = explodedArchive34.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        explodedArchive34.root = file41;
        fileEntryIterator29.root = file41;
        fileEntry26.file = file41;
        java.lang.String str45 = fileEntry26.name;
        java.io.File file46 = fileEntry26.getFile();
        explodedArchive0.root = file46;
        explodedArchive0.recursive = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNotNull(uRL25);
// flaky:         org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "exploded archive" + "'", str45, "exploded archive");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2492");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", 0, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2493");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file7;
        explodedArchive0.recursive = false;
        java.io.File file11 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2494");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = null;
        fileEntryIterator0.current = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean5 = explodedArchive4.recursive;
        java.io.File file6 = explodedArchive4.manifestFile;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive4.manifest = manifest7;
        java.io.File file9 = explodedArchive4.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.io.File file13 = fileEntryIterator10.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator10.current = file18;
        explodedArchive4.root = file18;
        fileEntryIterator0.root = file18;
        fileEntryIterator0.recursive = true;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry24 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2495");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file6 = fileEntry5.getFile();
        java.lang.String str7 = fileEntry5.name;
        java.io.File file8 = fileEntry5.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        boolean boolean11 = fileEntryIterator9.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        boolean boolean17 = explodedArchive12.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        fileEntryIterator18.root = file43;
        explodedArchive12.root = file43;
        java.util.Iterator<java.io.File> fileItor46 = fileEntryIterator9.listFiles(file43);
        fileEntry5.file = file43;
        explodedArchive0.manifestFile = file43;
        java.util.jar.Manifest manifest49 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive0.getNestedArchives(entryFilter50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor46);
        org.junit.Assert.assertNull(manifest49);
    }

    @Test
    public void test2496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2496");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator39 = explodedArchive0.spliterator();
        java.io.File file40 = explodedArchive0.manifestFile;
        java.io.File file41 = explodedArchive0.root;
        java.io.File file42 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2497");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getQuery();
        java.lang.String str9 = uRL3.getRef();
        java.net.URLStreamHandler uRLStreamHandler11 = null;
        java.net.URL uRL12 = new java.net.URL(uRL3, "exploded archive", uRLStreamHandler11);
        java.lang.String str13 = uRL12.toExternalForm();
        java.net.URL uRL14 = null;
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        java.lang.String str18 = uRL17.getHost();
        java.lang.String str19 = uRL17.getAuthority();
        java.lang.String str20 = uRL17.getQuery();
        int int21 = uRL17.getDefaultPort();
        int int22 = uRL17.getPort();
        java.net.URLConnection uRLConnection23 = uRL17.openConnection();
        boolean boolean24 = uRL12.sameFile(uRL17);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(uRLConnection23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test2498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2498");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file22 = fileEntryIterator21.current;
        java.io.File file23 = fileEntryIterator21.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file25 = fileEntryIterator24.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator24.entryComparator = fileComparator40;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator24.stack;
        fileEntryIterator21.stack = fileItorQueue42;
        fileEntryIterator0.stack = fileItorQueue42;
        boolean boolean45 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file47 = fileEntryIterator46.current;
        java.io.File file48 = fileEntryIterator46.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file50 = fileEntryIterator49.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        java.util.Comparator<java.io.File> fileComparator60 = fileComparator56.thenComparing(fileComparator59);
        fileEntryIterator51.entryComparator = fileComparator56;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        java.util.Comparator<java.io.File> fileComparator65 = fileComparator56.thenComparing(fileComparator64);
        fileEntryIterator49.entryComparator = fileComparator65;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator49.stack;
        fileEntryIterator46.stack = fileItorQueue67;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file70 = fileEntryIterator69.current;
        java.io.File file71 = fileEntryIterator69.poll();
        java.io.File file72 = fileEntryIterator69.poll();
        java.io.File file73 = fileEntryIterator69.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.io.File file76 = fileEntryIterator74.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file78 = explodedArchive77.manifestFile;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.io.File file80 = null;
        java.io.File file81 = explodedArchive77.getManifestFile(file80);
        fileEntryIterator74.root = file80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file84 = explodedArchive83.manifestFile;
        java.io.File file85 = explodedArchive83.manifestFile;
        java.io.File file86 = null;
        java.io.File file87 = explodedArchive83.getManifestFile(file86);
        java.util.Iterator<java.io.File> fileItor88 = fileEntryIterator74.listFiles(file87);
        fileEntryIterator69.root = file87;
        java.util.Iterator<java.io.File> fileItor90 = fileEntryIterator46.listFiles(file87);
        java.util.Iterator<java.io.File> fileItor91 = fileEntryIterator0.listFiles(file87);
        boolean boolean92 = fileEntryIterator0.recursive;
        java.io.File file93 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor88);
        org.junit.Assert.assertNotNull(fileItor90);
        org.junit.Assert.assertNotNull(fileItor91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNull(file93);
    }

    @Test
    public void test2499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2499");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.current;
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file5 = fileEntryIterator4.current;
        java.io.File file6 = fileEntryIterator4.poll();
        java.io.File file7 = fileEntryIterator4.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator4.stack;
        java.io.File file9 = fileEntryIterator4.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.io.File file12 = fileEntryIterator10.current;
        java.io.File file13 = fileEntryIterator10.current;
        fileEntryIterator10.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.manifestFile;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.io.File file19 = null;
        java.io.File file20 = explodedArchive16.getManifestFile(file19);
        fileEntryIterator10.root = file20;
        fileEntryIterator4.root = file20;
        fileEntryIterator0.current = file20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        boolean boolean26 = fileEntryIterator24.hasNext();
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator24.entryComparator;
        fileEntryIterator24.recursive = true;
        java.io.File file30 = fileEntryIterator24.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry31.name = "exploded archive";
        java.lang.String str34 = fileEntry31.getName();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive35.manifestFile = file63;
        java.util.jar.Manifest manifest66 = explodedArchive35.manifest;
        java.util.jar.Manifest manifest67 = explodedArchive35.manifest;
        java.util.jar.Manifest manifest68 = explodedArchive35.getManifest();
        java.util.jar.Manifest manifest69 = explodedArchive35.getManifest();
        java.io.File file70 = explodedArchive35.root;
        java.io.File file71 = explodedArchive35.manifestFile;
        java.io.File file72 = explodedArchive35.manifestFile;
        fileEntry31.file = file72;
        fileEntryIterator24.root = file72;
        fileEntryIterator0.root = file72;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "exploded archive" + "'", str34, "exploded archive");
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest66);
        org.junit.Assert.assertNull(manifest67);
        org.junit.Assert.assertNull(manifest68);
        org.junit.Assert.assertNull(manifest69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test2500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2500");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.recursive = true;
        explodedArchive0.recursive = false;
        boolean boolean5 = explodedArchive0.recursive;
        java.lang.String str6 = explodedArchive0.toString();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
    }
}
